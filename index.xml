<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Romain Thomas</title><link>https://www.romainthomas.fr/</link><description>Recent content in Home on Romain Thomas</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>me@romainthomas.fr (Romain Thomas)</managingEditor><webMaster>me@romainthomas.fr (Romain Thomas)</webMaster><atom:link href="https://www.romainthomas.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>Work Experience</title><link>https://www.romainthomas.fr/home/work-experience/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/home/work-experience/</guid><description/></item><item><title>Open-Obfuscator</title><link>https://www.romainthomas.fr/project/open-obfuscator/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/project/open-obfuscator/</guid><description>A free and open-source obfuscator for mobile applications</description></item><item><title>Open-Obfuscator: A free and open-source obfuscator for mobile applications</title><link>https://www.romainthomas.fr/post/22-10-open-obfuscator/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-10-open-obfuscator/</guid><description>This blog post introduces open-obfuscator, a new open-source project to obfuscate mobile applications.</description></item><item><title>Part 2 – iOS Native Code Obfuscation and Syscall Hooking</title><link>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</guid><description>This second blog post deals with native code obfuscation and RASP syscall interception</description></item><item><title>Part 1 – SingPass RASP Analysis</title><link>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</guid><description>This first blog post introduces the RASP checks used in SingPass</description></item><item><title>A Journey in iOS App Obfuscation</title><link>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</guid><description>This series of blog posts details how obfuscators can protect iOS applications from reverse engineering</description></item><item><title>The Poor Man's Obfuscator</title><link>https://www.romainthomas.fr/publication/22-pst-the-poor-mans-obfuscator/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/22-pst-the-poor-mans-obfuscator/</guid><description>Slides Whitepaper Video (English) Assets https://github.com/romainthomas/the-poor-mans-obfuscator</description></item><item><title>DroidGuard: A Deep Dive into SafetyNet</title><link>https://www.romainthomas.fr/publication/22-sstic-blackhat-droidguard-safetynet/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/22-sstic-blackhat-droidguard-safetynet/</guid><description>Slides Whitepaper Talk at BlackHat (English) Talk at SSTIC (French) Assets https://github.com/romainthomas/droidguard-samples</description></item><item><title>DroidGuard</title><link>https://www.romainthomas.fr/projects-images/safetynet/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/projects-images/safetynet/</guid><description>DroidGuard / Safetynet bypass</description></item><item><title>PGSharp: Analysis of a Cheating App for PokemonGO</title><link>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</guid><description>This blog post is about the internal mechanisms of PGSharp, a cheat engine for PokemonGO.</description></item><item><title>PGSharp: Analysis of a Cheat Engine on Android</title><link>https://www.romainthomas.fr/publication/21-ekoparty-mobile-hacking-space-pgsharp/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/21-ekoparty-mobile-hacking-space-pgsharp/</guid><description>Slides Talk Blog Post PGSharp: Analysis of a Cheating App for PokemonGO</description></item><item><title>Gotta Catch 'Em All: Frida &amp; jailbreak detection</title><link>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</guid><description>This blog post analyzes the Frida and Jailbreak detection in PokemonGO for iOS.</description></item><item><title>QBDL</title><link>https://www.romainthomas.fr/project/qbdl/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/project/qbdl/</guid><description>QuarkslaB Dynamic Loader: Generic loader for ELF, PE and Mach-O</description></item><item><title>QBDL: QuarkslaB Dynamic Loader</title><link>https://www.romainthomas.fr/publication/21-sstic-qbdl/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/21-sstic-qbdl/</guid><description> Slides Talk (In French)</description></item><item><title>Dynamic Binary Instrumentation Techniques to Address Native Code Obfuscation</title><link>https://www.romainthomas.fr/publication/20-bh-asia-dbi/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/20-bh-asia-dbi/</guid><description>Slides Whitepaper Talk Demo #1: Snapchat Demo #2: Legu Packer Note: The videos are intentionally quick. Do not hesite to pause them.</description></item><item><title>r2-pay: whitebox (part 2)</title><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</guid><description>This second blog post explains how to recover the whitebox&amp;rsquo;s key from the obfuscated library libnative-lib.so</description></item><item><title>r2-pay: anti-debug, anti-root &amp; anti-frida (part 1)</title><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</guid><description>This first blog post describes the protections in the challenge r2-pay.</description></item><item><title>Tencent Legu Unpacker</title><link>https://www.romainthomas.fr/project/legu_unpacker/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/project/legu_unpacker/</guid><description>Scripts to unpack Android applications protected by Tencent Legu</description></item><item><title>A Glimpse Into Tencent's Legu Packer</title><link>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</guid><description>Analysis of Tencent Legu: a packer for Android applications.</description></item><item><title>Android Native Library Analysis with QBDI</title><link>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</guid><description>This blog post deals with QBDI and how it can be used to reverse an Android JNI library</description></item><item><title>Android Runtime Restrictions Bypass (PoC)</title><link>https://www.romainthomas.fr/project/android-runtime-restrictions-bypass/</link><pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/project/android-runtime-restrictions-bypass/</guid><description>Android application that disables Android restrictions without root privileges</description></item><item><title>Android Runtime Restrictions Bypass</title><link>https://www.romainthomas.fr/publication/android-restrictions-bypass/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/android-restrictions-bypass/</guid><description>Note This publication is also available on the Quarkslab Blog. With the release of Android Nougat, Google introduced restriction about native libraries that can be loaded from an Android application. Basically, it prevents developers to link against some internal libraries such as libart.so.
Later on and with the release of Android Pie, they introduced a new restriction on the access to internal Java methods (or fields). Basically, these restrictions are used to prevent developers to access parts of the Android internal framework.</description></item><item><title>Android crackme challenge</title><link>https://www.romainthomas.fr/post/android-crackme/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/android-crackme/</guid><description>Android crackme that uses system&amp;rsquo;s internals</description></item><item><title>Android OAT formats</title><link>https://www.romainthomas.fr/post/android-oat/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/android-oat/</guid><description>Internal structures of OAT format</description></item><item><title>Android VDEX formats</title><link>https://www.romainthomas.fr/post/android-vdex/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/android-vdex/</guid><description>Internal structures of VDEX format</description></item><item><title>Static Instrumentation Based on Executable Formats</title><link>https://www.romainthomas.fr/publication/static-instrumentation/</link><pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/static-instrumentation/</guid><description>Many instrumentation techniques are based on modifying code or system environment of the target. It can be suitable for scenarios but it could not work under certain circumstance (integrity checking, non-rooted environment…) In this talk we propose similar techniques by only modifying the executable format. This enables to be architecture independent, injection and hooking does not require privileged environment.</description></item><item><title>When SideChannelMarvels meets LIEF</title><link>https://www.romainthomas.fr/post/18-05-when-sidechannelmarvels-meets-lief/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/18-05-when-sidechannelmarvels-meets-lief/</guid><description>On how we used LIEF to lift an Android x86_64 library to Linux to perform our usual white-box attacks on it.</description></item><item><title>How to use frida on a non-rooted device</title><link>https://www.romainthomas.fr/post/how-to-use-frida-on-a-non-rooted-device/</link><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/how-to-use-frida-on-a-non-rooted-device/</guid><description>This post explains how to use Frida gadget on a non-rooted device.</description></item><item><title>Have fun with LIEF and Executable Formats</title><link>https://www.romainthomas.fr/post/17-11-have-fun-with-lief-and-executable-formats/</link><pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/17-11-have-fun-with-lief-and-executable-formats/</guid><description>This blog post introduces new features of LIEF as well as some uses cases.</description></item><item><title>LIEF: Library to Instrument Executable Formats</title><link>https://www.romainthomas.fr/publication/lief/</link><pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/lief/</guid><description>When analyzing executable, the first layer of information is the format in which the executable is wrapped. It turns out that a lot of tools and libraries exist to analyze and instrument machine code wrapped by the format, but there is not such library to handle the three mainstream executable formats and to both read and modify these formats. LIEF has been developed to that end.
In the talk we will explain the rationale behind LIEF architecture choices, what LIEF allows to do and have a look at use cases.</description></item><item><title>Open-sourcing LIEF</title><link>https://www.romainthomas.fr/post/lief-release/</link><pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/lief-release/</guid><description>We are open-sourcing LIEF, a library to parse and manipulate ELF, PE and Mach-O binary formats. This blog post explains the purpose of this project and some parts of its architecture.</description></item><item><title>How Triton can help to reverse virtual machine based software protections</title><link>https://www.romainthomas.fr/publication/triton-vm-protection/</link><pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/triton-vm-protection/</guid><description> Slides Video</description></item><item><title>LIEF</title><link>https://www.romainthomas.fr/project/lief/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/project/lief/</guid><description>LIEF is a Library to Instrument Executable Formats</description></item><item><title>QList</title><link>https://www.romainthomas.fr/projects-images/qlist/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/projects-images/qlist/</guid><description>QList object layout from Qt 5.11.2</description></item><item><title>QString</title><link>https://www.romainthomas.fr/projects-images/qstring/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/projects-images/qstring/</guid><description>QString object layout from Qt 5.11.2</description></item><item><title>Dynamic Binary Analysis and Obfuscated Codes</title><link>https://www.romainthomas.fr/publication/dynamic-binary-analysis-and-obfuscation/</link><pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/dynamic-binary-analysis-and-obfuscation/</guid><description/></item><item><title>HITB 2015 Write-up - Crypto 300</title><link>https://www.romainthomas.fr/post/15-11-hitb2015-crypto300/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/15-11-hitb2015-crypto300/</guid><description>Write-up for the Crypto 300 challenge</description></item><item><title>HITB 2015 Write-up - Crypto 400</title><link>https://www.romainthomas.fr/post/15-11-hitb2015-crypto400/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/15-11-hitb2015-crypto400/</guid><description>Write up</description></item><item><title>Code coverage using a dynamic symbolic execution</title><link>https://www.romainthomas.fr/post/15-10-triton-code-coverage/</link><pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/15-10-triton-code-coverage/</guid><description>This blog post introduces code coverage with Triton</description></item><item><title>How Triton may help to analyse obfuscated binaries</title><link>https://www.romainthomas.fr/publication/triton/</link><pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/triton/</guid><description/></item></channel></rss>