<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Publications on Romain Thomas</title><link>https://www.romainthomas.fr/publication/</link><description>Recent content in Publications on Romain Thomas</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>me@romainthomas.fr (Romain Thomas)</managingEditor><webMaster>me@romainthomas.fr (Romain Thomas)</webMaster><atom:link href="https://www.romainthomas.fr/publication/index.xml" rel="self" type="application/rss+xml"/><item><title>The Poor Man's Obfuscator</title><link>https://www.romainthomas.fr/publication/22-pst-the-poor-mans-obfuscator/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/22-pst-the-poor-mans-obfuscator/</guid><description>Slides Whitepaper Video (English) Assets https://github.com/romainthomas/the-poor-mans-obfuscator</description></item><item><title>DroidGuard: A Deep Dive into SafetyNet</title><link>https://www.romainthomas.fr/publication/22-sstic-blackhat-droidguard-safetynet/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/22-sstic-blackhat-droidguard-safetynet/</guid><description>Slides Whitepaper Talk at BlackHat (English) To be published
Talk at SSTIC (French) Assets https://github.com/romainthomas/droidguard-samples</description></item><item><title>PGSharp: Analysis of a Cheat Engine on Android</title><link>https://www.romainthomas.fr/publication/21-ekoparty-mobile-hacking-space-pgsharp/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/21-ekoparty-mobile-hacking-space-pgsharp/</guid><description>Slides Talk Blog Post PGSharp: Analysis of a Cheating App for PokemonGO</description></item><item><title>QBDL: QuarkslaB Dynamic Loader</title><link>https://www.romainthomas.fr/publication/21-sstic-qbdl/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/21-sstic-qbdl/</guid><description> Slides Talk (In French)</description></item><item><title>Dynamic Binary Instrumentation Techniques to Address Native Code Obfuscation</title><link>https://www.romainthomas.fr/publication/20-bh-asia-dbi/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/20-bh-asia-dbi/</guid><description>Slides Whitepaper Talk Demo #1: Snapchat Demo #2: Legu Packer Note: The videos are intentionally quick. Do not hesite to pause them.</description></item><item><title>Android Runtime Restrictions Bypass</title><link>https://www.romainthomas.fr/publication/android-restrictions-bypass/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/android-restrictions-bypass/</guid><description>Note This publication is also available on the Quarkslab Blog. With the release of Android Nougat, Google introduced restriction about native libraries that can be loaded from an Android application. Basically, it prevents developers to link against some internal libraries such as libart.so.
Later on and with the release of Android Pie, they introduced a new restriction on the access to internal Java methods (or fields). Basically, these restrictions are used to prevent developers to access parts of the Android internal framework.</description></item><item><title>Static Instrumentation Based on Executable Formats</title><link>https://www.romainthomas.fr/publication/static-instrumentation/</link><pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/static-instrumentation/</guid><description>Many instrumentation techniques are based on modifying code or system environment of the target. It can be suitable for scenarios but it could not work under certain circumstance (integrity checking, non-rooted environmentâ€¦) In this talk we propose similar techniques by only modifying the executable format. This enables to be architecture independent, injection and hooking does not require privileged environment.</description></item><item><title>LIEF: Library to Instrument Executable Formats</title><link>https://www.romainthomas.fr/publication/lief/</link><pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/lief/</guid><description>When analyzing executable, the first layer of information is the format in which the executable is wrapped. It turns out that a lot of tools and libraries exist to analyze and instrument machine code wrapped by the format, but there is not such library to handle the three mainstream executable formats and to both read and modify these formats. LIEF has been developed to that end.
In the talk we will explain the rationale behind LIEF architecture choices, what LIEF allows to do and have a look at use cases.</description></item><item><title>How Triton can help to reverse virtual machine based software protections</title><link>https://www.romainthomas.fr/publication/triton-vm-protection/</link><pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/triton-vm-protection/</guid><description> Slides Video</description></item><item><title>Dynamic Binary Analysis and Obfuscated Codes</title><link>https://www.romainthomas.fr/publication/dynamic-binary-analysis-and-obfuscation/</link><pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/dynamic-binary-analysis-and-obfuscation/</guid><description/></item><item><title>How Triton may help to analyse obfuscated binaries</title><link>https://www.romainthomas.fr/publication/triton/</link><pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/publication/triton/</guid><description/></item></channel></rss>