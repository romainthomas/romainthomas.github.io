<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reverse Engineering on Romain Thomas</title><link>https://www.romainthomas.fr/categories/reverse-engineering/</link><description>Recent content in Reverse Engineering on Romain Thomas</description><generator>Hugo</generator><language>en-us</language><managingEditor>me@romainthomas.fr (Romain Thomas)</managingEditor><webMaster>me@romainthomas.fr (Romain Thomas)</webMaster><lastBuildDate>Thu, 24 Apr 2025 15:46:06 +0200</lastBuildDate><atom:link href="https://www.romainthomas.fr/categories/reverse-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>iCDump: A Modern Objective-C Class Dump</title><link>https://www.romainthomas.fr/post/23-01-icdump/</link><pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/23-01-icdump/</guid><description>This blog post introduces iCDump, an new Objective-C class dump based on LLVM</description></item><item><title>Open-Obfuscator: A free and open-source obfuscator for mobile applications</title><link>https://www.romainthomas.fr/post/22-10-open-obfuscator/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-10-open-obfuscator/</guid><description>This blog post introduces open-obfuscator, a new open-source project to obfuscate mobile applications.</description></item><item><title>Part 2 – iOS Native Code Obfuscation and Syscall Hooking</title><link>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</guid><description>This second blog post deals with native code obfuscation and RASP syscall interception</description></item><item><title>Part 1 – SingPass RASP Analysis</title><link>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</guid><description>This first blog post introduces the RASP checks used in SingPass</description></item><item><title>A Journey in iOS App Obfuscation</title><link>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</guid><description>This series of blog posts details how obfuscators can protect iOS applications from reverse engineering</description></item><item><title>PGSharp: Analysis of a Cheating App for PokemonGO</title><link>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</guid><description>This blog post is about the internal mechanisms of PGSharp, a cheat engine for PokemonGO.</description></item><item><title>Gotta Catch 'Em All: Frida &amp; jailbreak detection</title><link>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</guid><description>This blog post analyzes the Frida and Jailbreak detection in PokemonGO for iOS.</description></item><item><title>r2-pay: whitebox (part 2)</title><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</guid><description>This second blog post explains how to recover the whitebox&amp;rsquo;s key from the obfuscated library libnative-lib.so</description></item><item><title>r2-pay: anti-debug, anti-root &amp; anti-frida (part 1)</title><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</guid><description>This first blog post describes the protections in the challenge r2-pay.</description></item><item><title>A Glimpse Into Tencent's Legu Packer</title><link>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</guid><description>Analysis of Tencent Legu: a packer for Android applications.</description></item><item><title>Android Native Library Analysis with QBDI</title><link>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><author>me@romainthomas.fr (Romain Thomas)</author><guid>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</guid><description>This blog post deals with QBDI and how it can be used to reverse an Android JNI library</description></item></channel></rss>