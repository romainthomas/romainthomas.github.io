<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:content="http://purl.org/rss/1.0/modules/content" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Blog Post | Romain Thomas</title><link>https://www.romainthomas.fr/post/</link><atom:link href="https://www.romainthomas.fr/post/index.xml" rel="self" type="application/rss+xml"/><description>Lastest blog post</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate><item><title>Open-Obfuscator: A free and open-source obfuscator for mobile applications</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/22-10-open-obfuscator/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/22-10-open-obfuscator/</guid><description>This blog post introduces open-obfuscator, a new open-source project to obfuscate mobile applications.</description><content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This post is about a new project on which I (intensively) worked this month. It aims at providing a free and
open-source solution for obfuscating mobile applications.</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-bolt" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">TL;DR</h3>
    open-obfuscator is available at this url: <a href="https://obfuscator.re">https://obfuscator.re</a>, and this blog post is more about the motivation
behind this project.
You can also check the GitHub repositories: <a href="https://github.com/open-obfuscator/o-mvll">O-MVLL</a> &amp; <a href="https://github.com/open-obfuscator/dprotect">dProtect</a>
  </div>
  </div>
  </div>
</div>
<h2 id="the-origin-of-this-project">The origin of this project</h2>
<p>Since several years now, I&rsquo;m doing reverse engineering on (obfuscated) mobile applications and my latest
publications tend to be more about how to &ldquo;defeat&rdquo; obfuscation rather than how to protect code.
I actually enjoy both aspects and I&rsquo;m also aware that breaking<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> something or reversing a RASP check
is &ndash; most of the time &ndash; easier than finding and building something that works <strong>at scale</strong> and
for <strong>different users/environments</strong> (like an obfuscator).</p>
<p>An idea started to grow after a recent discussion about the legal aspect of reverse engineering on obfuscated code.
It&rsquo;s true: reverse engineering an obfuscator is not permitted and publishing the results is even less.
Depending on the interlocutor, you might be lucky or not (c.f <a href="https://www.heise.de/newsticker/meldung/Offenlegung-von-Softwareluecken-Rechtsstreit-endet-mit-Vergleich-4156393.html">Promon vs University Researchers</a> and this <a href="https://www.youtube.com/watch?v=RGNarKVO-WI">36C3 talk</a>).</p>
<p>That being said, the publications of this blog followed a responsible disclosure in which the stakeholders
have been contacted ahead time of the publications.
For instance, the feedback from Google for Safetynet was very fair:</p>
<p><img src="./snet.webp" alt="Google&amp;rsquo;s feedback" title="Google's feedback"></p>
<p>On the other hand, if one would have to decide which solution would be better to protect his assets,
this person could only refer (and infer) datasheets, demos<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, or testimonials.</p>
<p>In particular, there are no public benchmarks to get an idea about how solutions are positioned
from each other.
Moreover, it can be difficult for developers to understand the purpose of an obfuscation scheme and how
it really works underneath.</p>
<p>Thus, why not trying to take another hat and creating an obfuscator that fulfills these objectives:</p>
<ul>
<li>Easy to use and easy to integrate for the developers.</li>
<li>Highly documented so that developers have a good understanding of the protections.</li>
<li>Open source:
<ol>
<li>to welcome <strong>public improvements</strong>.</li>
<li>to welcome <strong>public attacks</strong>, free from legal issues, which in the end are used to enhance the protections.</li>
<li>to be objectively and technically benchmarked.</li>
</ol>
</li>
<li>Realistic: trying to be as close as possible to the state of the art for the benefit of both: developers and attackers.</li>
</ul>
<div class="admonition note">
<p><center>
<p>
<b><i>Obfuscation and open source sounds a bit contradictory no?</i></b>
</p>
</center>
</p>
</div>
<p>Somehow yes. If the design is known attacks are easier. <strong>But</strong>, even if an obfuscation technique
is known, attacks can remain costly.</p>
<p>Let&rsquo;s take an example with the control-flow flattening protection.
The technique is known, documented and there are public attacks<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>
but defeating this pass (statically) can be painful and time-consuming.
Usually (including myself), it forces the reverse engineer to analyze the program dynamically
which shifts the problem to dynamic protections. Thus, we can
assume that the pass is efficient against static analysis even if it is known.</p>
<p>Another example, <a href="https://www.romainthomas.fr/publication/22-sstic-blackhat-droidguard-safetynet/">Safetynet</a>.
The overall design of the protection is based on a virtual machine.
Once we reversed the different handlers, we can assume that the design is &ldquo;known&rdquo;.
Some layers of obfuscation are also based on <strong>known</strong> MBA. But, Google did something very smart, a new
version is published regularly and the internal components are shuffled.</p>
<p>I do believe that the strongest protection against reverse engineering comes from a well-thought design,
not an individual obfuscation pass.</p>
<p>Obfuscation is also about time, and I think that by combining several (known) obfuscation techniques,
we can trigger a time-out in the attackers.</p>
<p>Talking about time, this month I had the time to bridge all these ideas.</p>
<h2 id="technical-choices">Technical choices</h2>
<p>So far, the ideas were on the paper and I did not want to create &ldquo;<em>yet another O-LLVM fork</em>&rdquo; <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> or
spend time on something that already exists.</p>
<h2 id="native-code-obfuscation">Native code obfuscation</h2>
<p>No doubt about using LLVM and while looking at the current solutions based on LLVM,
I found <a href="https://github.com/eshard/obfuscator-llvm">eshard/obfuscator-llvm</a> on GitHub which is developed by <a href="https://eshard.com/">eShard</a>
(a company known for side channels attacks on whiteboxes <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup><sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>).</p>
<p>Compared to other LLVM-based obfuscators, it uses the new LLVM pass manager which enables us to load an
<strong>out-of-tree plugin</strong> with clang:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>clang -fpass-plugin<span style="color:#666">=</span>&lt;path/to/llvm/obfuscation&gt;/libLLVMObfuscator.so <span style="color:#b62;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#b62;font-weight:bold"></span>      hello_world.c -o hello_world
</span></span></code></pre></div><p>I was definitely convinced by this way of using an obfuscator. Especially because it keeps the original
compiler from the toolchain which simplifies this kind of issue: <a href="https://github.com/HikariObfuscator/Hikari/wiki/Troubleshooting#aarch64e-support">Hikari/Troubleshooting - AArch64e Support</a>.</p>
<p>On the other hand, I was less convinced of using environment variables to trigger and configure the obfuscation passes.</p>
<h2 id="javakotlin-obfuscation">Java/Kotlin obfuscation</h2>
<p>To support Java and Kotlin obfuscation for Android, I had a look at
<a href="https://github.com/Guardsquare/proguard">Proguard</a>/<a href="https://github.com/Guardsquare/proguard-core">Proguard-core</a>
which actually provides all the components to create an obfuscation pipeline.</p>
<p>Proguard is known for obfuscating symbols (class names, methods, &hellip;) and optimizing code but it&rsquo;s just
the tip of the iceberg. The project is <strong>really really</strong> well designed and modular such as it was very
easy to add an obfuscation pipeline.</p>
<h2 id="o-mvlldprotect">O-MVLL/dProtect</h2>
<p>I ended up with two projects:</p>
<ol>
<li>O-MVLL, in reference to the well know, parent of all the forks:
<a href="https://github.com/obfuscator-llvm">O-LLVM</a>.</li>
<li><strong>d</strong>Protect for <strong><code>{dex,droid}</code></strong>-Protector</li>
</ol>
<h3 id="o-mvll">O-MVLL</h3>
<p>O-MVLL uses the original idea of eShard: a <em>pass-plugin</em> obfuscator.
On the other hand, it uses a Python API instead of environment variables.</p>
<p>In short, the user defines what she/he wants to protect and how she/he wants to protect it in Python. For instance,
to obfuscate strings the developer must override the <code>obfuscate_string</code> method:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">obfuscate_string</span>(self,
</span></span><span style="display:flex;"><span>                     mod: omvll<span style="color:#666">.</span>Module,
</span></span><span style="display:flex;"><span>                     func: omvll<span style="color:#666">.</span>Function,
</span></span><span style="display:flex;"><span>                     string: <span style="color:#008000">bytes</span>):
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># Replace the string</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#ba2121">&#34;REDACTED&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># Obfuscate the string on the stack</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> omvll<span style="color:#666">.</span>StringEncOptStack()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># Obfsucate the string the stack with a</span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># loop if the length is too long</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> omvll<span style="color:#666">.</span>StringEncOptStack(loopThreshold<span style="color:#666">=</span><span style="color:#666">0</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#666">...</span>
</span></span></code></pre></div><p>There is also <code>mod: omvll.Module</code> and <code>func: omvll.Function</code> in the arguments of the function.</p>
<p>These arguments are LLVM objects wrapped with Python bindings. Thus, the user can use all the information (name, flags, visibility <sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup>)
provided by LLVM for these objects.</p>
<p>If the user only wants to protect strings in the function <code>omvll::decode()</code>, she/he can use this condition:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">obfuscate_string</span>(self,
</span></span><span style="display:flex;"><span>                     mod: omvll<span style="color:#666">.</span>Module,
</span></span><span style="display:flex;"><span>                     func: omvll<span style="color:#666">.</span>Function,
</span></span><span style="display:flex;"><span>                     string: <span style="color:#008000">bytes</span>):
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> func<span style="color:#666">.</span>demangled_name <span style="color:#666">==</span> <span style="color:#ba2121">&#34;omvll::decode()&#34;</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">return</span> StringEncOptGlobal()
</span></span><span style="display:flex;"><span>    <span style="color:#666">...</span>
</span></span></code></pre></div><p>You can find more details about this pass <a href="https://obfuscator.re/omvll/passes/strings-encoding/">here</a> and
you can also explore the O-MVLL documentation <a href="https://obfuscator.re/omvll">here</a>.</p>
<h3 id="dprotect">dProtect</h3>
<p>For dProtect, nothing really new in terms of API compared to Proguard.
I added custom obfuscation passes that can be enabled as follows:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Mixed boolean-arithmetic Obfuscation</span>
</span></span><span style="display:flex;"><span>-obfuscate-arithmetic,high class com.dprotect.salsa20 <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  *;
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Strings protection</span>
</span></span><span style="display:flex;"><span>-obfuscate-strings <span style="color:#ba2121">&#34;XEYnuNOGoEQ*&#34;</span>, <span style="color:#ba2121">&#34;TOKEN: *&#34;</span>
</span></span><span style="display:flex;"><span>-obfuscate-strings class dprotect.Connect <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  private static java.lang.String API_KEY;
</span></span><span style="display:flex;"><span>  public static java.lang.String getToken<span style="color:#666">()</span>;
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Constants</span>
</span></span><span style="display:flex;"><span>-obfuscate-constants    class com.dprotect.secret.** <span style="color:#666">{</span> *; <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Control-Flow</span>
</span></span><span style="display:flex;"><span>-obfuscate-control-flow class com.dprotect.internal.** <span style="color:#666">{</span> *; <span style="color:#666">}</span>
</span></span></code></pre></div><p>The logic of these dProtect&rsquo;s passes relies on existing internal components available in Proguard and
Proguard-CORE which have been developed by
<a href="https://www.lafortune.eu/">Eric Lafortune</a> and <a href="https://jameshamilton.eu/">James Hamilton</a>.</p>
<p>In its current version, dProtect provides the following obfuscation passes:</p>
<ul>
<li><a href="https://obfuscator.re/dprotect/passes/arithmetic/">Arithmetic Obfuscation</a></li>
<li><a href="https://obfuscator.re/dprotect/passes/constants/">Constants Obfuscation</a></li>
<li><a href="https://obfuscator.re/dprotect/passes/control-flow/">Control-Flow Obfuscation</a></li>
<li><a href="https://obfuscator.re/dprotect/passes/strings/">Strings Encryption</a></li>
</ul>
<h2 id="ci">CI</h2>
<p>O-MVLL and dProtect are CI compiled with nightly packages available at these addresses:</p>
<ul>
<li><a href="http://nightly.obfuscator.re/latest/omvll">http://nightly.obfuscator.re/latest/omvll</a></li>
<li><a href="http://nightly.obfuscator.re/latest/dprotect">http://nightly.obfuscator.re/latest/dprotect</a></li>
</ul>
<p>The CI for O-MVLL could have been challenging to setup but since it is based on an out-of-tree plugin,
once the right version of LLVM is pre-compiled, it takes about <strong>2 minutes</strong> to compile the project from scratch
for both: the NDK and the Xcode toolchain.</p>
<p>The environment to compile O-MVLL for the Android NDK and Xcode is fully Dockerized and available on Dockerhub:
<a href="https://hub.docker.com/u/openobfuscator">https://hub.docker.com/u/openobfuscator</a>:</p>
<ul>
<li><a href="https://hub.docker.com/r/openobfuscator/omvll-ndk">openobfuscator/omvll-ndk</a></li>
<li><a href="https://hub.docker.com/r/openobfuscator/omvll-xcode">openobfuscator/omvll-xcode</a></li>
</ul>
<p>For those who are interested, you can check out the Github Action configurations:</p>
<ul>
<li><a href="https://github.com/open-obfuscator/o-mvll/blob/main/.github/workflows/ndk.yml">NDK Workflow</a></li>
<li><a href="https://github.com/open-obfuscator/o-mvll/blob/main/.github/workflows/xcode.yml">Xcode Workflow</a></li>
</ul>
<h2 id="demo">Demo</h2>
<p>I think the better way to demonstrate the level of obfuscation that can be provided by O-MVLL and dProtect in
their current version, is to obfuscate an open-source project.</p>
<p>For that purpose, I choose <a href="https://github.com/optiv/android-ndk-crackme">optiv/android-ndk-crackme</a>
and the configuration of O-MVLL and dProtect are available here:</p>
<ul>
<li><a href="https://gist.github.com/romainthomas/68ecda22775c2b3ca036bd58e4e73e5a">o-conf.py</a></li>
<li><a href="https://gist.github.com/romainthomas/0d89bcd2547ff5968a0f3a5f4f7c067d">dProtect.pro</a></li>
</ul>
<p>The cherry on the cake, I also applied some techniques described in
<a href="https://www.romainthomas.fr/publication/22-pst-the-poor-mans-obfuscator/">&ldquo;The Poor Man Obfuscator&rdquo;</a>:</p>
<ul>
<li><a href="https://gist.github.com/romainthomas/5898cd2c64b01b29270d9cad6787c1ff">elf_tricks.py</a></li>
</ul>
<p>In the end, we have this un-obfuscated version of the crackme: <a href="https://data.romainthomas.fr/22-10-open-obfuscator/com.optiv.ndkcrackme.apk">com.optiv.ndkcrackme.apk</a>
and this one, protected with O-MVLL and dProtect: <a href="https://data.romainthomas.fr/22-10-open-obfuscator/com.optiv.ndkcrackme-protected.apk">com.optiv.ndkcrackme-protected.apk</a></p>
<p>About iOS, O-MVLL works <strong>as a PoC and the support is far from being finished</strong>:</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #ffebeb">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-warning" style="color: #e40000" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #e40000">
    <h3 class="h5 m-0 mb-1" style="color: #e40000">iOS</h3>
    The obfuscation passes <a href="https://obfuscator.re/omvll/passes/anti-hook/">Anti-Hooking</a> and
<a href="https://obfuscator.re/omvll/passes/control-flow-breaking">Control-Flow Breaking</a> are not working
correctly due to an issue (from O-MVLL) in the JIT engine.<br /><br />
<u>The overall support for iOS is <strong>highly</strong> experimental.</u>
  </div>
  </div>
  </div>
</div>
<p>Nevertheless, you can compare this (unprotected) version of zlib for iOS: <a href="https://data.romainthomas.fr/22-10-open-obfuscator/libz.dylib">libz.dylib</a>
with this protected one: <a href="https://data.romainthomas.fr/22-10-open-obfuscator/libz-obfuscated.dylib">libz-obfuscated.dylib</a>.</p>
<p>The obfuscation has been done with this configuration file: <a href="https://gist.github.com/romainthomas/149ce793702f3dc28126f7840f5d6870">ios-zlib-obf.py</a>.</p>
<h2 id="last-words">Last words</h2>
<p>The project is one month old so you can expect bugs, limitations, and typos. I released a beta version
on GitHub so feel free to try and send your feedback.</p>
<p>Regarding the time spent on the project:</p>
<ul>
<li>60% on the documentation, UI, website, etc</li>
<li>30% on the obfuscation passes themselves</li>
<li>5% on the CI</li>
<li>5% on the tests</li>
</ul>
<p>So yes, some obfuscation passes still need to be improved to be really efficient and the support for iOS is
very very experimental (i.e. depending on the configuration, <strong>the compiler might crash</strong>).
There is also a test suite for both dProtect and O-MVLL but it is not public yet.</p>
<p>Open-obfuscator is going to be my second largest project after <a href="https://lief-project.github.io/">LIEF</a>
and I hope it will serve its long-term purpose:</p>
<p><strong>Providing an obfuscation playground for both, developers and reverse engineers</strong>.</p>
<br />
<p>Thank you for reading and happy Halloween 🎃</p>
<p>Romain</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Breaking obfuscation is a moot topic.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>I guess the <em>terms of use</em> of the demo does not allow you to reverse it.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>See: <a href="https://obfuscator.re/omvll/passes/control-flow-flattening/#references">https://obfuscator.re/omvll/passes/control-flow-flattening/#references</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>This fork exists: <a href="https://github.com/emc2314/YANSOllvm">https://github.com/emc2314/YANSOllvm</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://gitlab.com/eshard/scared">https://gitlab.com/eshard/scared</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p><a href="https://gitlab.com/eshard/estraces">https://gitlab.com/eshard/estraces</a>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p>In the current version, only the name is provided.&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/22-10-open-obfuscator/featured.webp"/></item><item><title>Part 2 – iOS Native Code Obfuscation and Syscall Hooking</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/</guid><description>This second blog post deals with native code obfuscation and RASP syscall interception</description><content:encoded><![CDATA[<div class="alert alert-info" role="alert" style="border: none !important; background-color: #f9f9f9; color: #4d4d4d;">
  <span class="fas fa-book" style="color: #4d4d4d" >&#160;</span>
  The first part is here: <a href="https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/">Part 1 &ndash; SingPass RASP Analysis</a>
</div>
<p>After SingPass, I had a look at another application protected with the same obfuscator but with
enhanced protections.</p>
<p>Compared to the previous application, this new application crashes immediately as soon as it is launched.</p>
<p>By checking the crash log, we don&rsquo;t get any meaningful information since the obfuscator trashes some registers like
<code>LR</code> before crashing. By trashing <code>LR</code>, the iOS crash analytics service is not able to correctly build the call stack
of the functions that led to the crash.</p>
<p>On the other hand, by tracing the libraries loaded by the application, we can identify in which loaded library
the application crashes, and thus, the library is likely in charge of checking the environment&rsquo;s integrity.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>$ ijector.py --spawn ios.app
</span></span><span style="display:flex;"><span>iTrace started
</span></span><span style="display:flex;"><span>PID: 63969 | tid: 771
</span></span><span style="display:flex;"><span>Home: /private/var/mobile/Containers/Data/Application/A59541E1-106A-4C31-8188-0830E651449E
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x1065f948c): cxxreact!1948c
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x10564e270): ReactCommon!1a270
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x103e5ed84): GRDB!12ed84
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x104407790): Intercom!1bb790
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x104c29d7c): KaaSLogging!9d7c
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x105871bb4): RxSwift!91bb4
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x1056f00cc): RxBluetoothKit!440cc
</span></span><span style="display:flex;"><span>ImageLoader::containsAddress(0x104633f50): KaaSBle!bbf50
</span></span><span style="display:flex;"><span>---&gt; CRASH!
</span></span></code></pre></div><p>So the application crashes when loading the <code>KaaSBle</code> library embedded as a third-party framework of the application.</p>
<p>Compared SingPass, the library does not leak symbols about the RASP checks nor about
the obfuscator. In addition, some functions are obfuscated with control-flow flattening and Mixed Boolean-Arithmetic
(MBA) expressions as we can observe in the following figure:</p>
<center>
<figure>
<img src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/cfg_flat_macho_ctor.webp"  alt="iOS Control-Flow Flattening" />
<br />
<figcaption>Figure 1 - Control-Flow Flattening in the Constructor of KaaSBle</figure>
</figure>
<br />
</center>
<p>Based on the previous analysis of <code>SingPass</code>, we know that RASP checks related to jailbreak or debugger detection use
uncommon functions like <code>getpid</code>, <code>unmount</code> or <code>pathconf</code>. It turns out that, these functions are also imported
by <code>KaaSBle</code> which enables to identify where some of the RASP checks are located.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fafcff; color: #084298;">
  <span class="fas fa-message-code" style="color: #084298" >&#160;</span>
  Uncommon imported functions like <code>unmount</code> are usually a good signature to identify potential RASP checks
</div>
<p>For instance, the function <span class="dark-boxed dark-yellow">sub_EBDC</span> which uses <code>getpid</code> is likely involved in the debugger detection. This
function is obfuscated with an MBA and control-flow flattening and, its graph is represented in Figure 2<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<div class="col-lg-0" id="fig-2">
<center>
<figure>

<?xml version="1.0" ?><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" viewBox="0 0 1000 420.68967" id="sub_ebdc" version="1.1" sodipodi:docname="graph.svg" width="1000" height="420.68967">
  <sodipodi:namedview id="namedview6359" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="false"/>
  <defs id="defs5857">
    <marker style="overflow:visible" id="greenarrow" refX="3" refY="0" orient="auto-start-reverse" markerWidth="6.1347523" markerHeight="5.9304948" viewBox="0 0 6.1347524 5.9304951" preserveAspectRatio="xMidYMid">
      <path transform="scale(0.7)" d="m -0.21114562,-4.1055728 6.42229122,3.21114561 a 1,1 90 0 1 0,1.78885438 L -0.21114562,4.1055728 A 1.236068,1.236068 31.717474 0 1 -2,3 v -6 a 1.236068,1.236068 148.28253 0 1 1.78885438,-1.1055728 z" style="fill:#28a745;fill-rule:evenodd;stroke:none" id="path1367"/>
    </marker>
    <marker style="overflow:visible" id="redarrow" refX="3" refY="0" orient="auto-start-reverse" markerWidth="6.1347523" markerHeight="5.9304948" viewBox="0 0 6.1347524 5.9304951" preserveAspectRatio="xMidYMid">
      <path transform="scale(0.7)" d="m -0.21114562,-4.1055728 6.42229122,3.21114561 a 1,1 90 0 1 0,1.78885438 L -0.21114562,4.1055728 A 1.236068,1.236068 31.717474 0 1 -2,3 v -6 a 1.236068,1.236068 148.28253 0 1 1.78885438,-1.1055728 z" style="fill:#dc3545;fill-rule:evenodd;stroke:none" id="path5851"/>
    </marker>
    <marker style="overflow:visible" id="defaultarrow" refX="3" refY="0" orient="auto-start-reverse" markerWidth="6.1347523" markerHeight="5.9304948" viewBox="0 0 6.1347524 5.9304951" preserveAspectRatio="xMidYMid">
      <path transform="scale(0.7)" d="m -0.21114562,-4.1055728 6.42229122,3.21114561 a 1,1 90 0 1 0,1.78885438 L -0.21114562,4.1055728 A 1.236068,1.236068 31.717474 0 1 -2,3 v -6 a 1.236068,1.236068 148.28253 0 1 1.78885438,-1.1055728 z" style="fill:#5fbcd3;fill-rule:evenodd;stroke:none" id="path5854"/>
    </marker>
  </defs>
  <g id="g8670" transform="scale(6.8965517)">
    <rect x="0" y="0" width="145" height="61" fill="#4c4c4c" id="rect5859"/>
    <g id="graph">
      <g id="basic-block">
        <rect x="63" y="2" width="23" height="6" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect5861"/>
        <g id="g5913">
          <text x="63.5" y="3.2" font-size="1px" font-family="'Fira Code'" id="text5867"><tspan fill="#fdd418" id="tspan5863">sub_ebdc</tspan><tspan fill="#ffffff" id="tspan5865">:</tspan></text>
          <text x="63.5" y="4.1999998" font-size="1px" font-family="'Fira Code'" id="text5879"><tspan fill="#ababab" id="tspan5869">int64_t</tspan><tspan fill="#ffffff" id="tspan5871">* </tspan><tspan fill="#88b0f0" id="tspan5873">var_20</tspan><tspan fill="#ffffff" id="tspan5875"> = </tspan><tspan fill="#88b0f0" id="tspan5877">arg2</tspan></text>
          <text x="63.5" y="5.1999998" font-size="1px" font-family="'Fira Code'" id="text5891"><tspan fill="#ababab" id="tspan5881">void</tspan><tspan fill="#ffffff" id="tspan5883">* </tspan><tspan fill="#88b0f0" id="tspan5885">x20</tspan><tspan fill="#ffffff" id="tspan5887"> = *</tspan><tspan fill="#88b0f0" id="tspan5889">arg2</tspan></text>
          <text x="63.5" y="6.1999998" font-size="1px" font-family="'Fira Code'" id="text5899"><tspan fill="#ababab" id="tspan5893">int32_t</tspan><tspan fill="#ffffff" id="tspan5895"> </tspan><tspan fill="#88b0f0" id="tspan5897">pid_is_null</tspan></text>
          <text x="63.5" y="7.1999998" font-size="1px" font-family="'Fira Code'" id="text5911"><tspan fill="#ffffff" id="tspan5901">if (</tspan><tspan fill="#fdd418" id="tspan5903">_getpid</tspan><tspan fill="#ffffff" id="tspan5905">() == </tspan><tspan fill="#6dcff6" id="tspan5907">0</tspan><tspan fill="#ffffff" id="tspan5909">)</tspan></text>
        </g>
      </g>
      <g id="g5928">
        <rect x="57" y="10" width="16" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect5916"/>
        <g id="g5926">
          <text x="57.5" y="11.2" font-size="1px" font-family="'Fira Code'" id="text5924"><tspan fill="#88b0f0" id="tspan5918">pid_is_null</tspan><tspan fill="#ffffff" id="tspan5920"> = </tspan><tspan fill="#6dcff6" id="tspan5922">1</tspan></text>
        </g>
      </g>
      <g id="g5942">
        <rect x="76" y="10" width="16" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect5930"/>
        <g id="g5940">
          <text x="76.5" y="11.2" font-size="1px" font-family="'Fira Code'" id="text5938"><tspan fill="#88b0f0" id="tspan5932">pid_is_null</tspan><tspan fill="#ffffff" id="tspan5934"> = </tspan><tspan fill="#6dcff6" id="tspan5936">0</tspan></text>
        </g>
      </g>
      <g id="g6012">
        <rect x="45" y="16" width="59" height="5" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect5944"/>
        <g id="g6010">
          <text x="45.5" y="17.200001" font-size="1px" font-family="'Fira Code'" id="text5958"><tspan fill="#ababab" id="tspan5946">int32_t</tspan><tspan fill="#ffffff" id="tspan5948"> </tspan><tspan fill="#88b0f0" id="tspan5950">CST</tspan><tspan fill="#ffffff" id="tspan5952"> = neg.d(</tspan><tspan fill="#aaff00" id="tspan5954">data_141b60</tspan><tspan fill="#ffffff" id="tspan5956">)</tspan></text>
          <text x="45.5" y="18.200001" font-size="1px" font-family="'Fira Code'" id="text5988"><tspan fill="#ababab" id="tspan5960">int32_t</tspan><tspan fill="#ffffff" id="tspan5962"> </tspan><tspan fill="#88b0f0" id="tspan5964">x22</tspan><tspan fill="#ffffff" id="tspan5966"> = (</tspan><tspan fill="#88b0f0" id="tspan5968">CST</tspan><tspan fill="#ffffff" id="tspan5970"> ^ </tspan><tspan fill="#6dcff6" id="tspan5972">0x80722d06</tspan><tspan fill="#ffffff" id="tspan5974">) + ((</tspan><tspan fill="#88b0f0" id="tspan5976">CST</tspan><tspan fill="#ffffff" id="tspan5978"> &amp; </tspan><tspan fill="#6dcff6" id="tspan5980">0x722d06</tspan><tspan fill="#ffffff" id="tspan5982">) &lt;&lt; </tspan><tspan fill="#6dcff6" id="tspan5984">1</tspan><tspan fill="#ffffff" id="tspan5986">)</tspan></text>
          <text x="45.5" y="19.200001" font-size="1px" font-family="'Fira Code'" id="text6000"><tspan fill="#ababab" id="tspan5990">int32_t</tspan><tspan fill="#ffffff" id="tspan5992"> </tspan><tspan fill="#88b0f0" id="tspan5994">state_variable</tspan><tspan fill="#ffffff" id="tspan5996"> = </tspan><tspan fill="#6dcff6" id="tspan5998">4</tspan></text>
          <text x="45.5" y="20.200001" font-size="1px" font-family="'Fira Code'" id="text6008"><tspan fill="#ababab" id="tspan6002">int64_t</tspan><tspan fill="#ffffff" id="tspan6004"> </tspan><tspan fill="#88b0f0" id="tspan6006">ret_val</tspan></text>
        </g>
      </g>
      <g id="g6026">
        <rect x="68" y="25" width="13" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6014"/>
        <g id="g6024">
          <text x="68.5" y="26.200001" font-size="1px" font-family="'Fira Code'" id="text6022"><tspan fill="#ffffff" id="tspan6016">while (</tspan><tspan fill="#6dcff6" id="tspan6018">true</tspan><tspan fill="#ffffff" id="tspan6020">)</tspan></text>
        </g>
      </g>
      <g id="g6058">
        <rect x="56" y="29" width="38" height="3" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6028"/>
        <g id="g6056">
          <text x="56.5" y="30.200001" font-size="1px" font-family="'Fira Code'" id="text6042"><tspan fill="#ababab" id="tspan6030">uint64_t</tspan><tspan fill="#ffffff" id="tspan6032"> </tspan><tspan fill="#88b0f0" id="tspan6034">state</tspan><tspan fill="#ffffff" id="tspan6036"> = zx.q(</tspan><tspan fill="#88b0f0" id="tspan6038">state_variable</tspan><tspan fill="#ffffff" id="tspan6040">)</tspan></text>
          <text x="56.5" y="31.200001" font-size="1px" font-family="'Fira Code'" id="text6054"><tspan fill="#ffffff" id="tspan6044">if (</tspan><tspan fill="#88b0f0" id="tspan6046">state</tspan><tspan fill="#ffffff" id="tspan6048">.d u&lt;= </tspan><tspan fill="#6dcff6" id="tspan6050">4</tspan><tspan fill="#ffffff" id="tspan6052">)</tspan></text>
        </g>
      </g>
      <g id="g6072">
        <rect x="67" y="34" width="15" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6060"/>
        <g id="g6070">
          <text x="67.5" y="35.200001" font-size="1px" font-family="'Fira Code'" id="text6068"><tspan fill="#ffffff" id="tspan6062">switch (</tspan><tspan fill="#88b0f0" id="tspan6064">state</tspan><tspan fill="#ffffff" id="tspan6066">)</tspan></text>
        </g>
      </g>
      <g id="g6088">
        <rect x="13" y="40" width="11.5" height="3" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6074"/>
        <g id="g6086">
          <text x="13.5" y="41.200001" font-size="1px" font-family="'Fira Code'" id="text6080"><tspan fill="#ffffff" id="tspan6076">case </tspan><tspan fill="#6dcff6" id="tspan6078">0 : loc_ECA4</tspan></text>
          <text x="13.5" y="42.200001" font-size="1px" font-family="'Fira Code'" id="text6084"><tspan fill="#ffffff" id="tspan6082">break</tspan></text>
        </g>
      </g>
      <g id="g6100">
        <rect x="39" y="40" width="11.5" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6090"/>
        <g id="g6098">
          <text x="39.5" y="41.200001" font-size="1px" font-family="'Fira Code'" id="text6096"><tspan fill="#ffffff" id="tspan6092">case </tspan><tspan fill="#6dcff6" id="tspan6094">1 : loc_EC78</tspan></text>
        </g>
      </g>
      <g id="g6136">
        <rect x="27" y="44" width="31" height="4" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6102"/>
        <g id="g6134">
          <text x="27.5" y="45.200001" font-size="1px" font-family="'Fira Code'" id="text6120"><tspan fill="#88b0f0" id="tspan6104">ret_val</tspan><tspan fill="#ffffff" id="tspan6106"> = </tspan><tspan fill="#fdd418" id="tspan6108">sub_968e0</tspan><tspan fill="#ffffff" id="tspan6110">(</tspan><tspan fill="#88b0f0" id="tspan6112">arg1</tspan><tspan fill="#ffffff" id="tspan6114">, </tspan><tspan fill="#88b0f0" id="tspan6116">x20</tspan><tspan fill="#ffffff" id="tspan6118">)</tspan></text>
          <text x="27.5" y="46.200001" font-size="1px" font-family="'Fira Code'" id="text6128"><tspan fill="#88b0f0" id="tspan6122">state_variable</tspan><tspan fill="#ffffff" id="tspan6124"> = </tspan><tspan fill="#6dcff6" id="tspan6126">3</tspan></text>
          <text x="27.5" y="47.200001" font-size="1px" font-family="'Fira Code'" id="text6132"><tspan fill="#ffffff" id="tspan6130">continue</tspan></text>
        </g>
      </g>
      <g id="g6148">
        <rect x="68" y="40" width="11.5" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6138"/>
        <g id="g6146">
          <text x="68.5" y="41.200001" font-size="1px" font-family="'Fira Code'" id="text6144"><tspan fill="#ffffff" id="tspan6140">case </tspan><tspan fill="#6dcff6" id="tspan6142">2 : loc_EC8C</tspan></text>
        </g>
      </g>
      <g id="g6180">
        <rect x="61" y="44" width="21" height="4" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6150"/>
        <g id="g6178">
          <text x="61.5" y="45.200001" font-size="1px" font-family="'Fira Code'" id="text6164"><tspan fill="#fdd418" id="tspan6152">sub_968e0</tspan><tspan fill="#ffffff" id="tspan6154">(</tspan><tspan fill="#88b0f0" id="tspan6156">arg1</tspan><tspan fill="#ffffff" id="tspan6158">, </tspan><tspan fill="#88b0f0" id="tspan6160">x20</tspan><tspan fill="#ffffff" id="tspan6162">)</tspan></text>
          <text x="61.5" y="46.200001" font-size="1px" font-family="'Fira Code'" id="text6172"><tspan fill="#88b0f0" id="tspan6166">state_variable</tspan><tspan fill="#ffffff" id="tspan6168"> = </tspan><tspan fill="#6dcff6" id="tspan6170">1</tspan></text>
          <text x="61.5" y="47.200001" font-size="1px" font-family="'Fira Code'" id="text6176"><tspan fill="#ffffff" id="tspan6174">continue</tspan></text>
        </g>
      </g>
      <g id="g6192">
        <rect x="91" y="40" width="11.5" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6182"/>
        <g id="g6190">
          <text x="91.5" y="41.200001" font-size="1px" font-family="'Fira Code'" id="text6188"><tspan fill="#ffffff" id="tspan6184">case </tspan><tspan fill="#6dcff6" id="tspan6186">3 : loc_EC9C</tspan></text>
        </g>
      </g>
      <g id="g6210">
        <rect x="85" y="44" width="19" height="3" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6194"/>
        <g id="g6208">
          <text x="85.5" y="45.200001" font-size="1px" font-family="'Fira Code'" id="text6202"><tspan fill="#88b0f0" id="tspan6196">state_variable</tspan><tspan fill="#ffffff" id="tspan6198"> = </tspan><tspan fill="#6dcff6" id="tspan6200">0</tspan></text>
          <text x="85.5" y="46.200001" font-size="1px" font-family="'Fira Code'" id="text6206"><tspan fill="#ffffff" id="tspan6204">continue</tspan></text>
        </g>
      </g>
      <g id="g6222">
        <rect x="120" y="40" width="11.5" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6212"/>
        <g id="g6220">
          <text x="120.5" y="41.200001" font-size="1px" font-family="'Fira Code'" id="text6218"><tspan fill="#ffffff" id="tspan6214">case </tspan><tspan fill="#6dcff6" id="tspan6216">4 : loc_EC50</tspan></text>
        </g>
      </g>
      <g id="g6248">
        <rect x="111" y="44" width="24" height="3" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6224"/>
        <g id="g6246">
          <text x="111.5" y="45.200001" font-size="1px" font-family="'Fira Code'" id="text6232"><tspan fill="#ababab" id="tspan6226">int32_t</tspan><tspan fill="#ffffff" id="tspan6228"> </tspan><tspan fill="#88b0f0" id="tspan6230">next_state</tspan></text>
          <text x="111.5" y="46.200001" font-size="1px" font-family="'Fira Code'" id="text6244"><tspan fill="#ffffff" id="tspan6234">if (</tspan><tspan fill="#88b0f0" id="tspan6236">pid_is_null</tspan><tspan fill="#ffffff" id="tspan6238"> != </tspan><tspan fill="#88b0f0" id="tspan6240">x22</tspan><tspan fill="#ffffff" id="tspan6242">)</tspan></text>
        </g>
      </g>
      <g id="g6262">
        <rect x="107" y="49" width="15" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6250"/>
        <g id="g6260">
          <text x="107.5" y="50.200001" font-size="1px" font-family="'Fira Code'" id="text6258"><tspan fill="#88b0f0" id="tspan6252">next_state</tspan><tspan fill="#ffffff" id="tspan6254"> = </tspan><tspan fill="#6dcff6" id="tspan6256">2</tspan></text>
        </g>
      </g>
      <g id="g6276">
        <rect x="125" y="49" width="15" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6264"/>
        <g id="g6274">
          <text x="125.5" y="50.200001" font-size="1px" font-family="'Fira Code'" id="text6272"><tspan fill="#88b0f0" id="tspan6266">next_state</tspan><tspan fill="#ffffff" id="tspan6268"> = </tspan><tspan fill="#6dcff6" id="tspan6270">1</tspan></text>
        </g>
      </g>
      <g id="g6290">
        <rect x="109" y="55" width="28" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6278"/>
        <g id="g6288">
          <text x="109.5" y="56.200001" font-size="1px" font-family="'Fira Code'" id="text6286"><tspan fill="#88b0f0" id="tspan6280">state_variable</tspan><tspan fill="#ffffff" id="tspan6282"> = </tspan><tspan fill="#88b0f0" id="tspan6284">next_state</tspan></text>
        </g>
      </g>
      <g id="g6302">
        <rect x="9" y="45" width="15" height="2" fill="#2d2d2d" stroke-width="0.1" stroke="#6dcff6" id="rect6292"/>
        <g id="g6300">
          <text x="9.5" y="46.200001" font-size="1px" font-family="'Fira Code'" id="text6298"><tspan fill="#ffffff" id="tspan6294">return </tspan><tspan fill="#88b0f0" id="tspan6296">ret_val</tspan></text>
        </g>
      </g>
      <g id="edges">
        <path stroke-width="0.1" stroke="#28a745" fill="none" d="m 73,8 v 0.5 0 0 H 64 V 10" style="marker-end:url(#greenarrow)" id="path6304"/>
        <path stroke-width="0.1" stroke="#dc3545" fill="none" d="m 74,8 v 1 0 0 h 9 v 1" style="marker-end:url(#redarrow)" id="path6306"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 64,12 v 1 1.5 0 h 9 V 16" style="marker-end:url(#defaultarrow)" id="path6308"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 83,12 v 1 2 0 h -9 v 1" style="marker-end:url(#defaultarrow)" id="path6310"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 71,21 v 0.5 0 0 0 3.5" style="marker-end:url(#defaultarrow)" id="path6312"/>
        <path stroke-width="0.1" stroke="#28a745" fill="none" d="m 73.5,27 v 1 0 0 H 74 v 1" style="marker-end:url(#greenarrow)" id="path6314"/>
        <path stroke-width="0.1" stroke="#28a745" fill="none" d="m 73.5,32 v 0.5 0 0 0 1.5" style="marker-end:url(#greenarrow)" id="path6316"/>
        <path stroke-width="0.1" stroke="#dc3545" fill="none" d="m 74.5,32 v 1 0 H 3 v -11 0 h 69 v 3" style="marker-end:url(#redarrow)" id="path6318"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 71.5,36 v 1 0 0 h -56 v 3" style="marker-end:url(#defaultarrow)" id="path6320"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 72.5,36 v 1.5 0 0 h -31 V 40" style="marker-end:url(#defaultarrow)" id="path6322"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 73.5,36 v 2 0 0 h -3 v 2" style="marker-end:url(#defaultarrow)" id="path6324"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 74.5,36 v 2.5 0 0 h 19 V 40" style="marker-end:url(#defaultarrow)" id="path6326"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 75.5,36 v 3 0 0 h 47 v 1" style="marker-end:url(#defaultarrow)" id="path6328"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 15.5,43 v 1 0 0 0 1" style="marker-end:url(#defaultarrow)" id="path6330"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 41.5,42 v 1 0 0 0 1" style="marker-end:url(#defaultarrow)" id="path6332"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 41.5,48 v 1 10 H 4 v -36.5 0 H 73 V 25" style="marker-end:url(#defaultarrow)" id="path6334"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 70.5,42 v 1 0 0 0 1" style="marker-end:url(#defaultarrow)" id="path6336"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 70.5,48 v 1 10.5 H 5 V 23 23 h 69 v 2" style="marker-end:url(#defaultarrow)" id="path6338"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 93.5,42 v 1 0 0 0 1" style="marker-end:url(#defaultarrow)" id="path6340"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 93.5,47 v 1 12 H 6 v -36.5 0 H 75 V 25" style="marker-end:url(#defaultarrow)" id="path6342"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 122.5,42 v 1 0 0 H 122 v 1" style="marker-end:url(#defaultarrow)" id="path6344"/>
        <path stroke-width="0.1" stroke="#28a745" fill="none" d="m 121.5,47 v 0.5 0 0 h -8 V 49" style="marker-end:url(#greenarrow)" id="path6346"/>
        <path stroke-width="0.1" stroke="#dc3545" fill="none" d="m 122.5,47 v 1 0 0 h 9 v 1" style="marker-end:url(#redarrow)" id="path6348"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 113.5,51 v 1 1.5 0 h 8 V 55" style="marker-end:url(#defaultarrow)" id="path6350"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 131.5,51 v 1 2 0 h -9 v 1" style="marker-end:url(#defaultarrow)" id="path6352"/>
        <path stroke-width="0.1" stroke="#5fbcd3" fill="none" d="m 122,57 v 1 0 h 21 V 24 24 H 76 v 1" style="marker-end:url(#defaultarrow)" id="path6354"/>
      </g>
    </g>
  </g>
</svg>

<br />
<br />
<figcaption>Figure 2 - BinaryNinja HLIL Graph of <code>sub_EBDC</code></figure>
</figure>
<br />
</center>
</div>
<h2 id="control-flow-flattening">Control-Flow Flattening</h2>
<p>I won&rsquo;t detail how generally control-flow flattening works as it already exists a good bunch of articles on this topic:</p>
<ul>
<li><a href="https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html">Deobfuscation: recovering an OLLVM-protected program </a> by <a href="https://www.quarkslab.com/">Quarkslab</a></li>
<li><a href="https://synthesis.to/2021/03/03/flattening_detection.html">Automated Detection of Control-flow Flattening</a> by <a href="https://twitter.com/mr_phrazer">Tim Blazytko</a></li>
<li><a href="https://eshard.com/posts/D810-a-journey-into-control-flow-unflattening">D810: A journey into control flow unflattening</a> by <a href="https://eshard.com">eShard</a></li>
</ul>
<p>Nevertheless, we can notice that the state variable that is used to drive the execution through the flattened
blocks is linear and not encoded:</p>
<div class="admonition caution">
<p><center>
<p>
<b>The state variable set at the end of the basic block exactly defines the next basic block to execute.</b>
</p>
</center>
</p>
</div>
<p>This means that given:</p>
<ol>
<li>A state value</li>
<li>The switch table</li>
<li>The <em>switch base address</em></li>
</ol>
<p>It is possible to easily compute the targeted basic block:</p>
<center>
<figure class="mb-4">
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/cfg-flat.webp" alt="Design of Graph Flattening" />
<figcaption>Fig 3. Computation of the Basic Block from a State Variable</figcaption>
</figure>
</center>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="825" height="400" viewBox="0 0 218.28125 105.83333" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="cfg_flat_overview.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/></sodipodi:namedview><defs id="defs2"><rect x="76.030545" y="164.26145" width="192.08597" height="88.142442" id="rect105171"/><rect x="76.048523" y="71.00267" width="178.979" height="109.99996" id="rect104319"/><marker style="overflow:visible" id="RoundedArrow" refX="0" refY="0" orient="auto-start-reverse" markerWidth="4.1350002" markerHeight="3.9973249" viewBox="0 0 6.1347524 5.9304951" preserveAspectRatio="xMidYMid"><path transform="scale(0.7)" d="m -0.21114562,-4.1055728 6.42229122,3.21114561 a 1,1 90 0 1 0,1.78885438 L -0.21114562,4.1055728 A 1.236068,1.236068 31.717474 0 1 -2,3 v -6 a 1.236068,1.236068 148.28253 0 1 1.78885438,-1.1055728 z" style="fill:context-stroke;fill-rule:evenodd;stroke:none" id="path1367"/></marker><marker style="overflow:visible" id="marker102507" refX="0" refY="0" orient="auto" markerWidth="5.6666665" markerHeight="5.6666665" viewBox="0 0 5.6666667 5.6666667" preserveAspectRatio="xMidYMid"><path transform="scale(0.5)" style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt" d="M 5,0 C 5,2.76 2.76,5 0,5 -2.76,5 -5,2.76 -5,0 c 0,-2.76 2.3,-5 5,-5 2.76,0 5,2.24 5,5 z" id="path102505" sodipodi:nodetypes="sssss"/></marker><marker style="overflow:visible" id="marker102352" refX="0" refY="0" orient="auto" markerWidth="5.6666665" markerHeight="5.6666665" viewBox="0 0 5.6666667 5.6666667" preserveAspectRatio="xMidYMid"><path transform="scale(0.5)" style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt" d="M 5,0 C 5,2.76 2.76,5 0,5 -2.76,5 -5,2.76 -5,0 c 0,-2.76 2.3,-5 5,-5 2.76,0 5,2.24 5,5 z" id="path102350" sodipodi:nodetypes="sssss"/></marker><marker style="overflow:visible" id="Dot" refX="0" refY="0" orient="auto" markerWidth="5.6666665" markerHeight="5.6666665" viewBox="0 0 5.6666667 5.6666667" preserveAspectRatio="xMidYMid"><path transform="scale(0.5)" style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt" d="M 5,0 C 5,2.76 2.76,5 0,5 -2.76,5 -5,2.76 -5,0 c 0,-2.76 2.3,-5 5,-5 2.76,0 5,2.24 5,5 z" id="Dot1" sodipodi:nodetypes="sssss"/></marker><rect x="274.99999" y="49.999997" width="69.999996" height="24.999999" id="rect95241"/><rect x="324.99998" y="264.99999" width="119.99999" height="64.999997" id="rect93856"/><rect x="475" y="275.00001" width="20" height="49.999992" id="rect86923"/><rect x="475" y="275.00001" width="20" height="49.999992" id="rect91835"/><rect x="475" y="275.00001" width="20" height="49.999992" id="rect91841"/><rect x="475" y="275" width="20" height="49.999992" id="rect86923-1"/><rect x="475" y="275" width="20" height="49.999992" id="rect91841-9"/><rect x="475" y="275" width="68.360672" height="21.425254" id="rect91841-9-9"/><rect x="275" y="49.999996" width="69.999992" height="24.999998" id="rect95241-0"/><rect x="275" y="49.999996" width="69.999992" height="24.999998" id="rect95241-0-2"/><rect x="475" y="275" width="68.360672" height="21.425255" id="rect91841-9-9-9"/><rect x="475" y="275" width="68.360672" height="21.425255" id="rect91841-9-9-9-8"/></defs><g id="layer1"><g id="g93053" transform="translate(10.14754)"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect8369" width="150" height="300" x="25" y="50" transform="scale(0.26458333)"/><g id="g79195" transform="translate(19.524713,31.454402)" style="display:inline"><rect style="display:inline;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect79189" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><rect style="display:inline;fill:#fdd418;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:stroke markers fill" id="rect79191" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="display:inline;fill:#5c92ea;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect79193" width="74.009033" height="14.033815" x="575.99097" y="100.96619" transform="scale(0.26458333)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,31.470793,-46.02575)" id="text91839-0-1-0-1" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:10.6667px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect91841-9-9-9-8);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="284.7067" id="tspan105598">var_4c</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,22.248995,-56.108595)" id="text91833" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.3333px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect91835);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="294.4133" id="tspan105600">2</tspan></text><g id="g101859" style="display:inline"><path style="fill:#5c92ea;fill-opacity:1;stroke-width:14.8655" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101855"/><path style="fill:#fdd418;fill-opacity:1;stroke-width:14.8655" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101857"/></g></g><g id="g79203" transform="translate(19.524713,57.912736)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect79197" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><rect style="fill:#c364fc;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:stroke markers fill" id="rect79199" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="fill:#4c4949;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect79201" width="74.009033" height="14.033815" x="575.99097" y="100.96619" transform="scale(0.26458333)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,31.435531,-45.802797)" id="text91839-0-1" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:10.6667px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect91841-9-9);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="284.7067" id="tspan105602">Return</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,22.082483,-56.111417)" id="text86921" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.3333px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect86923);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="294.4133" id="tspan105604">3</tspan></text><g id="g101859-1" style="display:inline"><path style="fill:#4c4949;fill-opacity:1;stroke-width:14.8655" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101855-0"/><path style="fill:#c364fc;fill-opacity:1;stroke-width:14.8655" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101857-3"/></g></g><g id="g32984" transform="translate(19.524713,-0.29560073)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect8375" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><rect style="fill:#5c92ea;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:stroke markers fill" id="rect32980" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="fill:#c364fc;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect34492" width="74.009033" height="14.033815" x="575.99097" y="100.96619" transform="scale(0.26458333)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,31.470793,-46.02575)" id="text91839-0-1-0" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:10.6667px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect91841-9-9-9);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="284.7067" id="tspan105606">var_4c</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,22.248994,-56.108595)" id="text91839" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.3333px;font-family:'FuraMono Nerd Font';-inkscape-font-specification:'FuraMono Nerd Font, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect91841);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="475" y="294.4133" id="tspan105608">1</tspan></text><g id="g101508"><path style="stroke-width:14.8655;fill:#c364fc;fill-opacity:1" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101504"/><path style="stroke-width:14.8655;fill:#5c92ea;fill-opacity:1" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101129"/></g></g><g id="Flat" transform="matrix(0.1431512,0,0,0.1431512,69.922066,19.891827)" style="stroke-width:1.84828"><path d="m 88,32 h 336 c 13.25483,0 23.98984,10.74517 24,24 l 0.27613,360.09725 C 448.27613,416.09725 192.09204,416 64,416 V 56 C 64,42.745166 74.745166,32 88,32 Z" fill="#ccdce5" id="path59273" style="display:inline;fill:#353333;fill-opacity:1;stroke-width:5.47472" sodipodi:nodetypes="sssccss"/><path d="m 88,32 h 336 a 24,24 0 0 1 24,24 V 96 H 64 V 56 A 24,24 0 0 1 88,32 Z" fill="#0093ba" id="path59275" style="display:inline;fill:#6dcff6;fill-opacity:1;stroke-width:5.47472"/><path d="m 256,32 h 168 c 13.25483,0 24,10.745166 24,24 V 96 H 256 Z" fill="#047fa7" id="path59279" style="display:inline;fill:#6dcff6;fill-opacity:1;stroke-width:5.47472" sodipodi:nodetypes="cssccc"/><path d="m 88,56 h 16 V 72 H 88 Z" fill="#ffc119" id="path59281" style="display:inline;fill:#0b81b2;fill-opacity:1;stroke-width:5.47472"/><path d="m 120,56 h 16 v 16 h -16 z" fill="#ffc119" id="path59283" style="display:inline;fill:#0b81b2;fill-opacity:1;stroke-width:5.47472"/><path d="m 376,56 h 48 v 16 h -48 z" fill="#06687f" id="path59289" style="display:inline;fill:#0b81b2;fill-opacity:1;stroke-width:5.47472"/><g fill="#abbac2" id="g59311" style="display:inline;stroke-width:5.47472"><g id="g86015" transform="translate(0,94.096666)" style="display:inline;stroke-width:5.47472"><path d="M 260.10385,96 H 448 v 64 H 232.37967 Z" id="path86011" style="fill:#4e4b4b;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc"/><path d="m 255.19083,96 h 186.86246 l -27.72418,64 H 255.19083 Z" id="path86013" style="fill:#5c92ea;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc" transform="translate(-191.19083)"/><text xml:space="preserve" transform="matrix(1.8482788,0,0,1.8482788,-215.79192,16.745353)" id="text95239" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect95241);display:inline;fill:#e0e0e0;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="275" y="67.254197" id="tspan105610">ID: 1</tspan></text></g><g id="g94315" transform="translate(0,172.64852)" style="stroke-width:5.47472"><path d="M 260.10385,96 H 448 v 64 H 232.37967 Z" id="path94311" style="fill:#4e4b4b;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc"/><path d="m 255.19083,96 h 186.86246 l -27.72418,64 H 255.19083 Z" id="path94313" style="fill:#fdd418;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc" transform="translate(-191.19083)"/><text xml:space="preserve" transform="matrix(1.8482788,0,0,1.8482788,-215.79192,16.745353)" id="text95239-6" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect95241-0);display:inline;fill:#e0e0e0;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="275" y="67.254197" id="tspan105612">ID: 2</tspan></text></g><g id="g94321" transform="translate(0,15.544812)" style="stroke-width:5.47472"><path d="M 260.10385,96 H 448 v 64 H 232.37967 Z" id="path94317" style="fill:#4e4b4b;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc"/><path d="m 255.19083,96 h 186.86246 l -27.72418,64 H 255.19083 Z" id="path94319" style="fill:#c364fc;fill-opacity:1;stroke-width:1.84828" sodipodi:nodetypes="ccccc" transform="translate(-191.19083)"/><text xml:space="preserve" transform="matrix(1.8482788,0,0,1.8482788,-215.18726,16.943899)" id="text95239-6-9" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect95241-0-2);display:inline;fill:#e0e0e0;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="275" y="67.254197" id="tspan105614">ID: 3</tspan></text></g><path style="fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Dot);paint-order:markers stroke fill" d="m 765.03548,106.86586 h 10 l -0.0355,-71.865862 H 324.99998 V 149.99999 h 10" id="path97596" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cccccc"/><path style="fill:none;fill-opacity:1;stroke:#5c92ea;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker102352);paint-order:markers stroke fill" d="m 764.99996,226.57451 h 20 V 24.999999 H 314.99998 V 199.99999 h 20" id="path97598" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cccccc"/><path style="fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#RoundedArrow);paint-order:markers stroke fill" d="m 549.01296,152.84576 h 35.99511 l -0.008,147.15422 h 73" id="path97600" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cccc"/><path style="fill:none;fill-opacity:1;stroke:#5c92ea;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#RoundedArrow);paint-order:markers stroke fill" d="m 549.01296,195.34576 75.98701,-0.002 V 74.999996 h 33" id="path97602" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cccc"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#RoundedArrow);paint-order:markers stroke fill" d="m 549.01296,237.84576 100.98701,-0.0333 v -52.8125 h 8" id="path97604" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cccc"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2.00000004;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill;marker-end:url(#marker102507)" d="m 219.99999,234.99999 115,0" id="path97606" transform="matrix(1.8482788,0,0,1.8482788,-559.3359,-138.95676)" sodipodi:nodetypes="cc"/></g><g id="g94120"><path d="M 248,480 H 56 C 42.745166,480 32,469.25483 32,456 v -88 c 0,-13.25483 10.745166,-24 24,-24 H 96 112.91334 128 248 c 13.25483,0 24,10.74517 24,24 v 88 c 0,13.25483 -10.74517,24 -24,24 z" fill="#88bf40" id="path59313" style="fill:#858282;fill-opacity:1;stroke:#2b2a2a;stroke-width:5.47472;stroke-opacity:1" sodipodi:nodetypes="ssssscccssss"/><text xml:space="preserve" transform="matrix(1.8482788,0,0,1.8482788,-531.44634,-102.71633)" id="text93854" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect93856);display:inline;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="325" y="284.55479" id="tspan105616">jpt_ec74</tspan></text></g></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-10.708761,-0.9073807)" id="text104317" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:22.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect104319);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="76.048828" y="90.556738" id="tspan105618">Entry Block</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-11.840476,15.290513)" id="text105169" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect105171);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="76.03125" y="183.8165" id="tspan105620">var_4c := </tspan></text><circle style="fill:#fdd418;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="path105251" cx="184.12276" cy="237.85802" r="8.524704" transform="matrix(0.26458333,0,0,0.26458333,-10.651999,-0.75618674)"/></g></g></svg>

<figcaption>Fig 4. Simplified Overview</figcaption>
</figure>
</center>
<p>Since there is no encoding, we can determine the next states of a basic block by looking at the constant
written in the local stack variable <span class="dark-boxed text-white">[<span class="dark-clear-blue">sp</span>, <span class="dark-red">0x50</span>+<span class="dark-orange">var_4c</span>]</span>
or the <span class="dark-boxed dark-blue">state_variable</span> of the BinaryNinja High Level IL representation (<a href="#fig-2">Figure 2</a>).</p>
<p>From a graph recovery perspective, this design <strong>completely fits</strong> in the case of the Quarkslab&rsquo;s blog:
<a href="https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html">recovering an OLLVM-protected program </a>,
thus the original graph could be completely recovered.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #ffefef; color: #8a1919;">
  <span class="fas fa-circle-exclamation" style="color: #8a1919" >&#160;</span>
  I also checked other large control-flow-flattened functions in the binary and they follow the same design with
the same weakness.
</div>
<h3 id="improvements">Improvements</h3>
<div class="admonition hint">
<p><b>Spoiler</b>: <em>This example comes from an on-going larger project: <a href="https://github.com/open-obfuscator">open-obfuscator</a>.</em></p>
</div>
<p>Actually we can enhance the protections of the control-flow flattening by encoding the state variable and by identifying the
basic blocks of the switch table with random numbers (instead of 1, 2, 3 etc).</p>
<p>The following figure outlines this design:</p>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="825" height="400" viewBox="0 0 218.28125 105.83333" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="cfg_flat_overview_new.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/></sodipodi:namedview><defs id="defs2"><rect x="34.999998" y="124.99999" width="74.999996" height="49.999997" id="rect163262"/><marker style="overflow:visible" id="TriangleStart" refX="0" refY="0" orient="auto-start-reverse" markerWidth="2.3239999" markerHeight="2.6867051" viewBox="0 0 5.3244081 6.1553851" preserveAspectRatio="xMidYMid"><path transform="scale(0.5)" style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt" d="M 5.77,0 -2.88,5 V -5 Z" id="path135"/></marker><marker style="overflow:visible" id="Dot" refX="0" refY="0" orient="auto" markerWidth="2.6670001" markerHeight="2.6670001" viewBox="0 0 5.6666667 5.6666667" preserveAspectRatio="xMidYMid"><path transform="scale(0.5)" style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt" d="M 5,0 C 5,2.76 2.76,5 0,5 -2.76,5 -5,2.76 -5,0 c 0,-2.76 2.3,-5 5,-5 2.76,0 5,2.24 5,5 z" id="Dot1" sodipodi:nodetypes="sssss"/></marker><rect x="299.99998" y="234.99999" width="260" height="105" id="rect144728"/><rect x="539.99997" y="119.99999" width="104.99999" height="89.999995" id="rect133017"/><meshgradient id="meshgradient129956" gradientUnits="userSpaceOnUse" x="5.9115825" y="5.9385824"><meshrow id="meshrow129958"><meshpatch id="meshpatch129960"><stop path="c 81.3743,0  162.749,0  244.123,0" style="stop-color:#5c92ea;stop-opacity:1" id="stop129962"/><stop path="c 0,81.3743  0,162.749  0,244.123" style="stop-color:#353333;stop-opacity:1" id="stop129964"/><stop path="c -81.3743,0  -162.749,0  -244.123,0" style="stop-color:#ffffff;stop-opacity:1" id="stop129966"/><stop path="c 0,-81.3743  0,-162.749  0,-244.123" style="stop-color:#353333;stop-opacity:1" id="stop129968"/></meshpatch></meshrow></meshgradient><meshgradient id="meshgradient130409" gradientUnits="userSpaceOnUse" x="5.9031706" y="5.9031706"><meshrow id="meshrow130423"><meshpatch id="meshpatch130425"><stop path="c 81.3979,0  159.194,-41.8262  244.194,0" style="stop-color:#5c92ea;stop-opacity:1" id="stop130427"/><stop path="c 0,81.3979  0,162.796  0,244.194" style="stop-color:#5c92ea;stop-opacity:1" id="stop130429"/><stop path="c -81.3979,0  -162.796,0  -244.194,0" style="stop-color:#fdd418;stop-opacity:1" id="stop130431"/><stop path="c 0,-81.3979  0,-162.796  0,-244.194" style="stop-color:#c364fc;stop-opacity:1" id="stop130433"/></meshpatch></meshrow></meshgradient><rect x="76.048523" y="71.00267" width="178.979" height="109.99996" id="rect104319"/><meshgradient id="meshgradient129956-9" gradientUnits="userSpaceOnUse" x="5.9115825" y="5.9385824"><meshrow id="meshrow129958-8"><meshpatch id="meshpatch129960-9"><stop path="c 81.3743,0  162.749,0  244.123,0" style="stop-color:#5c92ea;stop-opacity:1" id="stop129962-8"/><stop path="c 0,81.3743  0,162.749  0,244.123" style="stop-color:#353333;stop-opacity:1" id="stop129964-3"/><stop path="c -81.3743,0  -162.749,0  -244.123,0" style="stop-color:#ffffff;stop-opacity:1" id="stop129966-8"/><stop path="c 0,-81.3743  0,-162.749  0,-244.123" style="stop-color:#353333;stop-opacity:1" id="stop129968-0"/></meshpatch></meshrow></meshgradient><meshgradient id="meshgradient130409-4" gradientUnits="userSpaceOnUse" x="5.9031706" y="5.9031706"><meshrow id="meshrow130423-1"><meshpatch id="meshpatch130425-5"><stop path="c 81.3979,0  159.194,-41.8262  244.194,0" style="stop-color:#5c92ea;stop-opacity:1" id="stop130427-1"/><stop path="c 0,81.3979  0,162.796  0,244.194" style="stop-color:#5c92ea;stop-opacity:1" id="stop130429-9"/><stop path="c -81.3979,0  -162.796,0  -244.194,0" style="stop-color:#fdd418;stop-opacity:1" id="stop130431-6"/><stop path="c 0,-81.3979  0,-162.796  0,-244.194" style="stop-color:#c364fc;stop-opacity:1" id="stop130433-2"/></meshpatch></meshrow></meshgradient></defs><g id="layer1"><g id="g32984" transform="translate(-1.3411901,-0.03441181)"><rect style="fill:#353333;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect8375" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><g id="g101508" style="display:inline"><path style="fill:#d3d3d3;fill-opacity:1;stroke-width:14.8655" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101504"/><path style="fill:#5c92ea;fill-opacity:1;stroke-width:14.8655" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101129"/></g><rect style="fill:#5c92ea;fill-opacity:1;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect32980" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="fill:#d3d3d3;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect34492" width="75" height="14.999999" x="575" y="99.999992" transform="scale(0.26458333)"/></g><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-opacity:1" id="rect37123" width="245.00002" height="300" x="275" y="50" transform="scale(0.26458333)"/><g id="g136220" style="display:inline;isolation:isolate;stroke-width:1.69711" transform="matrix(0.20787186,0,0,0.20786737,-36.766768,-24.176343)"><g id="g136004" style="stroke-width:1.69711"><path d="m 564,311 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="fill:#727070;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path135944"/><path d="m 564,311 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="fill:none;stroke:#000000;stroke-width:3.39422;stroke-linecap:square;stroke-miterlimit:2" id="path135946"/><path d="m 563.25,310 h 43.5 c 1.794,0 3.25,1.456 3.25,3.25 v 53.5 c 0,1.794 -1.456,3.25 -3.25,3.25 h -43.5 c -1.794,0 -3.25,-1.456 -3.25,-3.25 v -53.5 c 0,-1.794 1.456,-3.25 3.25,-3.25 z" style="fill:#5d5c5c;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path135948"/><g id="g135958" style="stroke-width:1.69711"><g id="g135954" style="stroke-width:1.69711"><line x1="575" y1="360" x2="590" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135950"/><line x1="595" y1="360" x2="606" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135952"/></g><circle vector-effect="non-scaling-stroke" cx="570" cy="360" r="2" fill="#aeaeae" id="circle135956" style="stroke-width:2.40535"/></g><g id="g135970" style="stroke-width:1.69711"><g id="g135966" style="stroke-width:1.69711"><line x1="575" y1="350" x2="580" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135960"/><line x1="584" y1="350" x2="600" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135962"/><line x1="603" y1="350" x2="606" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135964"/></g><circle vector-effect="non-scaling-stroke" cx="570" cy="350" r="2" fill="#aeaeae" id="circle135968" style="stroke-width:2.40535"/></g><g id="g135980" style="stroke-width:1.69711"><g id="g135976" style="stroke-width:1.69711"><line x1="575" y1="340" x2="595" y2="340" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135972"/><line x1="599" y1="340" x2="606" y2="340" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135974"/></g><circle vector-effect="non-scaling-stroke" cx="570" cy="340" r="2" fill="#aeaeae" id="circle135978" style="stroke-width:2.40535"/></g><g id="g135992" style="stroke-width:1.69711"><g id="g135988" style="stroke-width:1.69711"><line x1="575" y1="330" x2="580" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135982"/><line x1="584" y1="330" x2="595.26599" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135984"/><line x1="599" y1="330" x2="606" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135986"/></g><circle vector-effect="non-scaling-stroke" cx="570" cy="330" r="2" fill="#aeaeae" id="circle135990" style="stroke-width:2.40535"/></g><g id="g136002" style="stroke-width:1.69711"><g id="g135998" style="stroke-width:1.69711"><line x1="575" y1="320" x2="582" y2="320" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135994"/><line x1="586" y1="320" x2="606" y2="320" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line135996"/></g><circle vector-effect="non-scaling-stroke" cx="570" cy="320" r="2" fill="#aeaeae" id="circle136000" style="stroke-width:2.40535"/></g></g><g id="g136066" style="stroke-width:1.69711"><path d="m 764,311 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="fill:#727070;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136006"/><path d="m 764,311 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="display:inline;fill:#5b9bb5;fill-opacity:1;stroke:#000000;stroke-width:3.39422;stroke-linecap:square;stroke-miterlimit:2" id="path136008"/><path d="m 763.25,310 h 43.5 c 1.794,0 3.25,1.456 3.25,3.25 v 53.5 c 0,1.794 -1.456,3.25 -3.25,3.25 h -43.5 c -1.794,0 -3.25,-1.456 -3.25,-3.25 v -53.5 c 0,-1.794 1.456,-3.25 3.25,-3.25 z" style="fill:#5d5c5c;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136010"/><g id="g136020" style="stroke-width:1.69711"><g id="g136016" style="stroke-width:1.69711"><line x1="775" y1="360" x2="790" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136012"/><line x1="795" y1="360" x2="806" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136014"/></g><circle vector-effect="non-scaling-stroke" cx="770" cy="360" r="2" fill="#aeaeae" id="circle136018" style="stroke-width:2.40535"/></g><g id="g136032" style="stroke-width:1.69711"><g id="g136028" style="stroke-width:1.69711"><line x1="775" y1="350" x2="780" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136022"/><line x1="784" y1="350" x2="800" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136024"/><line x1="803" y1="350" x2="806" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136026"/></g><circle vector-effect="non-scaling-stroke" cx="770" cy="350" r="2" fill="#aeaeae" id="circle136030" style="stroke-width:2.40535"/></g><g id="g136042" style="stroke-width:1.69711"><g id="g136038" style="stroke-width:1.69711"><line x1="775" y1="340" x2="795" y2="340" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136034"/><line x1="799" y1="340" x2="806" y2="340" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136036"/></g><circle vector-effect="non-scaling-stroke" cx="770" cy="340" r="2" fill="#aeaeae" id="circle136040" style="stroke-width:2.40535"/></g><g id="g136054" style="stroke-width:1.69711"><g id="g136050" style="stroke-width:1.69711"><line x1="775" y1="330" x2="780" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136044"/><line x1="784" y1="330" x2="795.26599" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136046"/><line x1="799" y1="330" x2="806" y2="330" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136048"/></g><circle vector-effect="non-scaling-stroke" cx="770" cy="330" r="2" fill="#aeaeae" id="circle136052" style="stroke-width:2.40535"/></g><g id="g136064" style="stroke-width:1.69711"><g id="g136060" style="stroke-width:1.69711"><line x1="775" y1="320" x2="782" y2="320" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136056"/><line x1="786" y1="320" x2="806" y2="320" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136058"/></g><circle vector-effect="non-scaling-stroke" cx="770" cy="320" r="2" fill="#aeaeae" id="circle136062" style="stroke-width:2.40535"/></g></g><g id="g136128" style="stroke-width:1.69711"><path d="m 664,341 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="fill:#727070;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136068"/><path d="m 664,341 h 44 c 1.656,0 3,1.344 3,3 v 54 c 0,1.656 -1.344,3 -3,3 h -44 c -1.656,0 -3,-1.344 -3,-3 v -54 c 0,-1.656 1.344,-3 3,-3 z" style="fill:none;stroke:#000000;stroke-width:3.39422;stroke-linecap:square;stroke-miterlimit:2" id="path136070"/><path d="m 663.25,340 h 43.5 c 1.794,0 3.25,1.456 3.25,3.25 v 53.5 c 0,1.794 -1.456,3.25 -3.25,3.25 h -43.5 c -1.794,0 -3.25,-1.456 -3.25,-3.25 v -53.5 c 0,-1.794 1.456,-3.25 3.25,-3.25 z" style="fill:#5d5c5c;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136072"/><g id="g136082" style="stroke-width:1.69711"><g id="g136078" style="stroke-width:1.69711"><line x1="675" y1="390" x2="690" y2="390" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136074"/><line x1="695" y1="390" x2="706" y2="390" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136076"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="390" r="2" fill="#aeaeae" id="circle136080" style="stroke-width:2.40535"/></g><g id="g136094" style="stroke-width:1.69711"><g id="g136090" style="stroke-width:1.69711"><line x1="675" y1="380" x2="680" y2="380" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136084"/><line x1="684" y1="380" x2="700" y2="380" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136086"/><line x1="703" y1="380" x2="706" y2="380" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136088"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="380" r="2" fill="#aeaeae" id="circle136092" style="stroke-width:2.40535"/></g><g id="g136104" style="stroke-width:1.69711"><g id="g136100" style="stroke-width:1.69711"><line x1="675" y1="370" x2="695" y2="370" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136096"/><line x1="699" y1="370" x2="706" y2="370" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136098"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="370" r="2" fill="#aeaeae" id="circle136102" style="stroke-width:2.40535"/></g><g id="g136116" style="stroke-width:1.69711"><g id="g136112" style="stroke-width:1.69711"><line x1="675" y1="360" x2="680" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136106"/><line x1="684" y1="360" x2="695.26599" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136108"/><line x1="699" y1="360" x2="706" y2="360" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136110"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="360" r="2" fill="#aeaeae" id="circle136114" style="stroke-width:2.40535"/></g><g id="g136126" style="stroke-width:1.69711"><g id="g136122" style="stroke-width:1.69711"><line x1="675" y1="350" x2="682" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136118"/><line x1="686" y1="350" x2="706" y2="350" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136120"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="350" r="2" fill="#aeaeae" id="circle136124" style="stroke-width:2.40535"/></g></g><g id="g136142" style="stroke-width:1.69711"><path d="m 662.876,291 h 46.248 c 1.035,0 1.876,0.841 1.876,1.876 v 16.248 c 0,1.035 -0.841,1.876 -1.876,1.876 H 662.876 C 661.841,311 661,310.159 661,309.124 v -16.248 c 0,-1.035 0.841,-1.876 1.876,-1.876 z" style="fill:#6dcff6;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136130"/><path d="m 661.876,290 h 46.248 c 1.035,0 1.876,0.841 1.876,1.876 v 16.248 c 0,1.035 -0.841,1.876 -1.876,1.876 H 661.876 C 660.841,310 660,309.159 660,308.124 v -16.248 c 0,-1.035 0.841,-1.876 1.876,-1.876 z" style="fill:#5d5c5c;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136132"/><g id="g136140" style="stroke-width:1.69711"><g id="g136136" style="stroke-width:1.69711"><line x1="675" y1="300" x2="706" y2="300" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136134"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="300" r="2" fill="#aeaeae" id="circle136138" style="stroke-width:2.40535"/></g></g><g id="g136202" style="stroke-width:1.69711"><path d="m 664.51,211 h 42.98 c 1.937,0 3.51,1.573 3.51,3.51 v 62.98 c 0,1.937 -1.573,3.51 -3.51,3.51 h -42.98 c -1.937,0 -3.51,-1.573 -3.51,-3.51 v -62.98 c 0,-1.937 1.573,-3.51 3.51,-3.51 z" style="fill:#6dcff6;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136144"/><path d="m 663.51,210 h 42.98 c 1.937,0 3.51,1.573 3.51,3.51 v 62.98 c 0,1.937 -1.573,3.51 -3.51,3.51 h -42.98 c -1.937,0 -3.51,-1.573 -3.51,-3.51 v -62.98 c 0,-1.937 1.573,-3.51 3.51,-3.51 z" style="fill:#5d5c5c;stroke:none;stroke-width:1.69711;stroke-miterlimit:10" id="path136146"/><g id="g136154" style="stroke-width:1.69711"><g id="g136150" style="stroke-width:1.69711"><line x1="675" y1="270" x2="706.21899" y2="270" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136148"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="270" r="2" fill="#aeaeae" id="circle136152" style="stroke-width:2.40535"/></g><g id="g136164" style="stroke-width:1.69711"><g id="g136160" style="stroke-width:1.69711"><line x1="675" y1="260" x2="690" y2="260" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136156"/><line x1="695" y1="260" x2="706" y2="260" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136158"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="260" r="2" fill="#aeaeae" id="circle136162" style="stroke-width:2.40535"/></g><g id="g136174" style="stroke-width:1.69711"><g id="g136170" style="stroke-width:1.69711"><line x1="675" y1="250" x2="680" y2="250" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136166"/><line x1="684" y1="250" x2="705" y2="250" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136168"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="250" r="2" fill="#aeaeae" id="circle136172" style="stroke-width:2.40535"/></g><g id="g136184" style="stroke-width:1.69711"><g id="g136180" style="stroke-width:1.69711"><line x1="675" y1="240" x2="695" y2="240" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#003f74" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136176"/><line x1="699" y1="240" x2="706" y2="240" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136178"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="240" r="2" fill="#aeaeae" id="circle136182" style="stroke-width:2.40535"/></g><g id="g136192" style="stroke-width:1.69711"><g id="g136188" style="stroke-width:1.69711"><line x1="675" y1="230" x2="706.03101" y2="230" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136186"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="230" r="2" fill="#aeaeae" id="circle136190" style="stroke-width:2.40535"/></g><g id="g136200" style="stroke-width:1.69711"><g id="g136196" style="stroke-width:1.69711"><line x1="675" y1="220" x2="706" y2="220" vector-effect="non-scaling-stroke" stroke-width="3.39422" stroke="#a90911" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136194"/></g><circle vector-effect="non-scaling-stroke" cx="670" cy="220" r="2" fill="#aeaeae" id="circle136198" style="stroke-width:2.40535"/></g></g><line x1="685.5" y1="282" x2="685.5" y2="288" vector-effect="non-scaling-stroke" stroke-width="1.69711" stroke="#aeaeae" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136204"/><path d="m 684.5,288.125 c 0,-0.552 0.448,-1 1,-1 0.552,0 1,0.448 1,1 0,0.552 -0.448,1 -1,1 -0.552,0 -1,-0.448 -1,-1 z" fill="#aeaeae" stroke="none" id="path136206" style="stroke-width:2.40535"/><line x1="685.5" y1="312" x2="685.5" y2="338" vector-effect="non-scaling-stroke" stroke-width="1.69711" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="line136208"/><path d="m 684.5,338.125 c 0,-0.552 0.448,-1 1,-1 0.552,0 1,0.448 1,1 0,0.552 -0.448,1 -1,1 -0.552,0 -1,-0.448 -1,-1 z" fill="#6dcff6" stroke="none" id="path136210" style="stroke-width:2.40535"/><path d="m 712,300 h 73 v 8" fill="none" vector-effect="non-scaling-stroke" stroke-width="1.69711" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="path136212"/><path d="m 784,308.125 c 0,-0.552 0.448,-1 1,-1 0.552,0 1,0.448 1,1 0,0.552 -0.448,1 -1,1 -0.552,0 -1,-0.448 -1,-1 z" fill="#6dcff6" stroke="none" id="path136214" style="stroke-width:2.40535"/><path d="m 659,300 h -75 v 8" fill="none" vector-effect="non-scaling-stroke" stroke-width="1.69711" stroke="#6dcff6" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3" id="path136216"/><path d="m 583,308.125 c 0,-0.552 0.448,-1 1,-1 0.552,0 1,0.448 1,1 0,0.552 -0.448,1 -1,1 -0.552,0 -1,-0.448 -1,-1 z" fill="#6dcff6" stroke="none" id="path136218" style="stroke-width:2.40535"/></g><g id="g40144" transform="translate(-1.3411901,31.036863)"><rect style="fill:#353333;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40138" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><g id="g101508-2" style="display:inline"><path style="fill:#ff8639;fill-opacity:1;stroke-width:14.8655" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101504-2"/><path style="fill:#fdd418;fill-opacity:1;stroke-width:14.8655" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101129-0"/></g><rect style="fill:#fdd418;fill-opacity:1;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40140" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="fill:#ff8639;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40142" width="75" height="14.999999" x="575" y="99.999992" transform="scale(0.26458333)"/></g><g id="g40152" transform="translate(-1.3411901,62.108138)"><rect style="fill:#353333;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40146" width="75.000023" height="50" x="525" y="50" transform="matrix(0.26458333,0,0,0.26458333,13.229161,-7.5e-7)"/><g id="g101508-2-5" style="display:inline"><path style="fill:#00b8d4;fill-opacity:0.98039216;stroke-width:14.8655" d="M 22,11 A 2.0023,2.0023 0 0 1 20,9 V 6 A 3.0033,3.0033 0 0 0 17,3 h -2 a 1,1 0 0 0 0,2 h 2 a 1.0009,1.0009 0 0 1 1,1 V 9 A 3.99,3.99 0 0 0 19.3574,12 3.99,3.99 0 0 0 18,15 v 3 a 1.0009,1.0009 0 0 1 -1,1 h -2 a 1,1 0 0 0 0,2 h 2 a 3.0033,3.0033 0 0 0 3,-3 v -3 a 2.0023,2.0023 0 0 1 2,-2 1,1 0 0 0 0,-2 z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101504-2-5"/><path style="fill:#c364fc;fill-opacity:1;stroke-width:14.8655" d="M 1,12 A 1,1 0 0 1 2,11 2.0023,2.0023 0 0 0 4,9 V 6 A 3.0033,3.0033 0 0 1 7,3 H 9 A 1,1 0 0 1 9,5 H 7 A 1.0009,1.0009 0 0 0 6,6 V 9 A 3.99,3.99 0 0 1 4.6426,12 3.99,3.99 0 0 1 6,15 v 3 a 1.0009,1.0009 0 0 0 1,1 h 2 a 1,1 0 0 1 0,2 H 7 A 3.0033,3.0033 0 0 1 4,18 V 15 A 2.0023,2.0023 0 0 0 2,13 1,1 0 0 1 1,12 Z" transform="matrix(0.37970023,0,0,0.37970023,157.50088,15.287346)" id="path101129-0-2"/></g><rect style="fill:#c364fc;fill-opacity:1;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40148" width="20.000021" height="49.999992" x="555" y="50" transform="scale(0.26458333)"/><rect style="fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2" id="rect40150" width="75" height="14.999999" x="575" y="99.999992" transform="scale(0.26458333)"/></g><g id="g48230" transform="matrix(0.09812392,0,0,0.09812392,183.01035,40.356805)" style="stroke-width:5.39287"><g id="g48048" style="display:inline;stroke-width:5.39287"><g id="g48046" style="fill:#353333;fill-opacity:1;stroke:url(#meshgradient129956);stroke-width:5.39284;stroke-dasharray:none;stroke-opacity:1"><circle cx="128" cy="128" fill="#382b73" transform="matrix(0.707,-0.707,0.707,0.707,-53.019,128)" id="ellipse48044" r="119.4" style="fill:#353333;fill-opacity:1;stroke:url(#meshgradient130409);stroke-width:5.39366;stroke-dasharray:none;stroke-opacity:1"/></g></g><g id="g48078" style="stroke-width:5.39287"><g id="g48052" style="stroke-width:5.39287"><path d="m 183.399,185.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 98.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 76.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z M 69.425,207.855 H 52.13 v -17.294 h 17.295 z m 0,-22.294 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.294 h 17.295 z m 0,-22.294 H 52.13 V 79.087 H 69.425 Z M 91.72,207.855 H 74.425 V 190.561 H 91.72 Z m 0,-22.294 H 74.425 V 168.266 H 91.72 Z m 0,-22.295 H 74.425 V 145.971 H 91.72 Z m 0,-22.295 H 74.425 V 123.676 H 91.72 Z m 0,-22.295 H 74.425 V 101.382 H 91.72 Z m 22.295,89.179 H 96.72 v -17.294 h 17.295 z m 0,-22.294 H 96.72 v -17.295 h 17.295 z m 0,-22.295 H 96.72 v -17.295 h 17.295 z m 0,-22.295 H 96.72 v -17.295 h 17.295 z m 22.295,66.884 h -17.295 v -17.294 h 17.295 z m 0,-22.294 h -17.295 v -17.295 h 17.295 z m 0,-22.295 h -17.295 v -17.295 h 17.295 z m 22.294,44.589 H 141.31 v -17.294 h 17.295 v 17.294 z m 0,-22.294 H 141.31 v -17.295 h 17.295 v 17.295 z m 22.295,22.294 h -17.294 v -17.294 h 17.294 z" fill="#291b4a" id="path48050" style="stroke-width:62.7565"/></g><g id="g48056" style="stroke-width:5.39287"><path d="M 165.22,114.561 H 145.425 V 94.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -24.795,0 H 123.131 V 97.266 h 17.294 z m 22.295,22.294 H 145.425 V 119.56 h 17.295 z" fill="#291b4a" id="path48054" style="stroke-width:62.7565"/></g><g id="g48060" style="stroke-width:5.39287"><path d="m 143.097,47.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.302 V 52.848 h 17.295 z" fill="#291b4a" id="path48058" style="stroke-width:62.7565"/></g><g id="g48064" style="stroke-width:5.39287"><path d="M 98.507,47.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 78.712 V 52.848 h 17.295 z" fill="#291b4a" id="path48062" style="stroke-width:62.7565"/></g><g id="g48068" style="stroke-width:5.39287"><path d="m 209.81,114.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.294 H 190.016 V 119.56 h 17.294 z" fill="#291b4a" id="path48066" style="stroke-width:62.7565"/></g><g id="g48072" style="stroke-width:5.39287"><path d="m 209.81,159.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 161.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 164.15 h 17.294 z" fill="#291b4a" id="path48070" style="stroke-width:62.7565"/></g><g id="g48076" style="stroke-width:5.39287"><path d="M 209.81,69.971 H 190.187 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.624 v 19.623 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 72.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -24.623,0.172 H 167.892 V 52.848 h 17.295 z M 207.31,92.266 H 190.016 V 74.971 h 17.294 z" fill="#291b4a" id="path48074" style="stroke-width:62.7565"/></g></g><g id="g48228" style="stroke-width:5.39287"><g id="g48082" style="stroke-width:5.39287"><path d="M 71.925,181.561 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 52.13 v -17.294 h 17.295 z" fill="#f9b087" id="path48080" style="stroke-width:62.7565"/></g><g id="g48086" style="stroke-width:5.39287"><path d="M 116.515,181.561 H 94.22 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 96.72 v -17.294 h 17.295 z" fill="#f9b087" id="path48084" style="stroke-width:62.7565"/></g><g id="g48090" style="stroke-width:5.39287"><path d="M 161.104,181.561 H 138.81 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c -10e-4,-1.381 -1.12,-2.5 -2.501,-2.5 z m -2.5,22.294 H 141.31 v -17.294 h 17.295 v 17.294 z" fill="#f9b087" id="path48088" style="stroke-width:62.7565"/></g><g id="g48094" style="stroke-width:5.39287"><path d="M 94.22,159.266 H 71.925 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 H 94.22 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 74.425 V 164.266 H 91.72 Z" fill="#f9b087" id="path48092" style="stroke-width:62.7565"/></g><g id="g48098" style="stroke-width:5.39287"><path d="m 138.81,159.266 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 h -17.295 v -17.295 h 17.295 z" fill="#f9b087" id="path48096" style="stroke-width:62.7565"/></g><g id="g48102" style="stroke-width:5.39287"><path d="M 71.925,136.971 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 52.13 v -17.295 h 17.295 z" fill="#f9b087" id="path48100" style="stroke-width:62.7565"/></g><g id="g48106" style="stroke-width:5.39287"><path d="M 116.515,136.971 H 94.22 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 96.72 v -17.295 h 17.295 z" fill="#f9b087" id="path48104" style="stroke-width:62.7565"/></g><g id="g48110" style="stroke-width:5.39287"><path d="M 94.22,114.676 H 71.925 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 H 94.22 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 74.425 V 119.676 H 91.72 Z" fill="#f9b087" id="path48108" style="stroke-width:62.7565"/></g><g id="g48114" style="stroke-width:5.39287"><path d="M 71.925,92.382 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 52.13 V 97.382 h 17.295 z" fill="#f9b087" id="path48112" style="stroke-width:62.7565"/></g><g fill="#ff8639" id="g48140" style="stroke-width:62.7565"><path d="M 69.425,95.882 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 97.382 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 52.13 V 97.382 h 17.295 z" id="path48116" style="stroke-width:5.39287"/><path d="M 161.104,181.561 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 17.295 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 17.295 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 186.561 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -19.794 h 17.295 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c -10e-4,-1.381 -1.12,-2.5 -2.501,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 H 138.81 c -0.551,0 -1,-0.448 -1,-1 v -19.794 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 19.794 c 0,0.552 -0.449,1 -1,1 H 94.22 c -0.551,0 -1,-0.448 -1,-1 v -19.794 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 19.794 c 0,0.552 -0.449,1 -1,1 H 49.63 c -0.551,0 -1,-0.448 -1,-1 v -22.294 c 0,-0.552 0.449,-1 1,-1 h 19.795 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 49.63 c -0.551,0 -1,-0.448 -1,-1 v -22.295 c 0,-0.552 0.449,-1 1,-1 h 19.795 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 49.63 c -0.551,0 -1,-0.448 -1,-1 V 94.882 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 v 19.794 c 0,0.828 0.672,1.5 1.5,1.5 H 94.22 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 22.294 z" id="path48118" style="stroke-width:5.39287"/><path d="M 69.425,140.471 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 52.13 v -17.295 h 17.295 z" id="path48120" style="stroke-width:5.39287"/><path d="M 69.425,185.061 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.828 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 52.13 v -17.294 h 17.295 z" id="path48122" style="stroke-width:5.39287"/><path d="M 114.015,162.766 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 96.72 v -17.295 h 17.295 z" id="path48124" style="stroke-width:5.39287"/><path d="M 114.015,185.061 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.794 H 96.72 v -17.294 h 17.295 z" id="path48126" style="stroke-width:5.39287"/><path d="M 114.015,140.471 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 96.72 v -17.295 h 17.295 z" id="path48128" style="stroke-width:5.39287"/><path d="M 91.72,140.471 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 141.971 H 91.72 Z" id="path48130" style="stroke-width:5.39287"/><path d="M 91.72,118.176 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 119.676 H 91.72 Z" id="path48132" style="stroke-width:5.39287"/><path d="M 91.72,162.766 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 164.266 H 91.72 Z" id="path48134" style="stroke-width:5.39287"/><path d="m 136.31,162.766 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 h -17.295 v -17.295 h 17.295 z" id="path48136" style="stroke-width:5.39287"/><path d="M 158.604,185.061 H 141.31 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c -10e-4,-0.828 -0.672,-1.5 -1.501,-1.5 z m 0,18.794 H 141.31 v -17.294 h 17.295 v 17.294 z" id="path48138" style="stroke-width:5.39287"/></g><g id="g48144" style="stroke-width:5.39287"><path d="m 183.399,181.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 72.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z m -2.5,22.294 H 52.13 V 75.087 h 17.295 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 z" fill="#d3d3d3" id="path48142" style="stroke-width:62.7565"/></g><g id="g48152" style="stroke-width:5.39287"><g fill="#ebe7f2" id="g48150" style="stroke-width:62.7565"><path d="m 183.399,181.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 72.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z m 1,24.794 c 0,0.551 -0.449,1 -1,1 H 49.63 c -0.551,0 -1,-0.449 -1,-1 V 72.587 c 0,-0.551 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.449 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 H 94.22 c 0.551,0 1,0.448 1,1 v 19.794 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.449 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.794 c 0.551,0 1,0.449 1,1 z" id="path48146" style="stroke-width:5.39287"/><path d="m 180.899,185.061 h -19.794 c -0.551,0 -1,-0.448 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 138.81 c -0.551,0 -1,-0.449 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.795 c -0.551,0 -1,-0.448 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 94.22 c -0.551,0 -1,-0.448 -1,-1 V 97.382 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 71.925 c -0.551,0 -1,-0.448 -1,-1 V 75.087 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 128.769 c 0,0.828 0.672,1.5 1.5,1.5 h 128.769 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.829 -0.672,-1.501 -1.5,-1.501 z m 0,18.794 H 52.13 V 75.087 h 17.295 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 z" id="path48148" style="stroke-width:5.39287"/></g></g><g id="g48156" style="stroke-width:5.39287"><path d="m 142.925,88.266 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 90.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.131 V 93.266 h 17.294 z" fill="#65c1d6" id="path48154" style="stroke-width:62.7565"/></g><g id="g48160" style="stroke-width:5.39287"><path d="m 143.097,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.302 V 48.848 h 17.295 z" fill="#65c1d6" id="path48158" style="stroke-width:62.7565"/></g><g id="g48164" style="stroke-width:5.39287"><path d="M 98.507,43.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 78.712 V 48.848 h 17.295 z" fill="#65c1d6" id="path48162" style="stroke-width:62.7565"/></g><g id="g48168" style="stroke-width:5.39287"><path d="m 165.22,110.561 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 145.425 V 115.56 h 17.295 z" fill="#65c1d6" id="path48166" style="stroke-width:62.7565"/></g><g id="g48172" style="stroke-width:5.39287"><path d="m 209.81,110.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.294 H 190.016 V 115.56 h 17.294 z" fill="#65c1d6" id="path48170" style="stroke-width:62.7565"/></g><g id="g48176" style="stroke-width:5.39287"><path d="m 209.81,155.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 157.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 160.15 h 17.294 z" fill="#65c1d6" id="path48174" style="stroke-width:62.7565"/></g><g id="g48180" style="stroke-width:5.39287"><path d="m 187.687,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 167.892 V 48.848 h 17.295 z" fill="#65c1d6" id="path48178" style="stroke-width:62.7565"/></g><g id="g48184" style="stroke-width:5.39287"><path d="m 209.81,65.971 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 68.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 70.971 h 17.294 z" fill="#65c1d6" id="path48182" style="stroke-width:62.7565"/></g><g fill="#149cb2" id="g48226" style="fill:#149cb2;fill-opacity:1;stroke-width:62.7565"><g id="g48190" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="m 143.097,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.295 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 z" id="path48186" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="m 140.597,47.348 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 123.302 V 48.848 h 17.295 z" id="path48188" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g><g id="g48196" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="M 98.507,43.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 H 76.212 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 z" id="path48192" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="M 96.007,47.348 H 78.712 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 78.712 V 48.848 h 17.295 z" id="path48194" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g><g id="g48204" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="m 140.425,91.766 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 93.266 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 123.131 V 93.266 h 17.294 z" id="path48198" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="M 165.22,110.561 H 145.425 V 90.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 h -22.295 c -0.551,0 -1,-0.448 -1,-1 V 115.56 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.794 c -0.551,0 -1,-0.448 -1,-1 V 90.766 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 z" id="path48200" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="m 162.72,114.061 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 145.425 V 115.56 h 17.295 z" id="path48202" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g><g id="g48210" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="m 207.31,114.061 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.794 H 190.016 V 115.56 h 17.294 z" id="path48206" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="m 209.81,110.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 113.06 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 z" id="path48208" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g><g id="g48216" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="m 207.31,158.65 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 160.15 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 190.016 V 160.15 h 17.294 z" id="path48212" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="m 209.81,155.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 157.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 157.65 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 z" id="path48214" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g><g id="g48224" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"><path d="m 185.187,47.348 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 167.892 V 48.848 h 17.295 z" id="path48218" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="m 207.31,69.471 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 70.971 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 190.016 V 70.971 h 17.294 z" id="path48220" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/><path d="M 209.81,65.971 H 190.187 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.624 v 19.623 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 68.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 71.143 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.624 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 v 19.623 c 0,0.828 0.672,1.5 1.5,1.5 h 19.623 c 0.551,0 1,0.448 1,1 z" id="path48222" style="fill:#149cb2;fill-opacity:1;stroke-width:5.39287"/></g></g></g></g><g id="Array" transform="matrix(0.68332411,0,0,0.68332411,37.156478,35.059357)" style="stroke-width:4.13014"><path d="M 29.99,4.42 24,1 18.01,4.42 24,7.85 Z" id="path50702" style="stroke-width:4.13014;fill:#5c92ea;fill-opacity:1"/><path d="m 21,15.29 2,1.14 V 9.58 L 17,6.16 v 4.4 l 4,2.28 z" id="path50704" style="stroke-width:4.13014;fill:#6f9fed;fill-opacity:1"/><path d="m 25,16.43 2,-1.14 v -2.45 l 4,-2.28 v -4.4 l -6,3.42 z" id="path50706" style="stroke-width:4.13014;fill:#3679e5;fill-opacity:1"/><path d="M 17.99,13.42 12,10 6.01,13.42 12,16.85 Z" id="path50708" style="stroke-width:4.13014;fill:#c364fc;fill-opacity:1"/><path d="M 11,18.58 5,15.16 V 22 l 6,3.43 z" id="path50710" style="stroke-width:4.13014;fill:#cd7efc;fill-opacity:1"/><path d="m 19,15.16 -6,3.42 v 6.85 l 2,-1.14 v -3.45 l 4,-2.28 z" id="path50712" style="stroke-width:4.13014;fill:#b540fb;fill-opacity:1"/><path d="M 15,26.59 12,28.3 7.36,25.65 6.01,26.42 12,29.85 15,28.13 Z" id="path50714" style="stroke-width:4.13014;fill:#214478;fill-opacity:1"/><path d="m 5,35 6,3.43 V 31.58 L 5,28.16 Z" id="path50716" style="stroke-width:4.13014;fill:#2c5a9f;fill-opacity:1"/><path d="m 15,31.16 v -0.72 l -2,1.14 v 6.85 l 2,-1.14 v -3.45 l 2.35,-1.34 z" id="path50718" style="stroke-width:4.13014;fill:#162d50;fill-opacity:1"/><path d="M 29.99,21.42 24,18 18.01,21.42 24,24.85 Z" id="path50720" style="stroke-width:4.13014;fill:#37abc8"/><path d="M 23,26.58 17,23.16 V 30 l 6,3.43 z" id="path50722" style="stroke-width:4.13014;fill:#63bed4;fill-opacity:1"/><path d="m 31,23.16 -6,3.42 v 6.85 L 31,30 Z" id="path50724" style="stroke-width:4.13014;fill:#37abc8;fill-opacity:1"/><path d="M 29.99,34.42 29,33.85 28.64,33.65 24,36.3 19.36,33.65 19,33.85 l -0.99,0.57 0.99,0.57 5,2.86 5,-2.86 z" id="path50726" style="stroke-width:4.13014;fill:#800066;fill-opacity:1"/><path d="m 17,43 6,3.43 v -6.85 l -6,-3.42 z" id="path50728" style="stroke-width:4.13014;fill:#ad008a;fill-opacity:1"/><path d="M 25,46.43 31,43 v -6.84 l -6,3.42 z" id="path50730" style="stroke-width:4.13014;fill:#590047;fill-opacity:1"/><path d="M 36,16.85 41.99,13.42 36,10 30.01,13.42 Z" id="path50732" style="stroke-width:4.13014;fill:#fdd418;fill-opacity:1"/><path d="m 35,25.43 v -6.85 l -6,-3.42 v 3.4 l 4,2.28 v 3.45 z" id="path50734" style="stroke-width:4.13014;fill:#fdd933;fill-opacity:1"/><path d="m 37,18.58 v 6.85 L 43,22 v -6.84 z" id="path50736" style="stroke-width:4.13014;fill:#e2ba02;fill-opacity:1"/><path d="M 40.64,25.65 36,28.3 33,26.59 v 1.54 l 3,1.72 5.99,-3.43 z" id="path50738" style="stroke-width:4.13014;fill:#00bf99;fill-opacity:1"/><path d="M 33,31.16 30.65,32.5 33,33.84 v 3.45 l 2,1.14 v -6.85 l -2,-1.14 z" id="path50740" style="stroke-width:4.13014;fill:#00ddb1;fill-opacity:1"/><path d="M 37,38.43 43,35 v -6.84 l -6,3.42 z" id="path50742" style="stroke-width:4.13014;fill:#00aa88;fill-opacity:1"/></g><path style="fill:none;fill-opacity:1;stroke:#d3d3d3;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 649.99997,74.999996 h 89.99999 l 0,74.235704" id="path131173" transform="scale(0.26458333)" sodipodi:nodetypes="ccc"/><path style="fill:none;fill-opacity:1;stroke:#ff8639;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 649.99997,199.99999 h 40" id="path131229" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#00b8d4;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:0.98039216" d="m 649.99997,314.99998 h 89.99999 v -64.99999" id="path131231" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 789.99996,189.99999 h 15 V 29.999998 H 199.99999 v 94.999992" id="path131541" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 789.99996,199.99999 h 25 V 19.999999 l -624.99997,0 0,104.999991" id="path131543" transform="scale(0.26458333)" sodipodi:nodetypes="ccccc"/><path style="display:inline;fill:none;fill-opacity:1;stroke:#00b8d4;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:0.980392" d="m 789.99996,209.99999 h 15 V 374.99998 H 199.99999 V 259.99999" id="path131545" transform="scale(0.26458333)"/><path style="display:none;fill:none;stroke:#ea645c;stroke-width:5.39366" d="M 28.17762,27.844689 C 53.75376,2.3530377 89.036546,-13.405777 128,-13.405777 c 39.57951,0 75.36104,16.2610798 101.02823,42.466888" transform="matrix(0.06937361,-0.06937361,0.06937361,0.06937361,177.80792,52.916667)" id="path133127"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-8.8712915,3.4878636)" id="text144726" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;direction:ltr;white-space:pre;shape-inside:url(#rect144728);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="59.859188" y="0"><tspan x="314.32617" y="252.2542" id="tspan166599">Computation of the next </tspan><tspan x="323.64746" y="277.2542" id="tspan166601">state without a lookup </tspan><tspan x="405.38086" y="302.2542" id="tspan166603">table</tspan></text><path style="fill:none;fill-opacity:1;stroke:#5c92ea;stroke-width:2.00000003;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#Dot);marker-end:url(#TriangleStart)" d="m 519.99997,74.999996 h 25" id="path145611" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#Dot);marker-end:url(#TriangleStart)" d="m 519.99997,74.999996 h 25" id="path145955" transform="matrix(0.26458333,0,0,0.26458333,2.7374997e-6,31.749999)"/><path style="fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#Dot);marker-end:url(#TriangleStart)" d="m 519.99997,74.999996 h 25" id="path145977" transform="matrix(0.26458333,0,0,0.26458333,2.7374958e-6,62.177081)"/><g id="g163140"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect146355" width="99.999992" height="300" x="24.999998" y="49.999996" transform="scale(0.26458333)"/><g id="g48230-5" transform="matrix(0.05148792,0,0,0.05148792,13.254685,58.630087)" style="stroke-width:10.2775"><g id="g48048-4" style="display:inline;stroke-width:10.2775"><g id="g48046-4" style="fill:#353333;fill-opacity:1;stroke:url(#meshgradient129956-9);stroke-width:10.2775;stroke-dasharray:none;stroke-opacity:1"><circle cx="128" cy="128" fill="#382b73" transform="matrix(0.707,-0.707,0.707,0.707,-53.019,128)" id="ellipse48044-9" r="119.4" style="fill:#353333;fill-opacity:1;stroke:url(#meshgradient130409-4);stroke-width:10.2791;stroke-dasharray:none;stroke-opacity:1"/></g></g><g id="g48078-9" style="stroke-width:10.2775"><g id="g48052-3" style="stroke-width:10.2775"><path d="m 183.399,185.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 98.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 76.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z M 69.425,207.855 H 52.13 v -17.294 h 17.295 z m 0,-22.294 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.295 h 17.295 z m 0,-22.295 H 52.13 v -17.294 h 17.295 z m 0,-22.294 H 52.13 V 79.087 H 69.425 Z M 91.72,207.855 H 74.425 V 190.561 H 91.72 Z m 0,-22.294 H 74.425 V 168.266 H 91.72 Z m 0,-22.295 H 74.425 V 145.971 H 91.72 Z m 0,-22.295 H 74.425 V 123.676 H 91.72 Z m 0,-22.295 H 74.425 V 101.382 H 91.72 Z m 22.295,89.179 H 96.72 v -17.294 h 17.295 z m 0,-22.294 H 96.72 v -17.295 h 17.295 z m 0,-22.295 H 96.72 v -17.295 h 17.295 z m 0,-22.295 H 96.72 v -17.295 h 17.295 z m 22.295,66.884 h -17.295 v -17.294 h 17.295 z m 0,-22.294 h -17.295 v -17.295 h 17.295 z m 0,-22.295 h -17.295 v -17.295 h 17.295 z m 22.294,44.589 H 141.31 v -17.294 h 17.295 v 17.294 z m 0,-22.294 H 141.31 v -17.295 h 17.295 v 17.295 z m 22.295,22.294 h -17.294 v -17.294 h 17.294 z" fill="#291b4a" id="path48050-6" style="stroke-width:119.599"/></g><g id="g48056-0" style="stroke-width:10.2775"><path d="M 165.22,114.561 H 145.425 V 94.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -24.795,0 H 123.131 V 97.266 h 17.294 z m 22.295,22.294 H 145.425 V 119.56 h 17.295 z" fill="#291b4a" id="path48054-5" style="stroke-width:119.599"/></g><g id="g48060-0" style="stroke-width:10.2775"><path d="m 143.097,47.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.302 V 52.848 h 17.295 z" fill="#291b4a" id="path48058-2" style="stroke-width:119.599"/></g><g id="g48064-9" style="stroke-width:10.2775"><path d="M 98.507,47.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 78.712 V 52.848 h 17.295 z" fill="#291b4a" id="path48062-4" style="stroke-width:119.599"/></g><g id="g48068-3" style="stroke-width:10.2775"><path d="m 209.81,114.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.294 H 190.016 V 119.56 h 17.294 z" fill="#291b4a" id="path48066-5" style="stroke-width:119.599"/></g><g id="g48072-1" style="stroke-width:10.2775"><path d="m 209.81,159.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 161.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 164.15 h 17.294 z" fill="#291b4a" id="path48070-7" style="stroke-width:119.599"/></g><g id="g48076-4" style="stroke-width:10.2775"><path d="M 209.81,69.971 H 190.187 V 50.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.624 v 19.623 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 72.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -24.623,0.172 H 167.892 V 52.848 h 17.295 z M 207.31,92.266 H 190.016 V 74.971 h 17.294 z" fill="#291b4a" id="path48074-3" style="stroke-width:119.599"/></g></g><g id="g48228-1" style="stroke-width:10.2775"><g id="g48082-4" style="stroke-width:10.2775"><path d="M 71.925,181.561 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 52.13 v -17.294 h 17.295 z" fill="#f9b087" id="path48080-6" style="stroke-width:119.599"/></g><g id="g48086-9" style="stroke-width:10.2775"><path d="M 116.515,181.561 H 94.22 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 96.72 v -17.294 h 17.295 z" fill="#f9b087" id="path48084-4" style="stroke-width:119.599"/></g><g id="g48090-2" style="stroke-width:10.2775"><path d="M 161.104,181.561 H 138.81 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c -10e-4,-1.381 -1.12,-2.5 -2.501,-2.5 z m -2.5,22.294 H 141.31 v -17.294 h 17.295 v 17.294 z" fill="#f9b087" id="path48088-2" style="stroke-width:119.599"/></g><g id="g48094-6" style="stroke-width:10.2775"><path d="M 94.22,159.266 H 71.925 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 H 94.22 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 74.425 V 164.266 H 91.72 Z" fill="#f9b087" id="path48092-4" style="stroke-width:119.599"/></g><g id="g48098-1" style="stroke-width:10.2775"><path d="m 138.81,159.266 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 h -17.295 v -17.295 h 17.295 z" fill="#f9b087" id="path48096-2" style="stroke-width:119.599"/></g><g id="g48102-8" style="stroke-width:10.2775"><path d="M 71.925,136.971 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 52.13 v -17.295 h 17.295 z" fill="#f9b087" id="path48100-8" style="stroke-width:119.599"/></g><g id="g48106-9" style="stroke-width:10.2775"><path d="M 116.515,136.971 H 94.22 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 96.72 v -17.295 h 17.295 z" fill="#f9b087" id="path48104-2" style="stroke-width:119.599"/></g><g id="g48110-8" style="stroke-width:10.2775"><path d="M 94.22,114.676 H 71.925 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 H 94.22 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 74.425 V 119.676 H 91.72 Z" fill="#f9b087" id="path48108-8" style="stroke-width:119.599"/></g><g id="g48114-8" style="stroke-width:10.2775"><path d="M 71.925,92.382 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 52.13 V 97.382 h 17.295 z" fill="#f9b087" id="path48112-6" style="stroke-width:119.599"/></g><g fill="#ff8639" id="g48140-8" style="stroke-width:119.599"><path d="M 69.425,95.882 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 97.382 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 52.13 V 97.382 h 17.295 z" id="path48116-3" style="stroke-width:10.2775"/><path d="M 161.104,181.561 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 17.295 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 17.295 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.294 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 186.561 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -19.794 h 17.295 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c -10e-4,-1.381 -1.12,-2.5 -2.501,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 H 138.81 c -0.551,0 -1,-0.448 -1,-1 v -19.794 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 19.794 c 0,0.552 -0.449,1 -1,1 H 94.22 c -0.551,0 -1,-0.448 -1,-1 v -19.794 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 19.794 c 0,0.552 -0.449,1 -1,1 H 49.63 c -0.551,0 -1,-0.448 -1,-1 v -22.294 c 0,-0.552 0.449,-1 1,-1 h 19.795 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 49.63 c -0.551,0 -1,-0.448 -1,-1 v -22.295 c 0,-0.552 0.449,-1 1,-1 h 19.795 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 49.63 c -0.551,0 -1,-0.448 -1,-1 V 94.882 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 v 19.794 c 0,0.828 0.672,1.5 1.5,1.5 H 94.22 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 22.294 z" id="path48118-8" style="stroke-width:10.2775"/><path d="M 69.425,140.471 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 52.13 v -17.295 h 17.295 z" id="path48120-3" style="stroke-width:10.2775"/><path d="M 69.425,185.061 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.828 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 52.13 v -17.294 h 17.295 z" id="path48122-3" style="stroke-width:10.2775"/><path d="M 114.015,162.766 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 96.72 v -17.295 h 17.295 z" id="path48124-3" style="stroke-width:10.2775"/><path d="M 114.015,185.061 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.794 H 96.72 v -17.294 h 17.295 z" id="path48126-8" style="stroke-width:10.2775"/><path d="M 114.015,140.471 H 96.72 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 96.72 v -17.295 h 17.295 z" id="path48128-0" style="stroke-width:10.2775"/><path d="M 91.72,140.471 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 141.971 H 91.72 Z" id="path48130-4" style="stroke-width:10.2775"/><path d="M 91.72,118.176 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 119.676 H 91.72 Z" id="path48132-7" style="stroke-width:10.2775"/><path d="M 91.72,162.766 H 74.425 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 H 91.72 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 74.425 V 164.266 H 91.72 Z" id="path48134-6" style="stroke-width:10.2775"/><path d="m 136.31,162.766 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 h -17.295 v -17.295 h 17.295 z" id="path48136-8" style="stroke-width:10.2775"/><path d="M 158.604,185.061 H 141.31 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.294 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c -10e-4,-0.828 -0.672,-1.5 -1.501,-1.5 z m 0,18.794 H 141.31 v -17.294 h 17.295 v 17.294 z" id="path48138-9" style="stroke-width:10.2775"/></g><g id="g48144-0" style="stroke-width:10.2775"><path d="m 183.399,181.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 72.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z m -2.5,22.294 H 52.13 V 75.087 h 17.295 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 z" fill="#d3d3d3" id="path48142-6" style="stroke-width:119.599"/></g><g id="g48152-8" style="stroke-width:10.2775"><g fill="#ebe7f2" id="g48150-7" style="stroke-width:119.599"><path d="m 183.399,181.561 h -19.794 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 141.31 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -19.795 v -19.795 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 96.72 V 94.882 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 74.425 V 72.587 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 H 49.63 c -1.381,0 -2.5,1.119 -2.5,2.5 v 133.769 c 0,1.381 1.119,2.5 2.5,2.5 h 133.769 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.294 c 0,-1.382 -1.119,-2.501 -2.5,-2.501 z m 1,24.794 c 0,0.551 -0.449,1 -1,1 H 49.63 c -0.551,0 -1,-0.449 -1,-1 V 72.587 c 0,-0.551 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.449 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 H 94.22 c 0.551,0 1,0.448 1,1 v 19.794 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.449 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.794 c 0.551,0 1,0.449 1,1 z" id="path48146-9" style="stroke-width:10.2775"/><path d="m 180.899,185.061 h -19.794 c -0.551,0 -1,-0.448 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 138.81 c -0.551,0 -1,-0.449 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.795 c -0.551,0 -1,-0.448 -1,-1 v -19.795 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 94.22 c -0.551,0 -1,-0.448 -1,-1 V 97.382 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 71.925 c -0.551,0 -1,-0.448 -1,-1 V 75.087 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 H 52.13 c -0.828,0 -1.5,0.672 -1.5,1.5 v 128.769 c 0,0.828 0.672,1.5 1.5,1.5 h 128.769 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.294 c 0,-0.829 -0.672,-1.501 -1.5,-1.501 z m 0,18.794 H 52.13 V 75.087 h 17.295 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 H 91.72 v 19.794 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.795 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 z" id="path48148-0" style="stroke-width:10.2775"/></g></g><g id="g48156-3" style="stroke-width:10.2775"><path d="m 142.925,88.266 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 90.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.131 V 93.266 h 17.294 z" fill="#65c1d6" id="path48154-3" style="stroke-width:119.599"/></g><g id="g48160-3" style="stroke-width:10.2775"><path d="m 143.097,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 123.302 V 48.848 h 17.295 z" fill="#65c1d6" id="path48158-7" style="stroke-width:119.599"/></g><g id="g48164-3" style="stroke-width:10.2775"><path d="M 98.507,43.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.295 H 78.712 V 48.848 h 17.295 z" fill="#65c1d6" id="path48162-2" style="stroke-width:119.599"/></g><g id="g48168-6" style="stroke-width:10.2775"><path d="m 165.22,110.561 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m -2.5,22.294 H 145.425 V 115.56 h 17.295 z" fill="#65c1d6" id="path48166-5" style="stroke-width:119.599"/></g><g id="g48172-2" style="stroke-width:10.2775"><path d="m 209.81,110.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.294 H 190.016 V 115.56 h 17.294 z" fill="#65c1d6" id="path48170-6" style="stroke-width:119.599"/></g><g id="g48176-5" style="stroke-width:10.2775"><path d="m 209.81,155.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 157.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 160.15 h 17.294 z" fill="#65c1d6" id="path48174-8" style="stroke-width:119.599"/></g><g id="g48180-7" style="stroke-width:10.2775"><path d="m 187.687,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 167.892 V 48.848 h 17.295 z" fill="#65c1d6" id="path48178-9" style="stroke-width:119.599"/></g><g id="g48184-6" style="stroke-width:10.2775"><path d="m 209.81,65.971 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 68.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m -2.5,22.295 H 190.016 V 70.971 h 17.294 z" fill="#65c1d6" id="path48182-0" style="stroke-width:119.599"/></g><g fill="#149cb2" id="g48226-4" style="fill:#149cb2;fill-opacity:1;stroke-width:119.599"><g id="g48190-1" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="m 143.097,43.848 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.295 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 z" id="path48186-0" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="m 140.597,47.348 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 123.302 V 48.848 h 17.295 z" id="path48188-4" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g><g id="g48196-8" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="M 98.507,43.848 H 76.212 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 H 76.212 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 z" id="path48192-7" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="M 96.007,47.348 H 78.712 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 78.712 V 48.848 h 17.295 z" id="path48194-0" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g><g id="g48204-8" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="m 140.425,91.766 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 93.266 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.795 H 123.131 V 93.266 h 17.294 z" id="path48198-6" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="M 165.22,110.561 H 145.425 V 90.766 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.794 v 19.795 c 0,1.381 1.119,2.5 2.5,2.5 h 22.295 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 h -22.295 c -0.551,0 -1,-0.448 -1,-1 V 115.56 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.794 c -0.551,0 -1,-0.448 -1,-1 V 90.766 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 v 19.795 c 0,0.828 0.672,1.5 1.5,1.5 h 19.795 c 0.551,0 1,0.448 1,1 z" id="path48200-2" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="m 162.72,114.061 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.829 -0.671,-1.5 -1.5,-1.5 z m 0,18.794 H 145.425 V 115.56 h 17.295 z" id="path48202-4" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g><g id="g48210-7" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="m 207.31,114.061 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 v -17.295 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.794 H 190.016 V 115.56 h 17.294 z" id="path48206-9" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="m 209.81,110.561 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 v -22.295 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.794 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 113.06 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 z" id="path48208-3" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g><g id="g48216-9" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="m 207.31,158.65 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 160.15 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 190.016 V 160.15 h 17.294 z" id="path48212-2" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="m 209.81,155.15 h -22.294 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 157.65 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 157.65 c 0,-0.552 0.449,-1 1,-1 h 22.294 c 0.551,0 1,0.448 1,1 z" id="path48214-8" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g><g id="g48224-3" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"><path d="m 185.187,47.348 h -17.295 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.295 c 0.828,0 1.5,-0.672 1.5,-1.5 V 48.848 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 167.892 V 48.848 h 17.295 z" id="path48218-0" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="m 207.31,69.471 h -17.294 c -0.828,0 -1.5,0.672 -1.5,1.5 v 17.295 c 0,0.828 0.672,1.5 1.5,1.5 h 17.294 c 0.828,0 1.5,-0.672 1.5,-1.5 V 70.971 c 0,-0.829 -0.672,-1.5 -1.5,-1.5 z m 0,18.795 H 190.016 V 70.971 h 17.294 z" id="path48220-1" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/><path d="M 209.81,65.971 H 190.187 V 46.348 c 0,-1.381 -1.119,-2.5 -2.5,-2.5 h -22.295 c -1.381,0 -2.5,1.119 -2.5,2.5 v 22.295 c 0,1.381 1.119,2.5 2.5,2.5 h 19.624 v 19.623 c 0,1.381 1.119,2.5 2.5,2.5 h 22.294 c 1.381,0 2.5,-1.119 2.5,-2.5 V 68.471 c 0,-1.381 -1.12,-2.5 -2.5,-2.5 z m 1,24.795 c 0,0.552 -0.449,1 -1,1 h -22.294 c -0.551,0 -1,-0.448 -1,-1 V 71.143 c 0,-0.828 -0.672,-1.5 -1.5,-1.5 h -19.624 c -0.551,0 -1,-0.448 -1,-1 V 46.348 c 0,-0.552 0.449,-1 1,-1 h 22.295 c 0.551,0 1,0.448 1,1 v 19.623 c 0,0.828 0.672,1.5 1.5,1.5 h 19.623 c 0.551,0 1,0.448 1,1 z" id="path48222-7" style="fill:#149cb2;fill-opacity:1;stroke-width:10.2775"/></g></g></g></g></g><script id="mesh_polyfill" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-17.323345,-14.512747)" id="text104317" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:22.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect104319);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="76.048828" y="90.556738" id="tspan166605">Entry Block</tspan></text><path style="fill:none;fill-opacity:1;stroke:#3679e5;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 224.99999,144.99999 h 45" id="path160000" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#e2ba02;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 259.99999,189.99999 h 10" id="path160002" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#590047;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 224.99999,244.99999 h 45" id="path160004" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#b540fb;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 249.99999,159.99999 h 20" id="path161080" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#37abc8;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 254.99999,229.99999 h 15" id="path161082" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#162d50;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 259.99999,209.99999 h 10" id="path161869" transform="scale(0.26458333)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.41599452,-0.67652257)" id="text163260" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;direction:ltr;white-space:pre;shape-inside:url(#rect163262);fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="41.982422" y="142.2542" id="tspan166607">Initial </tspan><tspan x="46.728516" y="167.2542" id="tspan166609">State</tspan></text><circle style="fill:#ff8639;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="path163639" cx="72.5" cy="187.49998" r="7.4999995" transform="matrix(0.26458333,0,0,0.26458333,0.66145758,1.9843771)"/><circle style="fill:#fdd418;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="circle163641" cx="72.5" cy="187.49998" r="7.4999995" transform="matrix(0.26458333,0,0,0.26458333,0.66145758,30.427084)"/><path style="fill:none;fill-opacity:1;stroke:#ff8639;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 74.999996,204.99999 v 15" id="path165773" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 74.999996,204.99999 v 15" id="path166099" transform="matrix(0.26458333,0,0,0.26458333,3.0833295e-7,18.520833)"/><path style="fill:none;fill-opacity:1;stroke:#fdd418;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 74.999996,302.49998 h 84.869524 l -0.0379,-42.94367" id="path166155" transform="matrix(0.26458333,0,0,0.26458333,3.1826183,0)" sodipodi:nodetypes="ccc"/></g><script id="script166611" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>

<figcaption>Fig 5. Control-Flow Flattening with Random ID and Encoding</figcaption>
</figure>
</center>
<p>Concretely, the code generated <strong>does not use a lookup-switch table</strong> and the dispatcher is a succession of conditions:</p>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/cfg-flat-omvll-head.webp" alt="Head of the O-MVLL flattened function" />
<br />
<figcaption>Figure 6 - Head of the Control-Flow Flattening</figure>
</figure>
<br />
</center>
<p>We can also observe the encoding block at the end of the graph:</p>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/cfg-flat-omvll-tail.webp" alt="Tail of the O-MVLL flattened function" />
<br />
<figcaption>Figure 7 - Tail of the Control-Flow Flattening</figure>
</figure>
<br />
</center>
<p>In this example, the encoding is simply $E(X) = X \oplus A + B$ but it could be protected with an MBA and
generated with different expressions, unique per function. Globally speaking, any injective (or bijective) function
should fit as an encoding.</p>
<p>In the end, it would increase the complexity of recovering the original graph <strong>at scale</strong>
(even though the design is known).</p>
<h2 id="mixed-boolean-arithmetic">Mixed-Boolean Arithmetic</h2>
<p>We can also observe in <a href="#fig-2">Figure 2</a> that the function uses an MBA as an opaque zero or more precisely
an opaque boolean.</p>
<p>Generally speaking, MBA are widely used by the obfuscator but they are usually represented under
their <em>simple</em> form like $(A \oplus B) + (A \&amp; B) \times 2$.
In other words, we <strong>can&rsquo;t quickly</strong> identify the underlying arithmetic operation but with limited efforts, we can simplify the expression
using public tools.</p>
<p>If you want to dig more into MBA deobfuscation, I highly recommend this recent blog post <a href="https://secret.club/2022/08/08/eqsat-oracle-synthesis.html">Improving MBA Deobfuscation using Equality Saturation</a>
by <a href="https://twitter.com/mr_phrazer">Tim Blazytko</a> and <a href="https://twitter.com/fvrmatteo">Matteo</a>
which also lists open-source tools that can be used for simplifying MBA like:</p>
<ul>
<li><a href="https://github.com/quarkslab/sspam">sspam</a></li>
<li><a href="https://github.com/mrphrazer/msynth/">msynth</a> (Used for this binary)</li>
</ul>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #f5fdf8; color: #002b11;">
  <span class="fas fa-rocket-launch" style="color: #002b11" >&#160;</span>
  <a href="https://triton-library.github.io/">Triton</a>
also supports program synthesis: <a href="https://github.com/JonathanSalwan/Triton/blob/96104b1a860dc7ddb9ab123859b2fd668e388f72/src/examples/python/synthesizing_obfuscated_expressions.py">synthesizing_obfuscated_expressions.py</a> :)
</div>
<h2 id="strings-encoding">Strings Encoding</h2>
<p>Most of the strings used in the library are encoded which prevents identifying quickly sensitive functions.</p>
<p>These encoded strings are decoded <em>just-in-time</em> near the instruction that uses given the string.
In the blog post about <a href="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/">PokemonGO</a>, <strong>all the
strings</strong> were decrypted at once in the Mach-O constructors which enabled to recover all of these strings without
caring about reverse engineering the decoding routines. For the current obfuscator, we can&rsquo;t exactly apply this
technique.</p>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="776.99988" height="354.00003" viewBox="0 0 205.58122 93.662505" version="1.1" id="svg5" xml:space="preserve"><defs id="defs2"><rect x="374.99997" y="44.999996" width="295" height="105" id="rect208641"/><rect x="9.999999" y="4.9999995" width="154.99998" height="84.999992" id="rect199231"/><rect x="9.999999" y="4.9999995" width="154.99998" height="84.999992" id="rect199231-9"/><rect x="9.999999" y="4.9999995" width="154.99998" height="84.999992" id="rect207888"/><rect x="9.999999" y="4.9999995" width="154.99998" height="84.999992" id="rect208013"/></defs><g id="layer1" transform="translate(-6.0854163,-6.085416)"><g id="g208924" style="display:inline"><g id="g187977" style="display:inline"><g id="g187990"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect186383" width="175" height="300" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,-1.3229164,-7.5e-7)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,99.999995 H 134.99999" id="path199031" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 144.99999,99.999995 h 30" id="path199033" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,124.99999 H 59.999997" id="path199035" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 74.999996,124.99999 H 89.999995" id="path199037" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 99.999995,124.99999 H 154.99999" id="path199039" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 174.99999,124.99999 h 15" id="path199041" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 44.999998,149.99999 H 69.999996" id="path199043" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 109.99999,149.99999 h 80" id="path199045" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,174.99999 H 89.999995" id="path199047" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 94.999995,174.99999 h 5" id="path199049" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 104.99999,174.99999 h 55" id="path199051" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 34.999998,199.99999 h 5" id="path199053" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 54.999997,199.99999 H 104.99999" id="path199055" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 114.99999,199.99999 h 5" id="path199057" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 74.999996,224.99999 H 99.999995" id="path199059" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 59.999997,224.99999 h -10" id="path199061" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 114.99999,224.99999 h 75" id="path199063" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,249.99999 H 149.99999" id="path199065" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 84.999996,274.99999 H 114.99999" id="path199067" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 149.99999,274.99999 h 20" id="path199069" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 189.99999,299.99998 H 49.999997" id="path199071" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,324.99998 H 74.999996" id="path199073" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 124.99999,324.99998 h 25" id="path199075" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 174.99999,324.99998 h 15" id="path199077" transform="scale(0.26458333)"/><path style="fill:#353333;fill-opacity:1;stroke:#c364fc;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,349.99998 H 149.99999" id="path199079" transform="scale(0.26458333)"/></g><g id="g199238"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect186391" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,-1.3229164,-13.229167)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-3.437517,6.4413019)" id="text199229" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;white-space:pre;shape-inside:url(#rect199231);display:inline;fill:#c364fc;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="42.140625" y="18.803357" id="tspan209430">Contrusctor</tspan></text></g><rect style="display:inline;fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect208474" width="165" height="270" x="29.999998" y="90" transform="scale(0.26458333)"/></g></g><g id="g208844" style="display:inline" transform="translate(7.4083325)"><g id="g199346" transform="translate(92.604164)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect199294" width="175" height="300" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,-1.3229164,-7.5e-7)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,99.999995 H 134.99999" id="path199296" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 144.99999,99.999995 h 30" id="path199298" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,124.99999 H 59.999997" id="path199300" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 74.999996,124.99999 H 89.999995" id="path199302" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 99.999995,124.99999 H 154.99999" id="path199304" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 174.99999,124.99999 h 15" id="path199306" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 44.999998,149.99999 H 69.999996" id="path199308" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 109.99999,149.99999 h 80" id="path199310" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,174.99999 H 89.999995" id="path199312" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 94.999995,174.99999 h 5" id="path199314" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 104.99999,174.99999 h 55" id="path199316" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 34.999998,199.99999 h 5" id="path199318" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 54.999997,199.99999 H 104.99999" id="path199320" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 114.99999,199.99999 h 5" id="path199322" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 74.999996,224.99999 H 99.999995" id="path199324" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 59.999997,224.99999 h -10" id="path199326" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 114.99999,224.99999 h 75" id="path199328" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,249.99999 H 149.99999" id="path199330" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 84.999996,274.99999 H 114.99999" id="path199332" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 149.99999,274.99999 h 20" id="path199334" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 189.99999,299.99998 H 49.999997" id="path199336" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,324.99998 H 74.999996" id="path199338" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 124.99999,324.99998 h 25" id="path199340" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 174.99999,324.99998 h 15" id="path199342" transform="scale(0.26458333)"/><path style="fill:none;fill-opacity:1;stroke:#837e7e;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,349.99998 H 149.99999" id="path199344" transform="scale(0.26458333)"/></g><g id="g187937" transform="translate(35.718753,3.9687508)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect187932" width="194.99998" height="94.999992" x="439.99997" y="14.999999" transform="scale(0.26458333)"/><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect187928" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-13.229167)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,110.4884,6.4413019)" id="text199229-7" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;white-space:pre;shape-inside:url(#rect199231-9);display:inline;fill:#fdd418;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="36.257812" y="18.803357" id="tspan209432">sub_01a34d()</tspan></text><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect187930" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-7.5e-7)"/><g id="g202268" transform="translate(29.104162,6.6145837)" style="fill:#66ff00;stroke:#00aa44"><path style="fill:#66ff00;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,99.999995 H 134.99999" id="path199296-1" transform="matrix(0.26458333,0,0,0.26458333,82.02083,-10.583334)"/><path style="fill:#66ff00;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 144.99999,99.999995 h 30" id="path199298-9" transform="matrix(0.26458333,0,0,0.26458333,82.02083,-10.583334)"/></g></g><g id="g207886" transform="translate(35.718753,37.041667)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect207870" width="194.99998" height="94.999992" x="439.99997" y="14.999999" transform="scale(0.26458333)"/><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect207872" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-13.229167)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,117.44605,6.3214126)" id="text207876" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect207888);display:inline;fill:#fdd418;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" x="40.4375" y="0"><tspan x="10" y="18.803357" id="tspan209434">sub_f289()</tspan></text><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect207878" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-7.5e-7)"/><path style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 74.999996,224.99999 H 99.999995" id="path199324-8" transform="matrix(0.26458333,0,0,0.26458333,107.15624,-37.041666)"/><path style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 59.999997,224.99999 h -10" id="path199326-2" transform="matrix(0.26458333,0,0,0.26458333,107.15624,-37.041666)"/><path style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 114.99999,224.99999 h 75" id="path199328-5" transform="matrix(0.26458333,0,0,0.26458333,107.15624,-37.041666)"/><g id="g207884" transform="translate(29.104162,6.6145837)" style="fill:#66ff00;stroke:#00aa44"/></g><g id="g208011" transform="translate(35.718752,70.114581)" style="display:inline"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="rect207993" width="194.99998" height="94.999992" x="439.99997" y="14.999999" transform="scale(0.26458333)"/><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect207995" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-13.229167)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,117.44605,6.3214126)" id="text207999" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect208013);display:inline;fill:#fdd418;fill-opacity:1;stroke:none;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" x="40.4375" y="0"><tspan x="10" y="18.803357" id="tspan209436">sub_78f3()</tspan></text><rect style="fill:#4e4b4b;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill" id="rect208001" width="175" height="25" x="29.999998" y="75" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-7.5e-7)"/><path style="display:inline;fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:3;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="M 34.999998,349.99998 H 149.99999" id="path199344-3" transform="matrix(0.26458333,0,0,0.26458333,111.12499,-70.114579)"/><g id="g208009" transform="translate(29.104162,6.6145837)" style="fill:#66ff00;stroke:#00aa44"/><rect style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect208196" width="165.00002" height="25.000004" x="379.99997" y="89.999992" transform="matrix(0.26458333,0,0,0.26458333,-35.718752,-70.114581)"/><rect style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect208250" width="165.00002" height="25.000004" x="379.99997" y="89.999992" transform="matrix(0.26458333,0,0,0.26458333,-35.718757,-37.041667)"/><rect style="fill:none;fill-opacity:1;stroke:#00aa44;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect208252" width="165.00002" height="25.000004" x="379.99997" y="89.999992" transform="matrix(0.26458333,0,0,0.26458333,-35.718757,-3.9687521)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-35.90584,-70.114581)" id="text208639" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:17.3333px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect208641);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:1, 2;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="375" y="59.953608" id="tspan209438">__DATA.__data section</tspan></text></g></g></g></svg>

<br />
<br />
<figcaption>Fig 8. Differences in Designing String Encryption</figcaption>
</figure>
<br />
</center>
<p>To better understand the difficulty, let&rsquo;s take a closer look at how strings are encoded with
the <span class="dark-boxed dark-yellow">_unmount()</span> function. As a reminder, this function is used
as a part of jailbreak detection.</p>
<p>In the KaaSBle library, there are five cross-references to <span class="dark-boxed dark-yellow">_unmount()</span>:</p>
<center>

<?xml version="1.0" ?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 341 100" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="450">

<rect x="0" y="0" width="341" height="100" fill="#353333" rx="4" ry="4" stroke-width="6" stroke="#6DCFF6"/>

    <text x="7" y="20" xml:space="preserve"><tspan fill="#ED1C24">P </tspan><tspan fill="#FDD418">sub_61d94</tspan><tspan fill="#aaaaaa">+178</tspan><tspan fill="#aaaaaa">                     </tspan><tspan fill="#ffffff">BL</tspan><tspan> </tspan><tspan fill="#FDD418">_unmount</tspan><tspan fill="#aaaaaa"/></text>
<text x="7" y="36" xml:space="preserve"><tspan fill="#ED1C24">P </tspan><tspan fill="#FDD418">sub_8fa98</tspan><tspan fill="#aaaaaa">+1c8</tspan><tspan fill="#aaaaaa">                     </tspan><tspan fill="#ffffff">BL</tspan><tspan> </tspan><tspan fill="#FDD418">_unmount</tspan><tspan fill="#aaaaaa"/></text>
<text x="7" y="52" xml:space="preserve"><tspan fill="#ED1C24">P </tspan><tspan fill="#FDD418">_mbedtls_entropy_gather_0</tspan><tspan fill="#aaaaaa">+128</tspan><tspan fill="#aaaaaa">     </tspan><tspan fill="#ffffff">BL</tspan><tspan> </tspan><tspan fill="#FDD418">_unmount</tspan><tspan fill="#aaaaaa"/></text>
<text x="7" y="68" xml:space="preserve"><tspan fill="#ED1C24">P </tspan><tspan fill="#FDD418">_mbedtls_ssl_get_session</tspan><tspan fill="#aaaaaa">+11c</tspan><tspan fill="#aaaaaa">      </tspan><tspan fill="#ffffff">BL</tspan><tspan> </tspan><tspan fill="#FDD418">_unmount</tspan><tspan fill="#aaaaaa"/></text>
<text x="7" y="84" xml:space="preserve"><tspan fill="#ED1C24">P </tspan><tspan fill="#FDD418">sub_177998</tspan><tspan fill="#aaaaaa">+c</tspan><tspan fill="#aaaaaa">                      </tspan><tspan fill="#ffffff">BL</tspan><tspan> </tspan><tspan fill="#FDD418">_unmount</tspan><tspan fill="#aaaaaa"/></text>
<text x="7" y="100" xml:space="preserve"/>

    </g>
</svg>

<br /><br />
</center>
<p>When looking at the prologue of the <span class="dark-boxed dark-yellow">_unmount()</span> calls,
we get the following basic blocks:</p>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/boostrapped.webp" alt="Decoding Routine for /.bootstrapped" />
<figcaption>Figure 9 - Decoding Routine for the String /.bootstrapped</figure>
</figure>
<br />
</center>
<p>Which is equivalent to this snippet:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">from</span> <span style="color:#00f;font-weight:bold">itertools</span> <span style="color:#008000;font-weight:bold">import</span> cycle
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">decode</span>(encrypted: <span style="color:#008000">bytes</span>, key: <span style="color:#008000">str</span>, op):
</span></span><span style="display:flex;"><span>    key       <span style="color:#666">=</span> <span style="color:#008000">bytes</span><span style="color:#666">.</span>fromhex(key)
</span></span><span style="display:flex;"><span>    encrypted <span style="color:#666">=</span> <span style="color:#008000">bytes</span><span style="color:#666">.</span>fromhex(encrypted)
</span></span><span style="display:flex;"><span>    out <span style="color:#666">=</span> <span style="color:#ba2121">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> idx, (k, v) <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">enumerate</span>(<span style="color:#008000">zip</span>(encrypted, cycle(key))):
</span></span><span style="display:flex;"><span>        out <span style="color:#666">+=</span> <span style="color:#008000">chr</span>(op(idx, k, v) <span style="color:#666">&amp;</span> <span style="color:#666">0xFF</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> out
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># /.bootstrapped</span>
</span></span><span style="display:flex;"><span>clear <span style="color:#666">=</span> decode(<span style="color:#ba2121">&#34;9f0b698a3abc17e70bb54332271180&#34;</span>, <span style="color:#408080;font-style:italic"># Encoded string</span>
</span></span><span style="display:flex;"><span>               <span style="color:#ba2121">&#34;b0250be555c8649379d43342427580&#34;</span>, <span style="color:#408080;font-style:italic"># Key</span>
</span></span><span style="display:flex;"><span>               <span style="color:#008000;font-weight:bold">lambda</span> _, k, v: (k <span style="color:#666">^</span> v))          <span style="color:#408080;font-style:italic"># Operation</span>
</span></span></code></pre></div><p>It is worth mentioning that the string is not decoded <em>in-placed</em> but in another <code>__data</code> variable.
This means that an encoded string takes potentially twice its size in the final binary.</p>
<p>Another example of a decoding routine:</p>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/installed_odyssey.webp" alt="Decoding Routine for /.installed_odyssey" />
<figcaption>Figure 10 - Decoding Routine for the String /.installed_odyssey</figure>
</figure>
<br />
</center>
<p>Which is equivalent to:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># /.installed_odyssey</span>
</span></span><span style="display:flex;"><span>clear <span style="color:#666">=</span> decode(<span style="color:#ba2121">&#34;1bec336463362f66602b365d672e4f756f3353&#34;</span>, <span style="color:#408080;font-style:italic"># Encoded string</span>
</span></span><span style="display:flex;"><span>               <span style="color:#ba2121">&#34;ecbdc8f3&#34;</span>,                               <span style="color:#408080;font-style:italic"># Key</span>
</span></span><span style="display:flex;"><span>               <span style="color:#008000;font-weight:bold">lambda</span> i, k, v: (k <span style="color:#666">-</span> v <span style="color:#666">-</span> i))              <span style="color:#408080;font-style:italic"># Operation</span>
</span></span></code></pre></div><p>In this case, the key is an <code>uint32_t</code> integer for which the bytes are accessed through a stack variable.
The <em>weird</em> operation <code>x12 = x8 &amp; (x8 ^ 0xfffffffffffffffc)</code> is simply a modulus <code>sizeof(uint32_t)</code> :)</p>
<p>In summary, because of the <strong>disparity</strong> of the encodings which are mixed with MBA and unique keys, it would be quite difficult
to <strong>statically</strong> decode all the strings of the library. On the other hand, since the clear strings are written in the
<code>__data</code> section of the binary, we can dump &ndash; at some point in the execution &ndash; this section and observe the
clear strings (c.f. <a href="https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/#jailbreak-detection">Singpass RASP Analysis - Jailbreak Detection</a>).</p>
<h2 id="crash-analysis">Crash Analysis</h2>
<p>When the obfuscator detects that the environment is compromised (jailbroken device, debugger attached, &hellip;), it
reacts by crashing the application. This crash occurs through different techniques among which:</p>
<ol>
<li>Corrupting a global pointer</li>
<li>Executing a break instruction (BRK #1)</li>
<li>Trashing the link register and frame register (LR / FP)</li>
<li>Calling <span class="dark-boxed dark-yellow">objc_msgSend</span> with corrupted parameters</li>
</ol>
<p>The instructions involved in crashing the application are <strong>inlined</strong> in the function where the check occurs.
This means that there is as many <em>crash routine</em> as there are RASP checks.</p>
<p>In particular, with such a design, we can&rsquo;t target a single function to bypass the different checks as I did
for SingPass.</p>
<h2 id="hooking-the-syscalls">Hooking the Syscalls</h2>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-salt-shaker" style="color: #084298" >&#160;</span>
  This approach is inspired by this talk at
Pass the Salt: <a href="https://archives.pass-the-salt.org/Pass%20the%20SALT/2021/slides/PTS2021-Talk-01-JailBreak_detection.pdf">Jailbreak Detection and How to Bypass Them</a>
</div>
<p>To better understand the <em>problem</em>, let&rsquo;s recap the situation:</p>
<ol>
<li>The code is obfuscated with CFG flattening, MBA, etc</li>
<li>The RASP checks are <strong>inlined</strong> in the code</li>
<li>The application crashes near the detection spot. In particular and compared to SingPass,
there is no RASP endpoint that can be hooked.</li>
</ol>
<p>The following figure depicts the differences in the RASP reaction between the two applications:</p>
<div class="col-lg-0" id="fig-3">
<center>
<figure>

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="791.09235" height="383.69897" viewBox="0 0 209.30985 101.52035" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="callback_vs_crash.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/></sodipodi:namedview><defs id="defs2"><linearGradient id="linearGradient342777"><stop style="stop-color:#82412b;stop-opacity:1;" offset="0" id="stop342773"/><stop style="stop-color:#082361;stop-opacity:1;" offset="0.49169078" id="stop342781"/><stop style="stop-color:#ef6456;stop-opacity:1;" offset="1" id="stop342775"/></linearGradient><linearGradient id="linearGradient341235"><stop style="stop-color:#ef6456;stop-opacity:1;" offset="0" id="stop341231"/><stop style="stop-color:#353333;stop-opacity:1;" offset="1" id="stop341233"/></linearGradient><linearGradient id="linearGradient341229"><stop style="stop-color:#082361;stop-opacity:1;" offset="0" id="stop341225"/><stop style="stop-color:#353333;stop-opacity:1;" offset="1" id="stop341227"/></linearGradient><rect x="484.99997" y="359.99997" width="141.8231" height="40.000023" id="rect340312"/><rect x="290" y="254.99998" width="270" height="115" id="rect327889"/><linearGradient id="linearGradient321355"><stop style="stop-color:#ef6456;stop-opacity:1;" offset="0" id="stop321351"/><stop style="stop-color:#353333;stop-opacity:1;" offset="1" id="stop321353"/></linearGradient><linearGradient id="linearGradient321035"><stop style="stop-color:#082361;stop-opacity:1;" offset="0" id="stop321031"/><stop style="stop-color:#353333;stop-opacity:1;" offset="1" id="stop321033"/></linearGradient><linearGradient id="linearGradient317431"><stop style="stop-color:#5d2e1f;stop-opacity:1;" offset="0" id="stop317427"/><stop style="stop-color:#353333;stop-opacity:1;" offset="1" id="stop317429"/></linearGradient><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect314152"/><linearGradient xlink:href="#linearGradient317431" id="linearGradient317433" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992" gradientUnits="userSpaceOnUse"/><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect320078"/><linearGradient xlink:href="#linearGradient321035" id="linearGradient320080" gradientUnits="userSpaceOnUse" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992"/><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect321193"/><linearGradient xlink:href="#linearGradient321355" id="linearGradient321195" gradientUnits="userSpaceOnUse" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992"/><linearGradient xlink:href="#linearGradient341235" id="linearGradient317433-1" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992" gradientUnits="userSpaceOnUse"/><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect314152-7"/><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect320078-5"/><rect x="134.99998" y="44.999996" width="194.99998" height="69.999992" id="rect321193-9"/><linearGradient xlink:href="#linearGradient317431" id="linearGradient334572" gradientUnits="userSpaceOnUse" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992"/><linearGradient xlink:href="#linearGradient341229" id="linearGradient334574" gradientUnits="userSpaceOnUse" x1="124.99999" y1="54.999992" x2="144.99998" y2="54.999992"/><rect x="484.99997" y="359.99997" width="141.8231" height="40.000023" id="rect340533"/><rect x="484.99997" y="359.99997" width="141.8231" height="40.000023" id="rect340608"/><linearGradient xlink:href="#linearGradient342777" id="linearGradient342779" x1="391.50027" y1="199.99998" x2="438.49966" y2="199.99998" gradientUnits="userSpaceOnUse"/><linearGradient xlink:href="#linearGradient342777" id="linearGradient343226" x1="391.50027" y1="199.99998" x2="438.49966" y2="199.99998" gradientUnits="userSpaceOnUse"/></defs><g id="layer1" transform="translate(-4.62497,-2.6713622)"><g id="g334828"><g id="cydia" style="isolation:isolate;stroke-width:1.37583" transform="matrix(0.19230769,0,0,0.19230769,-4.0288753,-46.387195)"><g id="g896" style="stroke-width:1.37583"><path d="M 59.21,384.685 C 52.786,383.127 47.278,377.772 45.639,371.491 45.051,369.239 45,365.174 45,320.17 c 0,-45.004 0.051,-49.069 0.639,-51.321 1.683,-6.448 7.496,-11.932 14.11,-13.311 2.773,-0.578 97.729,-0.578 100.502,0 6.614,1.379 12.427,6.863 14.11,13.311 0.588,2.252 0.639,6.317 0.639,51.321 0,45.004 -0.051,49.069 -0.639,51.321 -1.683,6.448 -7.496,11.932 -14.11,13.311 -2.99,0.623 -98.444,0.513 -101.041,-0.117 z" id="path875" fill="#5d2e1f" style="stroke-width:2.36614"/><g id="g302028" style="stroke-width:1.37583"><path d="m 117.991,365.337 c 16.201,-3.392 29.388,-14.971 34.512,-30.305 1.714,-5.126 2.261,-8.679 2.261,-14.676 0,-3.932 -0.196,-6.506 -0.665,-8.735 -3.925,-18.641 -17.617,-32.335 -36.294,-36.299 -4.352,-0.924 -13.116,-0.924 -17.469,0 -18.676,3.964 -32.368,17.658 -36.293,36.299 -0.915,4.345 -0.915,13.125 0,17.469 3.336,15.845 13.702,28.199 28.561,34.039 7.615,2.993 17.521,3.855 25.387,2.208 z" id="path873" fill="#ffffff" style="stroke-width:2.36614"/></g><path d="M 100.868,360.293 C 85.77,357.12 73.766,345.811 69.645,330.877 c -1.184,-4.29 -1.609,-11.963 -0.923,-16.655 1.838,-12.567 9.962,-23.851 21.653,-30.072 11.266,-5.995 26.125,-5.995 37.392,0 7.786,4.144 14.161,10.663 18.078,18.484 5.075,10.138 5.235,24.045 0.396,34.518 -4.522,9.788 -13.051,17.744 -23.009,21.466 -6.557,2.45 -15.492,3.119 -22.364,1.675 z" id="path871" fill="#5d2e1f" style="stroke-width:2.36614"/><g id="g302047" style="stroke-width:1.37583"><path d="m 124.495,346.447 8.363,-3.495 0.103,-5.258 c 0.057,-2.892 -0.045,-5.259 -0.226,-5.259 -0.181,0 -5.432,2.068 -11.668,4.595 l -11.338,4.596 -0.68,-1.158 c -0.374,-0.636 -1.315,-2.16 -2.091,-3.387 l -1.411,-2.23 -0.004,9.731 -0.003,9.731 5.296,-2.186 c 2.913,-1.202 9.06,-3.758 13.659,-5.68 z" id="path869" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 102.938,342.099 c 0,-8.08 -0.121,-11.522 -0.406,-11.522 -0.223,0 -3.237,0.931 -6.699,2.069 l -6.293,2.069 -2.407,-1.915 -2.407,-1.916 v 5.051 5.05 l 1.928,1.393 c 6.395,4.623 15.768,11.19 16.005,11.214 0.154,0.016 0.279,-5.156 0.279,-11.493 z" id="path867" fill="#faf9f9" style="stroke-width:2.36614"/><path d="m 135.744,328.388 c 0.227,-0.22 -1.43,-9.224 -1.772,-9.627 -0.068,-0.08 -22.907,8.379 -27.41,10.152 -0.358,0.141 -0.65,0.39 -0.65,0.554 0,0.254 3.489,6.339 5.036,8.782 0.498,0.788 0.631,0.742 12.508,-4.395 6.602,-2.855 12.132,-5.315 12.288,-5.466 z" id="path865" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 98.061,329.754 2.371,-0.891 -8.689,-7.427 c -4.78,-4.084 -8.893,-7.552 -9.142,-7.705 -0.447,-0.277 -7.724,5.418 -7.724,6.045 0,0.165 3.412,3.144 7.583,6.619 l 7.584,6.318 2.823,-1.034 c 1.553,-0.569 3.89,-1.435 5.194,-1.925 z" id="path863" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 117.053,322.777 c -0.012,-0.282 -7.147,-3.354 -7.784,-3.352 -0.997,0.003 -11.58,4.565 -11.276,4.86 0.165,0.16 1.437,1.194 2.828,2.298 l 2.529,2.008 6.856,-2.812 c 3.771,-1.546 6.852,-2.897 6.847,-3.002 z" id="path861" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 102.84,320.289 5.302,-2.111 v -1.977 c 0,-1.088 -0.126,-1.981 -0.279,-1.985 -0.153,-0.004 -2.746,1.036 -5.761,2.309 l -5.482,2.316 v 1.78 c 0,1.165 0.158,1.779 0.459,1.779 0.253,0 2.845,-0.95 5.761,-2.111 z" id="path859" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 118.992,319.705 c -0.088,-1.277 -0.189,-2.357 -0.224,-2.399 -0.034,-0.042 -1.937,-0.912 -4.229,-1.933 l -4.167,-1.857 v 2.026 c 0,1.115 -0.02,2.152 -0.044,2.305 -0.035,0.229 7.923,4.066 8.616,4.155 0.115,0.014 0.137,-1.019 0.048,-2.297 z" id="path857" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 95.115,319.891 -0.018,-1.765 -4.688,-3.345 c -6.179,-4.409 -5.758,-4.2 -5.616,-2.802 0.099,0.973 0.92,1.868 4.951,5.394 2.657,2.325 4.957,4.239 5.11,4.255 0.154,0.016 0.271,-0.766 0.261,-1.737 z" id="path855" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 127.163,319.342 4.711,-1.84 0.12,-2.941 c 0.066,-1.618 0.08,-2.941 0.031,-2.94 -0.05,0 -2.684,1.294 -5.854,2.875 l -5.764,2.875 0.005,1.307 c 0.003,0.718 0.107,1.687 0.232,2.153 0.267,0.999 -0.022,1.065 6.519,-1.489 z" id="path853" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 101.567,315.114 c 2.696,-1.145 5.021,-2.192 5.167,-2.327 0.273,-0.253 -11.548,-7.856 -12.215,-7.856 -0.733,0 -9.606,3.627 -9.548,3.903 0.053,0.253 11.272,8.363 11.569,8.363 0.069,0 2.33,-0.937 5.027,-2.083 z" id="path851" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 126.539,312.929 c 1.636,-0.756 3.377,-1.532 3.869,-1.725 0.829,-0.326 0.608,-0.528 -3.043,-2.769 l -3.938,-2.416 -6.249,3.141 -6.249,3.141 1.301,0.554 c 0.716,0.304 2.705,1.135 4.421,1.846 l 3.121,1.292 1.897,-0.846 c 1.043,-0.465 3.235,-1.463 4.87,-2.218 z" id="path849" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 139.331,307.388 c -0.257,-0.239 -15.928,-8.032 -16.153,-8.032 -0.114,0 -0.158,0.878 -0.096,1.952 l 0.112,1.951 5.195,3.234 c 5.434,3.382 6.141,3.998 6.141,5.349 0,0.674 0.447,0.359 2.478,-1.744 1.362,-1.411 2.408,-2.631 2.323,-2.71 z" id="path847" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 88.925,305.222 5.651,-2.415 1.553,1.062 c 0.855,0.584 1.649,1.062 1.766,1.062 0.116,0 0.211,-1.303 0.211,-2.896 v -2.896 l 3.171,-1.428 c 1.745,-0.786 3.115,-1.484 3.047,-1.553 -0.096,-0.096 -11.027,4.215 -23.201,9.152 l -0.816,0.331 1.373,2.966 1.374,2.967 0.11,-1.969 0.11,-1.968 z" id="path845" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 108.414,306.348 c -0.207,-0.511 -8.385,-4.95 -8.644,-4.691 -0.082,0.082 -0.029,1.219 0.116,2.528 l 0.265,2.379 3.902,2.345 3.903,2.345 0.327,-2.209 c 0.18,-1.215 0.239,-2.428 0.131,-2.697 z" id="path843" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 115.801,308.063 5.349,-2.815 v -2.202 c 0,-1.53 -0.142,-2.194 -0.464,-2.174 -0.256,0.015 -2.723,1.144 -5.483,2.508 l -5.017,2.48 -0.11,2.509 c -0.061,1.38 -10e-4,2.509 0.133,2.509 0.134,0 2.65,-1.267 5.592,-2.815 z" id="path841" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 114.832,301.982 5.017,-2.538 -1.301,-0.548 c -0.715,-0.301 -2.752,-1.18 -4.526,-1.953 l -3.227,-1.405 -4.579,1.976 c -2.518,1.087 -4.721,2.096 -4.895,2.244 -0.315,0.267 7.415,4.819 8.121,4.782 0.205,-0.011 2.63,-1.162 5.39,-2.558 z" id="path837" fill="#ffffff" style="stroke-width:2.36614"/></g></g></g><g id="debug" style="isolation:isolate;stroke-width:1.5291" transform="matrix(0.17303175,0,0,0.17303175,-1.605716,1.5328508)"><g id="g305879" style="stroke-width:1.5291"><path d="m 123.194,265.125 c -0.891,-10e-4 -1.714,-0.478 -2.158,-1.252 -0.443,-0.773 -0.44,-1.725 0.01,-2.495 l 17.437,-29.893 c 0.447,-0.764 1.265,-1.235 2.151,-1.235 h 12.455 c 1.376,0 2.491,1.115 2.491,2.491 0,1.376 -1.115,2.491 -2.491,2.491 h -11.023 l -16.718,28.657 c -0.447,0.766 -1.267,1.237 -2.154,1.236 z" id="path305869" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 140.634,369.75 h -9.964 c -1.218,0 -2.257,-0.88 -2.457,-2.082 l -4.983,-29.892 c -0.153,-0.881 0.178,-1.776 0.867,-2.346 0.689,-0.57 1.631,-0.727 2.467,-0.411 0.836,0.315 1.44,1.055 1.581,1.938 l 4.635,27.811 h 7.854 c 1.376,0 2.491,1.115 2.491,2.491 0,1.376 -1.115,2.491 -2.491,2.491 z" id="path305871" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 43.482,347.33 c -1.376,0 -2.491,-1.115 -2.491,-2.491 v -12.455 c 0,-0.757 0.344,-1.472 0.934,-1.945 L 66.836,310.51 c 1.074,-0.86 2.642,-0.686 3.502,0.388 0.86,1.075 0.686,2.643 -0.388,3.503 l -23.977,19.181 v 11.257 c 0,1.376 -1.115,2.491 -2.491,2.491 z" id="path305873" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 70.882,265.125 c -0.492,0 -0.972,-0.146 -1.38,-0.419 l -14.946,-9.964 c -0.693,-0.462 -1.109,-1.24 -1.11,-2.072 v -17.438 c 0,-1.376 1.116,-2.491 2.491,-2.491 1.376,0 2.492,1.115 2.492,2.491 v 16.105 l 13.837,9.224 c 0.913,0.61 1.32,1.745 1.002,2.796 -0.319,1.051 -1.288,1.769 -2.386,1.768 z" id="path305875" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 168.036,324.911 h -24.911 c -1.376,0 -2.491,-1.116 -2.491,-2.491 0,-1.376 1.115,-2.491 2.491,-2.491 h 24.911 c 1.375,0 2.491,1.115 2.491,2.491 0,1.375 -1.116,2.491 -2.491,2.491 z" id="path305877" fill="#dadcde" style="stroke-width:2.9227"/></g><path d="m 163.054,307.473 v -14.946 h -10.587 c -1.145,-6.815 -3.856,-13.27 -7.922,-18.857 l 6.053,-6.054 -9.964,-9.964 -6.054,6.053 c -5.587,-4.065 -12.042,-6.777 -18.857,-7.922 v -10.587 h -14.946 v 10.587 c -6.815,1.145 -13.27,3.856 -18.857,7.922 l -6.054,-6.053 -9.964,9.964 6.053,6.054 c -4.065,5.587 -6.777,12.042 -7.922,18.857 H 53.446 v 14.946 h 10.587 c 1.145,6.815 3.856,13.27 7.922,18.857 l -6.053,6.054 9.964,9.964 6.054,-6.053 c 5.587,4.065 12.042,6.777 18.857,7.922 v 10.587 h 14.946 v -10.587 c 6.815,-1.145 13.27,-3.856 18.857,-7.922 l 6.054,6.053 9.964,-9.964 -6.053,-6.054 c 4.065,-5.587 6.777,-12.042 7.922,-18.857 z" id="path305881" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="108.25" cy="300" r="34.875" id="Ellipse" fill="#eefafe" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="158.07143" cy="232.74107" r="4.9821429" id="circle305884" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="145.61607" cy="367.25894" r="4.9821429" id="circle305886" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="43.482143" cy="347.33035" r="4.9821429" id="circle305888" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="173.01785" cy="322.41965" r="4.9821429" id="circle305890" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="55.9375" cy="232.74107" r="4.9821429" id="circle305892" fill="#082361" style="stroke-width:2.9227"/><path d="m 79.396,308.519 v -15.856 h 3.19 v 13.363 h 6.628 v 2.493 z m 12.59,0 v -15.856 h 3.19 v 13.363 h 6.628 v 2.493 z m 19.475,0 h -6.885 v -15.856 h 6.875 v 0 q 2.299,0 3.566,0.736 v 0 0 q 1.268,0.736 1.773,1.987 v 0 0 q 0.505,1.252 0.505,2.809 v 0 4.867 0 q 0,1.579 -0.532,2.814 v 0 0 q -0.532,1.235 -1.8,1.939 v 0 0 q -1.267,0.704 -3.502,0.704 z m -3.695,-13.374 v 10.892 h 3.416 v 0 q 1.687,0 2.304,-0.623 v 0 0 q 0.618,-0.623 0.618,-1.944 v 0 -5.694 0 q 0,-1.289 -0.628,-1.96 v 0 0 q -0.629,-0.671 -2.294,-0.671 v 0 z m 20.163,13.374 h -6.875 v -15.856 h 6.102 v 0 q 2.223,0 3.443,0.451 v 0 0 q 1.219,0.451 1.697,1.37 v 0 0 q 0.478,0.918 0.478,2.347 v 0 0 q 0,1.214 -0.397,1.977 v 0 0 q -0.398,0.762 -1.633,1.074 v 0 0 q 1.095,0.15 1.681,0.66 v 0 0 q 0.585,0.511 0.806,1.316 v 0 0 q 0.22,0.806 0.22,1.848 v 0 0 q 0,2.492 -1.284,3.652 v 0 0 q -1.284,1.161 -4.238,1.161 z m -3.684,-13.675 v 4.2 h 3.298 v 0 q 0.934,0 1.348,-0.247 v 0 0 q 0.413,-0.247 0.521,-0.736 v 0 0 q 0.107,-0.489 0.107,-1.198 v 0 0 q 0,-0.838 -0.193,-1.273 v 0 0 q -0.194,-0.435 -0.741,-0.59 v 0 0 q -0.548,-0.156 -1.633,-0.156 v 0 z m 0,6.123 v 5.317 h 3.093 v 0 q 1.247,0 1.875,-0.204 v 0 0 q 0.628,-0.204 0.843,-0.779 v 0 0 q 0.215,-0.574 0.215,-1.67 v 0 0 q 0,-0.795 -0.156,-1.391 v 0 0 q -0.155,-0.596 -0.709,-0.935 v 0 0 q -0.553,-0.338 -1.745,-0.338 v 0 z" id="Compound Path-8" fill="#082361" style="stroke-width:2.9227"/></g><g id="g312049" transform="matrix(0.56242975,0,0,0.56242975,-59.497756,60.063649)" style="stroke-width:1.778"><circle style="opacity:1;fill:#ef6456;fill-opacity:1;stroke:none;stroke-width:3.556;stroke-linecap:square;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="path308341" transform="matrix(0.26458333,0,0,0.26458333,-1.3481375,32.422202)" cy="89.999992" cx="520" r="83.999992"/><g id="g298608" transform="matrix(0.16905373,0,0,0.16905373,65.469304,27.580092)" style="stroke-width:2.78271">
	<path fill="#ef6456" d="m 9,7 v 9.8 h 19 v 7.4 H 9 V 39 H 0 V 0 H 28.1 L 28,7 Z" id="path298598" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 51.4,39 H 41.3 L 49.7,26.1 C 44.9,23.8 42.3,19.6 42.3,13.5 42.3,4.8 48.2,0 58.5,0 H 76 V 39 H 67 V 28 H 58.5 57.7 Z M 67,20 V 7 h -8.5 c -4.9,0 -7.7,2 -7.7,6.4 0,4.5 2.8,6.6 7.7,6.6 z" id="path298600" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 92,39 V 0 h 9 v 39 z" id="path298602" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 134.8,0 C 147,0 155.6,7.8 155.6,19.5 155.6,31.1 147,39 134.5,39 H 118 V 0 Z M 127,32 h 8 c 6.6,0 11.4,-5.2 11.4,-12.4 C 146.4,12.3 141.3,7 134.6,7 H 127 Z" id="path298604" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="m 173.5,31 -3.1,8 h -9.2 L 178.3,0 h 9.2 l 16.9,39 h -9.5 l -3.1,-8 z M 182.7,8.7 176.4,24 h 12.5 z" id="path298606" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
</g></g><g id="g317386" transform="translate(1.3229174,3.3072917)"><g id="g320058" transform="translate(-0.6304527,-1.3542578)"><g id="g317379" transform="translate(-4.9999562e-8,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient317433);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect313837" width="132.38281" height="25.118452" x="124.99999" y="42.499996" transform="matrix(0.26458333,0,0,0.26458333,1.8610598e-8,-1.9843741)" ry="0"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.1074741,-1.8015517)" id="text314150" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect314152);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345065">Jailbreak</tspan></text></g><g id="g320048"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path319793" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path320041" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path320043" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g><g id="g320076" transform="translate(-0.6304527,36.90592)"><g id="g320066" transform="translate(-4.9999562e-8,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient320080);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect320060" width="132.38281" height="25.513048" x="124.99999" y="42.499996" transform="matrix(0.26458333,0,0,0.26458333,1.8610598e-8,-2.0522466)" ry="0"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,2.8180861,-2.3031585)" id="text320064" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect320078);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345067">Debugger</tspan></text></g><g id="g320074"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path320068" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path320070" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path320072" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g><g id="g321191" transform="translate(-0.6304527,75.15526)"><g id="g321181" transform="translate(-4.9999562e-8,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient321195);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect321175" width="132.38281" height="25.948605" x="124.99999" y="42.499996" transform="matrix(0.26458333,0,0,0.26458333,1.8610598e-8,-1.9843741)" ry="0"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,2.8180853,-1.8003459)" id="text321179" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect321193);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345069">Frida</tspan></text></g><g id="g321189"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path321183" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path321185" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path321187" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g></g><g id="g324215" transform="matrix(0.04882812,0,0,0.04882812,76.281245,40.416668)" style="stroke-width:5.41865"><path d="m 258.271,372.002 h -4.542 c -29.09,0 -53.208,-22.749 -54.906,-51.789 L 183.501,58.211 C 182.621,43.156 188.05,28.232 198.397,17.262 208.744,6.291 223.327,0 238.407,0 h 35.186 c 15.079,0 29.662,6.291 40.009,17.261 10.348,10.97 15.777,25.896 14.898,40.949 l -15.321,262.003 c -1.7,29.041 -25.819,51.789 -54.908,51.789 z" fill="#ff674f" id="path324180" style="fill:#ef6456;fill-opacity:1;stroke-width:17.7277"/><path d="m 258.271,372.002 c 29.09,0 53.208,-22.748 54.907,-51.789 L 328.499,58.21 C 329.379,43.156 323.949,28.231 313.602,17.261 303.255,6.291 288.672,0 273.593,0 H 256 v 372.002 z" fill="#f2472c" id="path324182" style="fill:#f2472c;fill-opacity:1;stroke-width:17.7277"/><g id="g329724" style="display:inline" sodipodi:insensitive="true"><path d="m 256,512 c -30.327,0 -55,-24.673 -55,-54.999 0,-30.327 24.673,-55 55,-55 30.327,0 55,24.673 55,54.999 0,30.327 -24.673,55 -55,55 z" fill="#ff674f" id="path324184" style="fill:#ef6456;fill-opacity:1;stroke-width:17.7277"/><path d="M 256,402.001 V 512 c 30.327,0 55,-24.673 55,-55 0,-30.326 -24.673,-54.999 -55,-54.999 z" fill="#f2472c" id="path324186" style="stroke-width:17.7277"/></g><g id="g329712" transform="matrix(0.47147316,0,0,0.47147316,98.120179,303.30358)" style="stroke-width:11.493"><path d="m 151.414,401.758 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 126.377,373.625 120,350 120,325.993 c 0,-24.008 6.377,-47.633 18.442,-68.32 4.173,-7.155 13.356,-9.577 20.514,-5.4 7.156,4.173 9.574,13.357 5.401,20.514 C 154.964,288.892 150,307.29 150,325.993 c 0,18.702 4.964,37.101 14.357,53.206 4.173,7.156 1.755,16.341 -5.401,20.515 -2.376,1.385 -4.977,2.044 -7.542,2.044 z" fill="#ff9300" id="path324188" style="fill:#ef6456;fill-opacity:1;stroke-width:37.6007"/><path d="m 99.545,431.889 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 69.189,394.632 60,360.589 60,325.993 c 0,-34.596 9.189,-68.639 26.574,-98.45 4.172,-7.156 13.357,-9.575 20.514,-5.401 7.157,4.174 9.575,13.358 5.401,20.515 C 97.776,267.885 90,296.702 90,325.993 c 0,29.291 7.776,58.108 22.489,83.337 4.173,7.156 1.755,16.341 -5.401,20.515 -2.377,1.385 -4.977,2.044 -7.543,2.044 z" fill="#ffb500" id="path324190" style="fill:#5d2e1f;fill-opacity:1;stroke-width:37.6007"/><path d="m 47.601,462.065 c -5.166,0 -10.191,-2.67 -12.978,-7.456 C 11.973,415.702 0,371.228 0,325.993 0,280.76 11.973,236.284 34.623,197.377 c 4.168,-7.159 13.351,-9.586 20.51,-5.416 7.159,4.168 9.584,13.351 5.417,20.51 C 40.564,246.801 30,286.056 30,325.993 c 0,39.937 10.564,79.192 30.55,113.521 4.168,7.159 1.743,16.342 -5.417,20.51 -2.373,1.382 -4.97,2.041 -7.532,2.041 z" fill="#ffe645" id="path324192" style="fill:#082361;fill-opacity:1;stroke-width:37.6007"/></g><g id="g329720" transform="matrix(-0.47147316,0,0,0.47147316,413.87983,303.30358)" style="stroke-width:11.493"><path d="m 151.414,401.758 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 126.377,373.625 120,350 120,325.993 c 0,-24.008 6.377,-47.633 18.442,-68.32 4.173,-7.155 13.356,-9.577 20.514,-5.4 7.156,4.173 9.574,13.357 5.401,20.514 C 154.964,288.892 150,307.29 150,325.993 c 0,18.702 4.964,37.101 14.357,53.206 4.173,7.156 1.755,16.341 -5.401,20.515 -2.376,1.385 -4.977,2.044 -7.542,2.044 z" fill="#ff9300" id="path329714" style="fill:#ef6456;fill-opacity:1;stroke-width:37.6007"/><path d="m 99.545,431.889 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 69.189,394.632 60,360.589 60,325.993 c 0,-34.596 9.189,-68.639 26.574,-98.45 4.172,-7.156 13.357,-9.575 20.514,-5.401 7.157,4.174 9.575,13.358 5.401,20.515 C 97.776,267.885 90,296.702 90,325.993 c 0,29.291 7.776,58.108 22.489,83.337 4.173,7.156 1.755,16.341 -5.401,20.515 -2.377,1.385 -4.977,2.044 -7.543,2.044 z" fill="#ffb500" id="path329716" style="fill:#5d2e1f;fill-opacity:1;stroke-width:37.6007"/><path d="m 47.601,462.065 c -5.166,0 -10.191,-2.67 -12.978,-7.456 C 11.973,415.702 0,371.228 0,325.993 0,280.76 11.973,236.284 34.623,197.377 c 4.168,-7.159 13.351,-9.586 20.51,-5.416 7.159,4.168 9.584,13.351 5.417,20.51 C 40.564,246.801 30,286.056 30,325.993 c 0,39.937 10.564,79.192 30.55,113.521 4.168,7.159 1.743,16.342 -5.417,20.51 -2.373,1.382 -4.97,2.041 -7.532,2.041 z" fill="#ffe645" id="path329718" style="fill:#082361;fill-opacity:1;stroke-width:37.6007"/></g></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-4.3695157,-34.137462)" id="text327887" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect327889);display:inline;opacity:1;fill:#f2472c;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="290" y="271.10395" id="tspan345071">User callback</tspan></text><g id="g329732" transform="matrix(-0.54601663,0.00596022,0.00596022,0.54601663,122.20109,42.974237)" style="stroke-width:1.83132"><path d="m 151.414,401.758 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 126.377,373.625 120,350 120,325.993 c 0,-24.008 6.377,-47.633 18.442,-68.32 4.173,-7.155 13.356,-9.577 20.514,-5.4 7.156,4.173 9.574,13.357 5.401,20.514 C 154.964,288.892 150,307.29 150,325.993 c 0,18.702 4.964,37.101 14.357,53.206 4.173,7.156 1.755,16.341 -5.401,20.515 -2.376,1.385 -4.977,2.044 -7.542,2.044 z" fill="#ff9300" id="path329726" style="fill:#082361;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 99.545,431.889 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 69.189,394.632 60,360.589 60,325.993 c 0,-34.596 9.189,-68.639 26.574,-98.45 4.172,-7.156 13.357,-9.575 20.514,-5.401 7.157,4.174 9.575,13.358 5.401,20.515 C 97.776,267.885 90,296.702 90,325.993 c 0,29.291 7.776,58.108 22.489,83.337 4.173,7.156 1.755,16.341 -5.401,20.515 -2.377,1.385 -4.977,2.044 -7.543,2.044 z" fill="#ffb500" id="path329728" style="fill:#082361;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 47.601,462.065 c -5.166,0 -10.191,-2.67 -12.978,-7.456 C 11.973,415.702 0,371.228 0,325.993 0,280.76 11.973,236.284 34.623,197.377 c 4.168,-7.159 13.351,-9.586 20.51,-5.416 7.159,4.168 9.584,13.351 5.417,20.51 C 40.564,246.801 30,286.056 30,325.993 c 0,39.937 10.564,79.192 30.55,113.521 4.168,7.159 1.743,16.342 -5.417,20.51 -2.373,1.382 -4.97,2.041 -7.532,2.041 z" fill="#ffe645" id="path329730" style="fill:#082361;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/></g><g id="g330859" transform="matrix(-0.39030657,-0.38187755,-0.38187755,0.39030657,114.55623,49.081724)" style="stroke-width:1.83132"><path d="m 151.414,401.758 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 126.377,373.625 120,350 120,325.993 c 0,-24.008 6.377,-47.633 18.442,-68.32 4.173,-7.155 13.356,-9.577 20.514,-5.4 7.156,4.173 9.574,13.357 5.401,20.514 C 154.964,288.892 150,307.29 150,325.993 c 0,18.702 4.964,37.101 14.357,53.206 4.173,7.156 1.755,16.341 -5.401,20.515 -2.376,1.385 -4.977,2.044 -7.542,2.044 z" fill="#ff9300" id="path330853" style="fill:#5d2e1f;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 99.545,431.889 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 69.189,394.632 60,360.589 60,325.993 c 0,-34.596 9.189,-68.639 26.574,-98.45 4.172,-7.156 13.357,-9.575 20.514,-5.401 7.157,4.174 9.575,13.358 5.401,20.515 C 97.776,267.885 90,296.702 90,325.993 c 0,29.291 7.776,58.108 22.489,83.337 4.173,7.156 1.755,16.341 -5.401,20.515 -2.377,1.385 -4.977,2.044 -7.543,2.044 z" fill="#ffb500" id="path330855" style="fill:#5d2e1f;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 47.601,462.065 c -5.166,0 -10.191,-2.67 -12.978,-7.456 C 11.973,415.702 0,371.228 0,325.993 0,280.76 11.973,236.284 34.623,197.377 c 4.168,-7.159 13.351,-9.586 20.51,-5.416 7.159,4.168 9.584,13.351 5.417,20.51 C 40.564,246.801 30,286.056 30,325.993 c 0,39.937 10.564,79.192 30.55,113.521 4.168,7.159 1.743,16.342 -5.417,20.51 -2.373,1.382 -4.97,2.041 -7.532,2.041 z" fill="#ffe645" id="path330857" style="fill:#5d2e1f;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/></g><g id="g330875" transform="matrix(-0.39030657,0.38187755,-0.38187755,-0.39030657,114.58291,57.797449)" style="stroke-width:1.83132"><path d="m 151.414,401.758 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 126.377,373.625 120,350 120,325.993 c 0,-24.008 6.377,-47.633 18.442,-68.32 4.173,-7.155 13.356,-9.577 20.514,-5.4 7.156,4.173 9.574,13.357 5.401,20.514 C 154.964,288.892 150,307.29 150,325.993 c 0,18.702 4.964,37.101 14.357,53.206 4.173,7.156 1.755,16.341 -5.401,20.515 -2.376,1.385 -4.977,2.044 -7.542,2.044 z" fill="#ff9300" id="path330869" style="fill:#ef6456;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 99.545,431.889 c -5.162,0 -10.184,-2.665 -12.972,-7.445 C 69.189,394.632 60,360.589 60,325.993 c 0,-34.596 9.189,-68.639 26.574,-98.45 4.172,-7.156 13.357,-9.575 20.514,-5.401 7.157,4.174 9.575,13.358 5.401,20.515 C 97.776,267.885 90,296.702 90,325.993 c 0,29.291 7.776,58.108 22.489,83.337 4.173,7.156 1.755,16.341 -5.401,20.515 -2.377,1.385 -4.977,2.044 -7.543,2.044 z" fill="#ffb500" id="path330871" style="fill:#ef6456;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/><path d="m 47.601,462.065 c -5.166,0 -10.191,-2.67 -12.978,-7.456 C 11.973,415.702 0,371.228 0,325.993 0,280.76 11.973,236.284 34.623,197.377 c 4.168,-7.159 13.351,-9.586 20.51,-5.416 7.159,4.168 9.584,13.351 5.417,20.51 C 40.564,246.801 30,286.056 30,325.993 c 0,39.937 10.564,79.192 30.55,113.521 4.168,7.159 1.743,16.342 -5.417,20.51 -2.373,1.382 -4.97,2.041 -7.532,2.041 z" fill="#ffe645" id="path330873" style="fill:#ef6456;fill-opacity:1;stroke-width:32.4654" transform="matrix(0.04882812,0,0,0.04882812,87.611268,2.7352504)"/></g></g><g id="g334905" transform="matrix(-1,0,0,1,345.74979,4.251815)"><g id="g334724"><g id="cydia-0" style="isolation:isolate;stroke-width:1.37583" transform="matrix(-0.19230769,0,0,0.19230769,165.46883,-50.63901)"><g id="g896-9" style="stroke-width:1.37583"><path d="M 59.21,384.685 C 52.786,383.127 47.278,377.772 45.639,371.491 45.051,369.239 45,365.174 45,320.17 c 0,-45.004 0.051,-49.069 0.639,-51.321 1.683,-6.448 7.496,-11.932 14.11,-13.311 2.773,-0.578 97.729,-0.578 100.502,0 6.614,1.379 12.427,6.863 14.11,13.311 0.588,2.252 0.639,6.317 0.639,51.321 0,45.004 -0.051,49.069 -0.639,51.321 -1.683,6.448 -7.496,11.932 -14.11,13.311 -2.99,0.623 -98.444,0.513 -101.041,-0.117 z" id="path875-9" fill="#5d2e1f" style="stroke-width:2.36614"/><g id="g302028-4" style="stroke-width:1.37583"><path d="m 117.991,365.337 c 16.201,-3.392 29.388,-14.971 34.512,-30.305 1.714,-5.126 2.261,-8.679 2.261,-14.676 0,-3.932 -0.196,-6.506 -0.665,-8.735 -3.925,-18.641 -17.617,-32.335 -36.294,-36.299 -4.352,-0.924 -13.116,-0.924 -17.469,0 -18.676,3.964 -32.368,17.658 -36.293,36.299 -0.915,4.345 -0.915,13.125 0,17.469 3.336,15.845 13.702,28.199 28.561,34.039 7.615,2.993 17.521,3.855 25.387,2.208 z" id="path873-5" fill="#ffffff" style="stroke-width:2.36614"/></g><path d="M 100.868,360.293 C 85.77,357.12 73.766,345.811 69.645,330.877 c -1.184,-4.29 -1.609,-11.963 -0.923,-16.655 1.838,-12.567 9.962,-23.851 21.653,-30.072 11.266,-5.995 26.125,-5.995 37.392,0 7.786,4.144 14.161,10.663 18.078,18.484 5.075,10.138 5.235,24.045 0.396,34.518 -4.522,9.788 -13.051,17.744 -23.009,21.466 -6.557,2.45 -15.492,3.119 -22.364,1.675 z" id="path871-1" fill="#5d2e1f" style="stroke-width:2.36614"/><g id="g302047-0" style="stroke-width:1.37583"><path d="m 124.495,346.447 8.363,-3.495 0.103,-5.258 c 0.057,-2.892 -0.045,-5.259 -0.226,-5.259 -0.181,0 -5.432,2.068 -11.668,4.595 l -11.338,4.596 -0.68,-1.158 c -0.374,-0.636 -1.315,-2.16 -2.091,-3.387 l -1.411,-2.23 -0.004,9.731 -0.003,9.731 5.296,-2.186 c 2.913,-1.202 9.06,-3.758 13.659,-5.68 z" id="path869-3" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 102.938,342.099 c 0,-8.08 -0.121,-11.522 -0.406,-11.522 -0.223,0 -3.237,0.931 -6.699,2.069 l -6.293,2.069 -2.407,-1.915 -2.407,-1.916 v 5.051 5.05 l 1.928,1.393 c 6.395,4.623 15.768,11.19 16.005,11.214 0.154,0.016 0.279,-5.156 0.279,-11.493 z" id="path867-7" fill="#faf9f9" style="stroke-width:2.36614"/><path d="m 135.744,328.388 c 0.227,-0.22 -1.43,-9.224 -1.772,-9.627 -0.068,-0.08 -22.907,8.379 -27.41,10.152 -0.358,0.141 -0.65,0.39 -0.65,0.554 0,0.254 3.489,6.339 5.036,8.782 0.498,0.788 0.631,0.742 12.508,-4.395 6.602,-2.855 12.132,-5.315 12.288,-5.466 z" id="path865-8" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 98.061,329.754 2.371,-0.891 -8.689,-7.427 c -4.78,-4.084 -8.893,-7.552 -9.142,-7.705 -0.447,-0.277 -7.724,5.418 -7.724,6.045 0,0.165 3.412,3.144 7.583,6.619 l 7.584,6.318 2.823,-1.034 c 1.553,-0.569 3.89,-1.435 5.194,-1.925 z" id="path863-8" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 117.053,322.777 c -0.012,-0.282 -7.147,-3.354 -7.784,-3.352 -0.997,0.003 -11.58,4.565 -11.276,4.86 0.165,0.16 1.437,1.194 2.828,2.298 l 2.529,2.008 6.856,-2.812 c 3.771,-1.546 6.852,-2.897 6.847,-3.002 z" id="path861-6" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 102.84,320.289 5.302,-2.111 v -1.977 c 0,-1.088 -0.126,-1.981 -0.279,-1.985 -0.153,-0.004 -2.746,1.036 -5.761,2.309 l -5.482,2.316 v 1.78 c 0,1.165 0.158,1.779 0.459,1.779 0.253,0 2.845,-0.95 5.761,-2.111 z" id="path859-0" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 118.992,319.705 c -0.088,-1.277 -0.189,-2.357 -0.224,-2.399 -0.034,-0.042 -1.937,-0.912 -4.229,-1.933 l -4.167,-1.857 v 2.026 c 0,1.115 -0.02,2.152 -0.044,2.305 -0.035,0.229 7.923,4.066 8.616,4.155 0.115,0.014 0.137,-1.019 0.048,-2.297 z" id="path857-4" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 95.115,319.891 -0.018,-1.765 -4.688,-3.345 c -6.179,-4.409 -5.758,-4.2 -5.616,-2.802 0.099,0.973 0.92,1.868 4.951,5.394 2.657,2.325 4.957,4.239 5.11,4.255 0.154,0.016 0.271,-0.766 0.261,-1.737 z" id="path855-6" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 127.163,319.342 4.711,-1.84 0.12,-2.941 c 0.066,-1.618 0.08,-2.941 0.031,-2.94 -0.05,0 -2.684,1.294 -5.854,2.875 l -5.764,2.875 0.005,1.307 c 0.003,0.718 0.107,1.687 0.232,2.153 0.267,0.999 -0.022,1.065 6.519,-1.489 z" id="path853-7" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 101.567,315.114 c 2.696,-1.145 5.021,-2.192 5.167,-2.327 0.273,-0.253 -11.548,-7.856 -12.215,-7.856 -0.733,0 -9.606,3.627 -9.548,3.903 0.053,0.253 11.272,8.363 11.569,8.363 0.069,0 2.33,-0.937 5.027,-2.083 z" id="path851-6" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 126.539,312.929 c 1.636,-0.756 3.377,-1.532 3.869,-1.725 0.829,-0.326 0.608,-0.528 -3.043,-2.769 l -3.938,-2.416 -6.249,3.141 -6.249,3.141 1.301,0.554 c 0.716,0.304 2.705,1.135 4.421,1.846 l 3.121,1.292 1.897,-0.846 c 1.043,-0.465 3.235,-1.463 4.87,-2.218 z" id="path849-0" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 139.331,307.388 c -0.257,-0.239 -15.928,-8.032 -16.153,-8.032 -0.114,0 -0.158,0.878 -0.096,1.952 l 0.112,1.951 5.195,3.234 c 5.434,3.382 6.141,3.998 6.141,5.349 0,0.674 0.447,0.359 2.478,-1.744 1.362,-1.411 2.408,-2.631 2.323,-2.71 z" id="path847-9" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 88.925,305.222 5.651,-2.415 1.553,1.062 c 0.855,0.584 1.649,1.062 1.766,1.062 0.116,0 0.211,-1.303 0.211,-2.896 v -2.896 l 3.171,-1.428 c 1.745,-0.786 3.115,-1.484 3.047,-1.553 -0.096,-0.096 -11.027,4.215 -23.201,9.152 l -0.816,0.331 1.373,2.966 1.374,2.967 0.11,-1.969 0.11,-1.968 z" id="path845-7" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 108.414,306.348 c -0.207,-0.511 -8.385,-4.95 -8.644,-4.691 -0.082,0.082 -0.029,1.219 0.116,2.528 l 0.265,2.379 3.902,2.345 3.903,2.345 0.327,-2.209 c 0.18,-1.215 0.239,-2.428 0.131,-2.697 z" id="path843-5" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 115.801,308.063 5.349,-2.815 v -2.202 c 0,-1.53 -0.142,-2.194 -0.464,-2.174 -0.256,0.015 -2.723,1.144 -5.483,2.508 l -5.017,2.48 -0.11,2.509 c -0.061,1.38 -10e-4,2.509 0.133,2.509 0.134,0 2.65,-1.267 5.592,-2.815 z" id="path841-9" fill="#ffffff" style="stroke-width:2.36614"/><path d="m 114.832,301.982 5.017,-2.538 -1.301,-0.548 c -0.715,-0.301 -2.752,-1.18 -4.526,-1.953 l -3.227,-1.405 -4.579,1.976 c -2.518,1.087 -4.721,2.096 -4.895,2.244 -0.315,0.267 7.415,4.819 8.121,4.782 0.205,-0.011 2.63,-1.162 5.39,-2.558 z" id="path837-7" fill="#ffffff" style="stroke-width:2.36614"/></g></g></g><g id="debug-8" style="isolation:isolate;stroke-width:1.5291" transform="matrix(-0.17303175,0,0,0.17303175,163.04567,-2.7189643)"><g id="g305879-5" style="stroke-width:1.5291"><path d="m 123.194,265.125 c -0.891,-10e-4 -1.714,-0.478 -2.158,-1.252 -0.443,-0.773 -0.44,-1.725 0.01,-2.495 l 17.437,-29.893 c 0.447,-0.764 1.265,-1.235 2.151,-1.235 h 12.455 c 1.376,0 2.491,1.115 2.491,2.491 0,1.376 -1.115,2.491 -2.491,2.491 h -11.023 l -16.718,28.657 c -0.447,0.766 -1.267,1.237 -2.154,1.236 z" id="path305869-3" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 140.634,369.75 h -9.964 c -1.218,0 -2.257,-0.88 -2.457,-2.082 l -4.983,-29.892 c -0.153,-0.881 0.178,-1.776 0.867,-2.346 0.689,-0.57 1.631,-0.727 2.467,-0.411 0.836,0.315 1.44,1.055 1.581,1.938 l 4.635,27.811 h 7.854 c 1.376,0 2.491,1.115 2.491,2.491 0,1.376 -1.115,2.491 -2.491,2.491 z" id="path305871-3" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 43.482,347.33 c -1.376,0 -2.491,-1.115 -2.491,-2.491 v -12.455 c 0,-0.757 0.344,-1.472 0.934,-1.945 L 66.836,310.51 c 1.074,-0.86 2.642,-0.686 3.502,0.388 0.86,1.075 0.686,2.643 -0.388,3.503 l -23.977,19.181 v 11.257 c 0,1.376 -1.115,2.491 -2.491,2.491 z" id="path305873-8" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 70.882,265.125 c -0.492,0 -0.972,-0.146 -1.38,-0.419 l -14.946,-9.964 c -0.693,-0.462 -1.109,-1.24 -1.11,-2.072 v -17.438 c 0,-1.376 1.116,-2.491 2.491,-2.491 1.376,0 2.492,1.115 2.492,2.491 v 16.105 l 13.837,9.224 c 0.913,0.61 1.32,1.745 1.002,2.796 -0.319,1.051 -1.288,1.769 -2.386,1.768 z" id="path305875-3" fill="#dadcde" style="stroke-width:2.9227"/><path d="m 168.036,324.911 h -24.911 c -1.376,0 -2.491,-1.116 -2.491,-2.491 0,-1.376 1.115,-2.491 2.491,-2.491 h 24.911 c 1.375,0 2.491,1.115 2.491,2.491 0,1.375 -1.116,2.491 -2.491,2.491 z" id="path305877-7" fill="#dadcde" style="stroke-width:2.9227"/></g><path d="m 163.054,307.473 v -14.946 h -10.587 c -1.145,-6.815 -3.856,-13.27 -7.922,-18.857 l 6.053,-6.054 -9.964,-9.964 -6.054,6.053 c -5.587,-4.065 -12.042,-6.777 -18.857,-7.922 v -10.587 h -14.946 v 10.587 c -6.815,1.145 -13.27,3.856 -18.857,7.922 l -6.054,-6.053 -9.964,9.964 6.053,6.054 c -4.065,5.587 -6.777,12.042 -7.922,18.857 H 53.446 v 14.946 h 10.587 c 1.145,6.815 3.856,13.27 7.922,18.857 l -6.053,6.054 9.964,9.964 6.054,-6.053 c 5.587,4.065 12.042,6.777 18.857,7.922 v 10.587 h 14.946 v -10.587 c 6.815,-1.145 13.27,-3.856 18.857,-7.922 l 6.054,6.053 9.964,-9.964 -6.053,-6.054 c 4.065,-5.587 6.777,-12.042 7.922,-18.857 z" id="path305881-9" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="108.25" cy="300" r="34.875" id="Ellipse-3" fill="#eefafe" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="158.07143" cy="232.74107" r="4.9821429" id="circle305884-7" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="145.61607" cy="367.25894" r="4.9821429" id="circle305886-8" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="43.482143" cy="347.33035" r="4.9821429" id="circle305888-7" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="173.01785" cy="322.41965" r="4.9821429" id="circle305890-4" fill="#082361" style="stroke-width:2.9227"/><circle vector-effect="non-scaling-stroke" cx="55.9375" cy="232.74107" r="4.9821429" id="circle305892-1" fill="#082361" style="stroke-width:2.9227"/><path d="m 79.396,308.519 v -15.856 h 3.19 v 13.363 h 6.628 v 2.493 z m 12.59,0 v -15.856 h 3.19 v 13.363 h 6.628 v 2.493 z m 19.475,0 h -6.885 v -15.856 h 6.875 v 0 q 2.299,0 3.566,0.736 v 0 0 q 1.268,0.736 1.773,1.987 v 0 0 q 0.505,1.252 0.505,2.809 v 0 4.867 0 q 0,1.579 -0.532,2.814 v 0 0 q -0.532,1.235 -1.8,1.939 v 0 0 q -1.267,0.704 -3.502,0.704 z m -3.695,-13.374 v 10.892 h 3.416 v 0 q 1.687,0 2.304,-0.623 v 0 0 q 0.618,-0.623 0.618,-1.944 v 0 -5.694 0 q 0,-1.289 -0.628,-1.96 v 0 0 q -0.629,-0.671 -2.294,-0.671 v 0 z m 20.163,13.374 h -6.875 v -15.856 h 6.102 v 0 q 2.223,0 3.443,0.451 v 0 0 q 1.219,0.451 1.697,1.37 v 0 0 q 0.478,0.918 0.478,2.347 v 0 0 q 0,1.214 -0.397,1.977 v 0 0 q -0.398,0.762 -1.633,1.074 v 0 0 q 1.095,0.15 1.681,0.66 v 0 0 q 0.585,0.511 0.806,1.316 v 0 0 q 0.22,0.806 0.22,1.848 v 0 0 q 0,2.492 -1.284,3.652 v 0 0 q -1.284,1.161 -4.238,1.161 z m -3.684,-13.675 v 4.2 h 3.298 v 0 q 0.934,0 1.348,-0.247 v 0 0 q 0.413,-0.247 0.521,-0.736 v 0 0 q 0.107,-0.489 0.107,-1.198 v 0 0 q 0,-0.838 -0.193,-1.273 v 0 0 q -0.194,-0.435 -0.741,-0.59 v 0 0 q -0.548,-0.156 -1.633,-0.156 v 0 z m 0,6.123 v 5.317 h 3.093 v 0 q 1.247,0 1.875,-0.204 v 0 0 q 0.628,-0.204 0.843,-0.779 v 0 0 q 0.215,-0.574 0.215,-1.67 v 0 0 q 0,-0.795 -0.156,-1.391 v 0 0 q -0.155,-0.596 -0.709,-0.935 v 0 0 q -0.553,-0.338 -1.745,-0.338 v 0 z" id="Compound Path-8-9" fill="#082361" style="stroke-width:2.9227"/></g><g id="g312049-0" transform="matrix(-0.56242975,0,0,0.56242975,220.93772,55.811834)" style="stroke-width:1.778"><circle style="opacity:1;fill:#ef6456;fill-opacity:1;stroke:none;stroke-width:3.556;stroke-linecap:square;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" id="path308341-9" transform="matrix(0.26458333,0,0,0.26458333,-1.3481375,32.422202)" cy="89.999992" cx="520" r="83.999992"/><g id="g298608-8" transform="matrix(0.16905373,0,0,0.16905373,65.469304,27.580092)" style="stroke-width:2.78271">
	<path fill="#ef6456" d="m 9,7 v 9.8 h 19 v 7.4 H 9 V 39 H 0 V 0 H 28.1 L 28,7 Z" id="path298598-8" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 51.4,39 H 41.3 L 49.7,26.1 C 44.9,23.8 42.3,19.6 42.3,13.5 42.3,4.8 48.2,0 58.5,0 H 76 V 39 H 67 V 28 H 58.5 57.7 Z M 67,20 V 7 h -8.5 c -4.9,0 -7.7,2 -7.7,6.4 0,4.5 2.8,6.6 7.7,6.6 z" id="path298600-5" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 92,39 V 0 h 9 v 39 z" id="path298602-8" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="M 134.8,0 C 147,0 155.6,7.8 155.6,19.5 155.6,31.1 147,39 134.5,39 H 118 V 0 Z M 127,32 h 8 c 6.6,0 11.4,-5.2 11.4,-12.4 C 146.4,12.3 141.3,7 134.6,7 H 127 Z" id="path298604-4" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
	<path fill="#ef6456" d="m 173.5,31 -3.1,8 h -9.2 L 178.3,0 h 9.2 l 16.9,39 h -9.5 l -3.1,-8 z M 182.7,8.7 176.4,24 h 12.5 z" id="path298606-3" style="fill:#fafafa;fill-opacity:1;stroke-width:2.78271" transform="translate(316.39999,150)"/>
</g></g><g id="g317386-7" transform="translate(128.51294,-0.9445234)"><g id="g320058-1" transform="translate(-0.6304527,-1.3542578)"><g id="g317379-3" transform="matrix(-1,0,0,1,101.17211,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient334572);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect313837-8" width="132.38281" height="25.118452" x="124.99999" y="42.499996" transform="matrix(-0.26458333,0,0,0.26458333,101.17211,-1.9843741)" ry="0"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.1074741,-1.8015517)" id="text314150-0" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect314152-7);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345073">Jailbreak</tspan></text></g><g id="g320048-9"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path319793-7" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path320041-9" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path320043-9" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g><g id="g320076-3" transform="translate(-0.6304527,36.90592)"><g id="g320066-2" transform="translate(-4.9999562e-8,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient334574);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect320060-4" width="132.38281" height="25.513048" x="124.99999" y="42.499996" transform="matrix(0.26458333,0,0,0.26458333,1.8610598e-8,-2.0522466)" ry="0"/><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,97.676764,-2.3031585)" id="text320064-3" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect320078-5);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345075">Debugger</tspan></text></g><g id="g320074-7"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path320068-1" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path320070-2" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#082361;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path320072-2" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g><g id="g321191-0" transform="translate(-0.6304527,75.15526)"><g id="g321181-2" transform="translate(-4.9999562e-8,0.66145864)"><rect style="opacity:1;fill:url(#linearGradient317433-1);fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect321175-1" width="132.38281" height="25.948605" x="124.99999" y="42.499996" transform="matrix(0.26458333,0,0,0.26458333,1.8610598e-8,-1.9843741)" ry="0"/><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,86.315851,-1.8003459)" id="text321179-7" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect321193-9);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="135" y="61.103946" id="tspan345077">Frida</tspan></text><path style="opacity:1;fill:none;fill-opacity:1;stroke:#5d2e1f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 559.99997,59.999997 h -10 v 39.999998 h -20" id="path341505" transform="matrix(-0.26458333,0,0,0.26458333,217.8673,-79.12401)"/></g><g id="g321189-5"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 129.99999,79.999996 h -5 V 44.999998 h 5" id="path321183-1" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,44.999998 h 40" id="path321185-7" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef6456;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 134.99999,79.999996 h 40" id="path321187-4" transform="matrix(0.26458333,0,0,0.26458333,-1.3229174,-3.3072917)"/></g></g></g></g></g><g id="Layer_11" data-name="Layer 11" transform="matrix(0.45454545,0,0,0.45454545,117.99715,14.429923)" style="stroke-width:6.20889"><path d="M 45,8 H 29 a 1.07,1.07 0 0 0 -0.91,0.58 l -2.74,6 -2.28,5 a 1,1 0 0 0 0.1,1 l 4.75,6.54 -4.84,11.49 A 1,1 0 0 0 24,40 h 21 a 1,1 0 0 0 1,-1 V 9 A 1,1 0 0 0 45,8 Z m -1,6 H 27.84 l 1.82,-4 H 44 Z m 0,24 H 25.51 L 30,27.39 a 1,1 0 0 0 -0.11,-1 L 25.15,19.86 26.92,16 H 44 Z" id="path337814" style="fill:#5d2e1f;fill-opacity:1;stroke-width:6.20889"/><g id="g339822"><path d="M 6,11 A 1,1 0 1 0 7,12 1,1 0 0 0 6,11 Z" id="path337816" style="fill:#82412b;fill-opacity:1;stroke-width:6.20889"/><path d="m 9,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path337818" style="fill:#82412b;fill-opacity:1;stroke-width:6.20889"/><path d="m 12,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path337820" style="fill:#82412b;fill-opacity:1;stroke-width:6.20889"/><path d="M 24.81,27.42 20.14,20.87 24.94,9.39 A 1,1 0 0 0 24,8 H 3 A 1,1 0 0 0 2,9 v 30 a 1,1 0 0 0 1,1 h 15.51 a 1,1 0 0 0 0.89,-0.55 l 5.49,-11 A 1,1 0 0 0 24.81,27.42 Z M 4,10 h 18.52 l -1.68,4 H 4 Z M 17.89,38 H 4 V 16 h 16 l -1.93,4.61 a 1,1 0 0 0 0.11,1 l 4.65,6.51 z" id="path337822" style="fill:#82412b;fill-opacity:1;stroke-width:6.20889"/></g></g><g id="g338210" data-name="Layer 11" transform="matrix(0.45454545,0,0,0.45454545,117.99715,42.007573)" style="stroke-width:6.20889"><path d="M 45,8 H 29 a 1.07,1.07 0 0 0 -0.91,0.58 l -2.74,6 -2.28,5 a 1,1 0 0 0 0.1,1 l 4.75,6.54 -4.84,11.49 A 1,1 0 0 0 24,40 h 21 a 1,1 0 0 0 1,-1 V 9 A 1,1 0 0 0 45,8 Z m -1,6 H 27.84 l 1.82,-4 H 44 Z m 0,24 H 25.51 L 30,27.39 a 1,1 0 0 0 -0.11,-1 L 25.15,19.86 26.92,16 H 44 Z" id="path338200" style="fill:#05173f;fill-opacity:1;stroke-width:6.20889"/><g id="g339828"><path d="M 6,11 A 1,1 0 1 0 7,12 1,1 0 0 0 6,11 Z" id="path338202" style="fill:#082361;fill-opacity:1;stroke-width:6.20889"/><path d="m 9,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path338204" style="fill:#082361;fill-opacity:1;stroke-width:6.20889"/><path d="m 12,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path338206" style="fill:#082361;fill-opacity:1;stroke-width:6.20889"/><path d="M 24.81,27.42 20.14,20.87 24.94,9.39 A 1,1 0 0 0 24,8 H 3 A 1,1 0 0 0 2,9 v 30 a 1,1 0 0 0 1,1 h 15.51 a 1,1 0 0 0 0.89,-0.55 l 5.49,-11 A 1,1 0 0 0 24.81,27.42 Z M 4,10 h 18.52 l -1.68,4 H 4 Z M 17.89,38 H 4 V 16 h 16 l -1.93,4.61 a 1,1 0 0 0 0.11,1 l 4.65,6.51 z" id="path338208" style="fill:#082361;fill-opacity:1;stroke-width:6.20889"/></g></g><g id="g338222" data-name="Layer 11" transform="matrix(0.45454545,0,0,0.45454545,118.4517,70.453594)" style="stroke-width:6.20889"><path d="M 45,8 H 29 a 1.07,1.07 0 0 0 -0.91,0.58 l -2.74,6 -2.28,5 a 1,1 0 0 0 0.1,1 l 4.75,6.54 -4.84,11.49 A 1,1 0 0 0 24,40 h 21 a 1,1 0 0 0 1,-1 V 9 A 1,1 0 0 0 45,8 Z m -1,6 H 27.84 l 1.82,-4 H 44 Z m 0,24 H 25.51 L 30,27.39 a 1,1 0 0 0 -0.11,-1 L 25.15,19.86 26.92,16 H 44 Z" id="path338212" style="fill:#ef4b3b;fill-opacity:1;stroke-width:6.20889"/><g id="g339834" style="fill:#ef6456;fill-opacity:1"><path d="M 6,11 A 1,1 0 1 0 7,12 1,1 0 0 0 6,11 Z" id="path338214" style="fill:#ef6456;fill-opacity:1;stroke-width:6.20889"/><path d="m 9,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path338216" style="fill:#ef6456;fill-opacity:1;stroke-width:6.20889"/><path d="m 12,11 a 1,1 0 1 0 1,1 1,1 0 0 0 -1,-1 z" id="path338218" style="fill:#ef6456;fill-opacity:1;stroke-width:6.20889"/><path d="M 24.81,27.42 20.14,20.87 24.94,9.39 A 1,1 0 0 0 24,8 H 3 A 1,1 0 0 0 2,9 v 30 a 1,1 0 0 0 1,1 h 15.51 a 1,1 0 0 0 0.89,-0.55 l 5.49,-11 A 1,1 0 0 0 24.81,27.42 Z M 4,10 h 18.52 l -1.68,4 H 4 Z M 17.89,38 H 4 V 16 h 16 l -1.93,4.61 a 1,1 0 0 0 0.11,1 l 4.65,6.51 z" id="path338220" style="fill:#ef6456;fill-opacity:1;stroke-width:6.20889"/></g><path style="opacity:1;fill:none;fill-opacity:1;stroke:#ef4b3b;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 559.99997,349.99998 h -74.99999 v -10" id="path340133" transform="matrix(0.58208334,0,0,0.58208334,-260.59374,-154.99791)"/><text xml:space="preserve" transform="matrix(0.58208334,0,0,0.58208334,-273.0843,-213.98678)" id="text340310" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect340312);display:inline;opacity:1;fill:#ef4b3b;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="485" y="376.10395" id="tspan345079">Crash</tspan></text><text xml:space="preserve" transform="matrix(0.58208334,0,0,0.58208334,-272.93918,-275.10553)" id="text340531" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect340533);display:inline;opacity:1;fill:#082361;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="485" y="376.10395" id="tspan345081">Crash</tspan></text><text xml:space="preserve" transform="matrix(0.58208334,0,0,0.58208334,-273.0843,-336.22428)" id="text340606" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:18.6667px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect340608);display:inline;opacity:1;fill:#82412b;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="485" y="376.10395" id="tspan345083">Crash</tspan></text><path style="opacity:1;fill:#05173f;fill-opacity:1;stroke:#05173f;stroke-width:2;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" d="m 559.99997,199.99999 h -30" id="path340992" transform="matrix(0.58208334,0,0,0.58208334,-260.59374,-154.99791)"/></g><path style="opacity:1;fill:url(#linearGradient342779);fill-opacity:1;stroke:url(#linearGradient343226);stroke-width:1.99937;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:15.995, 7.99748;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" d="m 437.49996,24.999986 -45,349.999984" id="path341970" transform="matrix(0.26458333,0,0,0.26458333,-0.66145166,3.4447916e-6)" sodipodi:nodetypes="cc"/></g></svg>

<br />
<br />
<figcaption>Figure 11 - RASP Reaction: User Callback vs Crash</figure>
</figure>
<br />
</center>
</div>
<p>We can&rsquo;t actually hook a function to bypass the RASP checks <strong>but</strong> the structure of the AArch64 instructions
has a valuable property:</p>
<div class="admonition hint">
<p><center>
<p>
<b>The size of an AArch64 instruction is fixed</b>
</p>
</center>
</p>
</div>
<p>As a consequence, we can <strong>linearly</strong> search the <span class="dark-boxed text-white">SVC <span class="dark-blue">#80</span></span>
instructions which are encoded as <span class="dark-boxed text-white">0xD4001001</span>.</p>
<h3 id="interception">Interception</h3>
<p>Let&rsquo;s consider the following approach to intercept the syscalls:</p>
<ol>
<li>We linearly scan the <code>__text</code> section to find the <code>SVC</code> instructions (i.e. the four-bytes <code>0xD4001001</code>)</li>
<li>We replace this instruction with a branch (<code>BL #imm</code>) to a function we <em>control</em></li>
<li>We process the redirection to disable the RASP checks</li>
</ol>
<p>For the first point, thanks to the fixed instruction&rsquo;s size, we can search syscalls by reading the whole <code>__text</code> section:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> <span style="color:#b00040">uint32_t</span> SVC         <span style="color:#666">=</span> <span style="color:#666">0xD4001001</span>; <span style="color:#408080;font-style:italic">// SVC #0x80
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> size_t   SIZEOF_INST <span style="color:#666">=</span> <span style="color:#666">4</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> (size_t addr <span style="color:#666">=</span> text_start; addr <span style="color:#666">&lt;</span> text_end; addr <span style="color:#666">+=</span> SIZEOF_INST) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Read the instruction
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">auto</span> inst <span style="color:#666">=</span> <span style="color:#666">*</span><span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">uint32_t</span><span style="color:#666">*&gt;</span>(addr);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (inst <span style="color:#666">!=</span> SVC) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">continue</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// We found a syscall instruction at: `addr`
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>For the second point, on a syscall instruction, we have to patch the syscall with a branch.
To do so, Frida&rsquo;s <code>gum_memory_patch_code</code> is pretty convenient:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span><span style="color:#666">*</span> svc_addr <span style="color:#666">=</span> <span style="color:#408080;font-style:italic">/* Address of the syscall to patch */</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>gum_memory_patch_code(svc_addr, <span style="color:#408080;font-style:italic">/* sizeof an arm64 inst */</span> <span style="color:#666">4</span>,
</span></span><span style="display:flex;"><span>                      [] (<span style="color:#b00040">void</span><span style="color:#666">*</span> addr, <span style="color:#b00040">void</span><span style="color:#666">*</span>) {
</span></span><span style="display:flex;"><span>                        GumArm64Writer<span style="color:#666">*</span> writer <span style="color:#666">=</span> gum_arm64_writer_new(addr);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>                        <span style="color:#408080;font-style:italic">/* Transform a SVC #0x80 into BL #AABBCC */</span>
</span></span><span style="display:flex;"><span>                        gum_arm64_writer_put_bl_imm(writer, <span style="color:#666">0xAABBCC</span>);
</span></span><span style="display:flex;"><span>                      }, <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>The pending question is where to branch the new <code>BL</code> instruction instead of <code>0xAABBCC</code>?</p>
<p>Ideally, we would like to jump on our own dedicated stub:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">handler</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  gum_arm64_writer_put_bl_imm(writer, <span style="color:#666">&amp;</span>handler);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><b><u>But</u></b>, the <code>bl #imm</code> instruction only accepts an immediate value in the range of <code>]-0x8000000; 0x8000000[</code>.
This range might be too narrow to encode our absolute pointer <code>&amp;handler</code>.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfffe; color: #004b32;">
  <span class="fas fa-binary" style="color: #004b32" >&#160;</span>
  The BL instruction encodes the <strong>signed</strong> <code>#imm</code> as a multiple of 4 on 26 bits. Thus, and because of the sign bit,
this <code>#imm</code> can range from: <code>±1 &lt;&lt; (26 + 2 - 1);</code>
</div>
<p>We can actually workaround this restriction by using a <em>trampoline</em> located <strong>in the library</strong> where the RASP checks occur.
It is quite common for large binary to find small functions with one or two instructions that are not likely or rarely used:</p>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/small_func_1.webp" alt="Small C++ vtable function" />
<br />
<figcaption>Figure 12 - Small C++ vtable function</figure>
</figure>
<br />
</center>
<center>
<figure>
<img class="lightense" data-lightense-background="#949494" src="/post/22-09-ios-obfuscation-syscall-hooking/imgs/small_func_2.webp" alt="Small C++ vtable function" />
<br />
<figcaption>Figure 13 - Small C++ vtable function</figure>
</figure>
<br />
</center>
<p>The idea is to use one of these functions as a placeholder to write <strong>two instructions</strong> which enables to branch
an <strong>absolute address</strong>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#00f">LDR</span>   <span style="color:#800">x15</span>, <span style="">=&amp;</span><span style="color:#800">handler</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">BR</span>    <span style="color:#800">x15</span>
</span></span></code></pre></div><p>Since this placeholder function is located within the library where the syscalls take place,
we can <code>BL #imm</code> to this function without risking too much that <code>#imm</code> overflows the range <code>]-0x8000000; 0x8000000[</code>.</p>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="825" height="400" viewBox="0 0 218.28125 105.83333" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="svc_hook_1.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/></sodipodi:namedview><defs id="defs2"><meshgradient id="meshgradient269333" gradientUnits="userSpaceOnUse" x="13.999999" y="13.999999"><meshrow id="meshrow269335"><meshpatch id="meshpatch269337"><stop path="c 162.333,0  324.667,0  487,0" style="stop-color:#e92f2f;stop-opacity:1" id="stop269339"/><stop path="c 0,124  0,248  0,372" style="stop-color:#01b5d1;stop-opacity:1" id="stop269341"/><stop path="c -162.333,0  -324.667,0  -487,0" style="stop-color:#c364fc;stop-opacity:1" id="stop269343"/><stop path="c 0,-124  0,-248  0,-372" style="stop-color:#00ff66;stop-opacity:1" id="stop269345"/></meshpatch></meshrow></meshgradient><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect234635"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238031"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238035"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238039"/><rect x="39.999996" y="290" width="184.99998" height="39.999996" id="rect239763"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243638"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243640"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243642"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243644"/><rect x="39.999996" y="290" width="184.99998" height="39.999996" id="rect243646"/><linearGradient xlink:href="#linearGradient274115" id="linearGradient274117" x1="449.99997" y1="50" x2="469.99997" y2="300" gradientUnits="userSpaceOnUse"/><linearGradient id="linearGradient274115"><stop style="stop-color:#01b5d1;stop-opacity:1;" offset="0" id="stop274111"/><stop style="stop-color:#c364fc;stop-opacity:1;" offset="1" id="stop274113"/></linearGradient><linearGradient xlink:href="#linearGradient261993" id="linearGradient261995" x1="228.99998" y1="214.99998" x2="280" y2="214.99998" gradientUnits="userSpaceOnUse"/><linearGradient id="linearGradient261993"><stop style="stop-color:#e92f2f;stop-opacity:1;" offset="0" id="stop261989"/><stop style="stop-color:#01b5d1;stop-opacity:1;" offset="1" id="stop261991"/></linearGradient><linearGradient xlink:href="#linearGradient261328" id="linearGradient261330" x1="228.99998" y1="329.99997" x2="280" y2="330" gradientUnits="userSpaceOnUse"/><linearGradient id="linearGradient261328"><stop style="stop-color:#00ff66;stop-opacity:1;" offset="0" id="stop261324"/><stop style="stop-color:#c364fc;stop-opacity:1;" offset="1" id="stop261326"/></linearGradient><linearGradient xlink:href="#linearGradient261993" id="linearGradient6307" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient6309" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient6311" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/></defs><g id="layer1"><g id="g163140" transform="translate(39.687505,-6.6145826)" style="display:inline"><rect style="opacity:1;fill:none;fill-opacity:1;stroke:url(#meshgradient269333);stroke-width:1.99937;stroke-linecap:square;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect252596" width="484.99997" height="370" x="14.999999" y="14.999999" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g241251"><rect style="fill:#353333;fill-opacity:1;stroke:#e92f2f;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect146355" width="199.99998" height="350" x="24.999998" y="49.999996" transform="matrix(0.26458333,0,0,0.26458333,1.3229168,9.6041667e-7)"/><g id="g241236"><rect style="fill:#5b4a4a;fill-opacity:1;stroke:#e92f2f;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect233849" width="179.99998" height="204.99998" x="35" y="35" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g241228"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,6.6145835)" id="text234633" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect234635);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6669">0x169F8: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,21.698017)" id="text238029" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238031);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6671">0x20EF0: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,36.781451)" id="text238033" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238035);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6673">0x6DB64: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,51.864884)" id="text238037" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238039);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6675">0xA4964: SVC #0x80</tspan></text></g></g><g id="g241222" transform="translate(1.068611e-6,5.2916664)"><rect style="fill:#415c3e;fill-opacity:1;stroke:#00ff66;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect233853" width="179.99998" height="45" x="35" y="329.99997" transform="matrix(0.26458333,0,0,0.26458333,1.3229162,-5.2916615)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.0500635,6.0733635)" id="text239761" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect239763);display:inline;fill:#00ff66;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="303.80336" id="tspan6677">sub sp, sp, #10
</tspan><tspan x="40" y="323.80336" id="tspan6679">add sp, sp, #10</tspan></text></g></g><g id="g243636" transform="translate(70.114579)"><rect style="fill:#353333;fill-opacity:1;stroke:#01b5d1;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect243612" width="199.99998" height="350" x="24.999998" y="49.999996" transform="matrix(0.26458333,0,0,0.26458333,1.3229168,9.6041667e-7)"/><g id="g243626"><rect style="fill:#26393b;fill-opacity:0.980392;stroke:#01b5d1;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect243614" width="179.99998" height="204.99998" x="35" y="35" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g243624"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,6.6145835)" id="text243616" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243638);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6681">0x169F8: BL #140</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,21.698017)" id="text243618" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243640);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6683">0x20EF0: BL #120</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,36.781451)" id="text243620" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243642);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6685">0x6DB64: BL #80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,51.864884)" id="text243622" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243644);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan6687">0xA4964: BL #64</tspan></text></g></g><g id="g243634" transform="translate(1.068611e-6,5.2916664)"><rect style="fill:#382345;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect243628" width="179.99998" height="45" x="35" y="329.99997" transform="matrix(0.26458333,0,0,0.26458333,1.3229162,-5.2916615)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.0500635,6.0733635)" id="text243632" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243646);display:inline;fill:#c364fc;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="303.80336" id="tspan6689">LDR x15, =&amp;handler
</tspan><tspan x="40" y="323.80336" id="tspan6691">BR    x15</tspan></text><g id="path273820" transform="matrix(0.26458333,0,0,0.26458333,-68.791664,1.3229171)"><g id="g276245"><g id="path276247" transform="matrix(0,0.62429472,-0.62429472,0,464.99998,294.99999)"><path style="color:#000000;fill:#c364fc;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path276251"/><path style="color:#000000;fill:#c364fc;fill-opacity:1;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path276253"/></g></g><path style="color:#000000;fill:url(#linearGradient274117);stroke-linecap:square;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 449,49 v 2 h 1 14 v 53 h -14 -1 v 2 h 1 14 v 53 h -14 -1 v 2 h 1 14 v 58 h -14 -1 v 2 h 1 14 v 74 1 h 2 v -1 -74 -2 -58 -2 -53 -2 -55 h -16 z" id="path276255"/></g></g></g><g id="path261063" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"><g id="g265044"><g id="path265046" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path265050"/></g></g><path style="color:#000000;fill:url(#linearGradient6307);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path265054"/></g><g id="path261065" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"><g id="g267991"><g id="path267993" transform="matrix(0.62429472,0,0,0.62429472,279.99999,329.99999)"><path style="color:#000000;fill:#bf67f9;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267997"/></g></g><path style="color:#000000;fill:url(#linearGradient261330);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,329 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path268001"/></g><g id="g267296" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-6.879168)"><g id="g267292"><g id="g267290" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267288"/></g></g><path style="color:#000000;fill:url(#linearGradient6309);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267294"/></g><g id="g267314" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-22.489581)"><g id="g267310"><g id="g267308" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267306"/></g></g><path style="color:#000000;fill:url(#linearGradient6311);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267312"/></g><g id="g267332" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-37.041666)"><g id="g267328"><g id="g267326" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267324"/></g></g><path style="color:#000000;fill:url(#linearGradient261995);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267330"/></g></g><script id="mesh_polyfill" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></g><script id="script6693" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>

<figcaption>Fig 14. Syscall Patch</figcaption>
</figure>
</center>
<p>Now that we found a mechanism to redirect the syscall instruction, we can focus on the <code>handler</code> function
which aims at welcoming the syscall&rsquo;s redirection.</p>
<p>First, the <code>SVC</code> instructions are <em>atomic</em> which means that our <code>handler</code> function must take care
of not corrupting the values of the registers.</p>
<p>In particular, <code>handler</code> can&rsquo;t follow the ARM64 calling convention. If we consider the following instructions:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#00f">mov</span> <span style="color:#800">x6</span>, <span style="color:#408080;font-style:italic">#0
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">svc</span> <span style="color:#408080;font-style:italic">#0x80
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">mov</span> <span style="color:#800">x2</span>, <span style="color:#800">x6</span>
</span></span></code></pre></div><p><code>svc #0x80</code> does not corrupt <code>x6</code> while this code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#00f">mov</span> <span style="color:#800">x6</span>, <span style="color:#408080;font-style:italic">#0
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">BL</span> <span style="color:#408080;font-style:italic">#imm
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">mov</span> <span style="color:#800">x2</span>, <span style="color:#800">x6</span>
</span></span></code></pre></div><p>could corrupt <code>x6</code> according to the ARM64 calling convention. Therefore, our <code>handler()</code> function
must <strong>really</strong> mimic an interruption and take care of correctly saving/restoring the registers.</p>
<p>In other words, we must write a small assembly stub to save and restore the registers<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#00f">stp</span> <span style="color:#800">x0</span>,  <span style="color:#800">x1</span>,  [<span style="color:#800">sp</span>, -<span style="color:#666">16</span>]!
</span></span><span style="display:flex;"><span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">stp</span> <span style="color:#800">x28</span>, <span style="color:#800">x29</span>, [<span style="color:#800">sp</span>, -<span style="color:#666">16</span>]!
</span></span><span style="display:flex;"><span><span style="color:#00f">stp</span> <span style="color:#800">x30</span>, <span style="color:#800">xzr</span>, [<span style="color:#800">sp</span>, -<span style="color:#666">16</span>]!
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#00f">mov</span> <span style="color:#800">x0</span>, <span style="color:#800">sp</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#00f">bl</span> <span style="color:#800">_syscall_handler</span><span style="color:#408080;font-style:italic">;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#00f">ldp</span> <span style="color:#800">x30</span>, <span style="color:#800">xzr</span>, [<span style="color:#800">sp</span>], <span style="color:#666">16</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">ldp</span> <span style="color:#800">x28</span>, <span style="color:#800">x29</span>, [<span style="color:#800">sp</span>], <span style="color:#666">16</span>
</span></span><span style="display:flex;"><span><span style="color:#7d9029">...</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">ldp</span> <span style="color:#800">xzr</span>, <span style="color:#800">x1</span>,  [<span style="color:#800">sp</span>], <span style="color:#666">16</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">ret</span>
</span></span></code></pre></div><p>The <code>syscall_handler</code> function takes a pointer to the stack frame as a parameter. Thus, we can access the saved
registers:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">extern</span> <span style="color:#ba2121">&#34;C&#34;</span> {
</span></span><span style="display:flex;"><span>uintptr_t <span style="color:#00f">syscall_handler</span>(uintptr_t<span style="color:#666">*</span> sp) {
</span></span><span style="display:flex;"><span>  uintptr_t x16 <span style="color:#666">=</span> sp[<span style="color:#666">14</span>]; <span style="color:#408080;font-style:italic">// Syscall number
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">-</span><span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-hand-point-right" style="color: #084298" >&#160;</span>
  Apple prefixes (or mangles) symbols with a <strong><code>_</code></strong> this is why <code>syscall_handler</code> is referenced by <code>_syscall_handler</code> in the
assembly code.
</div>
<p>Given our <code>syscall_handler</code> function, we have access to the original AArch64 registers such as we can
access the syscall number and its parameters. We are also able to modify the return value since the original syscall
is replaced by a branch.</p>
<div class="col-lg-0" id="fig-3">
<center>
<figure>

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="786.99963" height="371.99936" viewBox="0 0 208.22699 98.424827" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="svc_hook.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/></sodipodi:namedview><defs id="defs2"><linearGradient id="linearGradient274115"><stop style="stop-color:#01b5d1;stop-opacity:1;" offset="0" id="stop274111"/><stop style="stop-color:#c364fc;stop-opacity:1;" offset="1" id="stop274113"/></linearGradient><linearGradient id="linearGradient261993"><stop style="stop-color:#e92f2f;stop-opacity:1;" offset="0" id="stop261989"/><stop style="stop-color:#01b5d1;stop-opacity:1;" offset="1" id="stop261991"/></linearGradient><linearGradient id="linearGradient261328"><stop style="stop-color:#00ff66;stop-opacity:1;" offset="0" id="stop261324"/><stop style="stop-color:#c364fc;stop-opacity:1;" offset="1" id="stop261326"/></linearGradient><rect x="600" y="354.99997" width="194.99998" height="24.999998" id="rect259647"/><rect x="605" y="34.999996" width="249.99998" height="204.99998" id="rect250676"/><rect x="39.999996" y="290" width="184.99998" height="39.999996" id="rect239763"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect234635"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238031"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238035"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect238039"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243638"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243640"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243642"/><rect x="39.999996" y="39.999996" width="254.99998" height="204.99998" id="rect243644"/><rect x="39.999996" y="290" width="184.99998" height="39.999996" id="rect243646"/><rect x="605" y="34.999996" width="249.99998" height="204.99998" id="rect252684"/><linearGradient xlink:href="#linearGradient261328" id="linearGradient261330" x1="228.99998" y1="329.99997" x2="280" y2="330" gradientUnits="userSpaceOnUse"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient261995" x1="228.99998" y1="214.99998" x2="280" y2="214.99998" gradientUnits="userSpaceOnUse"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient267298" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient267316" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/><linearGradient xlink:href="#linearGradient261993" id="linearGradient267334" gradientUnits="userSpaceOnUse" x1="228.99998" y1="214.99998" x2="280" y2="214.99998"/><meshgradient id="meshgradient269333" gradientUnits="userSpaceOnUse" x="13.999999" y="13.999999"><meshrow id="meshrow269335"><meshpatch id="meshpatch269337"><stop path="c 162.333,0  324.667,0  487,0" style="stop-color:#e92f2f;stop-opacity:1" id="stop269339"/><stop path="c 0,124  0,248  0,372" style="stop-color:#01b5d1;stop-opacity:1" id="stop269341"/><stop path="c -162.333,0  -324.667,0  -487,0" style="stop-color:#c364fc;stop-opacity:1" id="stop269343"/><stop path="c 0,-124  0,-248  0,-372" style="stop-color:#00ff66;stop-opacity:1" id="stop269345"/></meshpatch></meshrow></meshgradient><meshgradient id="meshgradient270279" gradientUnits="userSpaceOnUse" x="23.999998" y="48.999996"><meshrow id="meshrow270281"><meshpatch id="meshpatch270283"><stop path="c 67.3333,0  134.667,0  202,0" style="stop-color:#c364fc;stop-opacity:1" id="stop270285"/><stop path="c 0,109  0,218  0,327" style="stop-color:#01362b;stop-opacity:1" id="stop270287"/><stop path="c -67.3333,0  -134.667,0  -202,0" style="stop-color:#80ffe6;stop-opacity:1" id="stop270289"/><stop path="c 0,-109  0,-218  0,-327" style="stop-color:#382345;stop-opacity:1" id="stop270291"/></meshpatch></meshrow></meshgradient><linearGradient xlink:href="#linearGradient274115" id="linearGradient274117" x1="449.99997" y1="50" x2="469.99997" y2="300" gradientUnits="userSpaceOnUse"/></defs><g id="layer1" transform="translate(-3.7042496,-3.7042497)"><g id="g163140" transform="translate(-1.3229165,-6.6145835)"><rect style="opacity:1;fill:none;fill-opacity:1;stroke:url(#meshgradient269333);stroke-width:1.99937;stroke-linecap:square;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:markers stroke fill" id="rect252596" width="484.99997" height="370" x="14.999999" y="14.999999" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g241251"><rect style="fill:#353333;fill-opacity:1;stroke:#e92f2f;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect146355" width="199.99998" height="350" x="24.999998" y="49.999996" transform="matrix(0.26458333,0,0,0.26458333,1.3229168,9.6041667e-7)"/><g id="g241236"><rect style="fill:#5b4a4a;fill-opacity:1;stroke:#e92f2f;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect233849" width="179.99998" height="204.99998" x="35" y="35" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g241228"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,6.6145835)" id="text234633" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect234635);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280272">0x169F8: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,21.698017)" id="text238029" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238031);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280274">0x20EF0: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,36.781451)" id="text238033" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238035);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280276">0x6DB64: SVC #0x80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,51.864884)" id="text238037" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect238039);display:inline;fill:#e92f2f;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280278">0xA4964: SVC #0x80</tspan></text></g></g><g id="g241222" transform="translate(1.068611e-6,5.2916664)"><rect style="fill:#415c3e;fill-opacity:1;stroke:#00ff66;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect233853" width="179.99998" height="45" x="35" y="329.99997" transform="matrix(0.26458333,0,0,0.26458333,1.3229162,-5.2916615)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.0500635,6.0733635)" id="text239761" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect239763);display:inline;fill:#00ff66;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="303.80336" id="tspan280280">sub sp, sp, #10
</tspan><tspan x="40" y="323.80336" id="tspan280282">add sp, sp, #10</tspan></text></g></g><g id="g243636" transform="translate(70.114579)"><rect style="fill:#353333;fill-opacity:1;stroke:#01b5d1;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect243612" width="199.99998" height="350" x="24.999998" y="49.999996" transform="matrix(0.26458333,0,0,0.26458333,1.3229168,9.6041667e-7)"/><g id="g243626"><rect style="fill:#26393b;fill-opacity:0.980392;stroke:#01b5d1;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect243614" width="179.99998" height="204.99998" x="35" y="35" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"/><g id="g243624"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,6.6145835)" id="text243616" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243638);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280284">0x169F8: BL #140</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,21.698017)" id="text243618" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243640);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280286">0x20EF0: BL #120</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,36.781451)" id="text243620" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243642);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280288">0x6DB64: BL #80</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.3094794,51.864884)" id="text243622" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243644);display:inline;fill:#00b7d4;fill-opacity:0.980392;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="53.803357" id="tspan280290">0xA4964: BL #64</tspan></text></g></g><g id="g243634" transform="translate(1.068611e-6,5.2916664)"><rect style="fill:#382345;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill" id="rect243628" width="179.99998" height="45" x="35" y="329.99997" transform="matrix(0.26458333,0,0,0.26458333,1.3229162,-5.2916615)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.0500635,6.0733635)" id="text243632" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect243646);display:inline;fill:#c364fc;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;paint-order:markers stroke fill"><tspan x="40" y="303.80336" id="tspan280292">LDR x15, =&amp;handler
</tspan><tspan x="40" y="323.80336" id="tspan280294">BR    x15</tspan></text><g id="path273820" transform="matrix(0.26458333,0,0,0.26458333,-68.791664,1.3229171)"><g id="g276245"><g id="path276247" transform="matrix(0,0.62429472,-0.62429472,0,464.99998,294.99999)"><path style="color:#000000;fill:#c364fc;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path276251"/><path style="color:#000000;fill:#c364fc;fill-opacity:1;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path276253"/></g></g><path style="color:#000000;fill:url(#linearGradient274117);stroke-linecap:square;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 449,49 v 2 h 1 14 v 53 h -14 -1 v 2 h 1 14 v 53 h -14 -1 v 2 h 1 14 v 58 h -14 -1 v 2 h 1 14 v 74 1 h 2 v -1 -74 -2 -58 -2 -53 -2 -55 h -16 z" id="path276255"/></g></g></g><g id="g252601" transform="translate(0.66145575)"><rect style="fill:#353333;fill-opacity:1;stroke:url(#meshgradient270279);stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect243612-5" width="200" height="325" x="24.999998" y="49.999996" transform="matrix(0.26458333,0,0,0.26458333,152.79687,1.0093053e-6)"/><g id="g259536"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.719788,6.2015236)" id="text250674" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect250676);display:inline;fill:#c364fc;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="605" y="48.803357" id="tspan280296">handler  (...) {
</tspan><tspan x="605" y="68.803357" id="tspan280298">stp x0,  x1,  [sp, -16]!
</tspan><tspan x="605" y="88.803357" id="tspan280300">
</tspan><tspan x="605" y="108.80336" id="tspan280302">
</tspan><tspan x="605" y="128.80336" id="tspan280304">bl _syscall_handler;
</tspan><tspan x="605" y="148.80336" id="tspan280306">
</tspan><tspan x="605" y="168.80336" id="tspan280308">ldp xzr, x1,  [sp], 16;
</tspan><tspan x="605" y="188.80336" id="tspan280310">ret;
</tspan><tspan x="605" y="208.80336" id="tspan280312">}</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.719788,55.879109)" id="text252682" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect252684);display:inline;fill:#80ffe6;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="605" y="48.803357" id="tspan280314">syscall_handler  (...) {
</tspan><tspan x="605" y="68.803357" id="tspan280316">
</tspan><tspan x="605" y="88.803357" id="tspan280318">// Bypass
</tspan><tspan x="605" y="108.80336" id="tspan280320">
</tspan><tspan x="605" y="128.80336" id="tspan280322">
</tspan><tspan x="605" y="148.80336" id="tspan280324">}</tspan></text></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.66146075,6.6145835)" id="text259645" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:Monda;-inkscape-font-specification:'Monda, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect259647);display:inline;opacity:1;fill:#382345;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill"><tspan x="600" y="372.2542" id="tspan280326">iHook.dylib</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:Monda;-inkscape-font-specification:'Monda, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;opacity:1;fill:#382345;fill-opacity:1;stroke:none;stroke-width:4;stroke-linecap:round;stroke-miterlimit:2;stroke-opacity:1;paint-order:markers stroke fill" x="699.99994" y="399.99997" id="text259807" transform="matrix(0.26458333,0,0,0.26458333,0.66146075,6.6145835)"><tspan sodipodi:role="line" id="tspan259805" x="699.99994" y="399.99997"/></text></g><g id="path261063" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"><g id="g265044"><g id="path265046" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path265050"/></g></g><path style="color:#000000;fill:url(#linearGradient261995);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path265054"/></g><g id="path261065" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"><g id="g267991"><g id="path267993" transform="matrix(0.62429472,0,0,0.62429472,279.99999,329.99999)"><path style="color:#000000;fill:#bf67f9;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267997"/></g></g><path style="color:#000000;fill:url(#linearGradient261330);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,329 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path268001"/></g><g id="path261186" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,6.6145835)"><g id="g278980"><g id="path278982" transform="matrix(0.62429472,0,0,0.62429472,589.99997,39.999998)"><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path278986"/><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path278988"/></g></g><path style="color:#000000;fill:#c364fc;stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="M 549,39 V 339 H 375 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 H 551 V 41 h 39 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path278990"/></g><g id="g267296" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-6.879168)"><g id="g267292"><g id="g267290" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267288"/></g></g><path style="color:#000000;fill:url(#linearGradient267298);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267294"/></g><g id="g267314" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-22.489581)"><g id="g267310"><g id="g267308" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267306"/></g></g><path style="color:#000000;fill:url(#linearGradient267316);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267312"/></g><g id="g267332" transform="matrix(0.26458333,0,0,0.26458333,1.3229165,-37.041666)"><g id="g267328"><g id="g267326" transform="matrix(0.62429472,0,0,0.62429472,279.99999,214.99999)"><path style="color:#000000;fill:#04b4cf;fill-opacity:1;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path267324"/></g></g><path style="color:#000000;fill:url(#linearGradient267334);stroke-linecap:round;stroke-miterlimit:2;-inkscape-stroke:none;paint-order:markers stroke fill" d="m 230,214 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 50 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" id="path267330"/></g></g><script id="mesh_polyfill" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></g><script id="script280328" type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>

<br />
<br />
<figcaption>Fig 14. Syscall Redirection</figcaption>
</figure>
<br />
</center>
</div>
<p>A PoC that wraps all this logic will be published on GitHub.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Whilst this application uses the same obfuscator as in the previous blog post, it was configured with
multi-layered code obfuscation which includes control-flow flattening and MBA. In addition, the RASP checks are
also configured to crash the application instead of calling a callback function and displaying a message.
These improvements in the configuration of the obfuscator make the reverse engineering of the application
harder compared to the previous SingPass application.</p>
<p>This blog post also detailed a new AArch64-generic technique to intercept RASP syscalls
which resulted in a successful bypass of the RASP checks. This technique should also apply to Android AArch64.</p>
<p>This is the last part of this series about iOS obfuscation. As I said in the first disclaimer, the obfuscator used
for protecting these applications is and remains a good choice to protect assets from reverse engineering.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>The graph is more convenient to explore if Javascript is enabled.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>We don&rsquo;t restore <code>x0</code> as we want to change the return value from <code>_syscall_handler</code>.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/featured.png"/></item><item><title>Part 1 – SingPass RASP Analysis</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/</guid><description>This first blog post introduces the RASP checks used in SingPass</description><content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>I started to dig into the <a href="https://apps.apple.com/sg/app/singpass/id1340660807">SingPass</a> application
which turned out to be obfuscated and protected with Runtime Application Self-Protection (RASP).</p>
<p>Retrospectively, this application is pretty interesting to analyze RASP functionalities since:</p>
<ol>
<li>It embeds advanced RASP functionalities (Jailbreak detection, Frida Stalker detection, &hellip;).</li>
<li>The native code is <em>lightly</em> obfuscated.</li>
<li>The application starts by showing an error message which is a good <em>oracle</em> to know whether
we managed to circumvent the RASP detections.</li>
</ol>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="0 0 280 512" width="47%" height="100%">
	<g>
		<path d=" M 40 0 L 240 0 C 262 0 280 18 280 40 L 280 472 C 280 494 262 512 240 512 L 40 512 C 18 512 0 494 0 472 L 0 40 C 0 18 18 0 40 0 Z " fill="rgb(228,231,231)"/>
		<path d=" M 21.293 55.943 L 258.707 55.943 C 263.543 55.943 267.5 59.955 267.5 64.858 L 267.5 457.142 C 267.5 462.045 263.543 466.057 258.707 466.057 L 21.293 466.057 C 16.457 466.057 12.5 462.045 12.5 457.142 L 12.5 64.858 C 12.5 59.955 16.457 55.943 21.293 55.943 Z " fill="rgb(0,1,0)"/>
		<g>
			<path d="M 12.5 220.5 L 267.5 220.5 L 267.5 455.962 C 267.5 461.535 262.975 466.06 257.402 466.06 L 22.598 466.06 C 17.025 466.06 12.5 461.535 12.5 455.962 L 12.5 220.5 Z" style="stroke:none;fill:#121512;stroke-miterlimit:10;"/>
			<path d=" M 140.34 354.328 L 140.34 354.328 Q 139.668 353.224 139.308 351.79 L 139.308 351.79 L 139.308 351.79 Q 138.948 350.356 138.948 348.712 L 138.948 348.712 L 138.948 348.712 Q 138.948 347.068 139.308 345.622 L 139.308 345.622 L 139.308 345.622 Q 139.668 344.176 140.34 343.096 L 140.34 343.096 L 141.156 343.096 L 141.156 343.096 Q 140.448 344.308 140.118 345.7 L 140.118 345.7 L 140.118 345.7 Q 139.788 347.092 139.788 348.712 L 139.788 348.712 L 139.788 348.712 Q 139.788 350.332 140.118 351.724 L 140.118 351.724 L 140.118 351.724 Q 140.448 353.116 141.156 354.328 L 141.156 354.328 L 140.34 354.328 L 140.34 354.328 Z  M 144.648 352 L 144.648 344.368 L 141.696 344.368 L 141.696 343.6 L 148.488 343.6 L 148.488 344.368 L 145.536 344.368 L 145.536 352 L 144.648 352 L 144.648 352 Z  M 152.268 352.072 L 152.268 352.072 Q 151.296 352.072 150.534 351.556 L 150.534 351.556 L 150.534 351.556 Q 149.772 351.04 149.346 350.074 L 149.346 350.074 L 149.346 350.074 Q 148.92 349.108 148.92 347.8 L 148.92 347.8 L 148.92 347.8 Q 148.92 346.492 149.346 345.526 L 149.346 345.526 L 149.346 345.526 Q 149.772 344.56 150.534 344.044 L 150.534 344.044 L 150.534 344.044 Q 151.296 343.528 152.268 343.528 L 152.268 343.528 L 152.268 343.528 Q 153.24 343.528 154.002 344.044 L 154.002 344.044 L 154.002 344.044 Q 154.764 344.56 155.196 345.526 L 155.196 345.526 L 155.196 345.526 Q 155.628 346.492 155.628 347.8 L 155.628 347.8 L 155.628 347.8 Q 155.628 349.108 155.196 350.074 L 155.196 350.074 L 155.196 350.074 Q 154.764 351.04 154.002 351.556 L 154.002 351.556 L 154.002 351.556 Q 153.24 352.072 152.268 352.072 L 152.268 352.072 L 152.268 352.072 Z  M 152.268 351.28 L 152.268 351.28 Q 153 351.28 153.558 350.872 L 153.558 350.872 L 153.558 350.872 Q 154.116 350.464 154.428 349.684 L 154.428 349.684 L 154.428 349.684 Q 154.74 348.904 154.74 347.8 L 154.74 347.8 L 154.74 347.8 Q 154.74 346.696 154.428 345.916 L 154.428 345.916 L 154.428 345.916 Q 154.116 345.136 153.558 344.728 L 153.558 344.728 L 153.558 344.728 Q 153 344.32 152.268 344.32 L 152.268 344.32 L 152.268 344.32 Q 151.536 344.32 150.978 344.728 L 150.978 344.728 L 150.978 344.728 Q 150.42 345.136 150.108 345.916 L 150.108 345.916 L 150.108 345.916 Q 149.796 346.696 149.796 347.8 L 149.796 347.8 L 149.796 347.8 Q 149.796 348.904 150.108 349.684 L 150.108 349.684 L 150.108 349.684 Q 150.42 350.464 150.978 350.872 L 150.978 350.872 L 150.978 350.872 Q 151.536 351.28 152.268 351.28 L 152.268 351.28 L 152.268 351.28 Z  M 157.536 354.328 L 156.72 354.328 L 156.72 354.328 Q 157.428 353.116 157.764 351.73 L 157.764 351.73 L 157.764 351.73 Q 158.1 350.344 158.1 348.712 L 158.1 348.712 L 158.1 348.712 Q 158.1 347.08 157.764 345.694 L 157.764 345.694 L 157.764 345.694 Q 157.428 344.308 156.72 343.096 L 156.72 343.096 L 157.536 343.096 L 157.536 343.096 Q 158.208 344.176 158.574 345.622 L 158.574 345.622 L 158.574 345.622 Q 158.94 347.068 158.94 348.712 L 158.94 348.712 L 158.94 348.712 Q 158.94 350.356 158.58 351.796 L 158.58 351.796 L 158.58 351.796 Q 158.22 353.236 157.536 354.328 L 157.536 354.328 L 157.536 354.328 Z  M 89.004 352.06 L 89.004 352.06 Q 88.236 352.06 87.534 351.838 L 87.534 351.838 L 87.534 351.838 Q 86.832 351.616 86.436 351.28 L 86.436 351.28 L 86.82 350.608 L 86.82 350.608 Q 87.216 350.92 87.816 351.118 L 87.816 351.118 L 87.816 351.118 Q 88.416 351.316 89.064 351.316 L 89.064 351.316 L 89.064 351.316 Q 89.928 351.316 90.342 351.046 L 90.342 351.046 L 90.342 351.046 Q 90.756 350.776 90.756 350.284 L 90.756 350.284 L 90.756 350.284 Q 90.756 349.936 90.528 349.738 L 90.528 349.738 L 90.528 349.738 Q 90.3 349.54 89.952 349.438 L 89.952 349.438 L 89.952 349.438 Q 89.604 349.336 89.028 349.24 L 89.028 349.24 L 89.028 349.24 Q 88.26 349.096 87.792 348.946 L 87.792 348.946 L 87.792 348.946 Q 87.324 348.796 86.994 348.436 L 86.994 348.436 L 86.994 348.436 Q 86.664 348.076 86.664 347.44 L 86.664 347.44 L 86.664 347.44 Q 86.664 346.648 87.324 346.144 L 87.324 346.144 L 87.324 346.144 Q 87.984 345.64 89.16 345.64 L 89.16 345.64 L 89.16 345.64 Q 89.772 345.64 90.384 345.802 L 90.384 345.802 L 90.384 345.802 Q 90.996 345.964 91.392 346.228 L 91.392 346.228 L 91.02 346.912 L 91.02 346.912 Q 90.24 346.372 89.16 346.372 L 89.16 346.372 L 89.16 346.372 Q 88.344 346.372 87.93 346.66 L 87.93 346.66 L 87.93 346.66 Q 87.516 346.948 87.516 347.416 L 87.516 347.416 L 87.516 347.416 Q 87.516 347.776 87.75 347.992 L 87.75 347.992 L 87.75 347.992 Q 87.984 348.208 88.332 348.31 L 88.332 348.31 L 88.332 348.31 Q 88.68 348.412 89.292 348.52 L 89.292 348.52 L 89.292 348.52 Q 90.048 348.664 90.504 348.808 L 90.504 348.808 L 90.504 348.808 Q 90.96 348.952 91.284 349.3 L 91.284 349.3 L 91.284 349.3 Q 91.608 349.648 91.608 350.26 L 91.608 350.26 L 91.608 350.26 Q 91.608 351.088 90.918 351.574 L 90.918 351.574 L 90.918 351.574 Q 90.228 352.06 89.004 352.06 L 89.004 352.06 L 89.004 352.06 Z  M 95.76 352.06 L 95.76 352.06 Q 94.848 352.06 94.116 351.646 L 94.116 351.646 L 94.116 351.646 Q 93.384 351.232 92.964 350.5 L 92.964 350.5 L 92.964 350.5 Q 92.544 349.768 92.544 348.844 L 92.544 348.844 L 92.544 348.844 Q 92.544 347.92 92.964 347.188 L 92.964 347.188 L 92.964 347.188 Q 93.384 346.456 94.116 346.048 L 94.116 346.048 L 94.116 346.048 Q 94.848 345.64 95.76 345.64 L 95.76 345.64 L 95.76 345.64 Q 96.672 345.64 97.404 346.048 L 97.404 346.048 L 97.404 346.048 Q 98.136 346.456 98.55 347.188 L 98.55 347.188 L 98.55 347.188 Q 98.964 347.92 98.964 348.844 L 98.964 348.844 L 98.964 348.844 Q 98.964 349.768 98.55 350.5 L 98.55 350.5 L 98.55 350.5 Q 98.136 351.232 97.404 351.646 L 97.404 351.646 L 97.404 351.646 Q 96.672 352.06 95.76 352.06 L 95.76 352.06 L 95.76 352.06 Z  M 95.76 351.304 L 95.76 351.304 Q 96.432 351.304 96.966 350.998 L 96.966 350.998 L 96.966 350.998 Q 97.5 350.692 97.8 350.128 L 97.8 350.128 L 97.8 350.128 Q 98.1 349.564 98.1 348.844 L 98.1 348.844 L 98.1 348.844 Q 98.1 348.124 97.8 347.56 L 97.8 347.56 L 97.8 347.56 Q 97.5 346.996 96.966 346.69 L 96.966 346.69 L 96.966 346.69 Q 96.432 346.384 95.76 346.384 L 95.76 346.384 L 95.76 346.384 Q 95.088 346.384 94.554 346.69 L 94.554 346.69 L 94.554 346.69 Q 94.02 346.996 93.714 347.56 L 93.714 347.56 L 93.714 347.56 Q 93.408 348.124 93.408 348.844 L 93.408 348.844 L 93.408 348.844 Q 93.408 349.564 93.714 350.128 L 93.714 350.128 L 93.714 350.128 Q 94.02 350.692 94.554 350.998 L 94.554 350.998 L 94.554 350.998 Q 95.088 351.304 95.76 351.304 L 95.76 351.304 L 95.76 351.304 Z  M 105.54 345.688 L 106.392 345.688 L 106.392 352 L 105.576 352 L 105.576 350.848 L 105.576 350.848 Q 105.24 351.424 104.652 351.742 L 104.652 351.742 L 104.652 351.742 Q 104.064 352.06 103.308 352.06 L 103.308 352.06 L 103.308 352.06 Q 102.072 352.06 101.358 351.37 L 101.358 351.37 L 101.358 351.37 Q 100.644 350.68 100.644 349.348 L 100.644 349.348 L 100.644 345.688 L 101.496 345.688 L 101.496 349.264 L 101.496 349.264 Q 101.496 350.26 101.988 350.776 L 101.988 350.776 L 101.988 350.776 Q 102.48 351.292 103.392 351.292 L 103.392 351.292 L 103.392 351.292 Q 104.388 351.292 104.964 350.686 L 104.964 350.686 L 104.964 350.686 Q 105.54 350.08 105.54 349 L 105.54 349 L 105.54 345.688 L 105.54 345.688 Z  M 109.596 346.924 L 109.596 346.924 Q 109.896 346.288 110.49 345.964 L 110.49 345.964 L 110.49 345.964 Q 111.084 345.64 111.96 345.64 L 111.96 345.64 L 111.96 346.468 L 111.756 346.456 L 111.756 346.456 Q 110.76 346.456 110.196 347.068 L 110.196 347.068 L 110.196 347.068 Q 109.632 347.68 109.632 348.784 L 109.632 348.784 L 109.632 352 L 108.78 352 L 108.78 345.688 L 109.596 345.688 L 109.596 346.924 L 109.596 346.924 Z  M 116.052 352.06 L 116.052 352.06 Q 115.116 352.06 114.378 351.652 L 114.378 351.652 L 114.378 351.652 Q 113.64 351.244 113.22 350.506 L 113.22 350.506 L 113.22 350.506 Q 112.8 349.768 112.8 348.844 L 112.8 348.844 L 112.8 348.844 Q 112.8 347.92 113.22 347.188 L 113.22 347.188 L 113.22 347.188 Q 113.64 346.456 114.378 346.048 L 114.378 346.048 L 114.378 346.048 Q 115.116 345.64 116.052 345.64 L 116.052 345.64 L 116.052 345.64 Q 116.868 345.64 117.51 345.958 L 117.51 345.958 L 117.51 345.958 Q 118.152 346.276 118.524 346.888 L 118.524 346.888 L 117.888 347.32 L 117.888 347.32 Q 117.576 346.852 117.096 346.618 L 117.096 346.618 L 117.096 346.618 Q 116.616 346.384 116.052 346.384 L 116.052 346.384 L 116.052 346.384 Q 115.368 346.384 114.822 346.69 L 114.822 346.69 L 114.822 346.69 Q 114.276 346.996 113.97 347.56 L 113.97 347.56 L 113.97 347.56 Q 113.664 348.124 113.664 348.844 L 113.664 348.844 L 113.664 348.844 Q 113.664 349.576 113.97 350.134 L 113.97 350.134 L 113.97 350.134 Q 114.276 350.692 114.822 350.998 L 114.822 350.998 L 114.822 350.998 Q 115.368 351.304 116.052 351.304 L 116.052 351.304 L 116.052 351.304 Q 116.616 351.304 117.096 351.076 L 117.096 351.076 L 117.096 351.076 Q 117.576 350.848 117.888 350.38 L 117.888 350.38 L 118.524 350.812 L 118.524 350.812 Q 118.152 351.424 117.504 351.742 L 117.504 351.742 L 117.504 351.742 Q 116.856 352.06 116.052 352.06 L 116.052 352.06 L 116.052 352.06 Z  M 125.592 348.844 L 125.58 349.108 L 120.3 349.108 L 120.3 349.108 Q 120.372 350.092 121.056 350.698 L 121.056 350.698 L 121.056 350.698 Q 121.74 351.304 122.784 351.304 L 122.784 351.304 L 122.784 351.304 Q 123.372 351.304 123.864 351.094 L 123.864 351.094 L 123.864 351.094 Q 124.356 350.884 124.716 350.476 L 124.716 350.476 L 125.196 351.028 L 125.196 351.028 Q 124.776 351.532 124.146 351.796 L 124.146 351.796 L 124.146 351.796 Q 123.516 352.06 122.76 352.06 L 122.76 352.06 L 122.76 352.06 Q 121.788 352.06 121.038 351.646 L 121.038 351.646 L 121.038 351.646 Q 120.288 351.232 119.868 350.5 L 119.868 350.5 L 119.868 350.5 Q 119.448 349.768 119.448 348.844 L 119.448 348.844 L 119.448 348.844 Q 119.448 347.92 119.85 347.188 L 119.85 347.188 L 119.85 347.188 Q 120.252 346.456 120.954 346.048 L 120.954 346.048 L 120.954 346.048 Q 121.656 345.64 122.532 345.64 L 122.532 345.64 L 122.532 345.64 Q 123.408 345.64 124.104 346.048 L 124.104 346.048 L 124.104 346.048 Q 124.8 346.456 125.196 347.182 L 125.196 347.182 L 125.196 347.182 Q 125.592 347.908 125.592 348.844 L 125.592 348.844 L 125.592 348.844 Z  M 122.532 346.372 L 122.532 346.372 Q 121.62 346.372 121.002 346.954 L 121.002 346.954 L 121.002 346.954 Q 120.384 347.536 120.3 348.472 L 120.3 348.472 L 124.776 348.472 L 124.776 348.472 Q 124.692 347.536 124.074 346.954 L 124.074 346.954 L 124.074 346.954 Q 123.456 346.372 122.532 346.372 L 122.532 346.372 L 122.532 346.372 Z  M 129.024 352.06 L 129.024 352.06 Q 128.256 352.06 127.554 351.838 L 127.554 351.838 L 127.554 351.838 Q 126.852 351.616 126.456 351.28 L 126.456 351.28 L 126.84 350.608 L 126.84 350.608 Q 127.236 350.92 127.836 351.118 L 127.836 351.118 L 127.836 351.118 Q 128.436 351.316 129.084 351.316 L 129.084 351.316 L 129.084 351.316 Q 129.948 351.316 130.362 351.046 L 130.362 351.046 L 130.362 351.046 Q 130.776 350.776 130.776 350.284 L 130.776 350.284 L 130.776 350.284 Q 130.776 349.936 130.548 349.738 L 130.548 349.738 L 130.548 349.738 Q 130.32 349.54 129.972 349.438 L 129.972 349.438 L 129.972 349.438 Q 129.624 349.336 129.048 349.24 L 129.048 349.24 L 129.048 349.24 Q 128.28 349.096 127.812 348.946 L 127.812 348.946 L 127.812 348.946 Q 127.344 348.796 127.014 348.436 L 127.014 348.436 L 127.014 348.436 Q 126.684 348.076 126.684 347.44 L 126.684 347.44 L 126.684 347.44 Q 126.684 346.648 127.344 346.144 L 127.344 346.144 L 127.344 346.144 Q 128.004 345.64 129.18 345.64 L 129.18 345.64 L 129.18 345.64 Q 129.792 345.64 130.404 345.802 L 130.404 345.802 L 130.404 345.802 Q 131.016 345.964 131.412 346.228 L 131.412 346.228 L 131.04 346.912 L 131.04 346.912 Q 130.26 346.372 129.18 346.372 L 129.18 346.372 L 129.18 346.372 Q 128.364 346.372 127.95 346.66 L 127.95 346.66 L 127.95 346.66 Q 127.536 346.948 127.536 347.416 L 127.536 347.416 L 127.536 347.416 Q 127.536 347.776 127.77 347.992 L 127.77 347.992 L 127.77 347.992 Q 128.004 348.208 128.352 348.31 L 128.352 348.31 L 128.352 348.31 Q 128.7 348.412 129.312 348.52 L 129.312 348.52 L 129.312 348.52 Q 130.068 348.664 130.524 348.808 L 130.524 348.808 L 130.524 348.808 Q 130.98 348.952 131.304 349.3 L 131.304 349.3 L 131.304 349.3 Q 131.628 349.648 131.628 350.26 L 131.628 350.26 L 131.628 350.26 Q 131.628 351.088 130.938 351.574 L 130.938 351.574 L 130.938 351.574 Q 130.248 352.06 129.024 352.06 L 129.024 352.06 L 129.024 352.06 Z  M 133.284 352.06 L 133.284 352.06 Q 133.02 352.06 132.834 351.868 L 132.834 351.868 L 132.834 351.868 Q 132.648 351.676 132.648 351.4 L 132.648 351.4 L 132.648 351.4 Q 132.648 351.124 132.834 350.938 L 132.834 350.938 L 132.834 350.938 Q 133.02 350.752 133.284 350.752 L 133.284 350.752 L 133.284 350.752 Q 133.548 350.752 133.74 350.938 L 133.74 350.938 L 133.74 350.938 Q 133.932 351.124 133.932 351.4 L 133.932 351.4 L 133.932 351.4 Q 133.932 351.676 133.74 351.868 L 133.74 351.868 L 133.74 351.868 Q 133.548 352.06 133.284 352.06 L 133.284 352.06 L 133.284 352.06 Z  M 31.524 345.688 L 32.376 345.688 L 32.376 352 L 31.56 352 L 31.56 350.848 L 31.56 350.848 Q 31.224 351.424 30.636 351.742 L 30.636 351.742 L 30.636 351.742 Q 30.048 352.06 29.292 352.06 L 29.292 352.06 L 29.292 352.06 Q 28.056 352.06 27.342 351.37 L 27.342 351.37 L 27.342 351.37 Q 26.628 350.68 26.628 349.348 L 26.628 349.348 L 26.628 345.688 L 27.48 345.688 L 27.48 349.264 L 27.48 349.264 Q 27.48 350.26 27.972 350.776 L 27.972 350.776 L 27.972 350.776 Q 28.464 351.292 29.376 351.292 L 29.376 351.292 L 29.376 351.292 Q 30.372 351.292 30.948 350.686 L 30.948 350.686 L 30.948 350.686 Q 31.524 350.08 31.524 349 L 31.524 349 L 31.524 345.688 L 31.524 345.688 Z  M 37.98 345.64 L 37.98 345.64 Q 39.168 345.64 39.87 346.33 L 39.87 346.33 L 39.87 346.33 Q 40.572 347.02 40.572 348.34 L 40.572 348.34 L 40.572 352 L 39.72 352 L 39.72 348.424 L 39.72 348.424 Q 39.72 347.44 39.228 346.924 L 39.228 346.924 L 39.228 346.924 Q 38.736 346.408 37.824 346.408 L 37.824 346.408 L 37.824 346.408 Q 36.804 346.408 36.21 347.014 L 36.21 347.014 L 36.21 347.014 Q 35.616 347.62 35.616 348.688 L 35.616 348.688 L 35.616 352 L 34.764 352 L 34.764 345.688 L 35.58 345.688 L 35.58 346.852 L 35.58 346.852 Q 35.928 346.276 36.546 345.958 L 36.546 345.958 L 36.546 345.958 Q 37.164 345.64 37.98 345.64 L 37.98 345.64 L 37.98 345.64 Z  M 47.772 352 L 45.228 348.832 L 43.74 350.2 L 43.74 352 L 42.888 352 L 42.888 343.096 L 43.74 343.096 L 43.74 349.132 L 47.508 345.688 L 48.564 345.688 L 45.864 348.268 L 48.816 352 L 47.772 352 L 47.772 352 Z  M 53.22 345.64 L 53.22 345.64 Q 54.408 345.64 55.11 346.33 L 55.11 346.33 L 55.11 346.33 Q 55.812 347.02 55.812 348.34 L 55.812 348.34 L 55.812 352 L 54.96 352 L 54.96 348.424 L 54.96 348.424 Q 54.96 347.44 54.468 346.924 L 54.468 346.924 L 54.468 346.924 Q 53.976 346.408 53.064 346.408 L 53.064 346.408 L 53.064 346.408 Q 52.044 346.408 51.45 347.014 L 51.45 347.014 L 51.45 347.014 Q 50.856 347.62 50.856 348.688 L 50.856 348.688 L 50.856 352 L 50.004 352 L 50.004 345.688 L 50.82 345.688 L 50.82 346.852 L 50.82 346.852 Q 51.168 346.276 51.786 345.958 L 51.786 345.958 L 51.786 345.958 Q 52.404 345.64 53.22 345.64 L 53.22 345.64 L 53.22 345.64 Z  M 60.732 352.06 L 60.732 352.06 Q 59.82 352.06 59.088 351.646 L 59.088 351.646 L 59.088 351.646 Q 58.356 351.232 57.936 350.5 L 57.936 350.5 L 57.936 350.5 Q 57.516 349.768 57.516 348.844 L 57.516 348.844 L 57.516 348.844 Q 57.516 347.92 57.936 347.188 L 57.936 347.188 L 57.936 347.188 Q 58.356 346.456 59.088 346.048 L 59.088 346.048 L 59.088 346.048 Q 59.82 345.64 60.732 345.64 L 60.732 345.64 L 60.732 345.64 Q 61.644 345.64 62.376 346.048 L 62.376 346.048 L 62.376 346.048 Q 63.108 346.456 63.522 347.188 L 63.522 347.188 L 63.522 347.188 Q 63.936 347.92 63.936 348.844 L 63.936 348.844 L 63.936 348.844 Q 63.936 349.768 63.522 350.5 L 63.522 350.5 L 63.522 350.5 Q 63.108 351.232 62.376 351.646 L 62.376 351.646 L 62.376 351.646 Q 61.644 352.06 60.732 352.06 L 60.732 352.06 L 60.732 352.06 Z  M 60.732 351.304 L 60.732 351.304 Q 61.404 351.304 61.938 350.998 L 61.938 350.998 L 61.938 350.998 Q 62.472 350.692 62.772 350.128 L 62.772 350.128 L 62.772 350.128 Q 63.072 349.564 63.072 348.844 L 63.072 348.844 L 63.072 348.844 Q 63.072 348.124 62.772 347.56 L 62.772 347.56 L 62.772 347.56 Q 62.472 346.996 61.938 346.69 L 61.938 346.69 L 61.938 346.69 Q 61.404 346.384 60.732 346.384 L 60.732 346.384 L 60.732 346.384 Q 60.06 346.384 59.526 346.69 L 59.526 346.69 L 59.526 346.69 Q 58.992 346.996 58.686 347.56 L 58.686 347.56 L 58.686 347.56 Q 58.38 348.124 58.38 348.844 L 58.38 348.844 L 58.38 348.844 Q 58.38 349.564 58.686 350.128 L 58.686 350.128 L 58.686 350.128 Q 58.992 350.692 59.526 350.998 L 59.526 350.998 L 59.526 350.998 Q 60.06 351.304 60.732 351.304 L 60.732 351.304 L 60.732 351.304 Z  M 73.98 345.688 L 74.76 345.688 L 72.372 352 L 71.568 352 L 69.576 346.828 L 67.584 352 L 66.78 352 L 64.404 345.688 L 65.22 345.688 L 67.2 351.052 L 69.228 345.688 L 69.96 345.688 L 71.976 351.052 L 73.98 345.688 L 73.98 345.688 Z  M 79.26 345.64 L 79.26 345.64 Q 80.448 345.64 81.15 346.33 L 81.15 346.33 L 81.15 346.33 Q 81.852 347.02 81.852 348.34 L 81.852 348.34 L 81.852 352 L 81 352 L 81 348.424 L 81 348.424 Q 81 347.44 80.508 346.924 L 80.508 346.924 L 80.508 346.924 Q 80.016 346.408 79.104 346.408 L 79.104 346.408 L 79.104 346.408 Q 78.084 346.408 77.49 347.014 L 77.49 347.014 L 77.49 347.014 Q 76.896 347.62 76.896 348.688 L 76.896 348.688 L 76.896 352 L 76.044 352 L 76.044 345.688 L 76.86 345.688 L 76.86 346.852 L 76.86 346.852 Q 77.208 346.276 77.826 345.958 L 77.826 345.958 L 77.826 345.958 Q 78.444 345.64 79.26 345.64 L 79.26 345.64 L 79.26 345.64 Z  M 191.148 329.128 L 191.148 329.128 Q 190.596 329.128 190.314 329.428 L 190.314 329.428 L 190.314 329.428 Q 190.032 329.728 190.032 330.316 L 190.032 330.316 L 190.032 331.06 L 191.976 331.06 L 191.976 331.78 L 190.056 331.78 L 190.056 337.372 L 189.204 337.372 L 189.204 331.78 L 188.076 331.78 L 188.076 331.06 L 189.204 331.06 L 189.204 330.28 L 189.204 330.28 Q 189.204 329.416 189.702 328.912 L 189.702 328.912 L 189.702 328.912 Q 190.2 328.408 191.112 328.408 L 191.112 328.408 L 191.112 328.408 Q 191.472 328.408 191.808 328.51 L 191.808 328.51 L 191.808 328.51 Q 192.144 328.612 192.372 328.804 L 192.372 328.804 L 192.084 329.44 L 192.084 329.44 Q 191.712 329.128 191.148 329.128 L 191.148 329.128 L 191.148 329.128 Z  M 194.904 332.296 L 194.904 332.296 Q 195.204 331.66 195.798 331.336 L 195.798 331.336 L 195.798 331.336 Q 196.392 331.012 197.268 331.012 L 197.268 331.012 L 197.268 331.84 L 197.064 331.828 L 197.064 331.828 Q 196.068 331.828 195.504 332.44 L 195.504 332.44 L 195.504 332.44 Q 194.94 333.052 194.94 334.156 L 194.94 334.156 L 194.94 337.372 L 194.088 337.372 L 194.088 331.06 L 194.904 331.06 L 194.904 332.296 L 194.904 332.296 Z  M 201.324 337.432 L 201.324 337.432 Q 200.412 337.432 199.68 337.018 L 199.68 337.018 L 199.68 337.018 Q 198.948 336.604 198.528 335.872 L 198.528 335.872 L 198.528 335.872 Q 198.108 335.14 198.108 334.216 L 198.108 334.216 L 198.108 334.216 Q 198.108 333.292 198.528 332.56 L 198.528 332.56 L 198.528 332.56 Q 198.948 331.828 199.68 331.42 L 199.68 331.42 L 199.68 331.42 Q 200.412 331.012 201.324 331.012 L 201.324 331.012 L 201.324 331.012 Q 202.236 331.012 202.968 331.42 L 202.968 331.42 L 202.968 331.42 Q 203.7 331.828 204.114 332.56 L 204.114 332.56 L 204.114 332.56 Q 204.528 333.292 204.528 334.216 L 204.528 334.216 L 204.528 334.216 Q 204.528 335.14 204.114 335.872 L 204.114 335.872 L 204.114 335.872 Q 203.7 336.604 202.968 337.018 L 202.968 337.018 L 202.968 337.018 Q 202.236 337.432 201.324 337.432 L 201.324 337.432 L 201.324 337.432 Z  M 201.324 336.676 L 201.324 336.676 Q 201.996 336.676 202.53 336.37 L 202.53 336.37 L 202.53 336.37 Q 203.064 336.064 203.364 335.5 L 203.364 335.5 L 203.364 335.5 Q 203.664 334.936 203.664 334.216 L 203.664 334.216 L 203.664 334.216 Q 203.664 333.496 203.364 332.932 L 203.364 332.932 L 203.364 332.932 Q 203.064 332.368 202.53 332.062 L 202.53 332.062 L 202.53 332.062 Q 201.996 331.756 201.324 331.756 L 201.324 331.756 L 201.324 331.756 Q 200.652 331.756 200.118 332.062 L 200.118 332.062 L 200.118 332.062 Q 199.584 332.368 199.278 332.932 L 199.278 332.932 L 199.278 332.932 Q 198.972 333.496 198.972 334.216 L 198.972 334.216 L 198.972 334.216 Q 198.972 334.936 199.278 335.5 L 199.278 335.5 L 199.278 335.5 Q 199.584 336.064 200.118 336.37 L 200.118 336.37 L 200.118 336.37 Q 200.652 336.676 201.324 336.676 L 201.324 336.676 L 201.324 336.676 Z  M 214.14 331.012 L 214.14 331.012 Q 215.328 331.012 216.006 331.696 L 216.006 331.696 L 216.006 331.696 Q 216.684 332.38 216.684 333.712 L 216.684 333.712 L 216.684 337.372 L 215.832 337.372 L 215.832 333.796 L 215.832 333.796 Q 215.832 332.812 215.358 332.296 L 215.358 332.296 L 215.358 332.296 Q 214.884 331.78 214.02 331.78 L 214.02 331.78 L 214.02 331.78 Q 213.036 331.78 212.472 332.386 L 212.472 332.386 L 212.472 332.386 Q 211.908 332.992 211.908 334.06 L 211.908 334.06 L 211.908 337.372 L 211.056 337.372 L 211.056 333.796 L 211.056 333.796 Q 211.056 332.812 210.582 332.296 L 210.582 332.296 L 210.582 332.296 Q 210.108 331.78 209.232 331.78 L 209.232 331.78 L 209.232 331.78 Q 208.26 331.78 207.69 332.386 L 207.69 332.386 L 207.69 332.386 Q 207.12 332.992 207.12 334.06 L 207.12 334.06 L 207.12 337.372 L 206.268 337.372 L 206.268 331.06 L 207.084 331.06 L 207.084 332.212 L 207.084 332.212 Q 207.42 331.636 208.02 331.324 L 208.02 331.324 L 208.02 331.324 Q 208.62 331.012 209.4 331.012 L 209.4 331.012 L 209.4 331.012 Q 210.192 331.012 210.774 331.348 L 210.774 331.348 L 210.774 331.348 Q 211.356 331.684 211.644 332.344 L 211.644 332.344 L 211.644 332.344 Q 211.992 331.72 212.646 331.366 L 212.646 331.366 L 212.646 331.366 Q 213.3 331.012 214.14 331.012 L 214.14 331.012 L 214.14 331.012 Z  M 158.904 331.012 L 158.904 331.012 Q 160.14 331.012 160.8 331.63 L 160.8 331.63 L 160.8 331.63 Q 161.46 332.248 161.46 333.46 L 161.46 333.46 L 161.46 337.372 L 160.644 337.372 L 160.644 336.388 L 160.644 336.388 Q 160.356 336.88 159.798 337.156 L 159.798 337.156 L 159.798 337.156 Q 159.24 337.432 158.472 337.432 L 158.472 337.432 L 158.472 337.432 Q 157.416 337.432 156.792 336.928 L 156.792 336.928 L 156.792 336.928 Q 156.168 336.424 156.168 335.596 L 156.168 335.596 L 156.168 335.596 Q 156.168 334.792 156.75 334.3 L 156.75 334.3 L 156.75 334.3 Q 157.332 333.808 158.604 333.808 L 158.604 333.808 L 160.608 333.808 L 160.608 333.424 L 160.608 333.424 Q 160.608 332.608 160.152 332.182 L 160.152 332.182 L 160.152 332.182 Q 159.696 331.756 158.82 331.756 L 158.82 331.756 L 158.82 331.756 Q 158.22 331.756 157.668 331.954 L 157.668 331.954 L 157.668 331.954 Q 157.116 332.152 156.72 332.5 L 156.72 332.5 L 156.336 331.864 L 156.336 331.864 Q 156.816 331.456 157.488 331.234 L 157.488 331.234 L 157.488 331.234 Q 158.16 331.012 158.904 331.012 L 158.904 331.012 L 158.904 331.012 Z  M 158.604 336.76 L 158.604 336.76 Q 159.324 336.76 159.84 336.43 L 159.84 336.43 L 159.84 336.43 Q 160.356 336.1 160.608 335.476 L 160.608 335.476 L 160.608 334.444 L 158.628 334.444 L 158.628 334.444 Q 157.008 334.444 157.008 335.572 L 157.008 335.572 L 157.008 335.572 Q 157.008 336.124 157.428 336.442 L 157.428 336.442 L 157.428 336.442 Q 157.848 336.76 158.604 336.76 L 158.604 336.76 L 158.604 336.76 Z  M 167.028 331.012 L 167.028 331.012 Q 167.916 331.012 168.636 331.414 L 168.636 331.414 L 168.636 331.414 Q 169.356 331.816 169.764 332.548 L 169.764 332.548 L 169.764 332.548 Q 170.172 333.28 170.172 334.216 L 170.172 334.216 L 170.172 334.216 Q 170.172 335.164 169.764 335.896 L 169.764 335.896 L 169.764 335.896 Q 169.356 336.628 168.642 337.03 L 168.642 337.03 L 168.642 337.03 Q 167.928 337.432 167.028 337.432 L 167.028 337.432 L 167.028 337.432 Q 166.26 337.432 165.642 337.114 L 165.642 337.114 L 165.642 337.114 Q 165.024 336.796 164.628 336.184 L 164.628 336.184 L 164.628 339.7 L 163.776 339.7 L 163.776 331.06 L 164.592 331.06 L 164.592 332.308 L 164.592 332.308 Q 164.976 331.684 165.606 331.348 L 165.606 331.348 L 165.606 331.348 Q 166.236 331.012 167.028 331.012 L 167.028 331.012 L 167.028 331.012 Z  M 166.968 336.676 L 166.968 336.676 Q 167.628 336.676 168.168 336.37 L 168.168 336.37 L 168.168 336.37 Q 168.708 336.064 169.014 335.5 L 169.014 335.5 L 169.014 335.5 Q 169.32 334.936 169.32 334.216 L 169.32 334.216 L 169.32 334.216 Q 169.32 333.496 169.014 332.938 L 169.014 332.938 L 169.014 332.938 Q 168.708 332.38 168.168 332.068 L 168.168 332.068 L 168.168 332.068 Q 167.628 331.756 166.968 331.756 L 166.968 331.756 L 166.968 331.756 Q 166.296 331.756 165.762 332.068 L 165.762 332.068 L 165.762 332.068 Q 165.228 332.38 164.922 332.938 L 164.922 332.938 L 164.922 332.938 Q 164.616 333.496 164.616 334.216 L 164.616 334.216 L 164.616 334.216 Q 164.616 334.936 164.922 335.5 L 164.922 335.5 L 164.922 335.5 Q 165.228 336.064 165.762 336.37 L 165.762 336.37 L 165.762 336.37 Q 166.296 336.676 166.968 336.676 L 166.968 336.676 L 166.968 336.676 Z  M 175.164 331.012 L 175.164 331.012 Q 176.052 331.012 176.772 331.414 L 176.772 331.414 L 176.772 331.414 Q 177.492 331.816 177.9 332.548 L 177.9 332.548 L 177.9 332.548 Q 178.308 333.28 178.308 334.216 L 178.308 334.216 L 178.308 334.216 Q 178.308 335.164 177.9 335.896 L 177.9 335.896 L 177.9 335.896 Q 177.492 336.628 176.778 337.03 L 176.778 337.03 L 176.778 337.03 Q 176.064 337.432 175.164 337.432 L 175.164 337.432 L 175.164 337.432 Q 174.396 337.432 173.778 337.114 L 173.778 337.114 L 173.778 337.114 Q 173.16 336.796 172.764 336.184 L 172.764 336.184 L 172.764 339.7 L 171.912 339.7 L 171.912 331.06 L 172.728 331.06 L 172.728 332.308 L 172.728 332.308 Q 173.112 331.684 173.742 331.348 L 173.742 331.348 L 173.742 331.348 Q 174.372 331.012 175.164 331.012 L 175.164 331.012 L 175.164 331.012 Z  M 175.104 336.676 L 175.104 336.676 Q 175.764 336.676 176.304 336.37 L 176.304 336.37 L 176.304 336.37 Q 176.844 336.064 177.15 335.5 L 177.15 335.5 L 177.15 335.5 Q 177.456 334.936 177.456 334.216 L 177.456 334.216 L 177.456 334.216 Q 177.456 333.496 177.15 332.938 L 177.15 332.938 L 177.15 332.938 Q 176.844 332.38 176.304 332.068 L 176.304 332.068 L 176.304 332.068 Q 175.764 331.756 175.104 331.756 L 175.104 331.756 L 175.104 331.756 Q 174.432 331.756 173.898 332.068 L 173.898 332.068 L 173.898 332.068 Q 173.364 332.38 173.058 332.938 L 173.058 332.938 L 173.058 332.938 Q 172.752 333.496 172.752 334.216 L 172.752 334.216 L 172.752 334.216 Q 172.752 334.936 173.058 335.5 L 173.058 335.5 L 173.058 335.5 Q 173.364 336.064 173.898 336.37 L 173.898 336.37 L 173.898 336.37 Q 174.432 336.676 175.104 336.676 L 175.104 336.676 L 175.104 336.676 Z  M 181.74 337.432 L 181.74 337.432 Q 180.972 337.432 180.27 337.21 L 180.27 337.21 L 180.27 337.21 Q 179.568 336.988 179.172 336.652 L 179.172 336.652 L 179.556 335.98 L 179.556 335.98 Q 179.952 336.292 180.552 336.49 L 180.552 336.49 L 180.552 336.49 Q 181.152 336.688 181.8 336.688 L 181.8 336.688 L 181.8 336.688 Q 182.664 336.688 183.078 336.418 L 183.078 336.418 L 183.078 336.418 Q 183.492 336.148 183.492 335.656 L 183.492 335.656 L 183.492 335.656 Q 183.492 335.308 183.264 335.11 L 183.264 335.11 L 183.264 335.11 Q 183.036 334.912 182.688 334.81 L 182.688 334.81 L 182.688 334.81 Q 182.34 334.708 181.764 334.612 L 181.764 334.612 L 181.764 334.612 Q 180.996 334.468 180.528 334.318 L 180.528 334.318 L 180.528 334.318 Q 180.06 334.168 179.73 333.808 L 179.73 333.808 L 179.73 333.808 Q 179.4 333.448 179.4 332.812 L 179.4 332.812 L 179.4 332.812 Q 179.4 332.02 180.06 331.516 L 180.06 331.516 L 180.06 331.516 Q 180.72 331.012 181.896 331.012 L 181.896 331.012 L 181.896 331.012 Q 182.508 331.012 183.12 331.174 L 183.12 331.174 L 183.12 331.174 Q 183.732 331.336 184.128 331.6 L 184.128 331.6 L 183.756 332.284 L 183.756 332.284 Q 182.976 331.744 181.896 331.744 L 181.896 331.744 L 181.896 331.744 Q 181.08 331.744 180.666 332.032 L 180.666 332.032 L 180.666 332.032 Q 180.252 332.32 180.252 332.788 L 180.252 332.788 L 180.252 332.788 Q 180.252 333.148 180.486 333.364 L 180.486 333.364 L 180.486 333.364 Q 180.72 333.58 181.068 333.682 L 181.068 333.682 L 181.068 333.682 Q 181.416 333.784 182.028 333.892 L 182.028 333.892 L 182.028 333.892 Q 182.784 334.036 183.24 334.18 L 183.24 334.18 L 183.24 334.18 Q 183.696 334.324 184.02 334.672 L 184.02 334.672 L 184.02 334.672 Q 184.344 335.02 184.344 335.632 L 184.344 335.632 L 184.344 335.632 Q 184.344 336.46 183.654 336.946 L 183.654 336.946 L 183.654 336.946 Q 182.964 337.432 181.74 337.432 L 181.74 337.432 L 181.74 337.432 Z  M 105.6 332.296 L 105.6 332.296 Q 105.9 331.66 106.494 331.336 L 106.494 331.336 L 106.494 331.336 Q 107.088 331.012 107.964 331.012 L 107.964 331.012 L 107.964 331.84 L 107.76 331.828 L 107.76 331.828 Q 106.764 331.828 106.2 332.44 L 106.2 332.44 L 106.2 332.44 Q 105.636 333.052 105.636 334.156 L 105.636 334.156 L 105.636 337.372 L 104.784 337.372 L 104.784 331.06 L 105.6 331.06 L 105.6 332.296 L 105.6 332.296 Z  M 114.432 331.06 L 115.284 331.06 L 115.284 337.372 L 114.468 337.372 L 114.468 336.22 L 114.468 336.22 Q 114.132 336.796 113.544 337.114 L 113.544 337.114 L 113.544 337.114 Q 112.956 337.432 112.2 337.432 L 112.2 337.432 L 112.2 337.432 Q 110.964 337.432 110.25 336.742 L 110.25 336.742 L 110.25 336.742 Q 109.536 336.052 109.536 334.72 L 109.536 334.72 L 109.536 331.06 L 110.388 331.06 L 110.388 334.636 L 110.388 334.636 Q 110.388 335.632 110.88 336.148 L 110.88 336.148 L 110.88 336.148 Q 111.372 336.664 112.284 336.664 L 112.284 336.664 L 112.284 336.664 Q 113.28 336.664 113.856 336.058 L 113.856 336.058 L 113.856 336.058 Q 114.432 335.452 114.432 334.372 L 114.432 334.372 L 114.432 331.06 L 114.432 331.06 Z  M 120.888 331.012 L 120.888 331.012 Q 122.076 331.012 122.778 331.702 L 122.778 331.702 L 122.778 331.702 Q 123.48 332.392 123.48 333.712 L 123.48 333.712 L 123.48 337.372 L 122.628 337.372 L 122.628 333.796 L 122.628 333.796 Q 122.628 332.812 122.136 332.296 L 122.136 332.296 L 122.136 332.296 Q 121.644 331.78 120.732 331.78 L 120.732 331.78 L 120.732 331.78 Q 119.712 331.78 119.118 332.386 L 119.118 332.386 L 119.118 332.386 Q 118.524 332.992 118.524 334.06 L 118.524 334.06 L 118.524 337.372 L 117.672 337.372 L 117.672 331.06 L 118.488 331.06 L 118.488 332.224 L 118.488 332.224 Q 118.836 331.648 119.454 331.33 L 119.454 331.33 L 119.454 331.33 Q 120.072 331.012 120.888 331.012 L 120.888 331.012 L 120.888 331.012 Z  M 129.012 331.012 L 129.012 331.012 Q 130.2 331.012 130.902 331.702 L 130.902 331.702 L 130.902 331.702 Q 131.604 332.392 131.604 333.712 L 131.604 333.712 L 131.604 337.372 L 130.752 337.372 L 130.752 333.796 L 130.752 333.796 Q 130.752 332.812 130.26 332.296 L 130.26 332.296 L 130.26 332.296 Q 129.768 331.78 128.856 331.78 L 128.856 331.78 L 128.856 331.78 Q 127.836 331.78 127.242 332.386 L 127.242 332.386 L 127.242 332.386 Q 126.648 332.992 126.648 334.06 L 126.648 334.06 L 126.648 337.372 L 125.796 337.372 L 125.796 331.06 L 126.612 331.06 L 126.612 332.224 L 126.612 332.224 Q 126.96 331.648 127.578 331.33 L 127.578 331.33 L 127.578 331.33 Q 128.196 331.012 129.012 331.012 L 129.012 331.012 L 129.012 331.012 Z  M 133.92 337.372 L 133.92 331.06 L 134.772 331.06 L 134.772 337.372 L 133.92 337.372 L 133.92 337.372 Z  M 134.352 329.68 L 134.352 329.68 Q 134.088 329.68 133.908 329.5 L 133.908 329.5 L 133.908 329.5 Q 133.728 329.32 133.728 329.068 L 133.728 329.068 L 133.728 329.068 Q 133.728 328.828 133.908 328.648 L 133.908 328.648 L 133.908 328.648 Q 134.088 328.468 134.352 328.468 L 134.352 328.468 L 134.352 328.468 Q 134.616 328.468 134.796 328.642 L 134.796 328.642 L 134.796 328.642 Q 134.976 328.816 134.976 329.056 L 134.976 329.056 L 134.976 329.056 Q 134.976 329.32 134.796 329.5 L 134.796 329.5 L 134.796 329.5 Q 134.616 329.68 134.352 329.68 L 134.352 329.68 L 134.352 329.68 Z  M 140.364 331.012 L 140.364 331.012 Q 141.552 331.012 142.254 331.702 L 142.254 331.702 L 142.254 331.702 Q 142.956 332.392 142.956 333.712 L 142.956 333.712 L 142.956 337.372 L 142.104 337.372 L 142.104 333.796 L 142.104 333.796 Q 142.104 332.812 141.612 332.296 L 141.612 332.296 L 141.612 332.296 Q 141.12 331.78 140.208 331.78 L 140.208 331.78 L 140.208 331.78 Q 139.188 331.78 138.594 332.386 L 138.594 332.386 L 138.594 332.386 Q 138 332.992 138 334.06 L 138 334.06 L 138 337.372 L 137.148 337.372 L 137.148 331.06 L 137.964 331.06 L 137.964 332.224 L 137.964 332.224 Q 138.312 331.648 138.93 331.33 L 138.93 331.33 L 138.93 331.33 Q 139.548 331.012 140.364 331.012 L 140.364 331.012 L 140.364 331.012 Z  M 150.324 331.06 L 151.14 331.06 L 151.14 336.604 L 151.14 336.604 Q 151.14 338.212 150.354 338.986 L 150.354 338.986 L 150.354 338.986 Q 149.568 339.76 147.984 339.76 L 147.984 339.76 L 147.984 339.76 Q 147.108 339.76 146.322 339.502 L 146.322 339.502 L 146.322 339.502 Q 145.536 339.244 145.044 338.788 L 145.044 338.788 L 145.476 338.14 L 145.476 338.14 Q 145.932 338.548 146.586 338.776 L 146.586 338.776 L 146.586 338.776 Q 147.24 339.004 147.96 339.004 L 147.96 339.004 L 147.96 339.004 Q 149.16 339.004 149.724 338.446 L 149.724 338.446 L 149.724 338.446 Q 150.288 337.888 150.288 336.712 L 150.288 336.712 L 150.288 335.908 L 150.288 335.908 Q 149.892 336.508 149.25 336.82 L 149.25 336.82 L 149.25 336.82 Q 148.608 337.132 147.828 337.132 L 147.828 337.132 L 147.828 337.132 Q 146.94 337.132 146.214 336.742 L 146.214 336.742 L 146.214 336.742 Q 145.488 336.352 145.074 335.65 L 145.074 335.65 L 145.074 335.65 Q 144.66 334.948 144.66 334.06 L 144.66 334.06 L 144.66 334.06 Q 144.66 333.172 145.074 332.476 L 145.074 332.476 L 145.074 332.476 Q 145.488 331.78 146.208 331.396 L 146.208 331.396 L 146.208 331.396 Q 146.928 331.012 147.828 331.012 L 147.828 331.012 L 147.828 331.012 Q 148.632 331.012 149.28 331.336 L 149.28 331.336 L 149.28 331.336 Q 149.928 331.66 150.324 332.272 L 150.324 332.272 L 150.324 331.06 L 150.324 331.06 Z  M 147.912 336.376 L 147.912 336.376 Q 148.596 336.376 149.148 336.082 L 149.148 336.082 L 149.148 336.082 Q 149.7 335.788 150.006 335.26 L 150.006 335.26 L 150.006 335.26 Q 150.312 334.732 150.312 334.06 L 150.312 334.06 L 150.312 334.06 Q 150.312 333.388 150.006 332.866 L 150.006 332.866 L 150.006 332.866 Q 149.7 332.344 149.154 332.05 L 149.154 332.05 L 149.154 332.05 Q 148.608 331.756 147.912 331.756 L 147.912 331.756 L 147.912 331.756 Q 147.228 331.756 146.682 332.044 L 146.682 332.044 L 146.682 332.044 Q 146.136 332.332 145.83 332.86 L 145.83 332.86 L 145.83 332.86 Q 145.524 333.388 145.524 334.06 L 145.524 334.06 L 145.524 334.06 Q 145.524 334.732 145.83 335.26 L 145.83 335.26 L 145.83 335.26 Q 146.136 335.788 146.682 336.082 L 146.682 336.082 L 146.682 336.082 Q 147.228 336.376 147.912 336.376 L 147.912 336.376 L 147.912 336.376 Z  M 91.884 337.432 L 91.884 337.432 Q 90.972 337.432 90.24 337.018 L 90.24 337.018 L 90.24 337.018 Q 89.508 336.604 89.088 335.872 L 89.088 335.872 L 89.088 335.872 Q 88.668 335.14 88.668 334.216 L 88.668 334.216 L 88.668 334.216 Q 88.668 333.292 89.088 332.56 L 89.088 332.56 L 89.088 332.56 Q 89.508 331.828 90.24 331.42 L 90.24 331.42 L 90.24 331.42 Q 90.972 331.012 91.884 331.012 L 91.884 331.012 L 91.884 331.012 Q 92.796 331.012 93.528 331.42 L 93.528 331.42 L 93.528 331.42 Q 94.26 331.828 94.674 332.56 L 94.674 332.56 L 94.674 332.56 Q 95.088 333.292 95.088 334.216 L 95.088 334.216 L 95.088 334.216 Q 95.088 335.14 94.674 335.872 L 94.674 335.872 L 94.674 335.872 Q 94.26 336.604 93.528 337.018 L 93.528 337.018 L 93.528 337.018 Q 92.796 337.432 91.884 337.432 L 91.884 337.432 L 91.884 337.432 Z  M 91.884 336.676 L 91.884 336.676 Q 92.556 336.676 93.09 336.37 L 93.09 336.37 L 93.09 336.37 Q 93.624 336.064 93.924 335.5 L 93.924 335.5 L 93.924 335.5 Q 94.224 334.936 94.224 334.216 L 94.224 334.216 L 94.224 334.216 Q 94.224 333.496 93.924 332.932 L 93.924 332.932 L 93.924 332.932 Q 93.624 332.368 93.09 332.062 L 93.09 332.062 L 93.09 332.062 Q 92.556 331.756 91.884 331.756 L 91.884 331.756 L 91.884 331.756 Q 91.212 331.756 90.678 332.062 L 90.678 332.062 L 90.678 332.062 Q 90.144 332.368 89.838 332.932 L 89.838 332.932 L 89.838 332.932 Q 89.532 333.496 89.532 334.216 L 89.532 334.216 L 89.532 334.216 Q 89.532 334.936 89.838 335.5 L 89.838 335.5 L 89.838 335.5 Q 90.144 336.064 90.678 336.37 L 90.678 336.37 L 90.678 336.37 Q 91.212 336.676 91.884 336.676 L 91.884 336.676 L 91.884 336.676 Z  M 97.644 332.296 L 97.644 332.296 Q 97.944 331.66 98.538 331.336 L 98.538 331.336 L 98.538 331.336 Q 99.132 331.012 100.008 331.012 L 100.008 331.012 L 100.008 331.84 L 99.804 331.828 L 99.804 331.828 Q 98.808 331.828 98.244 332.44 L 98.244 332.44 L 98.244 332.44 Q 97.68 333.052 97.68 334.156 L 97.68 334.156 L 97.68 337.372 L 96.828 337.372 L 96.828 331.06 L 97.644 331.06 L 97.644 332.296 L 97.644 332.296 Z  M 25.752 339.76 L 25.752 339.76 Q 25.356 339.76 25.002 339.658 L 25.002 339.658 L 25.002 339.658 Q 24.648 339.556 24.42 339.352 L 24.42 339.352 L 24.72 338.704 L 24.72 338.704 Q 25.092 339.028 25.704 339.028 L 25.704 339.028 L 25.704 339.028 Q 26.208 339.028 26.478 338.728 L 26.478 338.728 L 26.478 338.728 Q 26.748 338.428 26.748 337.84 L 26.748 337.84 L 26.748 331.06 L 27.6 331.06 L 27.6 337.84 L 27.6 337.84 Q 27.6 338.728 27.12 339.244 L 27.12 339.244 L 27.12 339.244 Q 26.64 339.76 25.752 339.76 L 25.752 339.76 L 25.752 339.76 Z  M 27.18 329.668 L 27.18 329.668 Q 26.916 329.668 26.736 329.488 L 26.736 329.488 L 26.736 329.488 Q 26.556 329.308 26.556 329.056 L 26.556 329.056 L 26.556 329.056 Q 26.556 328.816 26.736 328.636 L 26.736 328.636 L 26.736 328.636 Q 26.916 328.456 27.18 328.456 L 27.18 328.456 L 27.18 328.456 Q 27.444 328.456 27.624 328.63 L 27.624 328.63 L 27.624 328.63 Q 27.804 328.804 27.804 329.044 L 27.804 329.044 L 27.804 329.044 Q 27.804 329.308 27.624 329.488 L 27.624 329.488 L 27.624 329.488 Q 27.444 329.668 27.18 329.668 L 27.18 329.668 L 27.18 329.668 Z  M 32.184 331.012 L 32.184 331.012 Q 33.42 331.012 34.08 331.63 L 34.08 331.63 L 34.08 331.63 Q 34.74 332.248 34.74 333.46 L 34.74 333.46 L 34.74 337.372 L 33.924 337.372 L 33.924 336.388 L 33.924 336.388 Q 33.636 336.88 33.078 337.156 L 33.078 337.156 L 33.078 337.156 Q 32.52 337.432 31.752 337.432 L 31.752 337.432 L 31.752 337.432 Q 30.696 337.432 30.072 336.928 L 30.072 336.928 L 30.072 336.928 Q 29.448 336.424 29.448 335.596 L 29.448 335.596 L 29.448 335.596 Q 29.448 334.792 30.03 334.3 L 30.03 334.3 L 30.03 334.3 Q 30.612 333.808 31.884 333.808 L 31.884 333.808 L 33.888 333.808 L 33.888 333.424 L 33.888 333.424 Q 33.888 332.608 33.432 332.182 L 33.432 332.182 L 33.432 332.182 Q 32.976 331.756 32.1 331.756 L 32.1 331.756 L 32.1 331.756 Q 31.5 331.756 30.948 331.954 L 30.948 331.954 L 30.948 331.954 Q 30.396 332.152 30 332.5 L 30 332.5 L 29.616 331.864 L 29.616 331.864 Q 30.096 331.456 30.768 331.234 L 30.768 331.234 L 30.768 331.234 Q 31.44 331.012 32.184 331.012 L 32.184 331.012 L 32.184 331.012 Z  M 31.884 336.76 L 31.884 336.76 Q 32.604 336.76 33.12 336.43 L 33.12 336.43 L 33.12 336.43 Q 33.636 336.1 33.888 335.476 L 33.888 335.476 L 33.888 334.444 L 31.908 334.444 L 31.908 334.444 Q 30.288 334.444 30.288 335.572 L 30.288 335.572 L 30.288 335.572 Q 30.288 336.124 30.708 336.442 L 30.708 336.442 L 30.708 336.442 Q 31.128 336.76 31.884 336.76 L 31.884 336.76 L 31.884 336.76 Z  M 37.056 337.372 L 37.056 331.06 L 37.908 331.06 L 37.908 337.372 L 37.056 337.372 L 37.056 337.372 Z  M 37.488 329.68 L 37.488 329.68 Q 37.224 329.68 37.044 329.5 L 37.044 329.5 L 37.044 329.5 Q 36.864 329.32 36.864 329.068 L 36.864 329.068 L 36.864 329.068 Q 36.864 328.828 37.044 328.648 L 37.044 328.648 L 37.044 328.648 Q 37.224 328.468 37.488 328.468 L 37.488 328.468 L 37.488 328.468 Q 37.752 328.468 37.932 328.642 L 37.932 328.642 L 37.932 328.642 Q 38.112 328.816 38.112 329.056 L 38.112 329.056 L 38.112 329.056 Q 38.112 329.32 37.932 329.5 L 37.932 329.5 L 37.932 329.5 Q 37.752 329.68 37.488 329.68 L 37.488 329.68 L 37.488 329.68 Z  M 40.284 337.372 L 40.284 328.468 L 41.136 328.468 L 41.136 337.372 L 40.284 337.372 L 40.284 337.372 Z  M 46.764 331.012 L 46.764 331.012 Q 47.652 331.012 48.372 331.414 L 48.372 331.414 L 48.372 331.414 Q 49.092 331.816 49.5 332.548 L 49.5 332.548 L 49.5 332.548 Q 49.908 333.28 49.908 334.216 L 49.908 334.216 L 49.908 334.216 Q 49.908 335.152 49.5 335.884 L 49.5 335.884 L 49.5 335.884 Q 49.092 336.616 48.372 337.024 L 48.372 337.024 L 48.372 337.024 Q 47.652 337.432 46.764 337.432 L 46.764 337.432 L 46.764 337.432 Q 45.972 337.432 45.342 337.096 L 45.342 337.096 L 45.342 337.096 Q 44.712 336.76 44.328 336.124 L 44.328 336.124 L 44.328 337.372 L 43.512 337.372 L 43.512 328.468 L 44.364 328.468 L 44.364 332.26 L 44.364 332.26 Q 44.76 331.648 45.378 331.33 L 45.378 331.33 L 45.378 331.33 Q 45.996 331.012 46.764 331.012 L 46.764 331.012 L 46.764 331.012 Z  M 46.704 336.676 L 46.704 336.676 Q 47.364 336.676 47.904 336.37 L 47.904 336.37 L 47.904 336.37 Q 48.444 336.064 48.75 335.5 L 48.75 335.5 L 48.75 335.5 Q 49.056 334.936 49.056 334.216 L 49.056 334.216 L 49.056 334.216 Q 49.056 333.496 48.75 332.932 L 48.75 332.932 L 48.75 332.932 Q 48.444 332.368 47.904 332.062 L 47.904 332.062 L 47.904 332.062 Q 47.364 331.756 46.704 331.756 L 46.704 331.756 L 46.704 331.756 Q 46.032 331.756 45.498 332.062 L 45.498 332.062 L 45.498 332.062 Q 44.964 332.368 44.658 332.932 L 44.658 332.932 L 44.658 332.932 Q 44.352 333.496 44.352 334.216 L 44.352 334.216 L 44.352 334.216 Q 44.352 334.936 44.658 335.5 L 44.658 335.5 L 44.658 335.5 Q 44.964 336.064 45.498 336.37 L 45.498 336.37 L 45.498 336.37 Q 46.032 336.676 46.704 336.676 L 46.704 336.676 L 46.704 336.676 Z  M 52.464 332.296 L 52.464 332.296 Q 52.764 331.66 53.358 331.336 L 53.358 331.336 L 53.358 331.336 Q 53.952 331.012 54.828 331.012 L 54.828 331.012 L 54.828 331.84 L 54.624 331.828 L 54.624 331.828 Q 53.628 331.828 53.064 332.44 L 53.064 332.44 L 53.064 332.44 Q 52.5 333.052 52.5 334.156 L 52.5 334.156 L 52.5 337.372 L 51.648 337.372 L 51.648 331.06 L 52.464 331.06 L 52.464 332.296 L 52.464 332.296 Z  M 58.884 337.432 L 58.884 337.432 Q 57.972 337.432 57.24 337.018 L 57.24 337.018 L 57.24 337.018 Q 56.508 336.604 56.088 335.872 L 56.088 335.872 L 56.088 335.872 Q 55.668 335.14 55.668 334.216 L 55.668 334.216 L 55.668 334.216 Q 55.668 333.292 56.088 332.56 L 56.088 332.56 L 56.088 332.56 Q 56.508 331.828 57.24 331.42 L 57.24 331.42 L 57.24 331.42 Q 57.972 331.012 58.884 331.012 L 58.884 331.012 L 58.884 331.012 Q 59.796 331.012 60.528 331.42 L 60.528 331.42 L 60.528 331.42 Q 61.26 331.828 61.674 332.56 L 61.674 332.56 L 61.674 332.56 Q 62.088 333.292 62.088 334.216 L 62.088 334.216 L 62.088 334.216 Q 62.088 335.14 61.674 335.872 L 61.674 335.872 L 61.674 335.872 Q 61.26 336.604 60.528 337.018 L 60.528 337.018 L 60.528 337.018 Q 59.796 337.432 58.884 337.432 L 58.884 337.432 L 58.884 337.432 Z  M 58.884 336.676 L 58.884 336.676 Q 59.556 336.676 60.09 336.37 L 60.09 336.37 L 60.09 336.37 Q 60.624 336.064 60.924 335.5 L 60.924 335.5 L 60.924 335.5 Q 61.224 334.936 61.224 334.216 L 61.224 334.216 L 61.224 334.216 Q 61.224 333.496 60.924 332.932 L 60.924 332.932 L 60.924 332.932 Q 60.624 332.368 60.09 332.062 L 60.09 332.062 L 60.09 332.062 Q 59.556 331.756 58.884 331.756 L 58.884 331.756 L 58.884 331.756 Q 58.212 331.756 57.678 332.062 L 57.678 332.062 L 57.678 332.062 Q 57.144 332.368 56.838 332.932 L 56.838 332.932 L 56.838 332.932 Q 56.532 333.496 56.532 334.216 L 56.532 334.216 L 56.532 334.216 Q 56.532 334.936 56.838 335.5 L 56.838 335.5 L 56.838 335.5 Q 57.144 336.064 57.678 336.37 L 57.678 336.37 L 57.678 336.37 Q 58.212 336.676 58.884 336.676 L 58.884 336.676 L 58.884 336.676 Z  M 68.712 337.372 L 66.168 334.204 L 64.68 335.572 L 64.68 337.372 L 63.828 337.372 L 63.828 328.468 L 64.68 328.468 L 64.68 334.504 L 68.448 331.06 L 69.504 331.06 L 66.804 333.64 L 69.756 337.372 L 68.712 337.372 L 68.712 337.372 Z  M 76.296 334.216 L 76.284 334.48 L 71.004 334.48 L 71.004 334.48 Q 71.076 335.464 71.76 336.07 L 71.76 336.07 L 71.76 336.07 Q 72.444 336.676 73.488 336.676 L 73.488 336.676 L 73.488 336.676 Q 74.076 336.676 74.568 336.466 L 74.568 336.466 L 74.568 336.466 Q 75.06 336.256 75.42 335.848 L 75.42 335.848 L 75.9 336.4 L 75.9 336.4 Q 75.48 336.904 74.85 337.168 L 74.85 337.168 L 74.85 337.168 Q 74.22 337.432 73.464 337.432 L 73.464 337.432 L 73.464 337.432 Q 72.492 337.432 71.742 337.018 L 71.742 337.018 L 71.742 337.018 Q 70.992 336.604 70.572 335.872 L 70.572 335.872 L 70.572 335.872 Q 70.152 335.14 70.152 334.216 L 70.152 334.216 L 70.152 334.216 Q 70.152 333.292 70.554 332.56 L 70.554 332.56 L 70.554 332.56 Q 70.956 331.828 71.658 331.42 L 71.658 331.42 L 71.658 331.42 Q 72.36 331.012 73.236 331.012 L 73.236 331.012 L 73.236 331.012 Q 74.112 331.012 74.808 331.42 L 74.808 331.42 L 74.808 331.42 Q 75.504 331.828 75.9 332.554 L 75.9 332.554 L 75.9 332.554 Q 76.296 333.28 76.296 334.216 L 76.296 334.216 L 76.296 334.216 Z  M 73.236 331.744 L 73.236 331.744 Q 72.324 331.744 71.706 332.326 L 71.706 332.326 L 71.706 332.326 Q 71.088 332.908 71.004 333.844 L 71.004 333.844 L 75.48 333.844 L 75.48 333.844 Q 75.396 332.908 74.778 332.326 L 74.778 332.326 L 74.778 332.326 Q 74.16 331.744 73.236 331.744 L 73.236 331.744 L 73.236 331.744 Z  M 81.252 331.012 L 81.252 331.012 Q 82.44 331.012 83.142 331.702 L 83.142 331.702 L 83.142 331.702 Q 83.844 332.392 83.844 333.712 L 83.844 333.712 L 83.844 337.372 L 82.992 337.372 L 82.992 333.796 L 82.992 333.796 Q 82.992 332.812 82.5 332.296 L 82.5 332.296 L 82.5 332.296 Q 82.008 331.78 81.096 331.78 L 81.096 331.78 L 81.096 331.78 Q 80.076 331.78 79.482 332.386 L 79.482 332.386 L 79.482 332.386 Q 78.888 332.992 78.888 334.06 L 78.888 334.06 L 78.888 337.372 L 78.036 337.372 L 78.036 331.06 L 78.852 331.06 L 78.852 332.224 L 78.852 332.224 Q 79.2 331.648 79.818 331.33 L 79.818 331.33 L 79.818 331.33 Q 80.436 331.012 81.252 331.012 L 81.252 331.012 L 81.252 331.012 Z  M 204.48 316.384 L 204.48 316.384 Q 205.668 316.384 206.37 317.074 L 206.37 317.074 L 206.37 317.074 Q 207.072 317.764 207.072 319.084 L 207.072 319.084 L 207.072 322.744 L 206.22 322.744 L 206.22 319.168 L 206.22 319.168 Q 206.22 318.184 205.728 317.668 L 205.728 317.668 L 205.728 317.668 Q 205.236 317.152 204.324 317.152 L 204.324 317.152 L 204.324 317.152 Q 203.304 317.152 202.71 317.758 L 202.71 317.758 L 202.71 317.758 Q 202.116 318.364 202.116 319.432 L 202.116 319.432 L 202.116 322.744 L 201.264 322.744 L 201.264 316.432 L 202.08 316.432 L 202.08 317.596 L 202.08 317.596 Q 202.428 317.02 203.046 316.702 L 203.046 316.702 L 203.046 316.702 Q 203.664 316.384 204.48 316.384 L 204.48 316.384 L 204.48 316.384 Z  M 211.992 322.804 L 211.992 322.804 Q 211.08 322.804 210.348 322.39 L 210.348 322.39 L 210.348 322.39 Q 209.616 321.976 209.196 321.244 L 209.196 321.244 L 209.196 321.244 Q 208.776 320.512 208.776 319.588 L 208.776 319.588 L 208.776 319.588 Q 208.776 318.664 209.196 317.932 L 209.196 317.932 L 209.196 317.932 Q 209.616 317.2 210.348 316.792 L 210.348 316.792 L 210.348 316.792 Q 211.08 316.384 211.992 316.384 L 211.992 316.384 L 211.992 316.384 Q 212.904 316.384 213.636 316.792 L 213.636 316.792 L 213.636 316.792 Q 214.368 317.2 214.782 317.932 L 214.782 317.932 L 214.782 317.932 Q 215.196 318.664 215.196 319.588 L 215.196 319.588 L 215.196 319.588 Q 215.196 320.512 214.782 321.244 L 214.782 321.244 L 214.782 321.244 Q 214.368 321.976 213.636 322.39 L 213.636 322.39 L 213.636 322.39 Q 212.904 322.804 211.992 322.804 L 211.992 322.804 L 211.992 322.804 Z  M 211.992 322.048 L 211.992 322.048 Q 212.664 322.048 213.198 321.742 L 213.198 321.742 L 213.198 321.742 Q 213.732 321.436 214.032 320.872 L 214.032 320.872 L 214.032 320.872 Q 214.332 320.308 214.332 319.588 L 214.332 319.588 L 214.332 319.588 Q 214.332 318.868 214.032 318.304 L 214.032 318.304 L 214.032 318.304 Q 213.732 317.74 213.198 317.434 L 213.198 317.434 L 213.198 317.434 Q 212.664 317.128 211.992 317.128 L 211.992 317.128 L 211.992 317.128 Q 211.32 317.128 210.786 317.434 L 210.786 317.434 L 210.786 317.434 Q 210.252 317.74 209.946 318.304 L 209.946 318.304 L 209.946 318.304 Q 209.64 318.868 209.64 319.588 L 209.64 319.588 L 209.64 319.588 Q 209.64 320.308 209.946 320.872 L 209.946 320.872 L 209.946 320.872 Q 210.252 321.436 210.786 321.742 L 210.786 321.742 L 210.786 321.742 Q 211.32 322.048 211.992 322.048 L 211.992 322.048 L 211.992 322.048 Z  M 219.96 321.748 L 220.26 322.36 L 220.26 322.36 Q 220.02 322.576 219.666 322.69 L 219.666 322.69 L 219.666 322.69 Q 219.312 322.804 218.928 322.804 L 218.928 322.804 L 218.928 322.804 Q 218.04 322.804 217.56 322.324 L 217.56 322.324 L 217.56 322.324 Q 217.08 321.844 217.08 320.968 L 217.08 320.968 L 217.08 317.152 L 215.952 317.152 L 215.952 316.432 L 217.08 316.432 L 217.08 315.052 L 217.932 315.052 L 217.932 316.432 L 219.852 316.432 L 219.852 317.152 L 217.932 317.152 L 217.932 320.92 L 217.932 320.92 Q 217.932 321.484 218.214 321.778 L 218.214 321.778 L 218.214 321.778 Q 218.496 322.072 219.024 322.072 L 219.024 322.072 L 219.024 322.072 Q 219.288 322.072 219.534 321.988 L 219.534 321.988 L 219.534 321.988 Q 219.78 321.904 219.96 321.748 L 219.96 321.748 L 219.96 321.748 Z  M 189.024 322.744 L 189.024 316.432 L 189.876 316.432 L 189.876 322.744 L 189.024 322.744 L 189.024 322.744 Z  M 189.456 315.052 L 189.456 315.052 Q 189.192 315.052 189.012 314.872 L 189.012 314.872 L 189.012 314.872 Q 188.832 314.692 188.832 314.44 L 188.832 314.44 L 188.832 314.44 Q 188.832 314.2 189.012 314.02 L 189.012 314.02 L 189.012 314.02 Q 189.192 313.84 189.456 313.84 L 189.456 313.84 L 189.456 313.84 Q 189.72 313.84 189.9 314.014 L 189.9 314.014 L 189.9 314.014 Q 190.08 314.188 190.08 314.428 L 190.08 314.428 L 190.08 314.428 Q 190.08 314.692 189.9 314.872 L 189.9 314.872 L 189.9 314.872 Q 189.72 315.052 189.456 315.052 L 189.456 315.052 L 189.456 315.052 Z  M 193.944 322.804 L 193.944 322.804 Q 193.176 322.804 192.474 322.582 L 192.474 322.582 L 192.474 322.582 Q 191.772 322.36 191.376 322.024 L 191.376 322.024 L 191.76 321.352 L 191.76 321.352 Q 192.156 321.664 192.756 321.862 L 192.756 321.862 L 192.756 321.862 Q 193.356 322.06 194.004 322.06 L 194.004 322.06 L 194.004 322.06 Q 194.868 322.06 195.282 321.79 L 195.282 321.79 L 195.282 321.79 Q 195.696 321.52 195.696 321.028 L 195.696 321.028 L 195.696 321.028 Q 195.696 320.68 195.468 320.482 L 195.468 320.482 L 195.468 320.482 Q 195.24 320.284 194.892 320.182 L 194.892 320.182 L 194.892 320.182 Q 194.544 320.08 193.968 319.984 L 193.968 319.984 L 193.968 319.984 Q 193.2 319.84 192.732 319.69 L 192.732 319.69 L 192.732 319.69 Q 192.264 319.54 191.934 319.18 L 191.934 319.18 L 191.934 319.18 Q 191.604 318.82 191.604 318.184 L 191.604 318.184 L 191.604 318.184 Q 191.604 317.392 192.264 316.888 L 192.264 316.888 L 192.264 316.888 Q 192.924 316.384 194.1 316.384 L 194.1 316.384 L 194.1 316.384 Q 194.712 316.384 195.324 316.546 L 195.324 316.546 L 195.324 316.546 Q 195.936 316.708 196.332 316.972 L 196.332 316.972 L 195.96 317.656 L 195.96 317.656 Q 195.18 317.116 194.1 317.116 L 194.1 317.116 L 194.1 317.116 Q 193.284 317.116 192.87 317.404 L 192.87 317.404 L 192.87 317.404 Q 192.456 317.692 192.456 318.16 L 192.456 318.16 L 192.456 318.16 Q 192.456 318.52 192.69 318.736 L 192.69 318.736 L 192.69 318.736 Q 192.924 318.952 193.272 319.054 L 193.272 319.054 L 193.272 319.054 Q 193.62 319.156 194.232 319.264 L 194.232 319.264 L 194.232 319.264 Q 194.988 319.408 195.444 319.552 L 195.444 319.552 L 195.444 319.552 Q 195.9 319.696 196.224 320.044 L 196.224 320.044 L 196.224 320.044 Q 196.548 320.392 196.548 321.004 L 196.548 321.004 L 196.548 321.004 Q 196.548 321.832 195.858 322.318 L 195.858 322.318 L 195.858 322.318 Q 195.168 322.804 193.944 322.804 L 193.944 322.804 L 193.944 322.804 Z  M 152.004 313.84 L 152.856 313.84 L 152.856 322.744 L 152.04 322.744 L 152.04 321.496 L 152.04 321.496 Q 151.656 322.132 151.026 322.468 L 151.026 322.468 L 151.026 322.468 Q 150.396 322.804 149.604 322.804 L 149.604 322.804 L 149.604 322.804 Q 148.716 322.804 147.996 322.396 L 147.996 322.396 L 147.996 322.396 Q 147.276 321.988 146.868 321.256 L 146.868 321.256 L 146.868 321.256 Q 146.46 320.524 146.46 319.588 L 146.46 319.588 L 146.46 319.588 Q 146.46 318.652 146.868 317.92 L 146.868 317.92 L 146.868 317.92 Q 147.276 317.188 147.996 316.786 L 147.996 316.786 L 147.996 316.786 Q 148.716 316.384 149.604 316.384 L 149.604 316.384 L 149.604 316.384 Q 150.372 316.384 150.99 316.702 L 150.99 316.702 L 150.99 316.702 Q 151.608 317.02 152.004 317.632 L 152.004 317.632 L 152.004 313.84 L 152.004 313.84 Z  M 149.676 322.048 L 149.676 322.048 Q 150.336 322.048 150.87 321.742 L 150.87 321.742 L 150.87 321.742 Q 151.404 321.436 151.71 320.872 L 151.71 320.872 L 151.71 320.872 Q 152.016 320.308 152.016 319.588 L 152.016 319.588 L 152.016 319.588 Q 152.016 318.868 151.71 318.304 L 151.71 318.304 L 151.71 318.304 Q 151.404 317.74 150.87 317.434 L 150.87 317.434 L 150.87 317.434 Q 150.336 317.128 149.676 317.128 L 149.676 317.128 L 149.676 317.128 Q 149.004 317.128 148.47 317.434 L 148.47 317.434 L 148.47 317.434 Q 147.936 317.74 147.63 318.304 L 147.63 318.304 L 147.63 318.304 Q 147.324 318.868 147.324 319.588 L 147.324 319.588 L 147.324 319.588 Q 147.324 320.308 147.63 320.872 L 147.63 320.872 L 147.63 320.872 Q 147.936 321.436 148.47 321.742 L 148.47 321.742 L 148.47 321.742 Q 149.004 322.048 149.676 322.048 L 149.676 322.048 L 149.676 322.048 Z  M 160.74 319.588 L 160.728 319.852 L 155.448 319.852 L 155.448 319.852 Q 155.52 320.836 156.204 321.442 L 156.204 321.442 L 156.204 321.442 Q 156.888 322.048 157.932 322.048 L 157.932 322.048 L 157.932 322.048 Q 158.52 322.048 159.012 321.838 L 159.012 321.838 L 159.012 321.838 Q 159.504 321.628 159.864 321.22 L 159.864 321.22 L 160.344 321.772 L 160.344 321.772 Q 159.924 322.276 159.294 322.54 L 159.294 322.54 L 159.294 322.54 Q 158.664 322.804 157.908 322.804 L 157.908 322.804 L 157.908 322.804 Q 156.936 322.804 156.186 322.39 L 156.186 322.39 L 156.186 322.39 Q 155.436 321.976 155.016 321.244 L 155.016 321.244 L 155.016 321.244 Q 154.596 320.512 154.596 319.588 L 154.596 319.588 L 154.596 319.588 Q 154.596 318.664 154.998 317.932 L 154.998 317.932 L 154.998 317.932 Q 155.4 317.2 156.102 316.792 L 156.102 316.792 L 156.102 316.792 Q 156.804 316.384 157.68 316.384 L 157.68 316.384 L 157.68 316.384 Q 158.556 316.384 159.252 316.792 L 159.252 316.792 L 159.252 316.792 Q 159.948 317.2 160.344 317.926 L 160.344 317.926 L 160.344 317.926 Q 160.74 318.652 160.74 319.588 L 160.74 319.588 L 160.74 319.588 Z  M 157.68 317.116 L 157.68 317.116 Q 156.768 317.116 156.15 317.698 L 156.15 317.698 L 156.15 317.698 Q 155.532 318.28 155.448 319.216 L 155.448 319.216 L 159.924 319.216 L 159.924 319.216 Q 159.84 318.28 159.222 317.698 L 159.222 317.698 L 159.222 317.698 Q 158.604 317.116 157.68 317.116 L 157.68 317.116 L 157.68 317.116 Z  M 166.824 316.432 L 167.664 316.432 L 164.856 322.744 L 163.98 322.744 L 161.184 316.432 L 162.072 316.432 L 164.436 321.808 L 166.824 316.432 L 166.824 316.432 Z  M 168.864 322.744 L 168.864 316.432 L 169.716 316.432 L 169.716 322.744 L 168.864 322.744 L 168.864 322.744 Z  M 169.296 315.052 L 169.296 315.052 Q 169.032 315.052 168.852 314.872 L 168.852 314.872 L 168.852 314.872 Q 168.672 314.692 168.672 314.44 L 168.672 314.44 L 168.672 314.44 Q 168.672 314.2 168.852 314.02 L 168.852 314.02 L 168.852 314.02 Q 169.032 313.84 169.296 313.84 L 169.296 313.84 L 169.296 313.84 Q 169.56 313.84 169.74 314.014 L 169.74 314.014 L 169.74 314.014 Q 169.92 314.188 169.92 314.428 L 169.92 314.428 L 169.92 314.428 Q 169.92 314.692 169.74 314.872 L 169.74 314.872 L 169.74 314.872 Q 169.56 315.052 169.296 315.052 L 169.296 315.052 L 169.296 315.052 Z  M 174.708 322.804 L 174.708 322.804 Q 173.772 322.804 173.034 322.396 L 173.034 322.396 L 173.034 322.396 Q 172.296 321.988 171.876 321.25 L 171.876 321.25 L 171.876 321.25 Q 171.456 320.512 171.456 319.588 L 171.456 319.588 L 171.456 319.588 Q 171.456 318.664 171.876 317.932 L 171.876 317.932 L 171.876 317.932 Q 172.296 317.2 173.034 316.792 L 173.034 316.792 L 173.034 316.792 Q 173.772 316.384 174.708 316.384 L 174.708 316.384 L 174.708 316.384 Q 175.524 316.384 176.166 316.702 L 176.166 316.702 L 176.166 316.702 Q 176.808 317.02 177.18 317.632 L 177.18 317.632 L 176.544 318.064 L 176.544 318.064 Q 176.232 317.596 175.752 317.362 L 175.752 317.362 L 175.752 317.362 Q 175.272 317.128 174.708 317.128 L 174.708 317.128 L 174.708 317.128 Q 174.024 317.128 173.478 317.434 L 173.478 317.434 L 173.478 317.434 Q 172.932 317.74 172.626 318.304 L 172.626 318.304 L 172.626 318.304 Q 172.32 318.868 172.32 319.588 L 172.32 319.588 L 172.32 319.588 Q 172.32 320.32 172.626 320.878 L 172.626 320.878 L 172.626 320.878 Q 172.932 321.436 173.478 321.742 L 173.478 321.742 L 173.478 321.742 Q 174.024 322.048 174.708 322.048 L 174.708 322.048 L 174.708 322.048 Q 175.272 322.048 175.752 321.82 L 175.752 321.82 L 175.752 321.82 Q 176.232 321.592 176.544 321.124 L 176.544 321.124 L 177.18 321.556 L 177.18 321.556 Q 176.808 322.168 176.16 322.486 L 176.16 322.486 L 176.16 322.486 Q 175.512 322.804 174.708 322.804 L 174.708 322.804 L 174.708 322.804 Z  M 184.248 319.588 L 184.236 319.852 L 178.956 319.852 L 178.956 319.852 Q 179.028 320.836 179.712 321.442 L 179.712 321.442 L 179.712 321.442 Q 180.396 322.048 181.44 322.048 L 181.44 322.048 L 181.44 322.048 Q 182.028 322.048 182.52 321.838 L 182.52 321.838 L 182.52 321.838 Q 183.012 321.628 183.372 321.22 L 183.372 321.22 L 183.852 321.772 L 183.852 321.772 Q 183.432 322.276 182.802 322.54 L 182.802 322.54 L 182.802 322.54 Q 182.172 322.804 181.416 322.804 L 181.416 322.804 L 181.416 322.804 Q 180.444 322.804 179.694 322.39 L 179.694 322.39 L 179.694 322.39 Q 178.944 321.976 178.524 321.244 L 178.524 321.244 L 178.524 321.244 Q 178.104 320.512 178.104 319.588 L 178.104 319.588 L 178.104 319.588 Q 178.104 318.664 178.506 317.932 L 178.506 317.932 L 178.506 317.932 Q 178.908 317.2 179.61 316.792 L 179.61 316.792 L 179.61 316.792 Q 180.312 316.384 181.188 316.384 L 181.188 316.384 L 181.188 316.384 Q 182.064 316.384 182.76 316.792 L 182.76 316.792 L 182.76 316.792 Q 183.456 317.2 183.852 317.926 L 183.852 317.926 L 183.852 317.926 Q 184.248 318.652 184.248 319.588 L 184.248 319.588 L 184.248 319.588 Z  M 181.188 317.116 L 181.188 317.116 Q 180.276 317.116 179.658 317.698 L 179.658 317.698 L 179.658 317.698 Q 179.04 318.28 178.956 319.216 L 178.956 319.216 L 183.432 319.216 L 183.432 319.216 Q 183.348 318.28 182.73 317.698 L 182.73 317.698 L 182.73 317.698 Q 182.112 317.116 181.188 317.116 L 181.188 317.116 L 181.188 317.116 Z  M 121.68 316.432 L 122.52 316.432 L 119.364 323.5 L 119.364 323.5 Q 118.98 324.388 118.476 324.76 L 118.476 324.76 L 118.476 324.76 Q 117.972 325.132 117.264 325.132 L 117.264 325.132 L 117.264 325.132 Q 116.808 325.132 116.412 324.988 L 116.412 324.988 L 116.412 324.988 Q 116.016 324.844 115.728 324.556 L 115.728 324.556 L 116.124 323.92 L 116.124 323.92 Q 116.604 324.4 117.276 324.4 L 117.276 324.4 L 117.276 324.4 Q 117.708 324.4 118.014 324.16 L 118.014 324.16 L 118.014 324.16 Q 118.32 323.92 118.584 323.344 L 118.584 323.344 L 118.86 322.732 L 116.04 316.432 L 116.928 316.432 L 119.304 321.796 L 121.68 316.432 L 121.68 316.432 Z  M 126.12 322.804 L 126.12 322.804 Q 125.208 322.804 124.476 322.39 L 124.476 322.39 L 124.476 322.39 Q 123.744 321.976 123.324 321.244 L 123.324 321.244 L 123.324 321.244 Q 122.904 320.512 122.904 319.588 L 122.904 319.588 L 122.904 319.588 Q 122.904 318.664 123.324 317.932 L 123.324 317.932 L 123.324 317.932 Q 123.744 317.2 124.476 316.792 L 124.476 316.792 L 124.476 316.792 Q 125.208 316.384 126.12 316.384 L 126.12 316.384 L 126.12 316.384 Q 127.032 316.384 127.764 316.792 L 127.764 316.792 L 127.764 316.792 Q 128.496 317.2 128.91 317.932 L 128.91 317.932 L 128.91 317.932 Q 129.324 318.664 129.324 319.588 L 129.324 319.588 L 129.324 319.588 Q 129.324 320.512 128.91 321.244 L 128.91 321.244 L 128.91 321.244 Q 128.496 321.976 127.764 322.39 L 127.764 322.39 L 127.764 322.39 Q 127.032 322.804 126.12 322.804 L 126.12 322.804 L 126.12 322.804 Z  M 126.12 322.048 L 126.12 322.048 Q 126.792 322.048 127.326 321.742 L 127.326 321.742 L 127.326 321.742 Q 127.86 321.436 128.16 320.872 L 128.16 320.872 L 128.16 320.872 Q 128.46 320.308 128.46 319.588 L 128.46 319.588 L 128.46 319.588 Q 128.46 318.868 128.16 318.304 L 128.16 318.304 L 128.16 318.304 Q 127.86 317.74 127.326 317.434 L 127.326 317.434 L 127.326 317.434 Q 126.792 317.128 126.12 317.128 L 126.12 317.128 L 126.12 317.128 Q 125.448 317.128 124.914 317.434 L 124.914 317.434 L 124.914 317.434 Q 124.38 317.74 124.074 318.304 L 124.074 318.304 L 124.074 318.304 Q 123.768 318.868 123.768 319.588 L 123.768 319.588 L 123.768 319.588 Q 123.768 320.308 124.074 320.872 L 124.074 320.872 L 124.074 320.872 Q 124.38 321.436 124.914 321.742 L 124.914 321.742 L 124.914 321.742 Q 125.448 322.048 126.12 322.048 L 126.12 322.048 L 126.12 322.048 Z  M 135.9 316.432 L 136.752 316.432 L 136.752 322.744 L 135.936 322.744 L 135.936 321.592 L 135.936 321.592 Q 135.6 322.168 135.012 322.486 L 135.012 322.486 L 135.012 322.486 Q 134.424 322.804 133.668 322.804 L 133.668 322.804 L 133.668 322.804 Q 132.432 322.804 131.718 322.114 L 131.718 322.114 L 131.718 322.114 Q 131.004 321.424 131.004 320.092 L 131.004 320.092 L 131.004 316.432 L 131.856 316.432 L 131.856 320.008 L 131.856 320.008 Q 131.856 321.004 132.348 321.52 L 132.348 321.52 L 132.348 321.52 Q 132.84 322.036 133.752 322.036 L 133.752 322.036 L 133.752 322.036 Q 134.748 322.036 135.324 321.43 L 135.324 321.43 L 135.324 321.43 Q 135.9 320.824 135.9 319.744 L 135.9 319.744 L 135.9 316.432 L 135.9 316.432 Z  M 139.956 317.668 L 139.956 317.668 Q 140.256 317.032 140.85 316.708 L 140.85 316.708 L 140.85 316.708 Q 141.444 316.384 142.32 316.384 L 142.32 316.384 L 142.32 317.212 L 142.116 317.2 L 142.116 317.2 Q 141.12 317.2 140.556 317.812 L 140.556 317.812 L 140.556 317.812 Q 139.992 318.424 139.992 319.528 L 139.992 319.528 L 139.992 322.744 L 139.14 322.744 L 139.14 316.432 L 139.956 316.432 L 139.956 317.668 L 139.956 317.668 Z  M 73.296 321.976 L 78.348 321.976 L 78.348 322.744 L 72.408 322.744 L 72.408 314.344 L 78.168 314.344 L 78.168 315.112 L 73.296 315.112 L 73.296 318.1 L 77.64 318.1 L 77.64 318.856 L 73.296 318.856 L 73.296 321.976 L 73.296 321.976 Z  M 83.472 316.384 L 83.472 316.384 Q 84.66 316.384 85.362 317.074 L 85.362 317.074 L 85.362 317.074 Q 86.064 317.764 86.064 319.084 L 86.064 319.084 L 86.064 322.744 L 85.212 322.744 L 85.212 319.168 L 85.212 319.168 Q 85.212 318.184 84.72 317.668 L 84.72 317.668 L 84.72 317.668 Q 84.228 317.152 83.316 317.152 L 83.316 317.152 L 83.316 317.152 Q 82.296 317.152 81.702 317.758 L 81.702 317.758 L 81.702 317.758 Q 81.108 318.364 81.108 319.432 L 81.108 319.432 L 81.108 322.744 L 80.256 322.744 L 80.256 316.432 L 81.072 316.432 L 81.072 317.596 L 81.072 317.596 Q 81.42 317.02 82.038 316.702 L 82.038 316.702 L 82.038 316.702 Q 82.656 316.384 83.472 316.384 L 83.472 316.384 L 83.472 316.384 Z  M 90.072 322.804 L 90.072 322.804 Q 89.304 322.804 88.602 322.582 L 88.602 322.582 L 88.602 322.582 Q 87.9 322.36 87.504 322.024 L 87.504 322.024 L 87.888 321.352 L 87.888 321.352 Q 88.284 321.664 88.884 321.862 L 88.884 321.862 L 88.884 321.862 Q 89.484 322.06 90.132 322.06 L 90.132 322.06 L 90.132 322.06 Q 90.996 322.06 91.41 321.79 L 91.41 321.79 L 91.41 321.79 Q 91.824 321.52 91.824 321.028 L 91.824 321.028 L 91.824 321.028 Q 91.824 320.68 91.596 320.482 L 91.596 320.482 L 91.596 320.482 Q 91.368 320.284 91.02 320.182 L 91.02 320.182 L 91.02 320.182 Q 90.672 320.08 90.096 319.984 L 90.096 319.984 L 90.096 319.984 Q 89.328 319.84 88.86 319.69 L 88.86 319.69 L 88.86 319.69 Q 88.392 319.54 88.062 319.18 L 88.062 319.18 L 88.062 319.18 Q 87.732 318.82 87.732 318.184 L 87.732 318.184 L 87.732 318.184 Q 87.732 317.392 88.392 316.888 L 88.392 316.888 L 88.392 316.888 Q 89.052 316.384 90.228 316.384 L 90.228 316.384 L 90.228 316.384 Q 90.84 316.384 91.452 316.546 L 91.452 316.546 L 91.452 316.546 Q 92.064 316.708 92.46 316.972 L 92.46 316.972 L 92.088 317.656 L 92.088 317.656 Q 91.308 317.116 90.228 317.116 L 90.228 317.116 L 90.228 317.116 Q 89.412 317.116 88.998 317.404 L 88.998 317.404 L 88.998 317.404 Q 88.584 317.692 88.584 318.16 L 88.584 318.16 L 88.584 318.16 Q 88.584 318.52 88.818 318.736 L 88.818 318.736 L 88.818 318.736 Q 89.052 318.952 89.4 319.054 L 89.4 319.054 L 89.4 319.054 Q 89.748 319.156 90.36 319.264 L 90.36 319.264 L 90.36 319.264 Q 91.116 319.408 91.572 319.552 L 91.572 319.552 L 91.572 319.552 Q 92.028 319.696 92.352 320.044 L 92.352 320.044 L 92.352 320.044 Q 92.676 320.392 92.676 321.004 L 92.676 321.004 L 92.676 321.004 Q 92.676 321.832 91.986 322.318 L 91.986 322.318 L 91.986 322.318 Q 91.296 322.804 90.072 322.804 L 90.072 322.804 L 90.072 322.804 Z  M 99.084 316.432 L 99.936 316.432 L 99.936 322.744 L 99.12 322.744 L 99.12 321.592 L 99.12 321.592 Q 98.784 322.168 98.196 322.486 L 98.196 322.486 L 98.196 322.486 Q 97.608 322.804 96.852 322.804 L 96.852 322.804 L 96.852 322.804 Q 95.616 322.804 94.902 322.114 L 94.902 322.114 L 94.902 322.114 Q 94.188 321.424 94.188 320.092 L 94.188 320.092 L 94.188 316.432 L 95.04 316.432 L 95.04 320.008 L 95.04 320.008 Q 95.04 321.004 95.532 321.52 L 95.532 321.52 L 95.532 321.52 Q 96.024 322.036 96.936 322.036 L 96.936 322.036 L 96.936 322.036 Q 97.932 322.036 98.508 321.43 L 98.508 321.43 L 98.508 321.43 Q 99.084 320.824 99.084 319.744 L 99.084 319.744 L 99.084 316.432 L 99.084 316.432 Z  M 103.14 317.668 L 103.14 317.668 Q 103.44 317.032 104.034 316.708 L 104.034 316.708 L 104.034 316.708 Q 104.628 316.384 105.504 316.384 L 105.504 316.384 L 105.504 317.212 L 105.3 317.2 L 105.3 317.2 Q 104.304 317.2 103.74 317.812 L 103.74 317.812 L 103.74 317.812 Q 103.176 318.424 103.176 319.528 L 103.176 319.528 L 103.176 322.744 L 102.324 322.744 L 102.324 316.432 L 103.14 316.432 L 103.14 317.668 L 103.14 317.668 Z  M 112.488 319.588 L 112.476 319.852 L 107.196 319.852 L 107.196 319.852 Q 107.268 320.836 107.952 321.442 L 107.952 321.442 L 107.952 321.442 Q 108.636 322.048 109.68 322.048 L 109.68 322.048 L 109.68 322.048 Q 110.268 322.048 110.76 321.838 L 110.76 321.838 L 110.76 321.838 Q 111.252 321.628 111.612 321.22 L 111.612 321.22 L 112.092 321.772 L 112.092 321.772 Q 111.672 322.276 111.042 322.54 L 111.042 322.54 L 111.042 322.54 Q 110.412 322.804 109.656 322.804 L 109.656 322.804 L 109.656 322.804 Q 108.684 322.804 107.934 322.39 L 107.934 322.39 L 107.934 322.39 Q 107.184 321.976 106.764 321.244 L 106.764 321.244 L 106.764 321.244 Q 106.344 320.512 106.344 319.588 L 106.344 319.588 L 106.344 319.588 Q 106.344 318.664 106.746 317.932 L 106.746 317.932 L 106.746 317.932 Q 107.148 317.2 107.85 316.792 L 107.85 316.792 L 107.85 316.792 Q 108.552 316.384 109.428 316.384 L 109.428 316.384 L 109.428 316.384 Q 110.304 316.384 111 316.792 L 111 316.792 L 111 316.792 Q 111.696 317.2 112.092 317.926 L 112.092 317.926 L 112.092 317.926 Q 112.488 318.652 112.488 319.588 L 112.488 319.588 L 112.488 319.588 Z  M 109.428 317.116 L 109.428 317.116 Q 108.516 317.116 107.898 317.698 L 107.898 317.698 L 107.898 317.698 Q 107.28 318.28 107.196 319.216 L 107.196 319.216 L 111.672 319.216 L 111.672 319.216 Q 111.588 318.28 110.97 317.698 L 110.97 317.698 L 110.97 317.698 Q 110.352 317.116 109.428 317.116 L 109.428 317.116 L 109.428 317.116 Z  M 28.38 322.804 L 28.38 322.804 Q 27.612 322.804 26.91 322.582 L 26.91 322.582 L 26.91 322.582 Q 26.208 322.36 25.812 322.024 L 25.812 322.024 L 26.196 321.352 L 26.196 321.352 Q 26.592 321.664 27.192 321.862 L 27.192 321.862 L 27.192 321.862 Q 27.792 322.06 28.44 322.06 L 28.44 322.06 L 28.44 322.06 Q 29.304 322.06 29.718 321.79 L 29.718 321.79 L 29.718 321.79 Q 30.132 321.52 30.132 321.028 L 30.132 321.028 L 30.132 321.028 Q 30.132 320.68 29.904 320.482 L 29.904 320.482 L 29.904 320.482 Q 29.676 320.284 29.328 320.182 L 29.328 320.182 L 29.328 320.182 Q 28.98 320.08 28.404 319.984 L 28.404 319.984 L 28.404 319.984 Q 27.636 319.84 27.168 319.69 L 27.168 319.69 L 27.168 319.69 Q 26.7 319.54 26.37 319.18 L 26.37 319.18 L 26.37 319.18 Q 26.04 318.82 26.04 318.184 L 26.04 318.184 L 26.04 318.184 Q 26.04 317.392 26.7 316.888 L 26.7 316.888 L 26.7 316.888 Q 27.36 316.384 28.536 316.384 L 28.536 316.384 L 28.536 316.384 Q 29.148 316.384 29.76 316.546 L 29.76 316.546 L 29.76 316.546 Q 30.372 316.708 30.768 316.972 L 30.768 316.972 L 30.396 317.656 L 30.396 317.656 Q 29.616 317.116 28.536 317.116 L 28.536 317.116 L 28.536 317.116 Q 27.72 317.116 27.306 317.404 L 27.306 317.404 L 27.306 317.404 Q 26.892 317.692 26.892 318.16 L 26.892 318.16 L 26.892 318.16 Q 26.892 318.52 27.126 318.736 L 27.126 318.736 L 27.126 318.736 Q 27.36 318.952 27.708 319.054 L 27.708 319.054 L 27.708 319.054 Q 28.056 319.156 28.668 319.264 L 28.668 319.264 L 28.668 319.264 Q 29.424 319.408 29.88 319.552 L 29.88 319.552 L 29.88 319.552 Q 30.336 319.696 30.66 320.044 L 30.66 320.044 L 30.66 320.044 Q 30.984 320.392 30.984 321.004 L 30.984 321.004 L 30.984 321.004 Q 30.984 321.832 30.294 322.318 L 30.294 322.318 L 30.294 322.318 Q 29.604 322.804 28.38 322.804 L 28.38 322.804 L 28.38 322.804 Z  M 38.064 319.588 L 38.052 319.852 L 32.772 319.852 L 32.772 319.852 Q 32.844 320.836 33.528 321.442 L 33.528 321.442 L 33.528 321.442 Q 34.212 322.048 35.256 322.048 L 35.256 322.048 L 35.256 322.048 Q 35.844 322.048 36.336 321.838 L 36.336 321.838 L 36.336 321.838 Q 36.828 321.628 37.188 321.22 L 37.188 321.22 L 37.668 321.772 L 37.668 321.772 Q 37.248 322.276 36.618 322.54 L 36.618 322.54 L 36.618 322.54 Q 35.988 322.804 35.232 322.804 L 35.232 322.804 L 35.232 322.804 Q 34.26 322.804 33.51 322.39 L 33.51 322.39 L 33.51 322.39 Q 32.76 321.976 32.34 321.244 L 32.34 321.244 L 32.34 321.244 Q 31.92 320.512 31.92 319.588 L 31.92 319.588 L 31.92 319.588 Q 31.92 318.664 32.322 317.932 L 32.322 317.932 L 32.322 317.932 Q 32.724 317.2 33.426 316.792 L 33.426 316.792 L 33.426 316.792 Q 34.128 316.384 35.004 316.384 L 35.004 316.384 L 35.004 316.384 Q 35.88 316.384 36.576 316.792 L 36.576 316.792 L 36.576 316.792 Q 37.272 317.2 37.668 317.926 L 37.668 317.926 L 37.668 317.926 Q 38.064 318.652 38.064 319.588 L 38.064 319.588 L 38.064 319.588 Z  M 35.004 317.116 L 35.004 317.116 Q 34.092 317.116 33.474 317.698 L 33.474 317.698 L 33.474 317.698 Q 32.856 318.28 32.772 319.216 L 32.772 319.216 L 37.248 319.216 L 37.248 319.216 Q 37.164 318.28 36.546 317.698 L 36.546 317.698 L 36.546 317.698 Q 35.928 317.116 35.004 317.116 L 35.004 317.116 L 35.004 317.116 Z  M 42.42 322.804 L 42.42 322.804 Q 41.484 322.804 40.746 322.396 L 40.746 322.396 L 40.746 322.396 Q 40.008 321.988 39.588 321.25 L 39.588 321.25 L 39.588 321.25 Q 39.168 320.512 39.168 319.588 L 39.168 319.588 L 39.168 319.588 Q 39.168 318.664 39.588 317.932 L 39.588 317.932 L 39.588 317.932 Q 40.008 317.2 40.746 316.792 L 40.746 316.792 L 40.746 316.792 Q 41.484 316.384 42.42 316.384 L 42.42 316.384 L 42.42 316.384 Q 43.236 316.384 43.878 316.702 L 43.878 316.702 L 43.878 316.702 Q 44.52 317.02 44.892 317.632 L 44.892 317.632 L 44.256 318.064 L 44.256 318.064 Q 43.944 317.596 43.464 317.362 L 43.464 317.362 L 43.464 317.362 Q 42.984 317.128 42.42 317.128 L 42.42 317.128 L 42.42 317.128 Q 41.736 317.128 41.19 317.434 L 41.19 317.434 L 41.19 317.434 Q 40.644 317.74 40.338 318.304 L 40.338 318.304 L 40.338 318.304 Q 40.032 318.868 40.032 319.588 L 40.032 319.588 L 40.032 319.588 Q 40.032 320.32 40.338 320.878 L 40.338 320.878 L 40.338 320.878 Q 40.644 321.436 41.19 321.742 L 41.19 321.742 L 41.19 321.742 Q 41.736 322.048 42.42 322.048 L 42.42 322.048 L 42.42 322.048 Q 42.984 322.048 43.464 321.82 L 43.464 321.82 L 43.464 321.82 Q 43.944 321.592 44.256 321.124 L 44.256 321.124 L 44.892 321.556 L 44.892 321.556 Q 44.52 322.168 43.872 322.486 L 43.872 322.486 L 43.872 322.486 Q 43.224 322.804 42.42 322.804 L 42.42 322.804 L 42.42 322.804 Z  M 51.396 316.432 L 52.248 316.432 L 52.248 322.744 L 51.432 322.744 L 51.432 321.592 L 51.432 321.592 Q 51.096 322.168 50.508 322.486 L 50.508 322.486 L 50.508 322.486 Q 49.92 322.804 49.164 322.804 L 49.164 322.804 L 49.164 322.804 Q 47.928 322.804 47.214 322.114 L 47.214 322.114 L 47.214 322.114 Q 46.5 321.424 46.5 320.092 L 46.5 320.092 L 46.5 316.432 L 47.352 316.432 L 47.352 320.008 L 47.352 320.008 Q 47.352 321.004 47.844 321.52 L 47.844 321.52 L 47.844 321.52 Q 48.336 322.036 49.248 322.036 L 49.248 322.036 L 49.248 322.036 Q 50.244 322.036 50.82 321.43 L 50.82 321.43 L 50.82 321.43 Q 51.396 320.824 51.396 319.744 L 51.396 319.744 L 51.396 316.432 L 51.396 316.432 Z  M 55.452 317.668 L 55.452 317.668 Q 55.752 317.032 56.346 316.708 L 56.346 316.708 L 56.346 316.708 Q 56.94 316.384 57.816 316.384 L 57.816 316.384 L 57.816 317.212 L 57.612 317.2 L 57.612 317.2 Q 56.616 317.2 56.052 317.812 L 56.052 317.812 L 56.052 317.812 Q 55.488 318.424 55.488 319.528 L 55.488 319.528 L 55.488 322.744 L 54.636 322.744 L 54.636 316.432 L 55.452 316.432 L 55.452 317.668 L 55.452 317.668 Z  M 64.8 319.588 L 64.788 319.852 L 59.508 319.852 L 59.508 319.852 Q 59.58 320.836 60.264 321.442 L 60.264 321.442 L 60.264 321.442 Q 60.948 322.048 61.992 322.048 L 61.992 322.048 L 61.992 322.048 Q 62.58 322.048 63.072 321.838 L 63.072 321.838 L 63.072 321.838 Q 63.564 321.628 63.924 321.22 L 63.924 321.22 L 64.404 321.772 L 64.404 321.772 Q 63.984 322.276 63.354 322.54 L 63.354 322.54 L 63.354 322.54 Q 62.724 322.804 61.968 322.804 L 61.968 322.804 L 61.968 322.804 Q 60.996 322.804 60.246 322.39 L 60.246 322.39 L 60.246 322.39 Q 59.496 321.976 59.076 321.244 L 59.076 321.244 L 59.076 321.244 Q 58.656 320.512 58.656 319.588 L 58.656 319.588 L 58.656 319.588 Q 58.656 318.664 59.058 317.932 L 59.058 317.932 L 59.058 317.932 Q 59.46 317.2 60.162 316.792 L 60.162 316.792 L 60.162 316.792 Q 60.864 316.384 61.74 316.384 L 61.74 316.384 L 61.74 316.384 Q 62.616 316.384 63.312 316.792 L 63.312 316.792 L 63.312 316.792 Q 64.008 317.2 64.404 317.926 L 64.404 317.926 L 64.404 317.926 Q 64.8 318.652 64.8 319.588 L 64.8 319.588 L 64.8 319.588 Z  M 61.74 317.116 L 61.74 317.116 Q 60.828 317.116 60.21 317.698 L 60.21 317.698 L 60.21 317.698 Q 59.592 318.28 59.508 319.216 L 59.508 319.216 L 63.984 319.216 L 63.984 319.216 Q 63.9 318.28 63.282 317.698 L 63.282 317.698 L 63.282 317.698 Q 62.664 317.116 61.74 317.116 L 61.74 317.116 L 61.74 317.116 Z  M 66.624 322.804 L 66.624 322.804 Q 66.36 322.804 66.174 322.612 L 66.174 322.612 L 66.174 322.612 Q 65.988 322.42 65.988 322.144 L 65.988 322.144 L 65.988 322.144 Q 65.988 321.868 66.174 321.682 L 66.174 321.682 L 66.174 321.682 Q 66.36 321.496 66.624 321.496 L 66.624 321.496 L 66.624 321.496 Q 66.888 321.496 67.08 321.682 L 67.08 321.682 L 67.08 321.682 Q 67.272 321.868 67.272 322.144 L 67.272 322.144 L 67.272 322.144 Q 67.272 322.42 67.08 322.612 L 67.08 322.612 L 67.08 322.612 Q 66.888 322.804 66.624 322.804 L 66.624 322.804 L 66.624 322.804 Z  M 240.708 299.212 L 241.56 299.212 L 241.56 308.116 L 240.744 308.116 L 240.744 306.868 L 240.744 306.868 Q 240.36 307.504 239.73 307.84 L 239.73 307.84 L 239.73 307.84 Q 239.1 308.176 238.308 308.176 L 238.308 308.176 L 238.308 308.176 Q 237.42 308.176 236.7 307.768 L 236.7 307.768 L 236.7 307.768 Q 235.98 307.36 235.572 306.628 L 235.572 306.628 L 235.572 306.628 Q 235.164 305.896 235.164 304.96 L 235.164 304.96 L 235.164 304.96 Q 235.164 304.024 235.572 303.292 L 235.572 303.292 L 235.572 303.292 Q 235.98 302.56 236.7 302.158 L 236.7 302.158 L 236.7 302.158 Q 237.42 301.756 238.308 301.756 L 238.308 301.756 L 238.308 301.756 Q 239.076 301.756 239.694 302.074 L 239.694 302.074 L 239.694 302.074 Q 240.312 302.392 240.708 303.004 L 240.708 303.004 L 240.708 299.212 L 240.708 299.212 Z  M 238.38 307.42 L 238.38 307.42 Q 239.04 307.42 239.574 307.114 L 239.574 307.114 L 239.574 307.114 Q 240.108 306.808 240.414 306.244 L 240.414 306.244 L 240.414 306.244 Q 240.72 305.68 240.72 304.96 L 240.72 304.96 L 240.72 304.96 Q 240.72 304.24 240.414 303.676 L 240.414 303.676 L 240.414 303.676 Q 240.108 303.112 239.574 302.806 L 239.574 302.806 L 239.574 302.806 Q 239.04 302.5 238.38 302.5 L 238.38 302.5 L 238.38 302.5 Q 237.708 302.5 237.174 302.806 L 237.174 302.806 L 237.174 302.806 Q 236.64 303.112 236.334 303.676 L 236.334 303.676 L 236.334 303.676 Q 236.028 304.24 236.028 304.96 L 236.028 304.96 L 236.028 304.96 Q 236.028 305.68 236.334 306.244 L 236.334 306.244 L 236.334 306.244 Q 236.64 306.808 237.174 307.114 L 237.174 307.114 L 237.174 307.114 Q 237.708 307.42 238.38 307.42 L 238.38 307.42 L 238.38 307.42 Z  M 246.144 301.756 L 246.144 301.756 Q 247.38 301.756 248.04 302.374 L 248.04 302.374 L 248.04 302.374 Q 248.7 302.992 248.7 304.204 L 248.7 304.204 L 248.7 308.116 L 247.884 308.116 L 247.884 307.132 L 247.884 307.132 Q 247.596 307.624 247.038 307.9 L 247.038 307.9 L 247.038 307.9 Q 246.48 308.176 245.712 308.176 L 245.712 308.176 L 245.712 308.176 Q 244.656 308.176 244.032 307.672 L 244.032 307.672 L 244.032 307.672 Q 243.408 307.168 243.408 306.34 L 243.408 306.34 L 243.408 306.34 Q 243.408 305.536 243.99 305.044 L 243.99 305.044 L 243.99 305.044 Q 244.572 304.552 245.844 304.552 L 245.844 304.552 L 247.848 304.552 L 247.848 304.168 L 247.848 304.168 Q 247.848 303.352 247.392 302.926 L 247.392 302.926 L 247.392 302.926 Q 246.936 302.5 246.06 302.5 L 246.06 302.5 L 246.06 302.5 Q 245.46 302.5 244.908 302.698 L 244.908 302.698 L 244.908 302.698 Q 244.356 302.896 243.96 303.244 L 243.96 303.244 L 243.576 302.608 L 243.576 302.608 Q 244.056 302.2 244.728 301.978 L 244.728 301.978 L 244.728 301.978 Q 245.4 301.756 246.144 301.756 L 246.144 301.756 L 246.144 301.756 Z  M 245.844 307.504 L 245.844 307.504 Q 246.564 307.504 247.08 307.174 L 247.08 307.174 L 247.08 307.174 Q 247.596 306.844 247.848 306.22 L 247.848 306.22 L 247.848 305.188 L 245.868 305.188 L 245.868 305.188 Q 244.248 305.188 244.248 306.316 L 244.248 306.316 L 244.248 306.316 Q 244.248 306.868 244.668 307.186 L 244.668 307.186 L 244.668 307.186 Q 245.088 307.504 245.844 307.504 L 245.844 307.504 L 245.844 307.504 Z  M 254.04 307.12 L 254.34 307.732 L 254.34 307.732 Q 254.1 307.948 253.746 308.062 L 253.746 308.062 L 253.746 308.062 Q 253.392 308.176 253.008 308.176 L 253.008 308.176 L 253.008 308.176 Q 252.12 308.176 251.64 307.696 L 251.64 307.696 L 251.64 307.696 Q 251.16 307.216 251.16 306.34 L 251.16 306.34 L 251.16 302.524 L 250.032 302.524 L 250.032 301.804 L 251.16 301.804 L 251.16 300.424 L 252.012 300.424 L 252.012 301.804 L 253.932 301.804 L 253.932 302.524 L 252.012 302.524 L 252.012 306.292 L 252.012 306.292 Q 252.012 306.856 252.294 307.15 L 252.294 307.15 L 252.294 307.15 Q 252.576 307.444 253.104 307.444 L 253.104 307.444 L 253.104 307.444 Q 253.368 307.444 253.614 307.36 L 253.614 307.36 L 253.614 307.36 Q 253.86 307.276 254.04 307.12 L 254.04 307.12 L 254.04 307.12 Z  M 258.096 301.756 L 258.096 301.756 Q 259.332 301.756 259.992 302.374 L 259.992 302.374 L 259.992 302.374 Q 260.652 302.992 260.652 304.204 L 260.652 304.204 L 260.652 308.116 L 259.836 308.116 L 259.836 307.132 L 259.836 307.132 Q 259.548 307.624 258.99 307.9 L 258.99 307.9 L 258.99 307.9 Q 258.432 308.176 257.664 308.176 L 257.664 308.176 L 257.664 308.176 Q 256.608 308.176 255.984 307.672 L 255.984 307.672 L 255.984 307.672 Q 255.36 307.168 255.36 306.34 L 255.36 306.34 L 255.36 306.34 Q 255.36 305.536 255.942 305.044 L 255.942 305.044 L 255.942 305.044 Q 256.524 304.552 257.796 304.552 L 257.796 304.552 L 259.8 304.552 L 259.8 304.168 L 259.8 304.168 Q 259.8 303.352 259.344 302.926 L 259.344 302.926 L 259.344 302.926 Q 258.888 302.5 258.012 302.5 L 258.012 302.5 L 258.012 302.5 Q 257.412 302.5 256.86 302.698 L 256.86 302.698 L 256.86 302.698 Q 256.308 302.896 255.912 303.244 L 255.912 303.244 L 255.528 302.608 L 255.528 302.608 Q 256.008 302.2 256.68 301.978 L 256.68 301.978 L 256.68 301.978 Q 257.352 301.756 258.096 301.756 L 258.096 301.756 L 258.096 301.756 Z  M 257.796 307.504 L 257.796 307.504 Q 258.516 307.504 259.032 307.174 L 259.032 307.174 L 259.032 307.174 Q 259.548 306.844 259.8 306.22 L 259.8 306.22 L 259.8 305.188 L 257.82 305.188 L 257.82 305.188 Q 256.2 305.188 256.2 306.316 L 256.2 306.316 L 256.2 306.316 Q 256.2 306.868 256.62 307.186 L 256.62 307.186 L 256.62 307.186 Q 257.04 307.504 257.796 307.504 L 257.796 307.504 L 257.796 307.504 Z  M 210.384 301.804 L 211.224 301.804 L 208.068 308.872 L 208.068 308.872 Q 207.684 309.76 207.18 310.132 L 207.18 310.132 L 207.18 310.132 Q 206.676 310.504 205.968 310.504 L 205.968 310.504 L 205.968 310.504 Q 205.512 310.504 205.116 310.36 L 205.116 310.36 L 205.116 310.36 Q 204.72 310.216 204.432 309.928 L 204.432 309.928 L 204.828 309.292 L 204.828 309.292 Q 205.308 309.772 205.98 309.772 L 205.98 309.772 L 205.98 309.772 Q 206.412 309.772 206.718 309.532 L 206.718 309.532 L 206.718 309.532 Q 207.024 309.292 207.288 308.716 L 207.288 308.716 L 207.564 308.104 L 204.744 301.804 L 205.632 301.804 L 208.008 307.168 L 210.384 301.804 L 210.384 301.804 Z  M 214.824 308.176 L 214.824 308.176 Q 213.912 308.176 213.18 307.762 L 213.18 307.762 L 213.18 307.762 Q 212.448 307.348 212.028 306.616 L 212.028 306.616 L 212.028 306.616 Q 211.608 305.884 211.608 304.96 L 211.608 304.96 L 211.608 304.96 Q 211.608 304.036 212.028 303.304 L 212.028 303.304 L 212.028 303.304 Q 212.448 302.572 213.18 302.164 L 213.18 302.164 L 213.18 302.164 Q 213.912 301.756 214.824 301.756 L 214.824 301.756 L 214.824 301.756 Q 215.736 301.756 216.468 302.164 L 216.468 302.164 L 216.468 302.164 Q 217.2 302.572 217.614 303.304 L 217.614 303.304 L 217.614 303.304 Q 218.028 304.036 218.028 304.96 L 218.028 304.96 L 218.028 304.96 Q 218.028 305.884 217.614 306.616 L 217.614 306.616 L 217.614 306.616 Q 217.2 307.348 216.468 307.762 L 216.468 307.762 L 216.468 307.762 Q 215.736 308.176 214.824 308.176 L 214.824 308.176 L 214.824 308.176 Z  M 214.824 307.42 L 214.824 307.42 Q 215.496 307.42 216.03 307.114 L 216.03 307.114 L 216.03 307.114 Q 216.564 306.808 216.864 306.244 L 216.864 306.244 L 216.864 306.244 Q 217.164 305.68 217.164 304.96 L 217.164 304.96 L 217.164 304.96 Q 217.164 304.24 216.864 303.676 L 216.864 303.676 L 216.864 303.676 Q 216.564 303.112 216.03 302.806 L 216.03 302.806 L 216.03 302.806 Q 215.496 302.5 214.824 302.5 L 214.824 302.5 L 214.824 302.5 Q 214.152 302.5 213.618 302.806 L 213.618 302.806 L 213.618 302.806 Q 213.084 303.112 212.778 303.676 L 212.778 303.676 L 212.778 303.676 Q 212.472 304.24 212.472 304.96 L 212.472 304.96 L 212.472 304.96 Q 212.472 305.68 212.778 306.244 L 212.778 306.244 L 212.778 306.244 Q 213.084 306.808 213.618 307.114 L 213.618 307.114 L 213.618 307.114 Q 214.152 307.42 214.824 307.42 L 214.824 307.42 L 214.824 307.42 Z  M 224.604 301.804 L 225.456 301.804 L 225.456 308.116 L 224.64 308.116 L 224.64 306.964 L 224.64 306.964 Q 224.304 307.54 223.716 307.858 L 223.716 307.858 L 223.716 307.858 Q 223.128 308.176 222.372 308.176 L 222.372 308.176 L 222.372 308.176 Q 221.136 308.176 220.422 307.486 L 220.422 307.486 L 220.422 307.486 Q 219.708 306.796 219.708 305.464 L 219.708 305.464 L 219.708 301.804 L 220.56 301.804 L 220.56 305.38 L 220.56 305.38 Q 220.56 306.376 221.052 306.892 L 221.052 306.892 L 221.052 306.892 Q 221.544 307.408 222.456 307.408 L 222.456 307.408 L 222.456 307.408 Q 223.452 307.408 224.028 306.802 L 224.028 306.802 L 224.028 306.802 Q 224.604 306.196 224.604 305.116 L 224.604 305.116 L 224.604 301.804 L 224.604 301.804 Z  M 228.66 303.04 L 228.66 303.04 Q 228.96 302.404 229.554 302.08 L 229.554 302.08 L 229.554 302.08 Q 230.148 301.756 231.024 301.756 L 231.024 301.756 L 231.024 302.584 L 230.82 302.572 L 230.82 302.572 Q 229.824 302.572 229.26 303.184 L 229.26 303.184 L 229.26 303.184 Q 228.696 303.796 228.696 304.9 L 228.696 304.9 L 228.696 308.116 L 227.844 308.116 L 227.844 301.804 L 228.66 301.804 L 228.66 303.04 L 228.66 303.04 Z  M 178.068 308.116 L 175.524 304.948 L 174.036 306.316 L 174.036 308.116 L 173.184 308.116 L 173.184 299.212 L 174.036 299.212 L 174.036 305.248 L 177.804 301.804 L 178.86 301.804 L 176.16 304.384 L 179.112 308.116 L 178.068 308.116 L 178.068 308.116 Z  M 185.652 304.96 L 185.64 305.224 L 180.36 305.224 L 180.36 305.224 Q 180.432 306.208 181.116 306.814 L 181.116 306.814 L 181.116 306.814 Q 181.8 307.42 182.844 307.42 L 182.844 307.42 L 182.844 307.42 Q 183.432 307.42 183.924 307.21 L 183.924 307.21 L 183.924 307.21 Q 184.416 307 184.776 306.592 L 184.776 306.592 L 185.256 307.144 L 185.256 307.144 Q 184.836 307.648 184.206 307.912 L 184.206 307.912 L 184.206 307.912 Q 183.576 308.176 182.82 308.176 L 182.82 308.176 L 182.82 308.176 Q 181.848 308.176 181.098 307.762 L 181.098 307.762 L 181.098 307.762 Q 180.348 307.348 179.928 306.616 L 179.928 306.616 L 179.928 306.616 Q 179.508 305.884 179.508 304.96 L 179.508 304.96 L 179.508 304.96 Q 179.508 304.036 179.91 303.304 L 179.91 303.304 L 179.91 303.304 Q 180.312 302.572 181.014 302.164 L 181.014 302.164 L 181.014 302.164 Q 181.716 301.756 182.592 301.756 L 182.592 301.756 L 182.592 301.756 Q 183.468 301.756 184.164 302.164 L 184.164 302.164 L 184.164 302.164 Q 184.86 302.572 185.256 303.298 L 185.256 303.298 L 185.256 303.298 Q 185.652 304.024 185.652 304.96 L 185.652 304.96 L 185.652 304.96 Z  M 182.592 302.488 L 182.592 302.488 Q 181.68 302.488 181.062 303.07 L 181.062 303.07 L 181.062 303.07 Q 180.444 303.652 180.36 304.588 L 180.36 304.588 L 184.836 304.588 L 184.836 304.588 Q 184.752 303.652 184.134 303.07 L 184.134 303.07 L 184.134 303.07 Q 183.516 302.488 182.592 302.488 L 182.592 302.488 L 182.592 302.488 Z  M 192.9 304.96 L 192.888 305.224 L 187.608 305.224 L 187.608 305.224 Q 187.68 306.208 188.364 306.814 L 188.364 306.814 L 188.364 306.814 Q 189.048 307.42 190.092 307.42 L 190.092 307.42 L 190.092 307.42 Q 190.68 307.42 191.172 307.21 L 191.172 307.21 L 191.172 307.21 Q 191.664 307 192.024 306.592 L 192.024 306.592 L 192.504 307.144 L 192.504 307.144 Q 192.084 307.648 191.454 307.912 L 191.454 307.912 L 191.454 307.912 Q 190.824 308.176 190.068 308.176 L 190.068 308.176 L 190.068 308.176 Q 189.096 308.176 188.346 307.762 L 188.346 307.762 L 188.346 307.762 Q 187.596 307.348 187.176 306.616 L 187.176 306.616 L 187.176 306.616 Q 186.756 305.884 186.756 304.96 L 186.756 304.96 L 186.756 304.96 Q 186.756 304.036 187.158 303.304 L 187.158 303.304 L 187.158 303.304 Q 187.56 302.572 188.262 302.164 L 188.262 302.164 L 188.262 302.164 Q 188.964 301.756 189.84 301.756 L 189.84 301.756 L 189.84 301.756 Q 190.716 301.756 191.412 302.164 L 191.412 302.164 L 191.412 302.164 Q 192.108 302.572 192.504 303.298 L 192.504 303.298 L 192.504 303.298 Q 192.9 304.024 192.9 304.96 L 192.9 304.96 L 192.9 304.96 Z  M 189.84 302.488 L 189.84 302.488 Q 188.928 302.488 188.31 303.07 L 188.31 303.07 L 188.31 303.07 Q 187.692 303.652 187.608 304.588 L 187.608 304.588 L 192.084 304.588 L 192.084 304.588 Q 192 303.652 191.382 303.07 L 191.382 303.07 L 191.382 303.07 Q 190.764 302.488 189.84 302.488 L 189.84 302.488 L 189.84 302.488 Z  M 197.892 301.756 L 197.892 301.756 Q 198.78 301.756 199.5 302.158 L 199.5 302.158 L 199.5 302.158 Q 200.22 302.56 200.628 303.292 L 200.628 303.292 L 200.628 303.292 Q 201.036 304.024 201.036 304.96 L 201.036 304.96 L 201.036 304.96 Q 201.036 305.908 200.628 306.64 L 200.628 306.64 L 200.628 306.64 Q 200.22 307.372 199.506 307.774 L 199.506 307.774 L 199.506 307.774 Q 198.792 308.176 197.892 308.176 L 197.892 308.176 L 197.892 308.176 Q 197.124 308.176 196.506 307.858 L 196.506 307.858 L 196.506 307.858 Q 195.888 307.54 195.492 306.928 L 195.492 306.928 L 195.492 310.444 L 194.64 310.444 L 194.64 301.804 L 195.456 301.804 L 195.456 303.052 L 195.456 303.052 Q 195.84 302.428 196.47 302.092 L 196.47 302.092 L 196.47 302.092 Q 197.1 301.756 197.892 301.756 L 197.892 301.756 L 197.892 301.756 Z  M 197.832 307.42 L 197.832 307.42 Q 198.492 307.42 199.032 307.114 L 199.032 307.114 L 199.032 307.114 Q 199.572 306.808 199.878 306.244 L 199.878 306.244 L 199.878 306.244 Q 200.184 305.68 200.184 304.96 L 200.184 304.96 L 200.184 304.96 Q 200.184 304.24 199.878 303.682 L 199.878 303.682 L 199.878 303.682 Q 199.572 303.124 199.032 302.812 L 199.032 302.812 L 199.032 302.812 Q 198.492 302.5 197.832 302.5 L 197.832 302.5 L 197.832 302.5 Q 197.16 302.5 196.626 302.812 L 196.626 302.812 L 196.626 302.812 Q 196.092 303.124 195.786 303.682 L 195.786 303.682 L 195.786 303.682 Q 195.48 304.24 195.48 304.96 L 195.48 304.96 L 195.48 304.96 Q 195.48 305.68 195.786 306.244 L 195.786 306.244 L 195.786 306.244 Q 196.092 306.808 196.626 307.114 L 196.626 307.114 L 196.626 307.114 Q 197.16 307.42 197.832 307.42 L 197.832 307.42 L 197.832 307.42 Z  M 161.124 307.12 L 161.424 307.732 L 161.424 307.732 Q 161.184 307.948 160.83 308.062 L 160.83 308.062 L 160.83 308.062 Q 160.476 308.176 160.092 308.176 L 160.092 308.176 L 160.092 308.176 Q 159.204 308.176 158.724 307.696 L 158.724 307.696 L 158.724 307.696 Q 158.244 307.216 158.244 306.34 L 158.244 306.34 L 158.244 302.524 L 157.116 302.524 L 157.116 301.804 L 158.244 301.804 L 158.244 300.424 L 159.096 300.424 L 159.096 301.804 L 161.016 301.804 L 161.016 302.524 L 159.096 302.524 L 159.096 306.292 L 159.096 306.292 Q 159.096 306.856 159.378 307.15 L 159.378 307.15 L 159.378 307.15 Q 159.66 307.444 160.188 307.444 L 160.188 307.444 L 160.188 307.444 Q 160.452 307.444 160.698 307.36 L 160.698 307.36 L 160.698 307.36 Q 160.944 307.276 161.124 307.12 L 161.124 307.12 L 161.124 307.12 Z  M 165.324 308.176 L 165.324 308.176 Q 164.412 308.176 163.68 307.762 L 163.68 307.762 L 163.68 307.762 Q 162.948 307.348 162.528 306.616 L 162.528 306.616 L 162.528 306.616 Q 162.108 305.884 162.108 304.96 L 162.108 304.96 L 162.108 304.96 Q 162.108 304.036 162.528 303.304 L 162.528 303.304 L 162.528 303.304 Q 162.948 302.572 163.68 302.164 L 163.68 302.164 L 163.68 302.164 Q 164.412 301.756 165.324 301.756 L 165.324 301.756 L 165.324 301.756 Q 166.236 301.756 166.968 302.164 L 166.968 302.164 L 166.968 302.164 Q 167.7 302.572 168.114 303.304 L 168.114 303.304 L 168.114 303.304 Q 168.528 304.036 168.528 304.96 L 168.528 304.96 L 168.528 304.96 Q 168.528 305.884 168.114 306.616 L 168.114 306.616 L 168.114 306.616 Q 167.7 307.348 166.968 307.762 L 166.968 307.762 L 166.968 307.762 Q 166.236 308.176 165.324 308.176 L 165.324 308.176 L 165.324 308.176 Z  M 165.324 307.42 L 165.324 307.42 Q 165.996 307.42 166.53 307.114 L 166.53 307.114 L 166.53 307.114 Q 167.064 306.808 167.364 306.244 L 167.364 306.244 L 167.364 306.244 Q 167.664 305.68 167.664 304.96 L 167.664 304.96 L 167.664 304.96 Q 167.664 304.24 167.364 303.676 L 167.364 303.676 L 167.364 303.676 Q 167.064 303.112 166.53 302.806 L 166.53 302.806 L 166.53 302.806 Q 165.996 302.5 165.324 302.5 L 165.324 302.5 L 165.324 302.5 Q 164.652 302.5 164.118 302.806 L 164.118 302.806 L 164.118 302.806 Q 163.584 303.112 163.278 303.676 L 163.278 303.676 L 163.278 303.676 Q 162.972 304.24 162.972 304.96 L 162.972 304.96 L 162.972 304.96 Q 162.972 305.68 163.278 306.244 L 163.278 306.244 L 163.278 306.244 Q 163.584 306.808 164.118 307.114 L 164.118 307.114 L 164.118 307.114 Q 164.652 307.42 165.324 307.42 L 165.324 307.42 L 165.324 307.42 Z  M 133.812 301.756 L 133.812 301.756 Q 135.048 301.756 135.708 302.374 L 135.708 302.374 L 135.708 302.374 Q 136.368 302.992 136.368 304.204 L 136.368 304.204 L 136.368 308.116 L 135.552 308.116 L 135.552 307.132 L 135.552 307.132 Q 135.264 307.624 134.706 307.9 L 134.706 307.9 L 134.706 307.9 Q 134.148 308.176 133.38 308.176 L 133.38 308.176 L 133.38 308.176 Q 132.324 308.176 131.7 307.672 L 131.7 307.672 L 131.7 307.672 Q 131.076 307.168 131.076 306.34 L 131.076 306.34 L 131.076 306.34 Q 131.076 305.536 131.658 305.044 L 131.658 305.044 L 131.658 305.044 Q 132.24 304.552 133.512 304.552 L 133.512 304.552 L 135.516 304.552 L 135.516 304.168 L 135.516 304.168 Q 135.516 303.352 135.06 302.926 L 135.06 302.926 L 135.06 302.926 Q 134.604 302.5 133.728 302.5 L 133.728 302.5 L 133.728 302.5 Q 133.128 302.5 132.576 302.698 L 132.576 302.698 L 132.576 302.698 Q 132.024 302.896 131.628 303.244 L 131.628 303.244 L 131.244 302.608 L 131.244 302.608 Q 131.724 302.2 132.396 301.978 L 132.396 301.978 L 132.396 301.978 Q 133.068 301.756 133.812 301.756 L 133.812 301.756 L 133.812 301.756 Z  M 133.512 307.504 L 133.512 307.504 Q 134.232 307.504 134.748 307.174 L 134.748 307.174 L 134.748 307.174 Q 135.264 306.844 135.516 306.22 L 135.516 306.22 L 135.516 305.188 L 133.536 305.188 L 133.536 305.188 Q 131.916 305.188 131.916 306.316 L 131.916 306.316 L 131.916 306.316 Q 131.916 306.868 132.336 307.186 L 132.336 307.186 L 132.336 307.186 Q 132.756 307.504 133.512 307.504 L 133.512 307.504 L 133.512 307.504 Z  M 141.936 301.756 L 141.936 301.756 Q 142.824 301.756 143.544 302.158 L 143.544 302.158 L 143.544 302.158 Q 144.264 302.56 144.672 303.292 L 144.672 303.292 L 144.672 303.292 Q 145.08 304.024 145.08 304.96 L 145.08 304.96 L 145.08 304.96 Q 145.08 305.908 144.672 306.64 L 144.672 306.64 L 144.672 306.64 Q 144.264 307.372 143.55 307.774 L 143.55 307.774 L 143.55 307.774 Q 142.836 308.176 141.936 308.176 L 141.936 308.176 L 141.936 308.176 Q 141.168 308.176 140.55 307.858 L 140.55 307.858 L 140.55 307.858 Q 139.932 307.54 139.536 306.928 L 139.536 306.928 L 139.536 310.444 L 138.684 310.444 L 138.684 301.804 L 139.5 301.804 L 139.5 303.052 L 139.5 303.052 Q 139.884 302.428 140.514 302.092 L 140.514 302.092 L 140.514 302.092 Q 141.144 301.756 141.936 301.756 L 141.936 301.756 L 141.936 301.756 Z  M 141.876 307.42 L 141.876 307.42 Q 142.536 307.42 143.076 307.114 L 143.076 307.114 L 143.076 307.114 Q 143.616 306.808 143.922 306.244 L 143.922 306.244 L 143.922 306.244 Q 144.228 305.68 144.228 304.96 L 144.228 304.96 L 144.228 304.96 Q 144.228 304.24 143.922 303.682 L 143.922 303.682 L 143.922 303.682 Q 143.616 303.124 143.076 302.812 L 143.076 302.812 L 143.076 302.812 Q 142.536 302.5 141.876 302.5 L 141.876 302.5 L 141.876 302.5 Q 141.204 302.5 140.67 302.812 L 140.67 302.812 L 140.67 302.812 Q 140.136 303.124 139.83 303.682 L 139.83 303.682 L 139.83 303.682 Q 139.524 304.24 139.524 304.96 L 139.524 304.96 L 139.524 304.96 Q 139.524 305.68 139.83 306.244 L 139.83 306.244 L 139.83 306.244 Q 140.136 306.808 140.67 307.114 L 140.67 307.114 L 140.67 307.114 Q 141.204 307.42 141.876 307.42 L 141.876 307.42 L 141.876 307.42 Z  M 150.072 301.756 L 150.072 301.756 Q 150.96 301.756 151.68 302.158 L 151.68 302.158 L 151.68 302.158 Q 152.4 302.56 152.808 303.292 L 152.808 303.292 L 152.808 303.292 Q 153.216 304.024 153.216 304.96 L 153.216 304.96 L 153.216 304.96 Q 153.216 305.908 152.808 306.64 L 152.808 306.64 L 152.808 306.64 Q 152.4 307.372 151.686 307.774 L 151.686 307.774 L 151.686 307.774 Q 150.972 308.176 150.072 308.176 L 150.072 308.176 L 150.072 308.176 Q 149.304 308.176 148.686 307.858 L 148.686 307.858 L 148.686 307.858 Q 148.068 307.54 147.672 306.928 L 147.672 306.928 L 147.672 310.444 L 146.82 310.444 L 146.82 301.804 L 147.636 301.804 L 147.636 303.052 L 147.636 303.052 Q 148.02 302.428 148.65 302.092 L 148.65 302.092 L 148.65 302.092 Q 149.28 301.756 150.072 301.756 L 150.072 301.756 L 150.072 301.756 Z  M 150.012 307.42 L 150.012 307.42 Q 150.672 307.42 151.212 307.114 L 151.212 307.114 L 151.212 307.114 Q 151.752 306.808 152.058 306.244 L 152.058 306.244 L 152.058 306.244 Q 152.364 305.68 152.364 304.96 L 152.364 304.96 L 152.364 304.96 Q 152.364 304.24 152.058 303.682 L 152.058 303.682 L 152.058 303.682 Q 151.752 303.124 151.212 302.812 L 151.212 302.812 L 151.212 302.812 Q 150.672 302.5 150.012 302.5 L 150.012 302.5 L 150.012 302.5 Q 149.34 302.5 148.806 302.812 L 148.806 302.812 L 148.806 302.812 Q 148.272 303.124 147.966 303.682 L 147.966 303.682 L 147.966 303.682 Q 147.66 304.24 147.66 304.96 L 147.66 304.96 L 147.66 304.96 Q 147.66 305.68 147.966 306.244 L 147.966 306.244 L 147.966 306.244 Q 148.272 306.808 148.806 307.114 L 148.806 307.114 L 148.806 307.114 Q 149.34 307.42 150.012 307.42 L 150.012 307.42 L 150.012 307.42 Z  M 111.192 307.12 L 111.492 307.732 L 111.492 307.732 Q 111.252 307.948 110.898 308.062 L 110.898 308.062 L 110.898 308.062 Q 110.544 308.176 110.16 308.176 L 110.16 308.176 L 110.16 308.176 Q 109.272 308.176 108.792 307.696 L 108.792 307.696 L 108.792 307.696 Q 108.312 307.216 108.312 306.34 L 108.312 306.34 L 108.312 302.524 L 107.184 302.524 L 107.184 301.804 L 108.312 301.804 L 108.312 300.424 L 109.164 300.424 L 109.164 301.804 L 111.084 301.804 L 111.084 302.524 L 109.164 302.524 L 109.164 306.292 L 109.164 306.292 Q 109.164 306.856 109.446 307.15 L 109.446 307.15 L 109.446 307.15 Q 109.728 307.444 110.256 307.444 L 110.256 307.444 L 110.256 307.444 Q 110.52 307.444 110.766 307.36 L 110.766 307.36 L 110.766 307.36 Q 111.012 307.276 111.192 307.12 L 111.192 307.12 L 111.192 307.12 Z  M 116.256 301.756 L 116.256 301.756 Q 117.444 301.756 118.146 302.446 L 118.146 302.446 L 118.146 302.446 Q 118.848 303.136 118.848 304.456 L 118.848 304.456 L 118.848 308.116 L 117.996 308.116 L 117.996 304.54 L 117.996 304.54 Q 117.996 303.556 117.504 303.04 L 117.504 303.04 L 117.504 303.04 Q 117.012 302.524 116.1 302.524 L 116.1 302.524 L 116.1 302.524 Q 115.08 302.524 114.486 303.13 L 114.486 303.13 L 114.486 303.13 Q 113.892 303.736 113.892 304.804 L 113.892 304.804 L 113.892 308.116 L 113.04 308.116 L 113.04 299.212 L 113.892 299.212 L 113.892 302.908 L 113.892 302.908 Q 114.24 302.356 114.852 302.056 L 114.852 302.056 L 114.852 302.056 Q 115.464 301.756 116.256 301.756 L 116.256 301.756 L 116.256 301.756 Z  M 126.696 304.96 L 126.684 305.224 L 121.404 305.224 L 121.404 305.224 Q 121.476 306.208 122.16 306.814 L 122.16 306.814 L 122.16 306.814 Q 122.844 307.42 123.888 307.42 L 123.888 307.42 L 123.888 307.42 Q 124.476 307.42 124.968 307.21 L 124.968 307.21 L 124.968 307.21 Q 125.46 307 125.82 306.592 L 125.82 306.592 L 126.3 307.144 L 126.3 307.144 Q 125.88 307.648 125.25 307.912 L 125.25 307.912 L 125.25 307.912 Q 124.62 308.176 123.864 308.176 L 123.864 308.176 L 123.864 308.176 Q 122.892 308.176 122.142 307.762 L 122.142 307.762 L 122.142 307.762 Q 121.392 307.348 120.972 306.616 L 120.972 306.616 L 120.972 306.616 Q 120.552 305.884 120.552 304.96 L 120.552 304.96 L 120.552 304.96 Q 120.552 304.036 120.954 303.304 L 120.954 303.304 L 120.954 303.304 Q 121.356 302.572 122.058 302.164 L 122.058 302.164 L 122.058 302.164 Q 122.76 301.756 123.636 301.756 L 123.636 301.756 L 123.636 301.756 Q 124.512 301.756 125.208 302.164 L 125.208 302.164 L 125.208 302.164 Q 125.904 302.572 126.3 303.298 L 126.3 303.298 L 126.3 303.298 Q 126.696 304.024 126.696 304.96 L 126.696 304.96 L 126.696 304.96 Z  M 123.636 302.488 L 123.636 302.488 Q 122.724 302.488 122.106 303.07 L 122.106 303.07 L 122.106 303.07 Q 121.488 303.652 121.404 304.588 L 121.404 304.588 L 125.88 304.588 L 125.88 304.588 Q 125.796 303.652 125.178 303.07 L 125.178 303.07 L 125.178 303.07 Q 124.56 302.488 123.636 302.488 L 123.636 302.488 L 123.636 302.488 Z  M 65.268 308.116 L 65.268 299.212 L 66.12 299.212 L 66.12 308.116 L 65.268 308.116 L 65.268 308.116 Z  M 71.076 308.176 L 71.076 308.176 Q 70.164 308.176 69.432 307.762 L 69.432 307.762 L 69.432 307.762 Q 68.7 307.348 68.28 306.616 L 68.28 306.616 L 68.28 306.616 Q 67.86 305.884 67.86 304.96 L 67.86 304.96 L 67.86 304.96 Q 67.86 304.036 68.28 303.304 L 68.28 303.304 L 68.28 303.304 Q 68.7 302.572 69.432 302.164 L 69.432 302.164 L 69.432 302.164 Q 70.164 301.756 71.076 301.756 L 71.076 301.756 L 71.076 301.756 Q 71.988 301.756 72.72 302.164 L 72.72 302.164 L 72.72 302.164 Q 73.452 302.572 73.866 303.304 L 73.866 303.304 L 73.866 303.304 Q 74.28 304.036 74.28 304.96 L 74.28 304.96 L 74.28 304.96 Q 74.28 305.884 73.866 306.616 L 73.866 306.616 L 73.866 306.616 Q 73.452 307.348 72.72 307.762 L 72.72 307.762 L 72.72 307.762 Q 71.988 308.176 71.076 308.176 L 71.076 308.176 L 71.076 308.176 Z  M 71.076 307.42 L 71.076 307.42 Q 71.748 307.42 72.282 307.114 L 72.282 307.114 L 72.282 307.114 Q 72.816 306.808 73.116 306.244 L 73.116 306.244 L 73.116 306.244 Q 73.416 305.68 73.416 304.96 L 73.416 304.96 L 73.416 304.96 Q 73.416 304.24 73.116 303.676 L 73.116 303.676 L 73.116 303.676 Q 72.816 303.112 72.282 302.806 L 72.282 302.806 L 72.282 302.806 Q 71.748 302.5 71.076 302.5 L 71.076 302.5 L 71.076 302.5 Q 70.404 302.5 69.87 302.806 L 69.87 302.806 L 69.87 302.806 Q 69.336 303.112 69.03 303.676 L 69.03 303.676 L 69.03 303.676 Q 68.724 304.24 68.724 304.96 L 68.724 304.96 L 68.724 304.96 Q 68.724 305.68 69.03 306.244 L 69.03 306.244 L 69.03 306.244 Q 69.336 306.808 69.87 307.114 L 69.87 307.114 L 69.87 307.114 Q 70.404 307.42 71.076 307.42 L 71.076 307.42 L 71.076 307.42 Z  M 78.636 308.176 L 78.636 308.176 Q 77.7 308.176 76.962 307.768 L 76.962 307.768 L 76.962 307.768 Q 76.224 307.36 75.804 306.622 L 75.804 306.622 L 75.804 306.622 Q 75.384 305.884 75.384 304.96 L 75.384 304.96 L 75.384 304.96 Q 75.384 304.036 75.804 303.304 L 75.804 303.304 L 75.804 303.304 Q 76.224 302.572 76.962 302.164 L 76.962 302.164 L 76.962 302.164 Q 77.7 301.756 78.636 301.756 L 78.636 301.756 L 78.636 301.756 Q 79.452 301.756 80.094 302.074 L 80.094 302.074 L 80.094 302.074 Q 80.736 302.392 81.108 303.004 L 81.108 303.004 L 80.472 303.436 L 80.472 303.436 Q 80.16 302.968 79.68 302.734 L 79.68 302.734 L 79.68 302.734 Q 79.2 302.5 78.636 302.5 L 78.636 302.5 L 78.636 302.5 Q 77.952 302.5 77.406 302.806 L 77.406 302.806 L 77.406 302.806 Q 76.86 303.112 76.554 303.676 L 76.554 303.676 L 76.554 303.676 Q 76.248 304.24 76.248 304.96 L 76.248 304.96 L 76.248 304.96 Q 76.248 305.692 76.554 306.25 L 76.554 306.25 L 76.554 306.25 Q 76.86 306.808 77.406 307.114 L 77.406 307.114 L 77.406 307.114 Q 77.952 307.42 78.636 307.42 L 78.636 307.42 L 78.636 307.42 Q 79.2 307.42 79.68 307.192 L 79.68 307.192 L 79.68 307.192 Q 80.16 306.964 80.472 306.496 L 80.472 306.496 L 81.108 306.928 L 81.108 306.928 Q 80.736 307.54 80.088 307.858 L 80.088 307.858 L 80.088 307.858 Q 79.44 308.176 78.636 308.176 L 78.636 308.176 L 78.636 308.176 Z  M 87.564 308.116 L 85.02 304.948 L 83.532 306.316 L 83.532 308.116 L 82.68 308.116 L 82.68 299.212 L 83.532 299.212 L 83.532 305.248 L 87.3 301.804 L 88.356 301.804 L 85.656 304.384 L 88.608 308.116 L 87.564 308.116 L 87.564 308.116 Z  M 95.148 304.96 L 95.136 305.224 L 89.856 305.224 L 89.856 305.224 Q 89.928 306.208 90.612 306.814 L 90.612 306.814 L 90.612 306.814 Q 91.296 307.42 92.34 307.42 L 92.34 307.42 L 92.34 307.42 Q 92.928 307.42 93.42 307.21 L 93.42 307.21 L 93.42 307.21 Q 93.912 307 94.272 306.592 L 94.272 306.592 L 94.752 307.144 L 94.752 307.144 Q 94.332 307.648 93.702 307.912 L 93.702 307.912 L 93.702 307.912 Q 93.072 308.176 92.316 308.176 L 92.316 308.176 L 92.316 308.176 Q 91.344 308.176 90.594 307.762 L 90.594 307.762 L 90.594 307.762 Q 89.844 307.348 89.424 306.616 L 89.424 306.616 L 89.424 306.616 Q 89.004 305.884 89.004 304.96 L 89.004 304.96 L 89.004 304.96 Q 89.004 304.036 89.406 303.304 L 89.406 303.304 L 89.406 303.304 Q 89.808 302.572 90.51 302.164 L 90.51 302.164 L 90.51 302.164 Q 91.212 301.756 92.088 301.756 L 92.088 301.756 L 92.088 301.756 Q 92.964 301.756 93.66 302.164 L 93.66 302.164 L 93.66 302.164 Q 94.356 302.572 94.752 303.298 L 94.752 303.298 L 94.752 303.298 Q 95.148 304.024 95.148 304.96 L 95.148 304.96 L 95.148 304.96 Z  M 92.088 302.488 L 92.088 302.488 Q 91.176 302.488 90.558 303.07 L 90.558 303.07 L 90.558 303.07 Q 89.94 303.652 89.856 304.588 L 89.856 304.588 L 94.332 304.588 L 94.332 304.588 Q 94.248 303.652 93.63 303.07 L 93.63 303.07 L 93.63 303.07 Q 93.012 302.488 92.088 302.488 L 92.088 302.488 L 92.088 302.488 Z  M 101.796 299.212 L 102.648 299.212 L 102.648 308.116 L 101.832 308.116 L 101.832 306.868 L 101.832 306.868 Q 101.448 307.504 100.818 307.84 L 100.818 307.84 L 100.818 307.84 Q 100.188 308.176 99.396 308.176 L 99.396 308.176 L 99.396 308.176 Q 98.508 308.176 97.788 307.768 L 97.788 307.768 L 97.788 307.768 Q 97.068 307.36 96.66 306.628 L 96.66 306.628 L 96.66 306.628 Q 96.252 305.896 96.252 304.96 L 96.252 304.96 L 96.252 304.96 Q 96.252 304.024 96.66 303.292 L 96.66 303.292 L 96.66 303.292 Q 97.068 302.56 97.788 302.158 L 97.788 302.158 L 97.788 302.158 Q 98.508 301.756 99.396 301.756 L 99.396 301.756 L 99.396 301.756 Q 100.164 301.756 100.782 302.074 L 100.782 302.074 L 100.782 302.074 Q 101.4 302.392 101.796 303.004 L 101.796 303.004 L 101.796 299.212 L 101.796 299.212 Z  M 99.468 307.42 L 99.468 307.42 Q 100.128 307.42 100.662 307.114 L 100.662 307.114 L 100.662 307.114 Q 101.196 306.808 101.502 306.244 L 101.502 306.244 L 101.502 306.244 Q 101.808 305.68 101.808 304.96 L 101.808 304.96 L 101.808 304.96 Q 101.808 304.24 101.502 303.676 L 101.502 303.676 L 101.502 303.676 Q 101.196 303.112 100.662 302.806 L 100.662 302.806 L 100.662 302.806 Q 100.128 302.5 99.468 302.5 L 99.468 302.5 L 99.468 302.5 Q 98.796 302.5 98.262 302.806 L 98.262 302.806 L 98.262 302.806 Q 97.728 303.112 97.422 303.676 L 97.422 303.676 L 97.422 303.676 Q 97.116 304.24 97.116 304.96 L 97.116 304.96 L 97.116 304.96 Q 97.116 305.68 97.422 306.244 L 97.422 306.244 L 97.422 306.244 Q 97.728 306.808 98.262 307.114 L 98.262 307.114 L 98.262 307.114 Q 98.796 307.42 99.468 307.42 L 99.468 307.42 L 99.468 307.42 Z  M 37.548 299.716 L 38.4 299.716 L 35.568 308.116 L 34.632 308.116 L 32.172 300.952 L 29.7 308.116 L 28.776 308.116 L 25.944 299.716 L 26.856 299.716 L 29.28 306.94 L 31.788 299.716 L 32.616 299.716 L 35.088 306.976 L 37.548 299.716 L 37.548 299.716 Z  M 44.868 304.96 L 44.856 305.224 L 39.576 305.224 L 39.576 305.224 Q 39.648 306.208 40.332 306.814 L 40.332 306.814 L 40.332 306.814 Q 41.016 307.42 42.06 307.42 L 42.06 307.42 L 42.06 307.42 Q 42.648 307.42 43.14 307.21 L 43.14 307.21 L 43.14 307.21 Q 43.632 307 43.992 306.592 L 43.992 306.592 L 44.472 307.144 L 44.472 307.144 Q 44.052 307.648 43.422 307.912 L 43.422 307.912 L 43.422 307.912 Q 42.792 308.176 42.036 308.176 L 42.036 308.176 L 42.036 308.176 Q 41.064 308.176 40.314 307.762 L 40.314 307.762 L 40.314 307.762 Q 39.564 307.348 39.144 306.616 L 39.144 306.616 L 39.144 306.616 Q 38.724 305.884 38.724 304.96 L 38.724 304.96 L 38.724 304.96 Q 38.724 304.036 39.126 303.304 L 39.126 303.304 L 39.126 303.304 Q 39.528 302.572 40.23 302.164 L 40.23 302.164 L 40.23 302.164 Q 40.932 301.756 41.808 301.756 L 41.808 301.756 L 41.808 301.756 Q 42.684 301.756 43.38 302.164 L 43.38 302.164 L 43.38 302.164 Q 44.076 302.572 44.472 303.298 L 44.472 303.298 L 44.472 303.298 Q 44.868 304.024 44.868 304.96 L 44.868 304.96 L 44.868 304.96 Z  M 41.808 302.488 L 41.808 302.488 Q 40.896 302.488 40.278 303.07 L 40.278 303.07 L 40.278 303.07 Q 39.66 303.652 39.576 304.588 L 39.576 304.588 L 44.052 304.588 L 44.052 304.588 Q 43.968 303.652 43.35 303.07 L 43.35 303.07 L 43.35 303.07 Q 42.732 302.488 41.808 302.488 L 41.808 302.488 L 41.808 302.488 Z  M 46.008 302.884 L 45.948 299.716 L 46.704 299.716 L 46.644 302.884 L 46.008 302.884 L 46.008 302.884 Z  M 53.196 301.804 L 54.036 301.804 L 51.228 308.116 L 50.352 308.116 L 47.556 301.804 L 48.444 301.804 L 50.808 307.18 L 53.196 301.804 L 53.196 301.804 Z  M 60.564 304.96 L 60.552 305.224 L 55.272 305.224 L 55.272 305.224 Q 55.344 306.208 56.028 306.814 L 56.028 306.814 L 56.028 306.814 Q 56.712 307.42 57.756 307.42 L 57.756 307.42 L 57.756 307.42 Q 58.344 307.42 58.836 307.21 L 58.836 307.21 L 58.836 307.21 Q 59.328 307 59.688 306.592 L 59.688 306.592 L 60.168 307.144 L 60.168 307.144 Q 59.748 307.648 59.118 307.912 L 59.118 307.912 L 59.118 307.912 Q 58.488 308.176 57.732 308.176 L 57.732 308.176 L 57.732 308.176 Q 56.76 308.176 56.01 307.762 L 56.01 307.762 L 56.01 307.762 Q 55.26 307.348 54.84 306.616 L 54.84 306.616 L 54.84 306.616 Q 54.42 305.884 54.42 304.96 L 54.42 304.96 L 54.42 304.96 Q 54.42 304.036 54.822 303.304 L 54.822 303.304 L 54.822 303.304 Q 55.224 302.572 55.926 302.164 L 55.926 302.164 L 55.926 302.164 Q 56.628 301.756 57.504 301.756 L 57.504 301.756 L 57.504 301.756 Q 58.38 301.756 59.076 302.164 L 59.076 302.164 L 59.076 302.164 Q 59.772 302.572 60.168 303.298 L 60.168 303.298 L 60.168 303.298 Q 60.564 304.024 60.564 304.96 L 60.564 304.96 L 60.564 304.96 Z  M 57.504 302.488 L 57.504 302.488 Q 56.592 302.488 55.974 303.07 L 55.974 303.07 L 55.974 303.07 Q 55.356 303.652 55.272 304.588 L 55.272 304.588 L 59.748 304.588 L 59.748 304.588 Q 59.664 303.652 59.046 303.07 L 59.046 303.07 L 59.046 303.07 Q 58.428 302.488 57.504 302.488 L 57.504 302.488 L 57.504 302.488 Z " fill="rgb(230,230,230)"/>
			<path d=" M 40.62 268.44 L 40.62 268.44 Q 42.64 268.44 43.82 269.61 L 43.82 269.61 L 43.82 269.61 Q 45 270.78 45 273.12 L 45 273.12 L 45 279.24 L 42.5 279.24 L 42.5 273.44 L 42.5 273.44 Q 42.5 272.04 41.88 271.33 L 41.88 271.33 L 41.88 271.33 Q 41.26 270.62 40.1 270.62 L 40.1 270.62 L 40.1 270.62 Q 38.84 270.62 38.08 271.45 L 38.08 271.45 L 38.08 271.45 Q 37.32 272.28 37.32 273.82 L 37.32 273.82 L 37.32 279.24 L 34.82 279.24 L 34.82 273.44 L 34.82 273.44 Q 34.82 272.04 34.2 271.33 L 34.2 271.33 L 34.2 271.33 Q 33.58 270.62 32.42 270.62 L 32.42 270.62 L 32.42 270.62 Q 31.14 270.62 30.39 271.44 L 30.39 271.44 L 30.39 271.44 Q 29.64 272.26 29.64 273.82 L 29.64 273.82 L 29.64 279.24 L 27.14 279.24 L 27.14 268.56 L 29.52 268.56 L 29.52 269.92 L 29.52 269.92 Q 30.12 269.2 31.02 268.82 L 31.02 268.82 L 31.02 268.82 Q 31.92 268.44 33.02 268.44 L 33.02 268.44 L 33.02 268.44 Q 34.22 268.44 35.15 268.89 L 35.15 268.89 L 35.15 268.89 Q 36.08 269.34 36.62 270.22 L 36.62 270.22 L 36.62 270.22 Q 37.28 269.38 38.32 268.91 L 38.32 268.91 L 38.32 268.91 Q 39.36 268.44 40.62 268.44 L 40.62 268.44 L 40.62 268.44 Z  M 52.28 268.44 L 52.28 268.44 Q 54.64 268.44 55.89 269.57 L 55.89 269.57 L 55.89 269.57 Q 57.14 270.7 57.14 272.98 L 57.14 272.98 L 57.14 279.24 L 54.78 279.24 L 54.78 277.94 L 54.78 277.94 Q 54.32 278.64 53.47 279.01 L 53.47 279.01 L 53.47 279.01 Q 52.62 279.38 51.42 279.38 L 51.42 279.38 L 51.42 279.38 Q 50.22 279.38 49.32 278.97 L 49.32 278.97 L 49.32 278.97 Q 48.42 278.56 47.93 277.83 L 47.93 277.83 L 47.93 277.83 Q 47.44 277.1 47.44 276.18 L 47.44 276.18 L 47.44 276.18 Q 47.44 274.74 48.51 273.87 L 48.51 273.87 L 48.51 273.87 Q 49.58 273 51.88 273 L 51.88 273 L 54.64 273 L 54.64 272.84 L 54.64 272.84 Q 54.64 271.72 53.97 271.12 L 53.97 271.12 L 53.97 271.12 Q 53.3 270.52 51.98 270.52 L 51.98 270.52 L 51.98 270.52 Q 51.08 270.52 50.21 270.8 L 50.21 270.8 L 50.21 270.8 Q 49.34 271.08 48.74 271.58 L 48.74 271.58 L 47.76 269.76 L 47.76 269.76 Q 48.6 269.12 49.78 268.78 L 49.78 268.78 L 49.78 268.78 Q 50.96 268.44 52.28 268.44 L 52.28 268.44 L 52.28 268.44 Z  M 51.94 277.56 L 51.94 277.56 Q 52.88 277.56 53.61 277.13 L 53.61 277.13 L 53.61 277.13 Q 54.34 276.7 54.64 275.9 L 54.64 275.9 L 54.64 274.66 L 52.06 274.66 L 52.06 274.66 Q 49.9 274.66 49.9 276.08 L 49.9 276.08 L 49.9 276.08 Q 49.9 276.76 50.44 277.16 L 50.44 277.16 L 50.44 277.16 Q 50.98 277.56 51.94 277.56 L 51.94 277.56 L 51.94 277.56 Z  M 66.06 276.88 L 66.76 278.66 L 66.76 278.66 Q 66.32 279.02 65.69 279.2 L 65.69 279.2 L 65.69 279.2 Q 65.06 279.38 64.36 279.38 L 64.36 279.38 L 64.36 279.38 Q 62.6 279.38 61.64 278.46 L 61.64 278.46 L 61.64 278.46 Q 60.68 277.54 60.68 275.78 L 60.68 275.78 L 60.68 270.64 L 58.92 270.64 L 58.92 268.64 L 60.68 268.64 L 60.68 266.2 L 63.18 266.2 L 63.18 268.64 L 66.04 268.64 L 66.04 270.64 L 63.18 270.64 L 63.18 275.72 L 63.18 275.72 Q 63.18 276.5 63.56 276.91 L 63.56 276.91 L 63.56 276.91 Q 63.94 277.32 64.66 277.32 L 64.66 277.32 L 64.66 277.32 Q 65.5 277.32 66.06 276.88 L 66.06 276.88 L 66.06 276.88 Z  M 74.28 276.88 L 74.98 278.66 L 74.98 278.66 Q 74.54 279.02 73.91 279.2 L 73.91 279.2 L 73.91 279.2 Q 73.28 279.38 72.58 279.38 L 72.58 279.38 L 72.58 279.38 Q 70.82 279.38 69.86 278.46 L 69.86 278.46 L 69.86 278.46 Q 68.9 277.54 68.9 275.78 L 68.9 275.78 L 68.9 270.64 L 67.14 270.64 L 67.14 268.64 L 68.9 268.64 L 68.9 266.2 L 71.4 266.2 L 71.4 268.64 L 74.26 268.64 L 74.26 270.64 L 71.4 270.64 L 71.4 275.72 L 71.4 275.72 Q 71.4 276.5 71.78 276.91 L 71.78 276.91 L 71.78 276.91 Q 72.16 277.32 72.88 277.32 L 72.88 277.32 L 72.88 277.32 Q 73.72 277.32 74.28 276.88 L 74.28 276.88 L 74.28 276.88 Z  M 86.72 273.96 L 86.72 273.96 Q 86.72 274.22 86.68 274.7 L 86.68 274.7 L 78.3 274.7 L 78.3 274.7 Q 78.52 275.88 79.45 276.57 L 79.45 276.57 L 79.45 276.57 Q 80.38 277.26 81.76 277.26 L 81.76 277.26 L 81.76 277.26 Q 83.52 277.26 84.66 276.1 L 84.66 276.1 L 86 277.64 L 86 277.64 Q 85.28 278.5 84.18 278.94 L 84.18 278.94 L 84.18 278.94 Q 83.08 279.38 81.7 279.38 L 81.7 279.38 L 81.7 279.38 Q 79.94 279.38 78.6 278.68 L 78.6 278.68 L 78.6 278.68 Q 77.26 277.98 76.53 276.73 L 76.53 276.73 L 76.53 276.73 Q 75.8 275.48 75.8 273.9 L 75.8 273.9 L 75.8 273.9 Q 75.8 272.34 76.51 271.09 L 76.51 271.09 L 76.51 271.09 Q 77.22 269.84 78.48 269.14 L 78.48 269.14 L 78.48 269.14 Q 79.74 268.44 81.32 268.44 L 81.32 268.44 L 81.32 268.44 Q 82.88 268.44 84.11 269.13 L 84.11 269.13 L 84.11 269.13 Q 85.34 269.82 86.03 271.07 L 86.03 271.07 L 86.03 271.07 Q 86.72 272.32 86.72 273.96 L 86.72 273.96 L 86.72 273.96 Z  M 81.32 270.44 L 81.32 270.44 Q 80.12 270.44 79.29 271.15 L 79.29 271.15 L 79.29 271.15 Q 78.46 271.86 78.28 273.04 L 78.28 273.04 L 84.34 273.04 L 84.34 273.04 Q 84.18 271.88 83.36 271.16 L 83.36 271.16 L 83.36 271.16 Q 82.54 270.44 81.32 270.44 L 81.32 270.44 L 81.32 270.44 Z  M 91.5 270.12 L 91.5 270.12 Q 92.58 268.44 95.3 268.44 L 95.3 268.44 L 95.3 270.82 L 95.3 270.82 Q 94.98 270.76 94.72 270.76 L 94.72 270.76 L 94.72 270.76 Q 93.26 270.76 92.44 271.61 L 92.44 271.61 L 92.44 271.61 Q 91.62 272.46 91.62 274.06 L 91.62 274.06 L 91.62 279.24 L 89.12 279.24 L 89.12 268.56 L 91.5 268.56 L 91.5 270.12 L 91.5 270.12 Z  M 100.76 279.38 L 100.76 279.38 Q 99.46 279.38 98.22 279.04 L 98.22 279.04 L 98.22 279.04 Q 96.98 278.7 96.24 278.18 L 96.24 278.18 L 97.2 276.28 L 97.2 276.28 Q 97.92 276.76 98.93 277.05 L 98.93 277.05 L 98.93 277.05 Q 99.94 277.34 100.92 277.34 L 100.92 277.34 L 100.92 277.34 Q 103.16 277.34 103.16 276.16 L 103.16 276.16 L 103.16 276.16 Q 103.16 275.6 102.59 275.38 L 102.59 275.38 L 102.59 275.38 Q 102.02 275.16 100.76 274.96 L 100.76 274.96 L 100.76 274.96 Q 99.44 274.76 98.61 274.5 L 98.61 274.5 L 98.61 274.5 Q 97.78 274.24 97.17 273.59 L 97.17 273.59 L 97.17 273.59 Q 96.56 272.94 96.56 271.78 L 96.56 271.78 L 96.56 271.78 Q 96.56 270.26 97.83 269.35 L 97.83 269.35 L 97.83 269.35 Q 99.1 268.44 101.26 268.44 L 101.26 268.44 L 101.26 268.44 Q 102.36 268.44 103.46 268.69 L 103.46 268.69 L 103.46 268.69 Q 104.56 268.94 105.26 269.36 L 105.26 269.36 L 104.3 271.26 L 104.3 271.26 Q 102.94 270.46 101.24 270.46 L 101.24 270.46 L 101.24 270.46 Q 100.14 270.46 99.57 270.79 L 99.57 270.79 L 99.57 270.79 Q 99 271.12 99 271.66 L 99 271.66 L 99 271.66 Q 99 272.26 99.61 272.51 L 99.61 272.51 L 99.61 272.51 Q 100.22 272.76 101.5 272.98 L 101.5 272.98 L 101.5 272.98 Q 102.78 273.18 103.6 273.44 L 103.6 273.44 L 103.6 273.44 Q 104.42 273.7 105.01 274.32 L 105.01 274.32 L 105.01 274.32 Q 105.6 274.94 105.6 276.08 L 105.6 276.08 L 105.6 276.08 Q 105.6 277.58 104.3 278.48 L 104.3 278.48 L 104.3 278.48 Q 103 279.38 100.76 279.38 L 100.76 279.38 L 100.76 279.38 Z  M 174 240.02 L 176.5 240.02 L 176.5 254.86 L 174.1 254.86 L 174.1 253.48 L 174.1 253.48 Q 173.48 254.24 172.57 254.62 L 172.57 254.62 L 172.57 254.62 Q 171.66 255 170.56 255 L 170.56 255 L 170.56 255 Q 169.02 255 167.79 254.32 L 167.79 254.32 L 167.79 254.32 Q 166.56 253.64 165.86 252.39 L 165.86 252.39 L 165.86 252.39 Q 165.16 251.14 165.16 249.52 L 165.16 249.52 L 165.16 249.52 Q 165.16 247.9 165.86 246.66 L 165.86 246.66 L 165.86 246.66 Q 166.56 245.42 167.79 244.74 L 167.79 244.74 L 167.79 244.74 Q 169.02 244.06 170.56 244.06 L 170.56 244.06 L 170.56 244.06 Q 171.62 244.06 172.5 244.42 L 172.5 244.42 L 172.5 244.42 Q 173.38 244.78 174 245.5 L 174 245.5 L 174 240.02 L 174 240.02 Z  M 170.86 252.86 L 170.86 252.86 Q 171.76 252.86 172.48 252.45 L 172.48 252.45 L 172.48 252.45 Q 173.2 252.04 173.62 251.28 L 173.62 251.28 L 173.62 251.28 Q 174.04 250.52 174.04 249.52 L 174.04 249.52 L 174.04 249.52 Q 174.04 248.52 173.62 247.76 L 173.62 247.76 L 173.62 247.76 Q 173.2 247 172.48 246.59 L 172.48 246.59 L 172.48 246.59 Q 171.76 246.18 170.86 246.18 L 170.86 246.18 L 170.86 246.18 Q 169.96 246.18 169.24 246.59 L 169.24 246.59 L 169.24 246.59 Q 168.52 247 168.1 247.76 L 168.1 247.76 L 168.1 247.76 Q 167.68 248.52 167.68 249.52 L 167.68 249.52 L 167.68 249.52 Q 167.68 250.52 168.1 251.28 L 168.1 251.28 L 168.1 251.28 Q 168.52 252.04 169.24 252.45 L 169.24 252.45 L 169.24 252.45 Q 169.96 252.86 170.86 252.86 L 170.86 252.86 L 170.86 252.86 Z  M 183.86 244.06 L 183.86 244.06 Q 186.22 244.06 187.47 245.19 L 187.47 245.19 L 187.47 245.19 Q 188.72 246.32 188.72 248.6 L 188.72 248.6 L 188.72 254.86 L 186.36 254.86 L 186.36 253.56 L 186.36 253.56 Q 185.9 254.26 185.05 254.63 L 185.05 254.63 L 185.05 254.63 Q 184.2 255 183 255 L 183 255 L 183 255 Q 181.8 255 180.9 254.59 L 180.9 254.59 L 180.9 254.59 Q 180 254.18 179.51 253.45 L 179.51 253.45 L 179.51 253.45 Q 179.02 252.72 179.02 251.8 L 179.02 251.8 L 179.02 251.8 Q 179.02 250.36 180.09 249.49 L 180.09 249.49 L 180.09 249.49 Q 181.16 248.62 183.46 248.62 L 183.46 248.62 L 186.22 248.62 L 186.22 248.46 L 186.22 248.46 Q 186.22 247.34 185.55 246.74 L 185.55 246.74 L 185.55 246.74 Q 184.88 246.14 183.56 246.14 L 183.56 246.14 L 183.56 246.14 Q 182.66 246.14 181.79 246.42 L 181.79 246.42 L 181.79 246.42 Q 180.92 246.7 180.32 247.2 L 180.32 247.2 L 179.34 245.38 L 179.34 245.38 Q 180.18 244.74 181.36 244.4 L 181.36 244.4 L 181.36 244.4 Q 182.54 244.06 183.86 244.06 L 183.86 244.06 L 183.86 244.06 Z  M 183.52 253.18 L 183.52 253.18 Q 184.46 253.18 185.19 252.75 L 185.19 252.75 L 185.19 252.75 Q 185.92 252.32 186.22 251.52 L 186.22 251.52 L 186.22 250.28 L 183.64 250.28 L 183.64 250.28 Q 181.48 250.28 181.48 251.7 L 181.48 251.7 L 181.48 251.7 Q 181.48 252.38 182.02 252.78 L 182.02 252.78 L 182.02 252.78 Q 182.56 253.18 183.52 253.18 L 183.52 253.18 L 183.52 253.18 Z  M 197.64 252.5 L 198.34 254.28 L 198.34 254.28 Q 197.9 254.64 197.27 254.82 L 197.27 254.82 L 197.27 254.82 Q 196.64 255 195.94 255 L 195.94 255 L 195.94 255 Q 194.18 255 193.22 254.08 L 193.22 254.08 L 193.22 254.08 Q 192.26 253.16 192.26 251.4 L 192.26 251.4 L 192.26 246.26 L 190.5 246.26 L 190.5 244.26 L 192.26 244.26 L 192.26 241.82 L 194.76 241.82 L 194.76 244.26 L 197.62 244.26 L 197.62 246.26 L 194.76 246.26 L 194.76 251.34 L 194.76 251.34 Q 194.76 252.12 195.14 252.53 L 195.14 252.53 L 195.14 252.53 Q 195.52 252.94 196.24 252.94 L 196.24 252.94 L 196.24 252.94 Q 197.08 252.94 197.64 252.5 L 197.64 252.5 L 197.64 252.5 Z  M 204.48 244.06 L 204.48 244.06 Q 206.84 244.06 208.09 245.19 L 208.09 245.19 L 208.09 245.19 Q 209.34 246.32 209.34 248.6 L 209.34 248.6 L 209.34 254.86 L 206.98 254.86 L 206.98 253.56 L 206.98 253.56 Q 206.52 254.26 205.67 254.63 L 205.67 254.63 L 205.67 254.63 Q 204.82 255 203.62 255 L 203.62 255 L 203.62 255 Q 202.42 255 201.52 254.59 L 201.52 254.59 L 201.52 254.59 Q 200.62 254.18 200.13 253.45 L 200.13 253.45 L 200.13 253.45 Q 199.64 252.72 199.64 251.8 L 199.64 251.8 L 199.64 251.8 Q 199.64 250.36 200.71 249.49 L 200.71 249.49 L 200.71 249.49 Q 201.78 248.62 204.08 248.62 L 204.08 248.62 L 206.84 248.62 L 206.84 248.46 L 206.84 248.46 Q 206.84 247.34 206.17 246.74 L 206.17 246.74 L 206.17 246.74 Q 205.5 246.14 204.18 246.14 L 204.18 246.14 L 204.18 246.14 Q 203.28 246.14 202.41 246.42 L 202.41 246.42 L 202.41 246.42 Q 201.54 246.7 200.94 247.2 L 200.94 247.2 L 199.96 245.38 L 199.96 245.38 Q 200.8 244.74 201.98 244.4 L 201.98 244.4 L 201.98 244.4 Q 203.16 244.06 204.48 244.06 L 204.48 244.06 L 204.48 244.06 Z  M 204.14 253.18 L 204.14 253.18 Q 205.08 253.18 205.81 252.75 L 205.81 252.75 L 205.81 252.75 Q 206.54 252.32 206.84 251.52 L 206.84 251.52 L 206.84 250.28 L 204.26 250.28 L 204.26 250.28 Q 202.1 250.28 202.1 251.7 L 202.1 251.7 L 202.1 251.7 Q 202.1 252.38 202.64 252.78 L 202.64 252.78 L 202.64 252.78 Q 203.18 253.18 204.14 253.18 L 204.14 253.18 L 204.14 253.18 Z  M 77.12 244.06 L 77.12 244.06 Q 78.68 244.06 79.91 244.74 L 79.91 244.74 L 79.91 244.74 Q 81.14 245.42 81.84 246.66 L 81.84 246.66 L 81.84 246.66 Q 82.54 247.9 82.54 249.52 L 82.54 249.52 L 82.54 249.52 Q 82.54 251.14 81.84 252.39 L 81.84 252.39 L 81.84 252.39 Q 81.14 253.64 79.91 254.32 L 79.91 254.32 L 79.91 254.32 Q 78.68 255 77.12 255 L 77.12 255 L 77.12 255 Q 74.96 255 73.7 253.56 L 73.7 253.56 L 73.7 258.74 L 71.2 258.74 L 71.2 244.18 L 73.58 244.18 L 73.58 245.58 L 73.58 245.58 Q 74.2 244.82 75.11 244.44 L 75.11 244.44 L 75.11 244.44 Q 76.02 244.06 77.12 244.06 L 77.12 244.06 L 77.12 244.06 Z  M 76.84 252.86 L 76.84 252.86 Q 78.22 252.86 79.11 251.94 L 79.11 251.94 L 79.11 251.94 Q 80 251.02 80 249.52 L 80 249.52 L 80 249.52 Q 80 248.02 79.11 247.1 L 79.11 247.1 L 79.11 247.1 Q 78.22 246.18 76.84 246.18 L 76.84 246.18 L 76.84 246.18 Q 75.94 246.18 75.22 246.59 L 75.22 246.59 L 75.22 246.59 Q 74.5 247 74.08 247.76 L 74.08 247.76 L 74.08 247.76 Q 73.66 248.52 73.66 249.52 L 73.66 249.52 L 73.66 249.52 Q 73.66 250.52 74.08 251.28 L 74.08 251.28 L 74.08 251.28 Q 74.5 252.04 75.22 252.45 L 75.22 252.45 L 75.22 252.45 Q 75.94 252.86 76.84 252.86 L 76.84 252.86 L 76.84 252.86 Z  M 94.96 249.58 L 94.96 249.58 Q 94.96 249.84 94.92 250.32 L 94.92 250.32 L 86.54 250.32 L 86.54 250.32 Q 86.76 251.5 87.69 252.19 L 87.69 252.19 L 87.69 252.19 Q 88.62 252.88 90 252.88 L 90 252.88 L 90 252.88 Q 91.76 252.88 92.9 251.72 L 92.9 251.72 L 94.24 253.26 L 94.24 253.26 Q 93.52 254.12 92.42 254.56 L 92.42 254.56 L 92.42 254.56 Q 91.32 255 89.94 255 L 89.94 255 L 89.94 255 Q 88.18 255 86.84 254.3 L 86.84 254.3 L 86.84 254.3 Q 85.5 253.6 84.77 252.35 L 84.77 252.35 L 84.77 252.35 Q 84.04 251.1 84.04 249.52 L 84.04 249.52 L 84.04 249.52 Q 84.04 247.96 84.75 246.71 L 84.75 246.71 L 84.75 246.71 Q 85.46 245.46 86.72 244.76 L 86.72 244.76 L 86.72 244.76 Q 87.98 244.06 89.56 244.06 L 89.56 244.06 L 89.56 244.06 Q 91.12 244.06 92.35 244.75 L 92.35 244.75 L 92.35 244.75 Q 93.58 245.44 94.27 246.69 L 94.27 246.69 L 94.27 246.69 Q 94.96 247.94 94.96 249.58 L 94.96 249.58 L 94.96 249.58 Z  M 89.56 246.06 L 89.56 246.06 Q 88.36 246.06 87.53 246.77 L 87.53 246.77 L 87.53 246.77 Q 86.7 247.48 86.52 248.66 L 86.52 248.66 L 92.58 248.66 L 92.58 248.66 Q 92.42 247.5 91.6 246.78 L 91.6 246.78 L 91.6 246.78 Q 90.78 246.06 89.56 246.06 L 89.56 246.06 L 89.56 246.06 Z  M 99.74 245.74 L 99.74 245.74 Q 100.82 244.06 103.54 244.06 L 103.54 244.06 L 103.54 246.44 L 103.54 246.44 Q 103.22 246.38 102.96 246.38 L 102.96 246.38 L 102.96 246.38 Q 101.5 246.38 100.68 247.23 L 100.68 247.23 L 100.68 247.23 Q 99.86 248.08 99.86 249.68 L 99.86 249.68 L 99.86 254.86 L 97.36 254.86 L 97.36 244.18 L 99.74 244.18 L 99.74 245.74 L 99.74 245.74 Z  M 109 255 L 109 255 Q 107.7 255 106.46 254.66 L 106.46 254.66 L 106.46 254.66 Q 105.22 254.32 104.48 253.8 L 104.48 253.8 L 105.44 251.9 L 105.44 251.9 Q 106.16 252.38 107.17 252.67 L 107.17 252.67 L 107.17 252.67 Q 108.18 252.96 109.16 252.96 L 109.16 252.96 L 109.16 252.96 Q 111.4 252.96 111.4 251.78 L 111.4 251.78 L 111.4 251.78 Q 111.4 251.22 110.83 251 L 110.83 251 L 110.83 251 Q 110.26 250.78 109 250.58 L 109 250.58 L 109 250.58 Q 107.68 250.38 106.85 250.12 L 106.85 250.12 L 106.85 250.12 Q 106.02 249.86 105.41 249.21 L 105.41 249.21 L 105.41 249.21 Q 104.8 248.56 104.8 247.4 L 104.8 247.4 L 104.8 247.4 Q 104.8 245.88 106.07 244.97 L 106.07 244.97 L 106.07 244.97 Q 107.34 244.06 109.5 244.06 L 109.5 244.06 L 109.5 244.06 Q 110.6 244.06 111.7 244.31 L 111.7 244.31 L 111.7 244.31 Q 112.8 244.56 113.5 244.98 L 113.5 244.98 L 112.54 246.88 L 112.54 246.88 Q 111.18 246.08 109.48 246.08 L 109.48 246.08 L 109.48 246.08 Q 108.38 246.08 107.81 246.41 L 107.81 246.41 L 107.81 246.41 Q 107.24 246.74 107.24 247.28 L 107.24 247.28 L 107.24 247.28 Q 107.24 247.88 107.85 248.13 L 107.85 248.13 L 107.85 248.13 Q 108.46 248.38 109.74 248.6 L 109.74 248.6 L 109.74 248.6 Q 111.02 248.8 111.84 249.06 L 111.84 249.06 L 111.84 249.06 Q 112.66 249.32 113.25 249.94 L 113.25 249.94 L 113.25 249.94 Q 113.84 250.56 113.84 251.7 L 113.84 251.7 L 113.84 251.7 Q 113.84 253.2 112.54 254.1 L 112.54 254.1 L 112.54 254.1 Q 111.24 255 109 255 L 109 255 L 109 255 Z  M 120.8 255 L 120.8 255 Q 119.18 255 117.88 254.3 L 117.88 254.3 L 117.88 254.3 Q 116.58 253.6 115.85 252.35 L 115.85 252.35 L 115.85 252.35 Q 115.12 251.1 115.12 249.52 L 115.12 249.52 L 115.12 249.52 Q 115.12 247.94 115.85 246.7 L 115.85 246.7 L 115.85 246.7 Q 116.58 245.46 117.88 244.76 L 117.88 244.76 L 117.88 244.76 Q 119.18 244.06 120.8 244.06 L 120.8 244.06 L 120.8 244.06 Q 122.44 244.06 123.74 244.76 L 123.74 244.76 L 123.74 244.76 Q 125.04 245.46 125.77 246.7 L 125.77 246.7 L 125.77 246.7 Q 126.5 247.94 126.5 249.52 L 126.5 249.52 L 126.5 249.52 Q 126.5 251.1 125.77 252.35 L 125.77 252.35 L 125.77 252.35 Q 125.04 253.6 123.74 254.3 L 123.74 254.3 L 123.74 254.3 Q 122.44 255 120.8 255 L 120.8 255 L 120.8 255 Z  M 120.8 252.86 L 120.8 252.86 Q 122.18 252.86 123.08 251.94 L 123.08 251.94 L 123.08 251.94 Q 123.98 251.02 123.98 249.52 L 123.98 249.52 L 123.98 249.52 Q 123.98 248.02 123.08 247.1 L 123.08 247.1 L 123.08 247.1 Q 122.18 246.18 120.8 246.18 L 120.8 246.18 L 120.8 246.18 Q 119.42 246.18 118.53 247.1 L 118.53 247.1 L 118.53 247.1 Q 117.64 248.02 117.64 249.52 L 117.64 249.52 L 117.64 249.52 Q 117.64 251.02 118.53 251.94 L 118.53 251.94 L 118.53 251.94 Q 119.42 252.86 120.8 252.86 L 120.8 252.86 L 120.8 252.86 Z  M 134.96 244.06 L 134.96 244.06 Q 136.98 244.06 138.2 245.24 L 138.2 245.24 L 138.2 245.24 Q 139.42 246.42 139.42 248.74 L 139.42 248.74 L 139.42 254.86 L 136.92 254.86 L 136.92 249.06 L 136.92 249.06 Q 136.92 247.66 136.26 246.95 L 136.26 246.95 L 136.26 246.95 Q 135.6 246.24 134.38 246.24 L 134.38 246.24 L 134.38 246.24 Q 133 246.24 132.2 247.07 L 132.2 247.07 L 132.2 247.07 Q 131.4 247.9 131.4 249.46 L 131.4 249.46 L 131.4 254.86 L 128.9 254.86 L 128.9 244.18 L 131.28 244.18 L 131.28 245.56 L 131.28 245.56 Q 131.9 244.82 132.84 244.44 L 132.84 244.44 L 132.84 244.44 Q 133.78 244.06 134.96 244.06 L 134.96 244.06 L 134.96 244.06 Z  M 146.68 244.06 L 146.68 244.06 Q 149.04 244.06 150.29 245.19 L 150.29 245.19 L 150.29 245.19 Q 151.54 246.32 151.54 248.6 L 151.54 248.6 L 151.54 254.86 L 149.18 254.86 L 149.18 253.56 L 149.18 253.56 Q 148.72 254.26 147.87 254.63 L 147.87 254.63 L 147.87 254.63 Q 147.02 255 145.82 255 L 145.82 255 L 145.82 255 Q 144.62 255 143.72 254.59 L 143.72 254.59 L 143.72 254.59 Q 142.82 254.18 142.33 253.45 L 142.33 253.45 L 142.33 253.45 Q 141.84 252.72 141.84 251.8 L 141.84 251.8 L 141.84 251.8 Q 141.84 250.36 142.91 249.49 L 142.91 249.49 L 142.91 249.49 Q 143.98 248.62 146.28 248.62 L 146.28 248.62 L 149.04 248.62 L 149.04 248.46 L 149.04 248.46 Q 149.04 247.34 148.37 246.74 L 148.37 246.74 L 148.37 246.74 Q 147.7 246.14 146.38 246.14 L 146.38 246.14 L 146.38 246.14 Q 145.48 246.14 144.61 246.42 L 144.61 246.42 L 144.61 246.42 Q 143.74 246.7 143.14 247.2 L 143.14 247.2 L 142.16 245.38 L 142.16 245.38 Q 143 244.74 144.18 244.4 L 144.18 244.4 L 144.18 244.4 Q 145.36 244.06 146.68 244.06 L 146.68 244.06 L 146.68 244.06 Z  M 146.34 253.18 L 146.34 253.18 Q 147.28 253.18 148.01 252.75 L 148.01 252.75 L 148.01 252.75 Q 148.74 252.32 149.04 251.52 L 149.04 251.52 L 149.04 250.28 L 146.46 250.28 L 146.46 250.28 Q 144.3 250.28 144.3 251.7 L 144.3 251.7 L 144.3 251.7 Q 144.3 252.38 144.84 252.78 L 144.84 252.78 L 144.84 252.78 Q 145.38 253.18 146.34 253.18 L 146.34 253.18 L 146.34 253.18 Z  M 154.74 254.86 L 154.74 240.02 L 157.24 240.02 L 157.24 254.86 L 154.74 254.86 L 154.74 254.86 Z  M 38.9 240.86 L 33.42 249.92 L 33.42 254.86 L 30.82 254.86 L 30.82 249.96 L 25.32 240.86 L 28.1 240.86 L 32.2 247.68 L 36.34 240.86 L 38.9 240.86 L 38.9 240.86 Z  M 43.96 255 L 43.96 255 Q 42.34 255 41.04 254.3 L 41.04 254.3 L 41.04 254.3 Q 39.74 253.6 39.01 252.35 L 39.01 252.35 L 39.01 252.35 Q 38.28 251.1 38.28 249.52 L 38.28 249.52 L 38.28 249.52 Q 38.28 247.94 39.01 246.7 L 39.01 246.7 L 39.01 246.7 Q 39.74 245.46 41.04 244.76 L 41.04 244.76 L 41.04 244.76 Q 42.34 244.06 43.96 244.06 L 43.96 244.06 L 43.96 244.06 Q 45.6 244.06 46.9 244.76 L 46.9 244.76 L 46.9 244.76 Q 48.2 245.46 48.93 246.7 L 48.93 246.7 L 48.93 246.7 Q 49.66 247.94 49.66 249.52 L 49.66 249.52 L 49.66 249.52 Q 49.66 251.1 48.93 252.35 L 48.93 252.35 L 48.93 252.35 Q 48.2 253.6 46.9 254.3 L 46.9 254.3 L 46.9 254.3 Q 45.6 255 43.96 255 L 43.96 255 L 43.96 255 Z  M 43.96 252.86 L 43.96 252.86 Q 45.34 252.86 46.24 251.94 L 46.24 251.94 L 46.24 251.94 Q 47.14 251.02 47.14 249.52 L 47.14 249.52 L 47.14 249.52 Q 47.14 248.02 46.24 247.1 L 46.24 247.1 L 46.24 247.1 Q 45.34 246.18 43.96 246.18 L 43.96 246.18 L 43.96 246.18 Q 42.58 246.18 41.69 247.1 L 41.69 247.1 L 41.69 247.1 Q 40.8 248.02 40.8 249.52 L 40.8 249.52 L 40.8 249.52 Q 40.8 251.02 41.69 251.94 L 41.69 251.94 L 41.69 251.94 Q 42.58 252.86 43.96 252.86 L 43.96 252.86 L 43.96 252.86 Z  M 59.9 244.18 L 62.4 244.18 L 62.4 254.86 L 60.02 254.86 L 60.02 253.5 L 60.02 253.5 Q 59.42 254.22 58.52 254.61 L 58.52 254.61 L 58.52 254.61 Q 57.62 255 56.58 255 L 56.58 255 L 56.58 255 Q 54.44 255 53.21 253.81 L 53.21 253.81 L 53.21 253.81 Q 51.98 252.62 51.98 250.28 L 51.98 250.28 L 51.98 244.18 L 54.48 244.18 L 54.48 249.94 L 54.48 249.94 Q 54.48 251.38 55.13 252.09 L 55.13 252.09 L 55.13 252.09 Q 55.78 252.8 56.98 252.8 L 56.98 252.8 L 56.98 252.8 Q 58.32 252.8 59.11 251.97 L 59.11 251.97 L 59.11 251.97 Q 59.9 251.14 59.9 249.58 L 59.9 249.58 L 59.9 244.18 L 59.9 244.18 Z " fill="rgb(255,255,255)"/>
		</g>
		<g>
			<rect x="12.5" y="63.5" width="255" height="15" transform="matrix(1,0,0,1,0,0)" fill="none"/>
			<g>
				<path d=" M 58.404 68.922 L 59.694 70.212 C 62.9 67.006 68.1 67.006 71.306 70.212 L 72.596 68.922 C 68.677 65.002 62.323 65.002 58.404 68.922 Z " fill="rgb(255,255,255)"/>
				<path d=" M 60.984 71.502 L 62.274 72.792 C 64.055 71.012 66.945 71.012 68.726 72.792 L 70.016 71.502 C 67.522 69.009 63.478 69.009 60.984 71.502 Z " fill="rgb(255,255,255)"/>
				<path d=" M 63.565 74.082 L 65.5 76.018 L 67.435 74.082 C 66.368 73.015 64.632 73.015 63.565 74.082 Z " fill="rgb(255,255,255)"/>
			</g>
			<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="none"/>
			<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="none"/>
			<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="rgb(0,204,0)"/>
			<g style="isolation: isolate;">
				<mask id="_mask_dw7zq7jZQtSstJLuS3PZgEW0duqWYwY3">
					<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="white" stroke="none"/>
				</mask>
				<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="none" mask="url(#_mask_dw7zq7jZQtSstJLuS3PZgEW0duqWYwY3)" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(0,1,0)" stroke-linejoin="miter" stroke-linecap="square" stroke-miterlimit="3"/>
				<mask id="_mask_28sIE1kh5659nrKNSxTsGLfGKRdXdrnM">
					<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="white" stroke="none"/>
				</mask>
				<path d=" M 260.114 68 L 259.923 68 L 259.923 67.833 C 259.923 66.822 258.946 66 257.745 66 L 244.678 66 C 243.477 66 242.5 66.822 242.5 67.833 L 242.5 74.167 C 242.5 75.178 243.477 76 244.678 76 L 257.745 76 C 258.946 76 259.923 75.178 259.923 74.167 L 259.923 74 L 260.114 74 C 260.878 74 261.5 73.477 261.5 72.833 L 261.5 69.167 C 261.5 68.523 260.878 68 260.114 68 Z " fill="none" mask="url(#_mask_28sIE1kh5659nrKNSxTsGLfGKRdXdrnM)" vector-effect="non-scaling-stroke" stroke-width="1" stroke="rgb(51,51,51)" stroke-linejoin="miter" stroke-linecap="square" stroke-miterlimit="3"/>
			</g>
			<mask id="_mask_X5hdpsKuHDH76KTSmIJhGOKB9LvxIfQn">
				<path d=" M 253.522 70.513 L 250.753 74.179 C 250.679 74.277 250.552 74.333 250.42 74.333 C 250.374 74.333 250.329 74.327 250.286 74.314 C 250.112 74.261 250.004 74.113 250.027 73.959 L 250.367 71.667 L 249.229 71.665 C 249.08 71.665 248.944 71.595 248.877 71.485 C 248.81 71.373 248.821 71.24 248.907 71.138 L 251.739 67.805 C 251.846 67.68 252.043 67.633 252.213 67.691 C 252.383 67.751 252.482 67.901 252.453 68.053 L 252.073 70 L 253.188 70.001 C 253.333 70.001 253.466 70.068 253.535 70.175 C 253.604 70.281 253.599 70.411 253.522 70.513 Z " fill="white" stroke="none"/>
			</mask>
			<path d=" M 253.522 70.513 L 250.753 74.179 C 250.679 74.277 250.552 74.333 250.42 74.333 C 250.374 74.333 250.329 74.327 250.286 74.314 C 250.112 74.261 250.004 74.113 250.027 73.959 L 250.367 71.667 L 249.229 71.665 C 249.08 71.665 248.944 71.595 248.877 71.485 C 248.81 71.373 248.821 71.24 248.907 71.138 L 251.739 67.805 C 251.846 67.68 252.043 67.633 252.213 67.691 C 252.383 67.751 252.482 67.901 252.453 68.053 L 252.073 70 L 253.188 70.001 C 253.333 70.001 253.466 70.068 253.535 70.175 C 253.604 70.281 253.599 70.411 253.522 70.513 Z " fill="rgb(255,255,255)"/>
			<path d=" M 253.522 70.513 L 250.753 74.179 C 250.679 74.277 250.552 74.333 250.42 74.333 C 250.374 74.333 250.329 74.327 250.286 74.314 C 250.112 74.261 250.004 74.113 250.027 73.959 L 250.367 71.667 L 249.229 71.665 C 249.08 71.665 248.944 71.595 248.877 71.485 C 248.81 71.373 248.821 71.24 248.907 71.138 L 251.739 67.805 C 251.846 67.68 252.043 67.633 252.213 67.691 C 252.383 67.751 252.482 67.901 252.453 68.053 L 252.073 70 L 253.188 70.001 C 253.333 70.001 253.466 70.068 253.535 70.175 C 253.604 70.281 253.599 70.411 253.522 70.513 Z " fill="rgb(255,255,255)" mask="url(#_mask_X5hdpsKuHDH76KTSmIJhGOKB9LvxIfQn)" vector-effect="non-scaling-stroke" stroke-width="0.6" stroke="rgb(0,1,0)" stroke-linejoin="miter" stroke-linecap="square" stroke-miterlimit="3"/>
			<path d=" M 143.293 70.073 L 143.293 70.073 Q 144.22 70.163 144.706 70.644 L 144.706 70.644 L 144.706 70.644 Q 145.192 71.126 145.192 71.873 L 145.192 71.873 L 145.192 71.873 Q 145.192 72.413 144.922 72.849 L 144.922 72.849 L 144.922 72.849 Q 144.652 73.286 144.117 73.542 L 144.117 73.542 L 144.117 73.542 Q 143.581 73.799 142.807 73.799 L 142.807 73.799 L 142.807 73.799 Q 142.132 73.799 141.511 73.596 L 141.511 73.596 L 141.511 73.596 Q 140.89 73.394 140.494 73.034 L 140.494 73.034 L 140.908 72.323 L 140.908 72.323 Q 141.232 72.629 141.736 72.813 L 141.736 72.813 L 141.736 72.813 Q 142.24 72.998 142.807 72.998 L 142.807 72.998 L 142.807 72.998 Q 143.509 72.998 143.901 72.701 L 143.901 72.701 L 143.901 72.701 Q 144.292 72.404 144.292 71.882 L 144.292 71.882 L 144.292 71.882 Q 144.292 71.36 143.905 71.072 L 143.905 71.072 L 143.905 71.072 Q 143.518 70.784 142.735 70.784 L 142.735 70.784 L 142.231 70.784 L 142.231 70.154 L 143.815 68.21 L 140.782 68.21 L 140.782 67.427 L 144.94 67.427 L 144.94 68.039 L 143.293 70.073 L 143.293 70.073 Z  M 148.072 67.355 L 148.072 67.355 Q 149.341 67.355 150.03 68.174 L 150.03 68.174 L 150.03 68.174 Q 150.718 68.992 150.718 70.496 L 150.718 70.496 L 150.718 70.496 Q 150.718 71.549 150.345 72.291 L 150.345 72.291 L 150.345 72.291 Q 149.971 73.034 149.301 73.416 L 149.301 73.416 L 149.301 73.416 Q 148.63 73.799 147.739 73.799 L 147.739 73.799 L 147.739 73.799 Q 147.28 73.799 146.875 73.704 L 146.875 73.704 L 146.875 73.704 Q 146.47 73.61 146.173 73.43 L 146.173 73.43 L 146.515 72.727 L 146.515 72.727 Q 146.974 73.025 147.73 73.025 L 147.73 73.025 L 147.73 73.025 Q 148.711 73.025 149.265 72.417 L 149.265 72.417 L 149.265 72.417 Q 149.818 71.81 149.818 70.649 L 149.818 70.649 L 149.818 70.424 L 149.818 70.424 Q 149.548 70.829 149.071 71.04 L 149.071 71.04 L 149.071 71.04 Q 148.594 71.252 148 71.252 L 148 71.252 L 148 71.252 Q 147.379 71.252 146.889 71.018 L 146.889 71.018 L 146.889 71.018 Q 146.398 70.784 146.124 70.347 L 146.124 70.347 L 146.124 70.347 Q 145.849 69.911 145.849 69.344 L 145.849 69.344 L 145.849 69.344 Q 145.849 68.75 146.142 68.3 L 146.142 68.3 L 146.142 68.3 Q 146.434 67.85 146.938 67.602 L 146.938 67.602 L 146.938 67.602 Q 147.442 67.355 148.072 67.355 L 148.072 67.355 L 148.072 67.355 Z  M 148.153 70.523 L 148.153 70.523 Q 148.576 70.523 148.909 70.361 L 148.909 70.361 L 148.909 70.361 Q 149.242 70.199 149.427 69.92 L 149.427 69.92 L 149.427 69.92 Q 149.611 69.641 149.611 69.299 L 149.611 69.299 L 149.611 69.299 Q 149.611 68.966 149.436 68.691 L 149.436 68.691 L 149.436 68.691 Q 149.26 68.417 148.923 68.25 L 148.923 68.25 L 148.923 68.25 Q 148.585 68.084 148.108 68.084 L 148.108 68.084 L 148.108 68.084 Q 147.487 68.084 147.105 68.417 L 147.105 68.417 L 147.105 68.417 Q 146.722 68.75 146.722 69.308 L 146.722 69.308 L 146.722 69.308 Q 146.722 69.866 147.109 70.194 L 147.109 70.194 L 147.109 70.194 Q 147.496 70.523 148.153 70.523 L 148.153 70.523 L 148.153 70.523 Z  M 129.856 73.799 L 129.856 73.799 Q 129.109 73.799 128.529 73.416 L 128.529 73.416 L 128.529 73.416 Q 127.948 73.034 127.615 72.305 L 127.615 72.305 L 127.615 72.305 Q 127.282 71.576 127.282 70.577 L 127.282 70.577 L 127.282 70.577 Q 127.282 69.578 127.615 68.849 L 127.615 68.849 L 127.615 68.849 Q 127.948 68.12 128.529 67.737 L 128.529 67.737 L 128.529 67.737 Q 129.109 67.355 129.856 67.355 L 129.856 67.355 L 129.856 67.355 Q 130.594 67.355 131.175 67.737 L 131.175 67.737 L 131.175 67.737 Q 131.755 68.12 132.088 68.849 L 132.088 68.849 L 132.088 68.849 Q 132.421 69.578 132.421 70.577 L 132.421 70.577 L 132.421 70.577 Q 132.421 71.576 132.088 72.305 L 132.088 72.305 L 132.088 72.305 Q 131.755 73.034 131.175 73.416 L 131.175 73.416 L 131.175 73.416 Q 130.594 73.799 129.856 73.799 L 129.856 73.799 L 129.856 73.799 Z  M 129.856 72.998 L 129.856 72.998 Q 130.612 72.998 131.067 72.377 L 131.067 72.377 L 131.067 72.377 Q 131.521 71.756 131.521 70.577 L 131.521 70.577 L 131.521 70.577 Q 131.521 69.398 131.067 68.777 L 131.067 68.777 L 131.067 68.777 Q 130.612 68.156 129.856 68.156 L 129.856 68.156 L 129.856 68.156 Q 129.091 68.156 128.637 68.777 L 128.637 68.777 L 128.637 68.777 Q 128.182 69.398 128.182 70.577 L 128.182 70.577 L 128.182 70.577 Q 128.182 71.756 128.637 72.377 L 128.637 72.377 L 128.637 72.377 Q 129.091 72.998 129.856 72.998 L 129.856 72.998 L 129.856 72.998 Z  M 136.003 69.902 L 136.003 69.902 Q 136.624 69.902 137.115 70.136 L 137.115 70.136 L 137.115 70.136 Q 137.605 70.37 137.884 70.806 L 137.884 70.806 L 137.884 70.806 Q 138.163 71.243 138.163 71.81 L 138.163 71.81 L 138.163 71.81 Q 138.163 72.404 137.871 72.854 L 137.871 72.854 L 137.871 72.854 Q 137.578 73.304 137.07 73.551 L 137.07 73.551 L 137.07 73.551 Q 136.561 73.799 135.931 73.799 L 135.931 73.799 L 135.931 73.799 Q 134.662 73.799 133.974 72.98 L 133.974 72.98 L 133.974 72.98 Q 133.285 72.161 133.285 70.658 L 133.285 70.658 L 133.285 70.658 Q 133.285 69.605 133.659 68.862 L 133.659 68.862 L 133.659 68.862 Q 134.032 68.12 134.703 67.737 L 134.703 67.737 L 134.703 67.737 Q 135.373 67.355 136.264 67.355 L 136.264 67.355 L 136.264 67.355 Q 136.723 67.355 137.128 67.449 L 137.128 67.449 L 137.128 67.449 Q 137.533 67.544 137.83 67.724 L 137.83 67.724 L 137.488 68.426 L 137.488 68.426 Q 137.038 68.129 136.282 68.129 L 136.282 68.129 L 136.282 68.129 Q 135.301 68.129 134.743 68.736 L 134.743 68.736 L 134.743 68.736 Q 134.185 69.344 134.185 70.505 L 134.185 70.505 L 134.185 70.505 Q 134.185 70.649 134.194 70.73 L 134.194 70.73 L 134.194 70.73 Q 134.464 70.325 134.937 70.113 L 134.937 70.113 L 134.937 70.113 Q 135.409 69.902 136.003 69.902 L 136.003 69.902 L 136.003 69.902 Z  M 135.895 73.07 L 135.895 73.07 Q 136.516 73.07 136.903 72.737 L 136.903 72.737 L 136.903 72.737 Q 137.29 72.404 137.29 71.846 L 137.29 71.846 L 137.29 71.846 Q 137.29 71.288 136.899 70.959 L 136.899 70.959 L 136.899 70.959 Q 136.507 70.631 135.85 70.631 L 135.85 70.631 L 135.85 70.631 Q 135.427 70.631 135.099 70.793 L 135.099 70.793 L 135.099 70.793 Q 134.77 70.955 134.586 71.233 L 134.586 71.233 L 134.586 71.233 Q 134.401 71.513 134.401 71.855 L 134.401 71.855 L 134.401 71.855 Q 134.401 72.188 134.577 72.462 L 134.577 72.462 L 134.577 72.462 Q 134.752 72.737 135.09 72.903 L 135.09 72.903 L 135.09 72.903 Q 135.427 73.07 135.895 73.07 L 135.895 73.07 L 135.895 73.07 Z  M 139.432 70.145 L 139.432 70.145 Q 139.18 70.145 139 69.969 L 139 69.969 L 139 69.969 Q 138.82 69.794 138.82 69.524 L 138.82 69.524 L 138.82 69.524 Q 138.82 69.263 139 69.087 L 139 69.087 L 139 69.087 Q 139.18 68.912 139.432 68.912 L 139.432 68.912 L 139.432 68.912 Q 139.684 68.912 139.855 69.083 L 139.855 69.083 L 139.855 69.083 Q 140.026 69.254 140.026 69.524 L 140.026 69.524 L 140.026 69.524 Q 140.026 69.794 139.851 69.969 L 139.851 69.969 L 139.851 69.969 Q 139.675 70.145 139.432 70.145 L 139.432 70.145 L 139.432 70.145 Z  M 139.432 73.781 L 139.432 73.781 Q 139.18 73.781 139 73.605 L 139 73.605 L 139 73.605 Q 138.82 73.43 138.82 73.16 L 138.82 73.16 L 138.82 73.16 Q 138.82 72.899 139 72.723 L 139 72.723 L 139 72.723 Q 139.18 72.548 139.432 72.548 L 139.432 72.548 L 139.432 72.548 Q 139.684 72.548 139.855 72.719 L 139.855 72.719 L 139.855 72.719 Q 140.026 72.89 140.026 73.16 L 140.026 73.16 L 140.026 73.16 Q 140.026 73.43 139.851 73.605 L 139.851 73.605 L 139.851 73.605 Q 139.675 73.781 139.432 73.781 L 139.432 73.781 L 139.432 73.781 Z " fill="rgb(242,245,241)"/>
			<path d=" M 35.725 74.299 L 35.725 74.299 Q 35.014 74.299 34.353 74.078 L 34.353 74.078 L 34.353 74.078 Q 33.691 73.858 33.313 73.507 L 33.313 73.507 L 33.646 72.805 L 33.646 72.805 Q 34.006 73.129 34.569 73.331 L 34.569 73.331 L 34.569 73.331 Q 35.131 73.534 35.725 73.534 L 35.725 73.534 L 35.725 73.534 Q 36.508 73.534 36.895 73.268 L 36.895 73.268 L 36.895 73.268 Q 37.282 73.003 37.282 72.562 L 37.282 72.562 L 37.282 72.562 Q 37.282 72.238 37.071 72.035 L 37.071 72.035 L 37.071 72.035 Q 36.859 71.833 36.549 71.725 L 36.549 71.725 L 36.549 71.725 Q 36.238 71.617 35.671 71.482 L 35.671 71.482 L 35.671 71.482 Q 34.96 71.311 34.524 71.14 L 34.524 71.14 L 34.524 71.14 Q 34.087 70.969 33.777 70.613 L 33.777 70.613 L 33.777 70.613 Q 33.466 70.258 33.466 69.655 L 33.466 69.655 L 33.466 69.655 Q 33.466 69.151 33.732 68.746 L 33.732 68.746 L 33.732 68.746 Q 33.997 68.34 34.537 68.098 L 34.537 68.098 L 34.537 68.098 Q 35.077 67.855 35.878 67.855 L 35.878 67.855 L 35.878 67.855 Q 36.436 67.855 36.976 67.999 L 36.976 67.999 L 36.976 67.999 Q 37.516 68.143 37.903 68.413 L 37.903 68.413 L 37.606 69.133 L 37.606 69.133 Q 37.21 68.881 36.76 68.75 L 36.76 68.75 L 36.76 68.75 Q 36.31 68.62 35.878 68.62 L 35.878 68.62 L 35.878 68.62 Q 35.113 68.62 34.731 68.899 L 34.731 68.899 L 34.731 68.899 Q 34.348 69.178 34.348 69.619 L 34.348 69.619 L 34.348 69.619 Q 34.348 69.943 34.564 70.145 L 34.564 70.145 L 34.564 70.145 Q 34.78 70.348 35.1 70.46 L 35.1 70.46 L 35.1 70.46 Q 35.419 70.573 35.968 70.699 L 35.968 70.699 L 35.968 70.699 Q 36.679 70.87 37.111 71.041 L 37.111 71.041 L 37.111 71.041 Q 37.543 71.212 37.854 71.563 L 37.854 71.563 L 37.854 71.563 Q 38.164 71.914 38.164 72.508 L 38.164 72.508 L 38.164 72.508 Q 38.164 73.003 37.894 73.412 L 37.894 73.412 L 37.894 73.412 Q 37.624 73.822 37.075 74.06 L 37.075 74.06 L 37.075 74.06 Q 36.526 74.299 35.725 74.299 L 35.725 74.299 L 35.725 74.299 Z  M 39.478 74.227 L 39.478 67.927 L 40.378 67.927 L 40.378 74.227 L 39.478 74.227 L 39.478 74.227 Z  M 48.973 74.227 L 48.109 74.227 L 48.1 69.637 L 45.823 73.462 L 45.409 73.462 L 43.132 69.664 L 43.132 74.227 L 42.268 74.227 L 42.268 67.927 L 43.006 67.927 L 45.634 72.355 L 48.226 67.927 L 48.964 67.927 L 48.973 74.227 L 48.973 74.227 Z  M 22.963 67.927 L 23.863 67.927 L 23.863 74.227 L 23.125 74.227 L 19.345 69.529 L 19.345 74.227 L 18.445 74.227 L 18.445 67.927 L 19.183 67.927 L 22.963 72.625 L 22.963 67.927 L 22.963 67.927 Z  M 27.67 74.281 L 27.67 74.281 Q 26.959 74.281 26.392 73.966 L 26.392 73.966 L 26.392 73.966 Q 25.825 73.651 25.506 73.097 L 25.506 73.097 L 25.506 73.097 Q 25.186 72.544 25.186 71.842 L 25.186 71.842 L 25.186 71.842 Q 25.186 71.14 25.506 70.586 L 25.506 70.586 L 25.506 70.586 Q 25.825 70.033 26.392 69.722 L 26.392 69.722 L 26.392 69.722 Q 26.959 69.412 27.67 69.412 L 27.67 69.412 L 27.67 69.412 Q 28.381 69.412 28.944 69.722 L 28.944 69.722 L 28.944 69.722 Q 29.506 70.033 29.826 70.586 L 29.826 70.586 L 29.826 70.586 Q 30.145 71.14 30.145 71.842 L 30.145 71.842 L 30.145 71.842 Q 30.145 72.544 29.826 73.097 L 29.826 73.097 L 29.826 73.097 Q 29.506 73.651 28.944 73.966 L 28.944 73.966 L 28.944 73.966 Q 28.381 74.281 27.67 74.281 L 27.67 74.281 L 27.67 74.281 Z  M 27.67 73.525 L 27.67 73.525 Q 28.129 73.525 28.494 73.313 L 28.494 73.313 L 28.494 73.313 Q 28.858 73.102 29.065 72.719 L 29.065 72.719 L 29.065 72.719 Q 29.272 72.337 29.272 71.842 L 29.272 71.842 L 29.272 71.842 Q 29.272 71.346 29.065 70.964 L 29.065 70.964 L 29.065 70.964 Q 28.858 70.582 28.494 70.375 L 28.494 70.375 L 28.494 70.375 Q 28.129 70.168 27.67 70.168 L 27.67 70.168 L 27.67 70.168 Q 27.211 70.168 26.847 70.375 L 26.847 70.375 L 26.847 70.375 Q 26.482 70.582 26.271 70.964 L 26.271 70.964 L 26.271 70.964 Q 26.059 71.346 26.059 71.842 L 26.059 71.842 L 26.059 71.842 Q 26.059 72.337 26.271 72.719 L 26.271 72.719 L 26.271 72.719 Q 26.482 73.102 26.847 73.313 L 26.847 73.313 L 26.847 73.313 Q 27.211 73.525 27.67 73.525 L 27.67 73.525 L 27.67 73.525 Z " fill="rgb(242,245,241)"/>
		</g>
		<path d=" M 140 482 C 146.72 482 152 487.28 152 494 C 152 500.72 146.72 506 140 506 C 133.28 506 128 500.72 128 494 C 128 487.28 133.28 482 140 482 Z " fill="rgb(191,195,197)"/>
		<path d=" M 116 18 L 164 18 C 168.4 18 172 21.6 172 26 C 172 30.4 168.4 34 164 34 L 116 34 C 111.6 34 108 30.4 108 26 C 108 21.6 111.6 18 116 18 Z " fill="rgb(191,195,197)"/>
	</g>
	<g>
		<path d=" M 175.751 147.731 L 159.41 119.423 C 158.778 118.328 157.61 117.653 156.345 117.654 L 123.657 117.654 C 122.393 117.653 121.224 118.328 120.592 119.423 L 104.247 147.731 C 103.617 148.826 103.617 150.174 104.247 151.269 L 120.592 179.577 C 121.224 180.672 122.393 181.347 123.657 181.346 L 156.345 181.346 C 157.61 181.347 158.778 180.672 159.41 179.577 L 175.751 151.269 C 176.384 150.175 176.384 148.825 175.751 147.731 Z " fill="rgb(237,28,36)"/>
		<path d=" M 123.657 117.654 C 122.393 117.653 121.224 118.328 120.592 119.423 L 104.247 147.731 C 103.617 148.826 103.617 150.174 104.247 151.269 L 120.592 179.577 C 121.224 180.672 122.393 181.347 123.657 181.346 L 140.632 181.346 L 140.063 117.654 L 123.657 117.654 Z " fill="rgb(237,28,36)"/>
		<path d=" M 175.751 147.731 L 159.41 119.423 C 158.778 118.328 157.609 117.653 156.345 117.654 L 140.063 117.654 L 140.632 181.346 L 156.345 181.346 C 157.609 181.347 158.778 180.672 159.41 179.577 L 175.751 151.269 C 176.384 150.175 176.384 148.825 175.751 147.731 Z " fill="rgb(209,21,35)"/>
		<path d=" M 125.404 174.269 L 111.101 149.5 L 125.404 124.731 L 154.009 124.731 L 168.308 149.5 L 154.009 174.269 L 125.404 174.269 Z " fill="rgb(165,15,33)"/>
		<g>
			<path d=" M 140.017 156.577 C 139.079 156.577 138.179 156.204 137.515 155.541 C 136.851 154.877 136.479 153.977 136.479 153.038 L 136.479 135.346 C 136.479 133.392 138.063 131.808 140.017 131.808 C 141.972 131.808 143.556 133.392 143.556 135.346 L 143.556 153.038 C 143.556 153.977 143.183 154.877 142.52 155.541 C 141.856 156.204 140.956 156.577 140.017 156.577 L 140.017 156.577 Z " fill="rgb(255,255,255)"/>
			<path d=" M 140.017 167.21 C 138.054 167.21 136.462 165.618 136.462 163.654 C 136.462 161.69 138.054 160.098 140.017 160.098 C 141.981 160.098 143.573 161.69 143.573 163.654 C 143.567 165.615 141.979 167.203 140.017 167.21 Z " fill="rgb(255,255,255)"/>
		</g>
	</g>
</svg>



<br /><br />
</center>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-scale-balanced" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Context</h3>
    All the findings and the details of this blog post has been shared with the editor of the obfuscator.
The overall results have also been shared with SingPass. In addition, SingPass is part of a bug bounty
program on HackerOne. Bypassing these RASP checks are a prerequisite to go further in the security assessment
of this application.
  </div>
  </div>
  </div>
</div>
<p>By grepping some keywords in the install directory of the application, we actually get two results which
reveal the name of the obfuscator:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>iPhone:/private/[...]/SingPass.app root# grep -Ri +++++++ *
</span></span><span style="display:flex;"><span>Binary file Frameworks/NuDetectSDK.framework/NuDetectSDK matches
</span></span><span style="display:flex;"><span>Binary file SingPass matches</span></span></code></pre></div>
<p>The NuDetectSDK binary also uses the same obfuscator but it does not seem
involved in the early jailbreak detection shown in the previous figure.
On the other hand, <code>SingPass</code> is the main binary of the application and we can observe strings related
to threat detections:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>$ SingPass.app strings ./SingPass|grep -i +++++++
</span></span><span style="display:flex;"><span>+++++++ThreatLogAPI(headers:)
</span></span><span style="display:flex;"><span>+++++++CallbackHandler(context:)</span></span></code></pre></div>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-file-import" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Binary</h3>
    For those who would like to follow this blog post with the original binary, you can download the
decrypted SingPass Mach-O binary <a href="/post/22-08-singpass-rasp-analysis/bin/SingPass" alt="here" target="_blank">here</a>
.
The name of the obfuscator has been redacted but it does not impact the content of the code.
  </div>
  </div>
  </div>
</div>
<p>Unfortunately, the binary does not leak other strings that could help to identify where and how the application
detects jailbroken devices but fortunately, the application does not crash &hellip;</p>
<p>If we assume that the obfuscator decrypts strings at runtime, we can try to dump the content of the <code>__data</code>
section when the error message is displayed. At this point of the execution, the strings used for detecting
jailbroken devices are likely decoded and clearly present in the memory.</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  This is actually quite the same technique used in <strong>PokemonGO</strong>: <a href="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass//#what-about-lief"><em>What About LIEF</em></a>
</div>
<ol>
<li>We run the application and we wait for the <em>jailbreak</em> message</li>
<li>We attach to SingPass with Frida and we inject a library that:
<ul>
<li>Parses in-memory the <code>SingPass</code> binary (thanks to LIEF)</li>
<li>Dumps the content of the <code>__data</code> section</li>
<li>Write the dump in the iPhone&rsquo;s <code>/tmp</code> directory</li>
</ul>
</li>
</ol>
<p>Once the data section is dumped, we end up with the following changes in some parts of the <code>__data</code> section:</p>
<center>
<figure class="mb-4">
  
  <?xml version="1.0" ?>
  <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
       viewBox="0 0 445 692" width="445pt" height="692pt">
      <g font-family="Fira Code" font-size="11px" font-weight="450">
  
  <rect x="0" y="0" width="445" height="692" fill="#353333" rx="4" ry="4" stroke-width="4" stroke="#6DCFF6" />
  
      <text x="7" y="20" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B97FA&#160;</tspan><tspan class="hlr hlr-name-variable">qword_1010B97FA</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x942752767D91608E</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="36" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B97FA</tspan></text>
  <text x="7" y="52" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9802&#160;</tspan><tspan class="hlr hlr-name-variable">byte_1010B9802</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x98</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="68" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9802</tspan></text>
  <text x="7" y="84" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9803&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B9803</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x2318E9A2</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="100" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9803</tspan></text>
  <text x="7" y="116" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9807&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x222AD8A21325DEE5</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="132" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B980F&#160;</tspan><tspan class="hlr hlr-name-variable">byte_1010B980F</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xE0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="148" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B980F</tspan></text>
  <text x="7" y="164" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9810&#160;</tspan><tspan class="hlr hlr-name-variable">byte_1010B9810</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xE5</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="180" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9810</tspan></text>
  <text x="7" y="196" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9811&#160;</tspan><tspan class="hlr hlr-name-variable">byte_1010B9811</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xB7</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="212" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9811</tspan></text>
  <text x="7" y="228" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9812&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B9812</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x8491650B</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="244" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9812</tspan></text>
  <text x="7" y="260" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9816&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xB7D0892EFAB11BBF</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="276" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B981E&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x4B9FF985643894C5</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="292" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9826&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x38D0ABE65C497CF0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="308" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9826</tspan></text>
  <text x="7" y="324" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B982E&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xD769CDDBCB49C500</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="340" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9836&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xF1C4BCB1A563CD53</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="356" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B983E&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x52BB5CBC</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="372" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9842&#160;</tspan><tspan class="hlr hlr-name-variable">byte_1010B9842</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x42</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="388" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9842</tspan></text>
  <text x="7" y="404" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9843&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B9843</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x2451DD96</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="420" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9843</tspan></text>
  <text x="7" y="436" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9847&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x6248099506559926</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="452" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B984F&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xFAF2AF09</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="468" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9853&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B9853</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xD8B63318</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="484" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9853</tspan></text>
  <text x="7" y="500" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9857&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xD1CA2820CCC72C5F</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="516" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B985F&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xE7CE3B62D1C62F5E</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="532" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9867&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x77CE475E</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="548" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986B&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B986B</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x7AB7291C</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="564" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986B</tspan></text>
  <text x="7" y="580" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986F&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x75C9251C6AC41E5F</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="596" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9877&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x71CF165D64C42C4E</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="612" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B987F&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0x6EC22E5133BA165C</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="628" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9887&#160;</tspan><tspan class="hlr hlr-name-variable">word_1010B9887</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCW</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xB54F</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="644" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9887</tspan></text>
  <text x="7" y="660" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9889&#160;</tspan><tspan class="hlr hlr-name-variable">dword_1010B9889</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xDEDB09A0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="676" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9889</tspan></text>
  <text x="7" y="692" xml:space="preserve">
  </text>
  
      </g>
  </svg>
          

  <br /><br />
  
  <?xml version="1.0" ?>
  <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
       viewBox="0 0 544 372" width="544pt" height="372pt">
      <g font-family="Fira Code" font-size="11px" font-weight="450">
  
  <rect x="0" y="0" width="544" height="372" fill="#353333" rx="4" ry="4" stroke-width="4" stroke="#6DCFF6" />
  
      <text x="7" y="20" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B97FA&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurine</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="36" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B97FA</tspan></text>
  <text x="7" y="52" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9803&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurineCstmp</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/cstmp"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="68" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9803</tspan></text>
  <text x="7" y="84" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9812&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurineJailbre</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/jailbreakd"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="100" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9812</tspan></text>
  <text x="7" y="116" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9812</tspan></text>
  <text x="7" y="132" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9826&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCD</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="148" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B982A&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurineLaunchj</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/launchjailbreak"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="164" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B982A</tspan></text>
  <text x="7" y="180" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B982A</tspan></text>
  <text x="7" y="196" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9843&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurineJbexec</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/jbexec"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="212" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9843</tspan></text>
  <text x="7" y="228" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9853&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurineAmfideb</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/amfidebilitate"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="244" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9853</tspan></text>
  <text x="7" y="260" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9853</tspan></text>
  <text x="7" y="276" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986B&#160;</tspan><tspan class="hlr hlr-name-variable">aTaurinePspawnP</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/taurine/pspawn_payload.dylib"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="292" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986B</tspan></text>
  <text x="7" y="308" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B986B</tspan></text>
  <text x="7" y="324" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9889&#160;</tspan><tspan class="hlr hlr-name-variable">aInstalledTauri</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-string">"/.installed_taurine"</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-integer">0</tspan><tspan class="hlr hlr-text"></tspan></text>
  <text x="7" y="340" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9889</tspan></text>
  <text x="7" y="356" xml:space="preserve">
  <tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">00000001010B9889</tspan></text>
  <text x="7" y="372" xml:space="preserve">
  </text>
  
      </g>
  </svg>
          

  <br /><br />
<figcaption>Fig 1. Slices of the <code>__data</code> section before and after the dump</figcaption>
</figure>
</center>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    The string encoding routines will be analyzed in the <strong>second</strong> part of this series of blog posts
  </div>
  </div>
  </div>
</div>
<p>In addition, we can observe the following strings which seem to be related to the RASP functionalities of the obfuscator:</p>
<center>
<figure class="mb-4" id="fig-2">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 745 192" width="100%" height="100%">
    <g font-family="Fira Code" font-size="12px" font-weight="450">

<rect x="0" y="0" width="745" height="192" fill="#353333" rx="4" ry="4"
      stroke-width="6" stroke="#6DCFF6" />

    <text x="7" y="22"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8D10&#160;</tspan><tspan fill="#ffffff">aEvtCodeTracing</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_CODE_TRACING"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="39"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8D30&#160;</tspan><tspan fill="#ffffff">aEvtCodeSystemL</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_CODE_SYSTEM_LIB"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="56"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8D50&#160;</tspan><tspan fill="#ffffff">aEvtCodeSymbolT</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_CODE_SYMBOL_TABLE"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="73"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8D70&#160;</tspan><tspan fill="#ffffff">aEvtCodePrologu</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_CODE_PROLOGUE"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="90"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8D90&#160;</tspan><tspan fill="#ffffff">aEvtAppLoadedLi</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_APP_LOADED_LIBRARIES"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="107"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8DB0&#160;</tspan><tspan fill="#ffffff">aEvtAppSignatur</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_APP_SIGNATURE"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="124"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8DD0&#160;</tspan><tspan fill="#ffffff">aEvtEnvDebugger</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_ENV_DEBUGGER"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="141"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8DF0&#160;</tspan><tspan fill="#ffffff">aEvtEnvJailbrea</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"EVT_ENV_JAILBREAK"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="158"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8E10&#160;</tspan><tspan fill="#ffffff">aUsersChinweeDe</tspan><tspan>&#160;</tspan><tspan fill="#ababab">DCB</tspan><tspan>&#160;</tspan><tspan fill="#59eb42">"/Users/***/ndi-sp-mobile-ios-swift/SingPass/*******.swift"</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">0</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="175"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">1010B8E10&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;XREF:&#160;on_rasp_detection</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="192"  xml:space="preserve"></text>

    </g>
</svg>
        

</figure>
<figcaption>Fig 2. Strings Related to the RASP Features</figcaption>
<br /><br />
</center>
<p>All the <code>EVT_*</code> strings are referenced by one <strong>and only one</strong> function that I named <span class="dark-boxed dark-purple">on_rasp_detection</span>.
This function turns out to be the threat detection callback used by the app&rsquo;s developers to perform action(s)
when a RASP event is triggered.</p>
<p>To better understand the logic of the checks behind these strings, let&rsquo;s start with <code>EVT_CODE_PROLOGUE</code> which
is used to detect hooked functions.</p>
<h2 id="evt_code_prologue-hook-detection">EVT_CODE_PROLOGUE: Hook Detection</h2>
<p>While going through the assembly code closes to the cross-references of <span class="dark-boxed dark-purple">on_rasp_detection</span>,
we can spot several times this pattern:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="0 0 707 615.37" width="100%" height="100%">
  <g id="figure">
    <g id="blocks">
      <g id="end">
        <path d="M 3.955 502.38 L 527.385 502.38 C 528.464 502.38 529.34 503.256 529.34 504.335 L 529.34 612.415 C 529.34 613.494 528.464 614.37 527.385 614.37 L 3.955 614.37 C 2.876 614.37 2 613.494 2 612.415 L 2 504.335 C 2 503.256 2.876 502.38 3.955 502.38 Z" style="stroke:none;fill:#353333;stroke-miterlimit:10;"/>
        <path d="M 3.955 502.38 L 527.385 502.38 C 528.464 502.38 529.34 503.256 529.34 504.335 L 529.34 612.415 C 529.34 613.494 528.464 614.37 527.385 614.37 L 3.955 614.37 C 2.876 614.37 2 613.494 2 612.415 L 2 504.335 C 2 503.256 2.876 502.38 3.955 502.38 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-miterlimit:2;"/>
        <g id="inst">
          <g clip-path="url(#_clipPath_u7C3RpXzRaozgVPoA2fXAHOtAtA8DnWt)">
            <text transform="matrix(1.042,0,0,1.042,5.17,519.717)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_u7C3RpXzRaozgVPoA2fXAHOtAtA8DnWt">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,509.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Wv4P5VAOU6gFT9c2smqwXg1hEKdiGxFC)">
            <text transform="matrix(1.042,0,0,1.042,54.148,519.717)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B05C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_Wv4P5VAOU6gFT9c2smqwXg1hEKdiGxFC">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,509.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_1YmcnkqtgGOlsjda2odq4MNOnZR01mVO)">
            <text transform="matrix(1.042,0,0,1.042,173.988,519.717)" id="Text" class="hlr hlr-name-label" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_finish</text>
          </g>
          <defs>
            <clipPath id="_clipPath_1YmcnkqtgGOlsjda2odq4MNOnZR01mVO">
              <rect x="0" y="0" width="70" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,509.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jjgIXStcBUAF8mN1JCJ2ymBmzUEjYCSm)">
            <text transform="matrix(1.042,0,0,1.042,5.17,536.39)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_jjgIXStcBUAF8mN1JCJ2ymBmzUEjYCSm">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VvDXkbdY8ATSg1xJocraEu0FUWdmKyey)">
            <text transform="matrix(1.042,0,0,1.042,54.148,536.39)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B05C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_VvDXkbdY8ATSg1xJocraEu0FUWdmKyey">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_OXpNPaepklPFIFJ7alpGcViBq3rScifh)">
            <text transform="matrix(1.042,0,0,1.042,173.988,536.39)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">LDR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_OXpNPaepklPFIFJ7alpGcViBq3rScifh">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_bmVxSv05hFirkzoalcpargGYzsBXa34c)">
            <text transform="matrix(1.042,0,0,1.042,287.575,536.39)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
          </g>
          <defs>
            <clipPath id="_clipPath_bmVxSv05hFirkzoalcpargGYzsBXa34c">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.042,0,0,1.042,287.575,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_DWG95gBDqdn4duITc0xnW4hYynUrEG2E)">
            <text transform="matrix(1.042,0,0,1.042,302.164,536.39)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_DWG95gBDqdn4duITc0xnW4hYynUrEG2E">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,302.164,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ESQmv97jLSGKrMVxwIhv2IAZycqWiTca)">
            <text transform="matrix(1.042,0,0,1.042,316.754,536.39)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ESQmv97jLSGKrMVxwIhv2IAZycqWiTca">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,316.754,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NdaAI0Duy5U7giMHQFXetlnbqDEyOfQh)">
            <text transform="matrix(1.042,0,0,1.042,324.048,536.39)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X19</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NdaAI0Duy5U7giMHQFXetlnbqDEyOfQh">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,324.048,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_AGbTyar2bHKopteedVr1eqTkvwvRWMcJ)">
            <text transform="matrix(1.042,0,0,1.042,344.89,536.39)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_AGbTyar2bHKopteedVr1eqTkvwvRWMcJ">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,344.89,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_V0H33Zk2C30aEUioPinZlq5npLu3qzPb)">
            <text transform="matrix(1.042,0,0,1.042,352.184,536.39)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x20</text>
          </g>
          <defs>
            <clipPath id="_clipPath_V0H33Zk2C30aEUioPinZlq5npLu3qzPb">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.042,0,0,1.042,352.184,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yoHADtSKVCXBmYblKm1bzkPne63SIzWB)">
            <text transform="matrix(1.042,0,0,1.042,387.615,536.39)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yoHADtSKVCXBmYblKm1bzkPne63SIzWB">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,387.615,525.809)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yUmaSTnCwwBa1pecrF61FphZzI5kzybb)">
            <text transform="matrix(1.042,0,0,1.042,5.17,553.064)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yUmaSTnCwwBa1pecrF61FphZzI5kzybb">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_PVM0P8gQ05Hzie57bKaUF158XWZ7HtkO)">
            <text transform="matrix(1.042,0,0,1.042,54.148,553.064)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B060 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_PVM0P8gQ05Hzie57bKaUF158XWZ7HtkO">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_P4douUGDlvYHs7oRCB0evZmA7Xz2oFjv)">
            <text transform="matrix(1.042,0,0,1.042,173.988,553.064)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
          </g>
          <defs>
            <clipPath id="_clipPath_P4douUGDlvYHs7oRCB0evZmA7Xz2oFjv">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_L7noJpLzmkRdOKszfYySfZzvTibaJnId)">
            <text transform="matrix(1.042,0,0,1.042,287.575,553.064)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_L7noJpLzmkRdOKszfYySfZzvTibaJnId">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.042,0,0,1.042,287.575,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_vjU3jJgMRMfSXeZtzPWyngpauEQ1VWz3)">
            <text transform="matrix(1.042,0,0,1.042,302.164,553.064)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_vjU3jJgMRMfSXeZtzPWyngpauEQ1VWz3">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,302.164,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_j2jbHKAP0tXeCL85jcD9x7yubOXtQhO8)">
            <text transform="matrix(1.042,0,0,1.042,316.754,553.064)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X29</text>
          </g>
          <defs>
            <clipPath id="_clipPath_j2jbHKAP0tXeCL85jcD9x7yubOXtQhO8">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,316.754,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NzksdZQNKRQNFIY6wVHUfKuPy4RHmwvE)">
            <text transform="matrix(1.042,0,0,1.042,337.595,553.064)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NzksdZQNKRQNFIY6wVHUfKuPy4RHmwvE">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,337.595,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_qfPyhRwdtq0dm9bY0x4jckQ2H65JIqIy)">
            <text transform="matrix(1.042,0,0,1.042,352.184,553.064)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_qfPyhRwdtq0dm9bY0x4jckQ2H65JIqIy">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.042,0,0,1.042,352.184,542.482)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2qI7dUFzLeqGGKMzTlv9ad0JSYg4bkEx)">
            <text transform="matrix(1.042,0,0,1.042,5.17,569.737)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2qI7dUFzLeqGGKMzTlv9ad0JSYg4bkEx">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_EAChXNklx29oSIE70U3tD6HCML4sflpu)">
            <text transform="matrix(1.042,0,0,1.042,54.148,569.737)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B064 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_EAChXNklx29oSIE70U3tD6HCML4sflpu">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_MCNJKCLBNmKamgynWEc880dUBbRNVtB7)">
            <text transform="matrix(1.042,0,0,1.042,173.988,569.737)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">LDP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_MCNJKCLBNmKamgynWEc880dUBbRNVtB7">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VrJRHEEFffIN5ZzNmrXF8oCnUU7dgOSI)">
            <text transform="matrix(1.042,0,0,1.042,287.575,569.737)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X29</text>
          </g>
          <defs>
            <clipPath id="_clipPath_VrJRHEEFffIN5ZzNmrXF8oCnUU7dgOSI">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,287.575,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_0XAi2pnTn6PHFwrjO0u93Kcs8hoAbuXu)">
            <text transform="matrix(1.042,0,0,1.042,308.417,569.737)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_0XAi2pnTn6PHFwrjO0u93Kcs8hoAbuXu">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,308.417,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_IC13P6R0AUda7WasZruptdJOwmxkkaAl)">
            <text transform="matrix(1.042,0,0,1.042,323.006,569.737)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X30</text>
          </g>
          <defs>
            <clipPath id="_clipPath_IC13P6R0AUda7WasZruptdJOwmxkkaAl">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,323.006,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_BSpqaRL91xSeDjiGVMKW820le6DhDT4q)">
            <text transform="matrix(1.042,0,0,1.042,343.848,569.737)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_BSpqaRL91xSeDjiGVMKW820le6DhDT4q">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,343.848,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_eeMJTboTNE8cYpHG9trcLyU7gsY3hGlp)">
            <text transform="matrix(1.042,0,0,1.042,358.437,569.737)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_eeMJTboTNE8cYpHG9trcLyU7gsY3hGlp">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,358.437,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_bBHH0LZ2BRy2qTF2ChyE2qWAF2qNTP42)">
            <text transform="matrix(1.042,0,0,1.042,365.732,569.737)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_bBHH0LZ2BRy2qTF2ChyE2qWAF2qNTP42">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.042,0,0,1.042,365.732,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VrThOB0lEPjBJePsSY6E7HOdeqbKO3Bp)">
            <text transform="matrix(1.042,0,0,1.042,380.321,569.737)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_VrThOB0lEPjBJePsSY6E7HOdeqbKO3Bp">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,380.321,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_YEoUZUHI0JIx86JOEe8BDoswBYT4yUjX)">
            <text transform="matrix(1.042,0,0,1.042,387.615,569.737)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_YEoUZUHI0JIx86JOEe8BDoswBYT4yUjX">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.042,0,0,1.042,387.615,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_3Rx6AhA5873T9Rdo9gnzwI9eru41MFYw)">
            <text transform="matrix(1.042,0,0,1.042,423.046,569.737)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">+</text>
          </g>
          <defs>
            <clipPath id="_clipPath_3Rx6AhA5873T9Rdo9gnzwI9eru41MFYw">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,423.046,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_14jDZ6Uwh5dJFDnS65Btp2HYdmZSnaez)">
            <text transform="matrix(1.042,0,0,1.042,430.341,569.737)" id="Text" class="hlr hlr-name-localvariable" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">var_s0</text>
          </g>
          <defs>
            <clipPath id="_clipPath_14jDZ6Uwh5dJFDnS65Btp2HYdmZSnaez">
              <rect x="0" y="0" width="43" height="13.538" transform="matrix(1.042,0,0,1.042,430.341,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_vZ7WsYZZYuJlFrzIzK7OIcqO2Trbsa5t)">
            <text transform="matrix(1.042,0,0,1.042,473.066,569.737)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_vZ7WsYZZYuJlFrzIzK7OIcqO2Trbsa5t">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,473.066,559.156)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_kYO2mAnlioakqNLfp8vc3AsAk5sVkrOn)">
            <text transform="matrix(1.042,0,0,1.042,5.17,586.41)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_kYO2mAnlioakqNLfp8vc3AsAk5sVkrOn">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_XtbAlxlUgbNPWsP1JOBWsh3ekBTxI3jq)">
            <text transform="matrix(1.042,0,0,1.042,54.148,586.41)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B068 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_XtbAlxlUgbNPWsP1JOBWsh3ekBTxI3jq">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_lO9G8Q4qRJdR9DUOW0K5NBc3mO5SYWL7)">
            <text transform="matrix(1.042,0,0,1.042,173.988,586.41)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">LDP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_lO9G8Q4qRJdR9DUOW0K5NBc3mO5SYWL7">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_mUK96EiTQlRRKSSZro0GyFxGU96QqUKG)">
            <text transform="matrix(1.042,0,0,1.042,287.575,586.41)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X20</text>
          </g>
          <defs>
            <clipPath id="_clipPath_mUK96EiTQlRRKSSZro0GyFxGU96QqUKG">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,287.575,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_nTm0OTY1h39ByCtv2fXeouDQRXOn350B)">
            <text transform="matrix(1.042,0,0,1.042,308.417,586.41)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_nTm0OTY1h39ByCtv2fXeouDQRXOn350B">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,308.417,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_AlgcuYrz5JEZRVp8nlinLx5DSmIbGXpc)">
            <text transform="matrix(1.042,0,0,1.042,323.006,586.41)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X19</text>
          </g>
          <defs>
            <clipPath id="_clipPath_AlgcuYrz5JEZRVp8nlinLx5DSmIbGXpc">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.042,0,0,1.042,323.006,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_xHYs0jZzA8pA7Pb4bLnySC9fStnFSQnj)">
            <text transform="matrix(1.042,0,0,1.042,343.848,586.41)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_xHYs0jZzA8pA7Pb4bLnySC9fStnFSQnj">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,343.848,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_dm1SQtbA5EoQnx6MfOlGNYCLxwjPYklN)">
            <text transform="matrix(1.042,0,0,1.042,358.437,586.41)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_dm1SQtbA5EoQnx6MfOlGNYCLxwjPYklN">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,358.437,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_St1qMi982Jp28775I4uf7tis4jAvcfEQ)">
            <text transform="matrix(1.042,0,0,1.042,365.732,586.41)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_St1qMi982Jp28775I4uf7tis4jAvcfEQ">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.042,0,0,1.042,365.732,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yGFOCiI5QlpRfkPK9s7CphWhR7FMZZ7s)">
            <text transform="matrix(1.042,0,0,1.042,380.321,586.41)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">+</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yGFOCiI5QlpRfkPK9s7CphWhR7FMZZ7s">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,380.321,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_WEsgTnAgscCY9DR9xbCXkZkhDqs1PUub)">
            <text transform="matrix(1.042,0,0,1.042,387.615,586.41)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_WEsgTnAgscCY9DR9xbCXkZkhDqs1PUub">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.042,0,0,1.042,387.615,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_eUL9nlWps8vVHetxd75SGQOENTw0AtzE)">
            <text transform="matrix(1.042,0,0,1.042,415.752,586.41)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">+</text>
          </g>
          <defs>
            <clipPath id="_clipPath_eUL9nlWps8vVHetxd75SGQOENTw0AtzE">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,415.752,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_gG5HiiFMUxfptpgTo0R6dIOMpVf0td1o)">
            <text transform="matrix(1.042,0,0,1.042,423.046,586.41)" id="Text" class="hlr hlr-name-localvariable" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">var_10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_gG5HiiFMUxfptpgTo0R6dIOMpVf0td1o">
              <rect x="0" y="0" width="43" height="13.538" transform="matrix(1.042,0,0,1.042,423.046,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ikipnZcb9UiJdsugOKH2janXUehqq6w7)">
            <text transform="matrix(1.042,0,0,1.042,465.772,586.41)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ikipnZcb9UiJdsugOKH2janXUehqq6w7">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,465.772,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_wBsRwGreJIG0NW4sPLazK9WCOLqA6PVp)">
            <text transform="matrix(1.042,0,0,1.042,473.066,586.41)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_wBsRwGreJIG0NW4sPLazK9WCOLqA6PVp">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,473.066,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_sBLvrlVOSeTqEBDG2l2Go06DCtWTPoKt)">
            <text transform="matrix(1.042,0,0,1.042,487.655,586.41)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x20</text>
          </g>
          <defs>
            <clipPath id="_clipPath_sBLvrlVOSeTqEBDG2l2Go06DCtWTPoKt">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.042,0,0,1.042,487.655,575.829)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2LV69jJRMPT15Y5MTXRP62PJM8cUVsUk)">
            <text transform="matrix(1.042,0,0,1.042,5.17,603.084)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2LV69jJRMPT15Y5MTXRP62PJM8cUVsUk">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.042,0,0,1.042,5.17,592.502)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_P1tAlkuxbaMzTzYcYo3fA5F8WCAVcJCL)">
            <text transform="matrix(1.042,0,0,1.042,54.148,603.084)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B06C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_P1tAlkuxbaMzTzYcYo3fA5F8WCAVcJCL">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.042,0,0,1.042,54.148,592.502)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_kcznnjOrZNYANxyL6vDf7yLl6xWj13kB)">
            <text transform="matrix(1.042,0,0,1.042,173.988,603.084)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">B</text>
          </g>
          <defs>
            <clipPath id="_clipPath_kcznnjOrZNYANxyL6vDf7yLl6xWj13kB">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.042,0,0,1.042,173.988,592.502)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ixqSQvARlvpiH0ZNawabxvZvnWJS0TYu)">
            <text transform="matrix(1.042,0,0,1.042,286.533,603.084)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">_objc_retain</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ixqSQvARlvpiH0ZNawabxvZvnWJS0TYu">
              <rect x="0" y="0" width="84" height="13.538" transform="matrix(1.042,0,0,1.042,286.533,592.502)"/>
            </clipPath>
          </defs>
        </g>
      </g>
      <g id="detection">
        <path d="M 159.872 154.43 L 681.068 154.43 C 682.763 154.43 684.14 155.807 684.14 157.502 L 684.14 428.038 C 684.14 429.733 682.763 431.11 681.068 431.11 L 159.872 431.11 C 158.177 431.11 156.8 429.733 156.8 428.038 L 156.8 157.502 C 156.8 155.807 158.177 154.43 159.872 154.43 Z" style="stroke:none;fill:#353333;stroke-miterlimit:2;"/>
        <path d="M 159.872 154.43 L 681.068 154.43 C 682.763 154.43 684.14 155.807 684.14 157.502 L 684.14 428.038 C 684.14 429.733 682.763 431.11 681.068 431.11 L 159.872 431.11 C 158.177 431.11 156.8 429.733 156.8 428.038 L 156.8 157.502 C 156.8 155.807 158.177 154.43 159.872 154.43 Z" style="fill:none;stroke:#FF4D4D;stroke-width:3;stroke-miterlimit:2;"/>
        <g id="insts">
          <g clip-path="url(#_clipPath_U6EFR1kzQ3lmcIftx8Trc0UEnRoA00ja)">
            <text transform="matrix(1.004,0,0,1.004,159.967,175.206)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_U6EFR1kzQ3lmcIftx8Trc0UEnRoA00ja">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Yv5140o0byrfA2ZB3A36pNeAfW0jjYDa)">
            <text transform="matrix(1.004,0,0,1.004,207.149,175.206)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B010 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_Yv5140o0byrfA2ZB3A36pNeAfW0jjYDa">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_GyzIP2toAn7XoZJxc4SzeFnXgaBGqgHT)">
            <text transform="matrix(1.004,0,0,1.004,322.593,175.206)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_GyzIP2toAn7XoZJxc4SzeFnXgaBGqgHT">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_hpWUlkAGGKkTNqELHffyPJ7X7DLsILkS)">
            <text transform="matrix(1.004,0,0,1.004,432.014,175.206)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X20</text>
          </g>
          <defs>
            <clipPath id="_clipPath_hpWUlkAGGKkTNqELHffyPJ7X7DLsILkS">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_AXIOckxVvMbr4sNNvSFdUAKbFFJpjdO8)">
            <text transform="matrix(1.004,0,0,1.004,452.091,175.206)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_AXIOckxVvMbr4sNNvSFdUAKbFFJpjdO8">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,452.091,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_CviFYRM5cr7rZo2ElByXlQ1Gbc15Jyay)">
            <text transform="matrix(1.004,0,0,1.004,466.145,175.206)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_CviFYRM5cr7rZo2ElByXlQ1Gbc15Jyay">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,466.145,165.013)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Erf4YXXSu7EtTJN2OZflb9qo6FfjYBh2)">
            <text transform="matrix(1.004,0,0,1.004,159.967,191.268)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Erf4YXXSu7EtTJN2OZflb9qo6FfjYBh2">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_gITpuVN7DHWZD1RR2kS03G71vxmvXhBS)">
            <text transform="matrix(1.004,0,0,1.004,207.149,191.268)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B014 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_gITpuVN7DHWZD1RR2kS03G71vxmvXhBS">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_di4C0DsTtBCpJMzCnwsyf6payE3WGLSN)">
            <text transform="matrix(1.004,0,0,1.004,322.593,191.268)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">ADRP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_di4C0DsTtBCpJMzCnwsyf6payE3WGLSN">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_pPm282caoXY9KWCVrGJQ7wAcQrNYXyPr)">
            <text transform="matrix(1.004,0,0,1.004,431.01,191.268)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_pPm282caoXY9KWCVrGJQ7wAcQrNYXyPr">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,431.01,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_oAzKF2mPZ0ARgJ0R5VX3jxb6rCCLfakK)">
            <text transform="matrix(1.004,0,0,1.004,445.064,191.268)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>


          <defs>
            <clipPath id="_clipPath_o9dLeG6E6yhEeanHVY1NcFlz5vP69IQd">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,445.064,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_1MZqrtWGmiiOC6q9nq2WqTtw1tITM9Ak)">
            <text transform="matrix(1.004,0,0,1.004,459.118,191.268)" id="Text" class="hlr hlr-name-label dark-purple" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#hook_detect_cbk_ptr</text>
          </g>
          <defs>
            <clipPath id="_clipPath_1MZqrtWGmiiOC6q9nq2WqTtw1tITM9Ak">
              <rect x="0" y="0" width="138" height="13.538" transform="matrix(1.004,0,0,1.004,459.118,181.075)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_633WehXuPpQT9HAfxLeNkAW3Kg2c8hz2)">
            <text transform="matrix(1.004,0,0,1.004,596.589,191.268)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
          </g>

          <g clip-path="url(#_clipPath_Pbgo0CpCrGqKeCwcpiWDidJzW7Q9jOtz)">
            <text transform="matrix(1.004,0,0,1.004,159.967,207.329)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Pbgo0CpCrGqKeCwcpiWDidJzW7Q9jOtz">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ijNwKQMJyHNFHmHVxpvTn5qFIDKrUYyk)">
            <text transform="matrix(1.004,0,0,1.004,207.149,207.329)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B018 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_ijNwKQMJyHNFHmHVxpvTn5qFIDKrUYyk">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_w8W24fIEBiSu0SLq7ANkhZWYizNjRjJc)">
            <text transform="matrix(1.004,0,0,1.004,322.593,207.329)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">LDR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_w8W24fIEBiSu0SLq7ANkhZWYizNjRjJc">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_3ZE3E8qEiWW97cMhhdh4lO9KGY1d0XeP)">
            <text transform="matrix(1.004,0,0,1.004,432.014,207.329)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_3ZE3E8qEiWW97cMhhdh4lO9KGY1d0XeP">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_cOnOYjjlNzIqTa3YnnUkbBtrcNW9CejK)">
            <text transform="matrix(1.004,0,0,1.004,446.068,207.329)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_cOnOYjjlNzIqTa3YnnUkbBtrcNW9CejK">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2jwkRbis9B0NN2q1vhvUZA13VhtauZ4P)">
            <text transform="matrix(1.004,0,0,1.004,460.122,207.329)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2jwkRbis9B0NN2q1vhvUZA13VhtauZ4P">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_1dU5Ki8fzt8tBYAJitXKCT2k8r1HNq8P)">
            <text transform="matrix(1.004,0,0,1.004,467.149,207.329)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_1dU5Ki8fzt8tBYAJitXKCT2k8r1HNq8P">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,467.149,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_msizE2JdLhLYgbSkPaXB3Mt28ueQSSFc)">
            <text transform="matrix(1.004,0,0,1.004,481.203,207.329)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>


          <defs>
            <clipPath id="_clipPath_k35aqY3C6Nen9W3uWKuMz719lhsjRxmE">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,481.203,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_7TIMQBIEZ5ZzIT2PUHHUHzdtHo6lJJqZ)">
            <text transform="matrix(1.004,0,0,1.004,488.23,207.329)" id="Text" class="hlr hlr-name-label  dark-purple" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" fill="#000000" stroke="none">#hook_detect_cbk_ptr</text>
          </g>
          <defs>
            <clipPath id="_clipPath_7TIMQBIEZ5ZzIT2PUHHUHzdtHo6lJJqZ">
              <rect x="0" y="0" width="138" height="13.538" transform="matrix(1.004,0,0,1.004,488.23,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_SeHv7uRm3tUQ2fjnaIPGc2XNNMH7E73v)">
            <text transform="matrix(1.004,0,0,1.004,625.701,207.329)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
          </g>




          <defs>
            <clipPath id="_clipPath_UBSFfRQgajAfti5AbwA6z8MPOl3670Cs">
              <rect x="0" y="0" width="57" height="13.538" transform="matrix(1.004,0,0,1.004,610.701,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2eLGFWlKc8JUBxEXDPL2CjSU6ONVEXoi)">
            <text transform="matrix(1.004,0,0,1.004,664.909,207.329)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2eLGFWlKc8JUBxEXDPL2CjSU6ONVEXoi">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,664.909,197.136)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_8iy9ZgBRizEjWFeQkJKVRWnGqF8nEx7L)">
            <text transform="matrix(1.004,0,0,1.004,159.967,223.391)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_8iy9ZgBRizEjWFeQkJKVRWnGqF8nEx7L">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_6ZEQT50qID8sFBVOtTa6OdJBTvvht9yy)">
            <text transform="matrix(1.004,0,0,1.004,207.149,223.391)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B01C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_6ZEQT50qID8sFBVOtTa6OdJBTvvht9yy">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_QfDj9P9HFoxFaZajfubN2z745CgdBh7m)">
            <text transform="matrix(1.004,0,0,1.004,322.593,223.391)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_QfDj9P9HFoxFaZajfubN2z745CgdBh7m">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_PSGgSL2Ypt5YF8AJwHCeIo7GBYB4i1mu)">
            <text transform="matrix(1.004,0,0,1.004,432.014,223.391)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_PSGgSL2Ypt5YF8AJwHCeIo7GBYB4i1mu">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yTeqmVp7xrtnzNPaWzkVVxTgeVoRgHxW)">
            <text transform="matrix(1.004,0,0,1.004,446.068,223.391)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yTeqmVp7xrtnzNPaWzkVVxTgeVoRgHxW">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_JgczkyfAowdmmM0GOrRivJgAlboqkP9Y)">
            <text transform="matrix(1.004,0,0,1.004,460.122,223.391)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_JgczkyfAowdmmM0GOrRivJgAlboqkP9Y">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,213.198)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_worIgzLF6UjhvMQiQBoR8JKq6hMvLGC2)">
            <text transform="matrix(1.004,0,0,1.004,159.967,239.453)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_worIgzLF6UjhvMQiQBoR8JKq6hMvLGC2">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_01qsyKzBUEqswSTgSngZ8cqssETUdGkV)">
            <text transform="matrix(1.004,0,0,1.004,207.149,239.453)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B020 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_01qsyKzBUEqswSTgSngZ8cqssETUdGkV">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_DK8NQ0VFGudJ5VDfc7UN1td85mdjnNDW)">
            <text transform="matrix(1.004,0,0,1.004,322.593,239.453)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
          </g>
          <defs>
            <clipPath id="_clipPath_DK8NQ0VFGudJ5VDfc7UN1td85mdjnNDW">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_fo2QtQv2pKvhRNduemraLvtPj9k8VcIw)">
            <text transform="matrix(1.004,0,0,1.004,432.014,239.453)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_fo2QtQv2pKvhRNduemraLvtPj9k8VcIw">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_c6wIDszMuvILU7r8DLyRBsb3wIGl3ntQ)">
            <text transform="matrix(1.004,0,0,1.004,452.091,239.453)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_c6wIDszMuvILU7r8DLyRBsb3wIGl3ntQ">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,452.091,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yhIjsATp5eHEnLmHXvPZlkKUBn9ng0Rr)">
            <text transform="matrix(1.004,0,0,1.004,466.145,239.453)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yhIjsATp5eHEnLmHXvPZlkKUBn9ng0Rr">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,466.145,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_fGhX6l6OSKn5Q1r7agI6DE9sYvVdNWws)">
            <text transform="matrix(1.004,0,0,1.004,480.199,239.453)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_fGhX6l6OSKn5Q1r7agI6DE9sYvVdNWws">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,480.199,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_hm6MyaAR822VtrYzlmYtdq5ut8MHMiBz)">
            <text transform="matrix(1.004,0,0,1.004,494.253,239.453)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_hm6MyaAR822VtrYzlmYtdq5ut8MHMiBz">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.004,0,0,1.004,494.253,229.26)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_7bwCwE10WXLKY9pHEpdY9w4m35LO9FIE)">
            <text transform="matrix(1.004,0,0,1.004,159.967,255.515)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_7bwCwE10WXLKY9pHEpdY9w4m35LO9FIE">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_b2CspUmmDXTfU6W9tNDcRAMWsXI25Brz)">
            <text transform="matrix(1.004,0,0,1.004,207.149,255.515)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B024 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_b2CspUmmDXTfU6W9tNDcRAMWsXI25Brz">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Fe9PpWTKnSGcT1UvDc0bA8PUtydnpcir)">
            <text transform="matrix(1.004,0,0,1.004,322.593,255.515)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Fe9PpWTKnSGcT1UvDc0bA8PUtydnpcir">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_BwgLwg3Ex9fgTC6TY0nrc3smWxZig3uc)">
            <text transform="matrix(1.004,0,0,1.004,432.014,255.515)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_BwgLwg3Ex9fgTC6TY0nrc3smWxZig3uc">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_KSTi3NLh2PFnwRoiEWvh35E2oJSK4qqi)">
            <text transform="matrix(1.004,0,0,1.004,446.068,255.515)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_KSTi3NLh2PFnwRoiEWvh35E2oJSK4qqi">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_DcMJVfkA9kpVcf2XeBUuMcVD8oBwuiN6)">
            <text transform="matrix(1.004,0,0,1.004,460.122,255.515)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_DcMJVfkA9kpVcf2XeBUuMcVD8oBwuiN6">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,245.322)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_6qS0HYmyOv5ZrzZ4j74JLOusWIX5gtd4)">
            <text transform="matrix(1.004,0,0,1.004,159.967,271.576)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_6qS0HYmyOv5ZrzZ4j74JLOusWIX5gtd4">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_brPXFJO3HpJSCEodUR5uyWLqFVxdu8KB)">
            <text transform="matrix(1.004,0,0,1.004,207.149,271.576)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B028 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_brPXFJO3HpJSCEodUR5uyWLqFVxdu8KB">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_xtvj686Y4vswtWSV8QkbYxTI4GgznLKE)">
            <text transform="matrix(1.004,0,0,1.004,322.593,271.576)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_xtvj686Y4vswtWSV8QkbYxTI4GgznLKE">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_io8CFqZTJGzveN1sJIkP25J4JBxIfBsu)">
            <text transform="matrix(1.004,0,0,1.004,432.014,271.576)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
          </g>
          <defs>
            <clipPath id="_clipPath_io8CFqZTJGzveN1sJIkP25J4JBxIfBsu">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2xriLJEL430B5VslB9Du8NTXbY8A13u7)">
            <text transform="matrix(1.004,0,0,1.004,452.091,271.576)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2xriLJEL430B5VslB9Du8NTXbY8A13u7">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,452.091,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_F3afcG83OyPLQ1YzlqYuLnrgcxkaeu1f)">
            <text transform="matrix(1.004,0,0,1.004,466.145,271.576)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x13B86436775FA1D</text>
          </g>
          <defs>
            <clipPath id="_clipPath_F3afcG83OyPLQ1YzlqYuLnrgcxkaeu1f">
              <rect x="0" y="0" width="124" height="13.538" transform="matrix(1.004,0,0,1.004,466.145,261.383)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_YPI6s3Yt8Pgs1KejFeu37Vfg8hEf0c5S)">
            <text transform="matrix(1.004,0,0,1.004,159.967,287.638)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_YPI6s3Yt8Pgs1KejFeu37Vfg8hEf0c5S">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jF1sDk3Zfy8WUaKHs8CPAjIfb5qt6lNe)">
            <text transform="matrix(1.004,0,0,1.004,207.149,287.638)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B038 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_jF1sDk3Zfy8WUaKHs8CPAjIfb5qt6lNe">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_6a2kBitVTY112rXB0QTavU4OsyeBgFwO)">
            <text transform="matrix(1.004,0,0,1.004,322.593,287.638)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_6a2kBitVTY112rXB0QTavU4OsyeBgFwO">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ohBQKxG4VJgg2UX2f5YaPR6g3SqRxhU2)">
            <text transform="matrix(1.004,0,0,1.004,431.01,287.638)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ohBQKxG4VJgg2UX2f5YaPR6g3SqRxhU2">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,431.01,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_D7uywLus9A86EqlecupYn78r07Sys4Vg)">
            <text transform="matrix(1.004,0,0,1.004,451.087,287.638)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_D7uywLus9A86EqlecupYn78r07Sys4Vg">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,451.087,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_msgpqat4KzMx8ArkS36Lr8vHVrOFcK9c)">
            <text transform="matrix(1.004,0,0,1.004,465.141,287.638)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_msgpqat4KzMx8ArkS36Lr8vHVrOFcK9c">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,465.141,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jQ8SOv8aW4dJnZdzWFU0gM87Mfcq0Yg3)">
            <text transform="matrix(1.004,0,0,1.004,472.168,287.638)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_jQ8SOv8aW4dJnZdzWFU0gM87Mfcq0Yg3">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,472.168,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ABF6tF9fMLiGwuWn4Y5jY6nI2CDsmK12)">
            <text transform="matrix(1.004,0,0,1.004,486.222,287.638)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ABF6tF9fMLiGwuWn4Y5jY6nI2CDsmK12">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,486.222,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_vUwbyQZn2vGtJgMEfwOnLLXyaHFQafF4)">
            <text transform="matrix(1.004,0,0,1.004,493.249,287.638)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_vUwbyQZn2vGtJgMEfwOnLLXyaHFQafF4">
              <rect x="0" y="0" width="43" height="13.538" transform="matrix(1.004,0,0,1.004,493.249,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_1q5INiBTVyyzNqFc1FXPONGzXEIHxSXc)">
            <text transform="matrix(1.004,0,0,1.004,534.407,287.638)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_1q5INiBTVyyzNqFc1FXPONGzXEIHxSXc">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,534.407,277.445)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_GbUyK3hzSRZOm3XUDOiDEuTJBKnuxQrN)">
            <text transform="matrix(1.004,0,0,1.004,159.967,303.7)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_GbUyK3hzSRZOm3XUDOiDEuTJBKnuxQrN">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_KFaikhpSIImWdIh9cp8APEjWThK4C0VC)">
            <text transform="matrix(1.004,0,0,1.004,207.149,303.7)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B03C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_KFaikhpSIImWdIh9cp8APEjWThK4C0VC">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_LQYid14AqAoHZWWSV4pzUjzrAJj5qbbP)">
            <text transform="matrix(1.004,0,0,1.004,322.593,303.7)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_LQYid14AqAoHZWWSV4pzUjzrAJj5qbbP">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_GljCWryyM9DNkm9570MnZgqTVcBRDnCY)">
            <text transform="matrix(1.004,0,0,1.004,432.014,303.7)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_GljCWryyM9DNkm9570MnZgqTVcBRDnCY">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_yViinqy0tQaDR4vaJ7IwM9GQvlxkJsrt)">
            <text transform="matrix(1.004,0,0,1.004,446.068,303.7)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_yViinqy0tQaDR4vaJ7IwM9GQvlxkJsrt">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_oSPKRV3ed8HNfDE5ODfxKyVH3aJtSoKr)">
            <text transform="matrix(1.004,0,0,1.004,460.122,303.7)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_oSPKRV3ed8HNfDE5ODfxKyVH3aJtSoKr">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,293.507)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_W9paqOQ0q9WXSxYB3GgM6zVVmubSUefS)">
            <text transform="matrix(1.004,0,0,1.004,159.967,319.762)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_W9paqOQ0q9WXSxYB3GgM6zVVmubSUefS">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_4WChK6tJYr8iiTVjP1BZfNWUMWOzlmXW)">
            <text transform="matrix(1.004,0,0,1.004,207.149,319.762)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B040 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_4WChK6tJYr8iiTVjP1BZfNWUMWOzlmXW">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_SncjxfBtXDdGjglvVVSxyfO1hNJx46mS)">
            <text transform="matrix(1.004,0,0,1.004,322.593,319.762)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
          </g>
          <defs>
            <clipPath id="_clipPath_SncjxfBtXDdGjglvVVSxyfO1hNJx46mS">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_50f4qF8LQFh4AJCwBuNT3Rw3h97oMDSs)">
            <text transform="matrix(1.004,0,0,1.004,432.014,319.762)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
          </g>
          <defs>
            <clipPath id="_clipPath_50f4qF8LQFh4AJCwBuNT3Rw3h97oMDSs">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_pyhuFSKdlJC9f75YZpAB8cpc8fsxf35k)">
            <text transform="matrix(1.004,0,0,1.004,446.068,319.762)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_pyhuFSKdlJC9f75YZpAB8cpc8fsxf35k">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_vGrwq8aR89RIUg2mXgS8Bi2Xfm6CvqlA)">
            <text transform="matrix(1.004,0,0,1.004,460.122,319.762)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_vGrwq8aR89RIUg2mXgS8Bi2Xfm6CvqlA">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_QBfn0KZ3c3yPz2sdl0MVFZsJjItMtJ8Q)">
            <text transform="matrix(1.004,0,0,1.004,474.176,319.762)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_QBfn0KZ3c3yPz2sdl0MVFZsJjItMtJ8Q">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,474.176,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_nvUlHKfgbAJ1nRmqrs1UW1xxTArED4iM)">
            <text transform="matrix(1.004,0,0,1.004,488.23,319.762)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_nvUlHKfgbAJ1nRmqrs1UW1xxTArED4iM">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.004,0,0,1.004,488.23,309.569)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_alMQnkICFG6Dns7AI8gkPg7tyJ80QQRP)">
            <text transform="matrix(1.004,0,0,1.004,159.967,335.824)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_alMQnkICFG6Dns7AI8gkPg7tyJ80QQRP">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_BrLmDXbudwNK97wAn5LmZIKKrFwU5j4B)">
            <text transform="matrix(1.004,0,0,1.004,207.149,335.824)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B044 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_BrLmDXbudwNK97wAn5LmZIKKrFwU5j4B">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_hDbnZIBMNLHKUpWzoUdHdPXa48qa1Xui)">
            <text transform="matrix(1.004,0,0,1.004,322.593,335.824)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_hDbnZIBMNLHKUpWzoUdHdPXa48qa1Xui">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jma5rErZay8xe3Rx9L87yYTANKw9SI4L)">
            <text transform="matrix(1.004,0,0,1.004,432.014,335.824)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_jma5rErZay8xe3Rx9L87yYTANKw9SI4L">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Qtc6zUdXLk1IOEjkacz5cW4dfBpypy6t)">
            <text transform="matrix(1.004,0,0,1.004,446.068,335.824)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Qtc6zUdXLk1IOEjkacz5cW4dfBpypy6t">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_pJaFOSC7qaEFWRvBZc44xZRPrOtvHdcx)">
            <text transform="matrix(1.004,0,0,1.004,460.122,335.824)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
          </g>
          <defs>
            <clipPath id="_clipPath_pJaFOSC7qaEFWRvBZc44xZRPrOtvHdcx">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,325.63)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_hn9BvBE1uQLNXO0jUWtGjLg8Z8Iax8fq)">
            <text transform="matrix(1.004,0,0,1.004,159.967,351.885)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_hn9BvBE1uQLNXO0jUWtGjLg8Z8Iax8fq">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_INhlO7QfzlAfEtYRAARiBQbA8fEtrPrs)">
            <text transform="matrix(1.004,0,0,1.004,207.149,351.885)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B048 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_INhlO7QfzlAfEtYRAARiBQbA8fEtrPrs">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NIs6VhfYI3q3DfmYgfhAkVeZZO6kek5u)">
            <text transform="matrix(1.004,0,0,1.004,322.593,351.885)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NIs6VhfYI3q3DfmYgfhAkVeZZO6kek5u">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ze77Rtk5ncy6sykoiLmnqUuCrUkqJAuw)">
            <text transform="matrix(1.004,0,0,1.004,432.014,351.885)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">W11</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ze77Rtk5ncy6sykoiLmnqUuCrUkqJAuw">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_4JYJsEoww3xihf59TEWNHXfUWTZFnz7s)">
            <text transform="matrix(1.004,0,0,1.004,452.091,351.885)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_4JYJsEoww3xihf59TEWNHXfUWTZFnz7s">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,452.091,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_I7GKCK3QIcFYb0ixZbTOFdzAfqeOFdUb)">
            <text transform="matrix(1.004,0,0,1.004,466.145,351.885)" id="Text" class="hlr hlr-literal-number-hex dark-orange" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x400</text>
          </g>
          <defs>
            <clipPath id="_clipPath_I7GKCK3QIcFYb0ixZbTOFdzAfqeOFdUb">
              <rect x="0" y="0" width="43" height="13.538" transform="matrix(1.004,0,0,1.004,466.145,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_RXxojeBhC4ACoMksm1PHvKkMG3OBZKlP)">
            <text transform="matrix(1.004,0,0,1.004,527.38,351.885)" id="Text" class="hlr hlr-error dark-orange" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">---&gt; </text>
          </g>
          <defs>
            <clipPath id="_clipPath_RXxojeBhC4ACoMksm1PHvKkMG3OBZKlP">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.004,0,0,1.004,527.38,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_cDXCixFoRr7KakAT6JvGbtWxzfeCHK4V)">
            <text transform="matrix(1.004,0,0,1.004,561.512,351.885)" id="Text" class="hlr hlr-name-function dark-orange" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">EVT_CODE_PROLOGUE</text>
          </g>
          <defs>
            <clipPath id="_clipPath_cDXCixFoRr7KakAT6JvGbtWxzfeCHK4V">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,561.512,341.692)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_uoVkfrCFS8khHwgyk7EznHfj4VFaaUT7)">
            <text transform="matrix(1.004,0,0,1.004,159.967,367.947)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_uoVkfrCFS8khHwgyk7EznHfj4VFaaUT7">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_y06g8xTVbaZdwXVc4RbefatSr80iks17)">
            <text transform="matrix(1.004,0,0,1.004,207.149,367.947)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B04C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_y06g8xTVbaZdwXVc4RbefatSr80iks17">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_tHdog2FjcLtFT5vyroSbgfhHBxnbY3ny)">
            <text transform="matrix(1.004,0,0,1.004,322.593,367.947)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_tHdog2FjcLtFT5vyroSbgfhHBxnbY3ny">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_m5C09MbXeoCumGHF1w5jmkBjXfwpmse4)">
            <text transform="matrix(1.004,0,0,1.004,431.01,367.947)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">W11</text>
          </g>
          <defs>
            <clipPath id="_clipPath_m5C09MbXeoCumGHF1w5jmkBjXfwpmse4">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,431.01,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_IiA7z3xv1lIaJqOY6hsReEFiYc1uHjye)">
            <text transform="matrix(1.004,0,0,1.004,451.087,367.947)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_IiA7z3xv1lIaJqOY6hsReEFiYc1uHjye">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,451.087,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NeGtv0nClMv69QHsV5qLAhOXGaDiV5vj)">
            <text transform="matrix(1.004,0,0,1.004,465.141,367.947)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NeGtv0nClMv69QHsV5qLAhOXGaDiV5vj">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,465.141,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_3ydBcCgx2WRPWGlJX5DhXsFmHfM4fpY4)">
            <text transform="matrix(1.004,0,0,1.004,472.168,367.947)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_3ydBcCgx2WRPWGlJX5DhXsFmHfM4fpY4">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,472.168,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_fLB0j8MfcoD5cr0La2Hk6WaYyrDzwX6C)">
            <text transform="matrix(1.004,0,0,1.004,486.222,367.947)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_fLB0j8MfcoD5cr0La2Hk6WaYyrDzwX6C">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,486.222,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2LPsxIKcHRhnaffuCldMCMy62H0PbpVC)">
            <text transform="matrix(1.004,0,0,1.004,493.249,367.947)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2LPsxIKcHRhnaffuCldMCMy62H0PbpVC">
              <rect x="0" y="0" width="43" height="13.538" transform="matrix(1.004,0,0,1.004,493.249,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_m4BimhdG7GBUYaA1HedBesEzbrYW7Lzr)">
            <text transform="matrix(1.004,0,0,1.004,534.407,367.947)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_m4BimhdG7GBUYaA1HedBesEzbrYW7Lzr">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,534.407,357.754)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2gG2N3Av8aRtpcr3gycwxFLRRoWIjmoj)">
            <text transform="matrix(1.004,0,0,1.004,159.967,384.009)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2gG2N3Av8aRtpcr3gycwxFLRRoWIjmoj">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VKRDgQmJqXqi10alVjj4zmpvtKR4VMHg)">
            <text transform="matrix(1.004,0,0,1.004,207.149,384.009)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B050 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_VKRDgQmJqXqi10alVjj4zmpvtKR4VMHg">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NAEymJyptl3Fh59M5TSTFewHaErduOBa)">
            <text transform="matrix(1.004,0,0,1.004,322.593,384.009)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NAEymJyptl3Fh59M5TSTFewHaErduOBa">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_plhTB35s7Borc2XmCbw91Lgv3Kg4mlfM)">
            <text transform="matrix(1.004,0,0,1.004,431.01,384.009)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
          </g>
          <defs>
            <clipPath id="_clipPath_plhTB35s7Borc2XmCbw91Lgv3Kg4mlfM">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,431.01,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2wDW85dvGnAW1LvWTWZnPUM4q9SQP1Ea)">
            <text transform="matrix(1.004,0,0,1.004,451.087,384.009)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_2wDW85dvGnAW1LvWTWZnPUM4q9SQP1Ea">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,451.087,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_zs1mRXsYv3tEjkOTIbwcpO6qprxNulKA)">
            <text transform="matrix(1.004,0,0,1.004,465.141,384.009)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_zs1mRXsYv3tEjkOTIbwcpO6qprxNulKA">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,465.141,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_QwstbjSQcFrgaSDGXYvJwdjbVmn2fq5t)">
            <text transform="matrix(1.004,0,0,1.004,472.168,384.009)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
          </g>
          <defs>
            <clipPath id="_clipPath_QwstbjSQcFrgaSDGXYvJwdjbVmn2fq5t">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,472.168,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_4GYZ22YO1AXBv8f6bYcBZmPMcF0KKkRn)">
            <text transform="matrix(1.004,0,0,1.004,486.222,384.009)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_4GYZ22YO1AXBv8f6bYcBZmPMcF0KKkRn">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,486.222,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_WASxDNQQrBgPirCYjvblZcNjwK2vuRfE)">
            <text transform="matrix(1.004,0,0,1.004,493.249,384.009)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#-8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_WASxDNQQrBgPirCYjvblZcNjwK2vuRfE">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,493.249,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Pagqap1cCZc1LY7txpJR59d7TAHfjBCT)">
            <text transform="matrix(1.004,0,0,1.004,514.33,384.009)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Pagqap1cCZc1LY7txpJR59d7TAHfjBCT">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,514.33,373.816)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_h33joezXFpnBJjXRlFhGZmrnZm1G9F4J)">
            <text transform="matrix(1.004,0,0,1.004,159.967,400.071)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_h33joezXFpnBJjXRlFhGZmrnZm1G9F4J">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,389.878)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_2XcnCtjC5OtSftjFPwl3foqNPy0xaF94)">
            <text transform="matrix(1.004,0,0,1.004,207.149,400.071)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B054 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_2XcnCtjC5OtSftjFPwl3foqNPy0xaF94">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,389.878)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_FtlCSOALxC39Kruq7erlU1Gh8bCeKSg3)">
            <text transform="matrix(1.004,0,0,1.004,322.593,400.071)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">BLR</text>
          </g>
          <defs>
            <clipPath id="_clipPath_FtlCSOALxC39Kruq7erlU1Gh8bCeKSg3">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,389.878)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_bSIdv2ncsByucDsBh2e9S1XgxlfNva1P)">
            <text transform="matrix(1.004,0,0,1.004,432.014,400.071)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>

          <defs>
            <clipPath id="_clipPath_4PVjH9iJeXMydxLjzGFDFzJbUBuFDWaI">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,389.878)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_aFsZLBYrT9BzUMI0ESQzAl83JDiwpqmo)">
            <text transform="matrix(1.004,0,0,1.004,466.145,400.071)" id="Text" class="hlr hlr-name-function  dark-purple" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">Hook Detection Callback</text>
          </g>



          <defs>
            <clipPath id="_clipPath_jEc8YlMNojU4CBdmcjWbUm3QFOflg5Rj">
              <rect x="0" y="0" width="57" height="13.538" transform="matrix(1.004,0,0,1.004,534.407,389.878)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_ReIUV373plR4wCyvi3FDbk1pfOpCk4oq)">
            <text transform="matrix(1.004,0,0,1.004,159.967,416.132)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_ReIUV373plR4wCyvi3FDbk1pfOpCk4oq">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.004,0,0,1.004,159.967,405.939)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_baaKURsc6PHazF7OEVijq36EpNeVKXHA)">
            <text transform="matrix(1.004,0,0,1.004,207.149,416.132)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B058 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_baaKURsc6PHazF7OEVijq36EpNeVKXHA">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.004,0,0,1.004,207.149,405.939)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_BQJGTiUcjxVtjErAALYrMUQkmAISDwp7)">
            <text transform="matrix(1.004,0,0,1.004,322.593,416.132)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
          </g>
          <defs>
            <clipPath id="_clipPath_BQJGTiUcjxVtjErAALYrMUQkmAISDwp7">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,322.593,405.939)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_b8PjiQuHASIW03tszLzLYM9jJA8c8Ick)">
            <text transform="matrix(1.004,0,0,1.004,432.014,416.132)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_b8PjiQuHASIW03tszLzLYM9jJA8c8Ick">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.004,0,0,1.004,432.014,405.939)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_wyLSPtp0D7N6w0tkiQv96XEoxA2defWq)">
            <text transform="matrix(1.004,0,0,1.004,446.068,416.132)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_wyLSPtp0D7N6w0tkiQv96XEoxA2defWq">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.004,0,0,1.004,446.068,405.939)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_nmJcZ8ZRZymwEQQs44DAnWODOgAthv9l)">
            <text transform="matrix(1.004,0,0,1.004,460.122,416.132)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X20</text>
          </g>
          <defs>
            <clipPath id="_clipPath_nmJcZ8ZRZymwEQQs44DAnWODOgAthv9l">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.004,0,0,1.004,460.122,405.939)"/>
            </clipPath>
          </defs>
        </g>
      </g>
      <g id="top">
        <path d="M 6.747 3.5 L 530.753 3.5 C 531.673 3.5 532.42 4.247 532.42 5.167 L 532.42 83.283 C 532.42 84.203 531.673 84.95 530.753 84.95 L 6.747 84.95 C 5.827 84.95 5.08 84.203 5.08 83.283 L 5.08 5.167 C 5.08 4.247 5.827 3.5 6.747 3.5 Z" style="stroke:none;fill:#353333;stroke-miterlimit:2;"/>
        <path d="M 6.747 3.5 L 530.753 3.5 C 531.673 3.5 532.42 4.247 532.42 5.167 L 532.42 83.283 C 532.42 84.203 531.673 84.95 530.753 84.95 L 6.747 84.95 C 5.827 84.95 5.08 84.203 5.08 83.283 L 5.08 5.167 C 5.08 4.247 5.827 3.5 6.747 3.5 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-miterlimit:2;"/>
        <g id="insts">
          <g clip-path="url(#_clipPath_qewagJOJVdNRabwWuiDXFyGY11eqJI8w)">
            <text transform="matrix(1.074,0,0,1.074,8.25,21.576)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_qewagJOJVdNRabwWuiDXFyGY11eqJI8w">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.074,0,0,1.074,8.25,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VrZ9Kxh1W62PropZzyAypmxX16CyMVNo)">
            <text transform="matrix(1.074,0,0,1.074,58.746,21.576)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B000 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_VrZ9Kxh1W62PropZzyAypmxX16CyMVNo">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.074,0,0,1.074,58.746,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VNqVhrdA3LHg6axE57eDl7KmEX4eak8F)">
            <text transform="matrix(1.074,0,0,1.074,182.3,21.576)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">ADRP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_VNqVhrdA3LHg6axE57eDl7KmEX4eak8F">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.074,0,0,1.074,182.3,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_OB8oabKIQDg2FZtHetuTpEV3klFmtd7E)">
            <text transform="matrix(1.074,0,0,1.074,298.333,21.576)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_OB8oabKIQDg2FZtHetuTpEV3klFmtd7E">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.074,0,0,1.074,298.333,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_h47DG6Afq2BljIa3fsB27Gk60XdvNneF)">
            <text transform="matrix(1.074,0,0,1.074,313.374,21.576)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_h47DG6Afq2BljIa3fsB27Gk60XdvNneF">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,313.374,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_UO7yfoTCpAqdnjCdcHB6WIcyIeMFlkU7)">
            <text transform="matrix(1.074,0,0,1.074,328.415,21.576)" id="Text" class="hlr hlr-name-label" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#sub_10000AFC8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_UO7yfoTCpAqdnjCdcHB6WIcyIeMFlkU7">
              <rect x="0" y="0" width="97" height="13.538" transform="matrix(1.074,0,0,1.074,328.415,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_AdGENOFsLfba8h7sAeE58ZRlKii001T6)">
            <text transform="matrix(1.074,0,0,1.074,430.481,21.576)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
          </g>
          <defs>
            <clipPath id="_clipPath_AdGENOFsLfba8h7sAeE58ZRlKii001T6">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.074,0,0,1.074,430.481,10.667)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_rNsGsNItkwAnNpSXJhvHaGY8Btff6GIA)">
            <text transform="matrix(1.074,0,0,1.074,8.25,38.766)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_rNsGsNItkwAnNpSXJhvHaGY8Btff6GIA">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.074,0,0,1.074,8.25,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jOdqZAnA2pQsG9ujtV5L2ducjhAeot7s)">
            <text transform="matrix(1.074,0,0,1.074,58.746,38.766)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B004 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_jOdqZAnA2pQsG9ujtV5L2ducjhAeot7s">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.074,0,0,1.074,58.746,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_scA6CUDMnkJAr4d8NVqJzXA7SAIwxWWW)">
            <text transform="matrix(1.074,0,0,1.074,182.3,38.766)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">LDRB</text>
          </g>
          <defs>
            <clipPath id="_clipPath_scA6CUDMnkJAr4d8NVqJzXA7SAIwxWWW">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.074,0,0,1.074,182.3,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_nvYmKn76c1FdoQD2uHa7Xd4iLVpeVS4y)">
            <text transform="matrix(1.074,0,0,1.074,298.333,38.766)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">W8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_nvYmKn76c1FdoQD2uHa7Xd4iLVpeVS4y">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.074,0,0,1.074,298.333,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_xvk4dFgkzdmsFAezwVAxZYVKgTyITrNO)">
            <text transform="matrix(1.074,0,0,1.074,313.374,38.766)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_xvk4dFgkzdmsFAezwVAxZYVKgTyITrNO">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,313.374,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_jcmhSG49RhftF4d5zN5mpgoKEhTi6WmW)">
            <text transform="matrix(1.074,0,0,1.074,328.415,38.766)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
          </g>
          <defs>
            <clipPath id="_clipPath_jcmhSG49RhftF4d5zN5mpgoKEhTi6WmW">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,328.415,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_wKUGtW0mRLzhdILAG5UqhjNbWNAfpCGg)">
            <text transform="matrix(1.074,0,0,1.074,335.936,38.766)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_wKUGtW0mRLzhdILAG5UqhjNbWNAfpCGg">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.074,0,0,1.074,335.936,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_XjJ1YdYAk7EtzxEdtYquSLaFTpZ3XCyQ)">
            <text transform="matrix(1.074,0,0,1.074,350.977,38.766)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_XjJ1YdYAk7EtzxEdtYquSLaFTpZ3XCyQ">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,350.977,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_mrTeZeJIi55ve91SDvgIF9CjgCH5oxpw)">
            <text transform="matrix(1.074,0,0,1.074,358.498,38.766)" id="Text" class="hlr hlr-name-label" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#sub_10000AFC8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_mrTeZeJIi55ve91SDvgIF9CjgCH5oxpw">
              <rect x="0" y="0" width="97" height="13.538" transform="matrix(1.074,0,0,1.074,358.498,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_WnaPHmj6X6zTfMkodkltS8E462xNZhfd)">
            <text transform="matrix(1.074,0,0,1.074,460.564,38.766)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGEOFF</text>
          </g>
          <defs>
            <clipPath id="_clipPath_WnaPHmj6X6zTfMkodkltS8E462xNZhfd">
              <rect x="0" y="0" width="57" height="13.538" transform="matrix(1.074,0,0,1.074,460.564,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_NEQ9B2B64GZOT50StUabgHD5IrD7ZKAR)">
            <text transform="matrix(1.074,0,0,1.074,518.581,38.766)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
          </g>
          <defs>
            <clipPath id="_clipPath_NEQ9B2B64GZOT50StUabgHD5IrD7ZKAR">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,518.581,27.857)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_cDas6T87wWPT3oqm0zqWIcIEEFBno9FG)">
            <text transform="matrix(1.074,0,0,1.074,8.25,55.956)" id="Text" class="hlr hlr-name-section dark-red" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_cDas6T87wWPT3oqm0zqWIcIEEFBno9FG">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.074,0,0,1.074,8.25,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_5QzAYesBeoC6KiuGwbJPxwyxCEBbf0kg)">
            <text transform="matrix(1.074,0,0,1.074,58.746,55.956)" id="Text" class="hlr hlr-literal-number-address dark-red" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B008 </text>
          </g>
          <defs>
            <clipPath id="_clipPath_5QzAYesBeoC6KiuGwbJPxwyxCEBbf0kg">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.074,0,0,1.074,58.746,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_dq56hoFMjqUaVZ4PBqpOqA2HIbMQYEfs)">
            <text transform="matrix(1.074,0,0,1.074,182.3,55.956)" id="Text" class="hlr hlr-name-instruction dark-red" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">CMP</text>
          </g>
          <defs>
            <clipPath id="_clipPath_dq56hoFMjqUaVZ4PBqpOqA2HIbMQYEfs">
              <rect x="0" y="0" width="23" height="13.538" transform="matrix(1.074,0,0,1.074,182.3,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_XwQ7o5jiHk1yx3aqLxkDn8fRJ5oFUrz1)">
            <text transform="matrix(1.074,0,0,1.074,299.407,55.956)" id="Text" class="hlr hlr-name-register dark-red" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">W8</text>
          </g>
          <defs>
            <clipPath id="_clipPath_XwQ7o5jiHk1yx3aqLxkDn8fRJ5oFUrz1">
              <rect x="0" y="0" width="16" height="13.538" transform="matrix(1.074,0,0,1.074,299.407,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_VWcND1mDMXrzB0L8QRWk2jgT3Tw5nmjm)">
            <text transform="matrix(1.074,0,0,1.074,314.448,55.956)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
          </g>
          <defs>
            <clipPath id="_clipPath_VWcND1mDMXrzB0L8QRWk2jgT3Tw5nmjm">
              <rect x="0" y="0" width="9" height="13.538" transform="matrix(1.074,0,0,1.074,314.448,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_6pZmBOXu3egOAeiOw6pMxjk20mMuBRdf)">
            <text transform="matrix(1.074,0,0,1.074,329.49,55.956)" id="Text" class="hlr hlr-literal-number-hex dark-red" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">#0xFF</text>
          </g>
          <defs>
            <clipPath id="_clipPath_6pZmBOXu3egOAeiOw6pMxjk20mMuBRdf">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.074,0,0,1.074,329.49,45.047)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_g38Qr9XoBYzzJo1NBQ8Zcd5qSJ3R6wu8)">
            <text transform="matrix(1.074,0,0,1.074,8.25,73.146)" id="Text" class="hlr hlr-name-section" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">__text:</text>
          </g>
          <defs>
            <clipPath id="_clipPath_g38Qr9XoBYzzJo1NBQ8Zcd5qSJ3R6wu8">
              <rect x="0" y="0" width="50" height="13.538" transform="matrix(1.074,0,0,1.074,8.25,62.237)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_WsDXNtJhY12q0OgvMh5I521YO9nN8JXL)">
            <text transform="matrix(1.074,0,0,1.074,58.746,73.146)" id="Text" class="hlr hlr-literal-number-address" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">000000010000B00C </text>
          </g>
          <defs>
            <clipPath id="_clipPath_WsDXNtJhY12q0OgvMh5I521YO9nN8JXL">
              <rect x="0" y="0" width="118" height="13.538" transform="matrix(1.074,0,0,1.074,58.746,62.237)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_OSQCp0BGtT2CTknr4cmjazzTulgMVwQy)">
            <text transform="matrix(1.074,0,0,1.074,182.3,73.146)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">B.EQ</text>
          </g>
          <defs>
            <clipPath id="_clipPath_OSQCp0BGtT2CTknr4cmjazzTulgMVwQy">
              <rect x="0" y="0" width="30" height="13.538" transform="matrix(1.074,0,0,1.074,182.3,62.237)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_Uf3iZ79Zloq7tyFhUKTfsxKpXv1HnVCv)">
            <text transform="matrix(1.074,0,0,1.074,298.333,73.146)" id="Text" class="hlr hlr-name-label" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_f</text>
          </g>
          <defs>
            <clipPath id="_clipPath_Uf3iZ79Zloq7tyFhUKTfsxKpXv1HnVCv">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.074,0,0,1.074,298.333,62.237)"/>
            </clipPath>
          </defs>
          <g clip-path="url(#_clipPath_GJgRxeuRXb3lROOT8mVLsE4omqPPal3S)">
            <text transform="matrix(1.074,0,0,1.074,334.862,73.146)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="11px" font-style="normal" font-variant-ligatures="none" stroke="none">inish</text>
          </g>
          <defs>
            <clipPath id="_clipPath_GJgRxeuRXb3lROOT8mVLsE4omqPPal3S">
              <rect x="0" y="0" width="36" height="13.538" transform="matrix(1.074,0,0,1.074,334.862,62.237)"/>
            </clipPath>
          </defs>
        </g>
      </g>
    </g>
    <g id="non_detection_path">
      <path d=" M 52.406 94.63 L 52.406 248.366 L 52.406 491.696" id="path" fill="none" vector-effect="non-scaling-stroke" stroke-width="3" stroke="rgb(0,150,136)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
      <path d=" M 46.344 485.157 L 52.406 497.282 L 58.468 485.157 Z " fill="rgb(0,150,136)" stroke="none"/>
    </g>
    <g id="detection_path">
      <line x1="378.203" y1="440.79" x2="378.203" y2="491.696" id="down" vector-effect="non-scaling-stroke" stroke-width="3" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
      <path d=" M 372.141 483.386 L 378.203 495.51 L 384.265 483.386 Z " fill="rgb(255,0,0)" stroke="none"/>
      <path d=" M 194.942 94.63 L 194.942 125.174 L 378.203 125.174 L 378.203 145.536" id="up" fill="none" vector-effect="non-scaling-stroke" stroke-width="3" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
      <path d=" M 372.141 136.954 L 378.203 149.079 L 384.265 136.954 Z " fill="rgb(255,0,0)" stroke="none"/>
    </g>
    <path d=" M 408.746 49.725 L 408.746 64.906 L 538.047 64.906" id="link" fill="none" vector-effect="non-scaling-stroke" stroke-width="2" stroke-dasharray="0,0" stroke="rgb(253,212,24)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
    <path d=" M 410.868 49.434 C 410.868 50.605 409.917 51.556 408.746 51.556 C 407.576 51.556 406.625 50.605 406.625 49.434 C 406.625 48.264 407.576 47.313 408.746 47.313 C 409.917 47.313 410.868 48.264 410.868 49.434 Z " fill="rgb(253,212,24)" stroke="none"/>
    <path d=" M 538.285 67.027 C 537.114 67.027 536.164 66.077 536.164 64.906 C 536.164 63.735 537.114 62.784 538.285 62.784 C 539.456 62.784 540.406 63.735 540.406 64.906 C 540.406 66.077 539.456 67.027 538.285 67.027 Z " fill="rgb(253,212,24)" stroke="none"/>
    <g id="sub_10000AFC8">
      <path d="M 543.636 3.5 L 702.464 3.5 C 703.588 3.5 704.5 4.412 704.5 5.536 L 704.5 82.914 C 704.5 84.038 703.588 84.95 702.464 84.95 L 543.636 84.95 C 542.512 84.95 541.6 84.038 541.6 82.914 L 541.6 5.536 C 541.6 4.412 542.512 3.5 543.636 3.5 Z" style="stroke:none;fill:#353333;stroke-miterlimit:2;"/>
      <path d="M 543.636 3.5 L 702.464 3.5 C 703.588 3.5 704.5 4.412 704.5 5.536 L 704.5 82.914 C 704.5 84.038 703.588 84.95 702.464 84.95 L 543.636 84.95 C 542.512 84.95 541.6 84.038 541.6 82.914 L 541.6 5.536 C 541.6 4.412 542.512 3.5 543.636 3.5 Z" style="fill:none;stroke:#FDD418;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2;"/>
      <path d=" M 683.638 23.362 C 690.272 28.338 693.819 35.432 693.819 43.725 C 693.819 52.018 690.272 59.111 683.638 64.087" id="transform_path" fill="none" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(253,212,24)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
      <path d=" M 684.063 61.105 L 681.96 65.356 L 686.623 64.488" fill="none" stroke="rgb(253,212,24)" stroke-width="2"/>
      <g clip-path="url(#_clipPath_04Y0yOAxWQFp49v7844c4SI2FXRsO1iV)">
        <text transform="matrix(1.018,0,0,1.018,547.21,74.425)" id="raw_inst" style="font-family:'Fira Code';font-weight:400;font-size:11px;font-style:normal;fill:#ff0000;stroke:none;">0xFF </text>
        <text transform="matrix(1.018,0,0,1.018,581.669,74.425)" id="raw_inst" style="font-family:'Fira Code';font-weight:400;font-size:11px;font-style:normal;fill:#a5a7a9;stroke:none;">0x83 0x00 0xD1</text>
      </g>
      <defs>
        <clipPath id="_clipPath_04Y0yOAxWQFp49v7844c4SI2FXRsO1iV">
          <rect x="0" y="0" width="140" height="13.538" transform="matrix(1.018,0,0,1.018,547.21,64.087)"/>
        </clipPath>
      </defs>
      <g clip-path="url(#_clipPath_Q2BXxaV1DkObSOhmJmyEy1YVuGx2wolb)">
        <text transform="matrix(1.018,0,0,1.018,547.21,23.519)" id="sub_inst" style="font-family:'Fira Code';font-weight:400;font-size:11px;font-style:normal;fill:#ffffff;stroke:none;">SUB  </text>
        <text transform="matrix(1.018,0,0,1.018,581.669,23.519)" id="sub_inst" style="font-family:'Fira Code';font-weight:400;font-size:11px;font-style:normal;fill:#d1f0fc;stroke:none;">SP, SP, </text>
        <text transform="matrix(1.018,0,0,1.018,636.804,23.519)" id="sub_inst" style="font-family:'Fira Code';font-weight:400;font-size:11px;font-style:normal;fill:#68caf1;stroke:none;">#0x20</text>
      </g>
      <defs>
        <clipPath id="_clipPath_Q2BXxaV1DkObSOhmJmyEy1YVuGx2wolb">
          <rect x="0" y="0" width="150" height="16.52" transform="matrix(1.018,0,0,1.018,547.21,13.181)"/>
        </clipPath>
      </defs>
    </g>
  </g>
</svg>



<br /><br />
</center>
<p>To detect if a given function is hooked, the obfuscator loads the <strong>first byte</strong> of the function and compares this
byte with the value <code>0xFF</code>. <code>0xFF</code> might seem &ndash; at first glance &ndash; arbitrary but it&rsquo;s not. Actually, regular functions
start with a prologue that allocates space on stack for saving registers defined by the calling convention and stack variables
required by the function. In AArch64, this allocation can be performed in two ways:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#00f">stp</span> <span style="color:#800">REG</span>, <span style="color:#800">REG</span>, [<span style="color:#800">SP</span>, <span style="color:#666">0xAA</span>]!
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">; or
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#00f">sub</span> <span style="color:#800">SP</span>, <span style="color:#800">SP</span>, <span style="color:#666">0xBB</span>
</span></span><span style="display:flex;"><span><span style="color:#00f">stp</span> <span style="color:#800">REG</span>, <span style="color:#800">REG</span>, [<span style="color:#800">SP</span>, <span style="color:#666">0xCC</span>]
</span></span></code></pre></div><p>These instructions are <strong>not equivalent</strong>, but somehow and with the good offsets, they could lead to the
same result. In the second case, the instruction <code>sub SP, SP, #CST</code> is encoded with the following bytes:</p>
<center>
<div class="d-inline-block main-bg font-size-normal mt-3 py-2 px-3">
<span class="svg-icon mr-2 pe-4">

<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <rect x="0" y="0" width="24" height="24"></rect>
        <path d="M17.2718029,8.68536757 C16.8932864,8.28319382 16.9124644,7.65031935 17.3146382,7.27180288 C17.7168119,6.89328641 18.3496864,6.91246442 18.7282029,7.31463817 L22.7282029,11.5646382 C23.0906029,11.9496882 23.0906029,12.5503176 22.7282029,12.9353676 L18.7282029,17.1853676 C18.3496864,17.5875413 17.7168119,17.6067193 17.3146382,17.2282029 C16.9124644,16.8496864 16.8932864,16.2168119 17.2718029,15.8146382 L20.6267538,12.2500029 L17.2718029,8.68536757 Z M6.72819712,8.6853647 L3.37324625,12.25 L6.72819712,15.8146353 C7.10671359,16.2168091 7.08753558,16.8496835 6.68536183,17.2282 C6.28318808,17.6067165 5.65031361,17.5875384 5.27179713,17.1853647 L1.27179713,12.9353647 C0.909397125,12.5503147 0.909397125,11.9496853 1.27179713,11.5646353 L5.27179713,7.3146353 C5.65031361,6.91246155 6.28318808,6.89328354 6.68536183,7.27180001 C7.08753558,7.65031648 7.10671359,8.28319095 6.72819712,8.6853647 Z" fill="#000000" fill-rule="nonzero"></path>
        <rect fill="#000000" opacity="0.3" transform="translate(12.000000, 12.000000) rotate(-345.000000) translate(-12.000000, -12.000000) " x="11" y="4" width="2" height="16" rx="1"></rect>
    </g>
</svg>

</span>
0xff ** 0x00 0xd1
</div>
<br /><br />
</center>
<p>As we can see, the encoding of this instruction starts with <code>0xFF</code>. If it is not the case, then
either the function starts with a different stack-allocation prologue or potentially starts with a hooking trampoline.
Since the code of the application is compiled through obfuscator&rsquo;s compiler, the compiler is able to distinguish these two cases
and insert the right check for the correct function&rsquo;s prologue.</p>
<p>If the first byte of the instruction of the function does not pass the check, it jumps to the <span class="red-box">red basic block</span>.
The purpose of this basic block is to trigger a user-defined callback that will process the detection according
to the application&rsquo;s design and the developers&rsquo; choices:</p>
<ul>
<li>Printing an error</li>
<li>Crashing the application</li>
<li>Corrupting internal data</li>
<li>&hellip;</li>
</ul>
<p>From the previous figure, we can observe that the detection callback is loaded from <strong>a static variable</strong> located
at <span class="dark-boxed dark-purple">#hook_detect_cbk_ptr</span>. When calling this detection callback,
the obfuscator provides the following information to the callback:</p>
<ol>
<li>A detection code: <span class="fcode dark-orange">0x400</span> for <span class="fcode dark-orange">EVT_CODE_PROLOGUE</span></li>
<li>A <em>corrupted</em> pointer which could be used to crash the application.</li>
</ol>
<p>Let&rsquo;s now take a closer look at the design of the detection callback(s) as a whole.</p>
<h2 id="detection-callbacks">Detection Callbacks</h2>
<p>As explained in the previous section, when the obfuscator detects tampering, it reacts by calling a detection callback
stored in the <strong>static variable</strong> at the address: <span class="dark-boxed dark-blue">0x10109D760</span></p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 625 100" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="450">

<rect x="0" y="0" width="625" height="100" fill="#353333" rx="4" ry="4"
      stroke-width="6" stroke="#6DCFF6" />

    <text x="7" y="20" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">000000010109D758&#160;</tspan><tspan class="hlr hlr-name-variable">off_10109D758</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-function">sub_100ED9F00</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="36"  xml:space="preserve"><tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">000000010109D760&#160;</tspan><tspan class="hlr hlr-name-variable">hook_detect_cbk_ptr</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-keyword-type">DCQ</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-function">hook_detect_cbk</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">;&#160;Hook&#160;Detection&#160;Callback</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="52" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">000000010109D768&#160;</tspan><tspan class="hlr hlr-name-variable">word_10109D768</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCW</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">0xDBE3</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="68" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">000000010109D76A&#160;</tspan><tspan class="hlr hlr-name-variable">byte_10109D76A</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-integer">1</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="84" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-section">__data:</tspan><tspan class="hlr hlr-literal-number-address">000000010109D76B&#160;</tspan><tspan class="hlr hlr-name-variable">byte_10109D76B</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-keyword-type">DCB</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-integer">1</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="100"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>By statically analyzing <span class="dark-boxed dark-yellow">hook_detect_cbk</span>, the implementation seems
to corrupt the pointer provided in the callback&rsquo;s parameters. On the other hand, when running the application we observe a jailbreak detection
message and not a crash of the application.</p>
<p>If we look at the cross-references which read or write at this address, we get this list of instructions:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 525 164" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="450">

<rect x="0" y="0" width="525" height="164" fill="#353333" rx="4" ry="4"
      stroke-width="6" stroke="#6DCFF6" />

    <text x="7" y="20"  xml:space="preserve"><tspan class="hlr hlr-name-instruction">...</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="36" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1D8C</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="52" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1DE4</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="68" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1E3C</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="84" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1E94</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="100" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1EEC</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="116" opacity="0.7" xml:space="preserve"><tspan class="hlr hlr-name-read">R&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+1F44</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">LDR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="132"  xml:space="preserve"><tspan class="hlr hlr-text-whitespace"></tspan></text>
<text x="7" y="148"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-name-function">init_and_check_rasp</tspan><tspan class="hlr hlr-literal-number-offset">+01BC</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="164"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>So actually <strong>only one</strong> instruction &ndash; <span class="dark-boxed dark-gray"><span class="dark-yellow">init_and_check_rasp</span>+01BC</span> &ndash;
is <strong>overwriting</strong> the <em>default</em> detection callback with another function:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 559 116" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="450">

<rect x="0" y="0" width="559" height="116" fill="#353333" rx="4" ry="4"
      stroke-width="6" stroke="#6DCFF6" />

    <text x="7" y="20" opacity="0.6" xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E4C&#160;</tspan><tspan class="hlr hlr-name-instruction">ADRP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-label">#sub_100206C68</tspan><tspan class="hlr hlr-comment-preproc">@PAGE</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="36" opacity="0.6" xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E50&#160;</tspan><tspan class="hlr hlr-name-instruction">LDRB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">W8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-label">#sub_100206C68</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="52"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E54&#160;</tspan><tspan class="hlr hlr-name-instruction">ADRL</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-function">hook_detect_cbk_user_def</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="68"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E5C&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-name-special">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="84" opacity="0.6" xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E60&#160;</tspan><tspan class="hlr hlr-name-instruction">CMP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">W8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0xFF</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="100" opacity="0.6" xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100ED7E64&#160;</tspan><tspan class="hlr hlr-name-instruction">B.EQ</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-label">loc_100ED7EB0</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="116"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>Compared to the default callback: <span class="dark-boxed dark-yellow">hook_detect_cbk</span>,
the overridden function, <span class="dark-boxed dark-yellow">hook_detect_cbk_user_def</span>
does not corrupt a pointer that would make the application crash. Instead, it calls the function
<span class="dark-boxed dark-purple">on_rasp_detection</span> which references all the strings <code>EVT_CODE_TRACING</code>,
<code>EVT_CODE_SYSTEM_LIB</code>, etc, listed in the <a href="#fig-2">figure 2</a>.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-hand-point-right" style="color: #084298" >&#160;</span>
  <code>hook_detect_cbk_user_def</code> is called on a RASP event. That&rsquo;s why this application does not crash.
</div>
<p>By looking at the function <span class="dark-boxed dark-yellow">init_and_check_rasp</span> as a whole,
we can notice that the <span class="dark-boxed dark-light-blue">X23</span> register is also used to initialize
other static variables:</p>
<center>
<figure class="mb-4" id="fig-xref-x23">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 538 180" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="450">

<rect x="0" y="0" width="538" height="180" fill="#353333" rx="4" ry="4"
      stroke-width="6" stroke="#6DCFF6" />

    <text x="7" y="20"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED7E5C</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X20</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#hook_detect_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="36"  xml:space="preserve"><tspan class="hlr hlr-text-whitespace"></tspan></text>
<text x="7" y="52"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED81F0</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X25</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_CODE_TRACING_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="68"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED86A0</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X25</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_CODE_SYMBOL_TABLE_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="84"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED8B48</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X25</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_CODE_SYSTEM_LIB_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="100"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED8C64</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X24</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_ENV_JAILBREAK_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="116"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED8E40</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X24</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_APP_SIGNATURE_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="132"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED91D4</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X24</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_ENV_DEBUGGER_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="148"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED9408</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X24</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_APP_LOADED_LIBRARIES_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="164"  xml:space="preserve"><tspan class="hlr hlr-name-write">W&#160;</tspan><tspan class="hlr hlr-literal-number-address">0x00100ED9694</tspan><tspan class="hlr hlr-error">:</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-instruction">STR</tspan><tspan>&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X23</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X24</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-comment">#EVT_APP_MACHO_cbk_ptr</tspan><tspan class="hlr hlr-comment-preproc">@PAGEOFF</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="180"  xml:space="preserve"></text>

    </g>
</svg>
        

</figure>
<figcaption>Fig 3. <code>X23</code> Writes Instructions</figcaption>
<br /><br />
</center>
<p>These memory writes mean that the callback <span class="dark-boxed dark-yellow">hook_detect_cbk_user_def</span>
is used to initialize other static variables. In particular, these other static variables are likely used
for the other RASP checks.
By looking at the cross-references of these static variables
<span class="dark-boxed dark-purple">#EVT_CODE_TRACING_cbk_ptr</span>, <span class="dark-boxed dark-purple">#EVT_ENV_JAILBREAK_cbk_ptr</span> etc,
we can locate where the other RASP checks are performed and under which conditions they are triggered.</p>
<h3 id="evt_code_system_lib">EVT_CODE_SYSTEM_LIB</h3>
<center>
<figure class="mb-4" id="fig-ixg-code-system-lib">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="0 0 825 600" width="100%" height="100%">
	<g id="bottom">
		<path d="M 223.5 533.98 L 753.15 533.98 C 754.806 533.98 756.15 535.324 756.15 536.98 L 756.15 567.5 C 756.15 569.156 754.806 570.5 753.15 570.5 L 223.5 570.5 C 221.844 570.5 220.5 569.156 220.5 567.5 L 220.5 536.98 C 220.5 535.324 221.844 533.98 223.5 533.98 Z" style="stroke:none;fill:#353333;stroke-miterlimit:10;"/>
		<path d="M 223.5 533.98 L 753.15 533.98 C 754.806 533.98 756.15 535.324 756.15 536.98 L 756.15 567.5 C 756.15 569.156 754.806 570.5 753.15 570.5 L 223.5 570.5 C 221.844 570.5 220.5 569.156 220.5 567.5 L 220.5 536.98 C 220.5 535.324 221.844 533.98 223.5 533.98 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g clip-path="url(#_clipPath_dq06krVQydFmkXzS4RlzigdhrVjcp67D)">
			<text transform="matrix(1.035,0,0,1.035,227.324,553.686)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_libs_ok</text>
		</g>
		<defs>
			<clipPath id="_clipPath_dq06krVQydFmkXzS4RlzigdhrVjcp67D">
				<rect x="0" y="0" width="90" height="16" transform="matrix(1.035,0,0,1.035,227.324,541.268)"/>
			</clipPath>
		</defs>
	</g>
	<g id="middle">
		<path d="M 223.5 180.93 L 753.15 180.93 C 754.806 180.93 756.15 182.274 756.15 183.93 L 756.15 482.28 C 756.15 483.936 754.806 485.28 753.15 485.28 L 223.5 485.28 C 221.844 485.28 220.5 483.936 220.5 482.28 L 220.5 183.93 C 220.5 182.274 221.844 180.93 223.5 180.93 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 223.5 180.93 L 753.15 180.93 C 754.806 180.93 756.15 182.274 756.15 183.93 L 756.15 482.28 C 756.15 483.936 754.806 485.28 753.15 485.28 L 223.5 485.28 C 221.844 485.28 220.5 483.936 220.5 482.28 L 220.5 183.93 C 220.5 182.274 221.844 180.93 223.5 180.93 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_15E1keIkzTeP7tjJ5hi1HsRa9oAjn8eP)">
				<text transform="matrix(1.043,0,0,1.043,232.174,206.627)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_15E1keIkzTeP7tjJ5hi1HsRa9oAjn8eP">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,194.105)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_y7CZRmFOvaVdRCQFrqpLSW3C1priNfDH)">
				<text transform="matrix(1.043,0,0,1.043,365.739,206.627)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X20</text>
			</g>
			<defs>
				<clipPath id="_clipPath_y7CZRmFOvaVdRCQFrqpLSW3C1priNfDH">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,194.105)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_faHzo62pBzXLZt6lcy8ZdpHpRkXtWrRt)">
				<text transform="matrix(1.043,0,0,1.043,390.783,206.627)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_faHzo62pBzXLZt6lcy8ZdpHpRkXtWrRt">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,194.105)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_oeg391BRD6VskxQf03w9Bx0EW8SaExV5)">
				<text transform="matrix(1.043,0,0,1.043,407.478,206.627)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_oeg391BRD6VskxQf03w9Bx0EW8SaExV5">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,407.478,194.105)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_zv8LTIstRQtucRgQrMt1D5TIsO4qRFBf)">
				<text transform="matrix(1.043,0,0,1.043,232.174,225.409)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ADRP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_zv8LTIstRQtucRgQrMt1D5TIsO4qRFBf">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.043,0,0,1.043,232.174,212.888)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_p0jkbVbnslN0LTHpjWlEKe2FMR7oXPGm)">
				<text transform="matrix(1.043,0,0,1.043,365.739,225.409)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_p0jkbVbnslN0LTHpjWlEKe2FMR7oXPGm">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,212.888)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_kNIwv8EKlnCStoHDL7NzdS8sf4gNIyLf)">
				<text transform="matrix(1.043,0,0,1.043,382.435,225.409)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_kNIwv8EKlnCStoHDL7NzdS8sf4gNIyLf">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,212.888)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_wrTWMnnMyy0ofd2TBrzwxZAcrFABhHEj)">
				<text transform="matrix(1.043,0,0,1.043,399.13,225.409)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_CODE_SYSTEM_LIB_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_wrTWMnnMyy0ofd2TBrzwxZAcrFABhHEj">
					<rect x="0" y="0" width="226" height="16" transform="matrix(1.043,0,0,1.043,399.13,212.888)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MM9reXmXxDN1wiYxDjPiYpmVVJDla8Rx)">
				<text transform="matrix(1.043,0,0,1.043,632.87,225.409)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MM9reXmXxDN1wiYxDjPiYpmVVJDla8Rx">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.043,0,0,1.043,632.87,212.888)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ltkqDIOFl04VOCasoogY2uMI2SZqygwe)">
				<text transform="matrix(1.043,0,0,1.043,232.174,244.192)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">LDR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ltkqDIOFl04VOCasoogY2uMI2SZqygwe">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_j79MwsMN5YTea6CoTqAa5CINcr1Nm03x)">
				<text transform="matrix(1.043,0,0,1.043,365.739,244.192)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_j79MwsMN5YTea6CoTqAa5CINcr1Nm03x">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_lvHCg6eAuZVyqx8caylGuvjGfDai90Ea)">
				<text transform="matrix(1.043,0,0,1.043,382.435,244.192)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_lvHCg6eAuZVyqx8caylGuvjGfDai90Ea">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_38027tKLhcfCPxBviRfYojTcz3xpIYHM)">
				<text transform="matrix(1.043,0,0,1.043,399.13,244.192)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_38027tKLhcfCPxBviRfYojTcz3xpIYHM">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,399.13,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_sO4roNyudOIix310jnYTmz0poM8pDje5)">
				<text transform="matrix(1.043,0,0,1.043,407.478,244.192)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_sO4roNyudOIix310jnYTmz0poM8pDje5">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,407.478,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_iH6Nvd2IQJn0OkJkUdB1NLBw2q40nzKH)">
				<text transform="matrix(1.043,0,0,1.043,424.174,244.192)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iH6Nvd2IQJn0OkJkUdB1NLBw2q40nzKH">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,424.174,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ogyCtCnprAu5nStCKHvUBXnJcO1T64uS)">
				<text transform="matrix(1.043,0,0,1.043,432.522,244.192)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_CODE_SYSTEM_LIB_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ogyCtCnprAu5nStCKHvUBXnJcO1T64uS">
					<rect x="0" y="0" width="226" height="16" transform="matrix(1.043,0,0,1.043,432.522,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_QDT7x1zDK32XKHvyQp2Gl7EV0dQFR9zl)">
				<text transform="matrix(1.043,0,0,1.043,666.261,244.192)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGEOFF</text>
			</g>
			<defs>
				<clipPath id="_clipPath_QDT7x1zDK32XKHvyQp2Gl7EV0dQFR9zl">
					<rect x="0" y="0" width="66" height="16" transform="matrix(1.043,0,0,1.043,666.261,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_GwyvH8ZVWfOzKq1cwR2HXNcglUiN0Ok6)">
				<text transform="matrix(1.043,0,0,1.043,733.043,244.192)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_GwyvH8ZVWfOzKq1cwR2HXNcglUiN0Ok6">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,733.043,231.67)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mmjNJOeXc38C3THX4z6YIBo2wElSL6MK)">
				<text transform="matrix(1.043,0,0,1.043,232.174,262.975)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mmjNJOeXc38C3THX4z6YIBo2wElSL6MK">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,250.453)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_fDK1Whbka4zCkKakKJLATpP0hghr3i5e)">
				<text transform="matrix(1.043,0,0,1.043,365.739,262.975)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_fDK1Whbka4zCkKakKJLATpP0hghr3i5e">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,250.453)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_paXIwE65tKvqgt5CJ1oW3j8elmxDjmZI)">
				<text transform="matrix(1.043,0,0,1.043,382.435,262.975)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_paXIwE65tKvqgt5CJ1oW3j8elmxDjmZI">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,250.453)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_JkA2t3AU9jjAmCEJggPrlP54H032B0H8)">
				<text transform="matrix(1.043,0,0,1.043,399.13,262.975)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_JkA2t3AU9jjAmCEJggPrlP54H032B0H8">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,399.13,250.453)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0z8DyxVQ0UQdpyhmgZGxzkLjwfeY0Bgp)">
				<text transform="matrix(1.043,0,0,1.043,232.174,281.757)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0z8DyxVQ0UQdpyhmgZGxzkLjwfeY0Bgp">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7i6RWjtRL09ZZhtIdR4g1fjxehSVTIKY)">
				<text transform="matrix(1.043,0,0,1.043,365.739,281.757)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7i6RWjtRL09ZZhtIdR4g1fjxehSVTIKY">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZRs6bTKzP9tNIxuxUt4Hqq9VEuj2AYoC)">
				<text transform="matrix(1.043,0,0,1.043,390.783,281.757)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZRs6bTKzP9tNIxuxUt4Hqq9VEuj2AYoC">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_5riKD1g5ZUyWcLIBjKdes48k5N7wq1Nv)">
				<text transform="matrix(1.043,0,0,1.043,407.478,281.757)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_5riKD1g5ZUyWcLIBjKdes48k5N7wq1Nv">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,407.478,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nJjvUTvVR6ZxkVA43KFd6oFXjPQG4DLy)">
				<text transform="matrix(1.043,0,0,1.043,424.174,281.757)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nJjvUTvVR6ZxkVA43KFd6oFXjPQG4DLy">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,424.174,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_HVXLVEVzWK1OQpwucdnd1mtk8QRT1Bk6)">
				<text transform="matrix(1.043,0,0,1.043,440.87,281.757)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_HVXLVEVzWK1OQpwucdnd1mtk8QRT1Bk6">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.043,0,0,1.043,440.87,269.235)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cpixaoHrIwuUGhfWbeS67Mv6YBu8bAFJ)">
				<text transform="matrix(1.043,0,0,1.043,232.174,300.54)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cpixaoHrIwuUGhfWbeS67Mv6YBu8bAFJ">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,288.018)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_pe5W1cEu8BHsRAL4o0P7ukcDNFGyKBlO)">
				<text transform="matrix(1.043,0,0,1.043,365.739,300.54)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_pe5W1cEu8BHsRAL4o0P7ukcDNFGyKBlO">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,288.018)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Js46JlqT3PNO2m7Oq3P9ySZUkmZot3Pj)">
				<text transform="matrix(1.043,0,0,1.043,382.435,300.54)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Js46JlqT3PNO2m7Oq3P9ySZUkmZot3Pj">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,288.018)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cdszpEXIlsc28AtTgQ8RxXX0zhC212nV)">
				<text transform="matrix(1.043,0,0,1.043,399.13,300.54)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cdszpEXIlsc28AtTgQ8RxXX0zhC212nV">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,399.13,288.018)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_03PeJ5rlC5J607xgaqoFfOJ6xSpsEQSm)">
				<text transform="matrix(1.043,0,0,1.043,232.174,319.322)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_03PeJ5rlC5J607xgaqoFfOJ6xSpsEQSm">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.043,0,0,1.043,232.174,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_weGUedJy5m3q3wfehDS0omISwxxSOYM0)">
				<text transform="matrix(1.043,0,0,1.043,365.739,319.322)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X28</text>
			</g>
			<defs>
				<clipPath id="_clipPath_weGUedJy5m3q3wfehDS0omISwxxSOYM0">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_8BZXSTx3HL4PIex5L539hH8PWjWQsewK)">
				<text transform="matrix(1.043,0,0,1.043,390.783,319.322)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_8BZXSTx3HL4PIex5L539hH8PWjWQsewK">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_GuUQIxo1hWdOPPByBcpu8jLkmOCBHvm9)">
				<text transform="matrix(1.043,0,0,1.043,407.478,319.322)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_GuUQIxo1hWdOPPByBcpu8jLkmOCBHvm9">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,407.478,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_NCckl3ALsoCHkbDueHMEDTbEdD4jAotW)">
				<text transform="matrix(1.043,0,0,1.043,415.826,319.322)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_NCckl3ALsoCHkbDueHMEDTbEdD4jAotW">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,415.826,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_1grj9yVA8o21bEOfxhCsOBqdScyIuGBi)">
				<text transform="matrix(1.043,0,0,1.043,432.522,319.322)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1grj9yVA8o21bEOfxhCsOBqdScyIuGBi">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,432.522,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_YjygtnmL43HuBv3iRv12wkZGfRr6iHsl)">
				<text transform="matrix(1.043,0,0,1.043,440.87,319.322)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_YjygtnmL43HuBv3iRv12wkZGfRr6iHsl">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.043,0,0,1.043,440.87,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_UeRyyOvLTQo0e5CrMYvAwgfepoJqNVAU)">
				<text transform="matrix(1.043,0,0,1.043,490.957,319.322)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_UeRyyOvLTQo0e5CrMYvAwgfepoJqNVAU">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,490.957,306.801)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0XQsq1rlXuVcvv1a7B1OaNJtC34GhpUq)">
				<text transform="matrix(1.043,0,0,1.043,232.174,338.105)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0XQsq1rlXuVcvv1a7B1OaNJtC34GhpUq">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,325.583)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_8xPCVFxM0fFkKgUBlp2pHN9znSwiO6LT)">
				<text transform="matrix(1.043,0,0,1.043,365.739,338.105)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_8xPCVFxM0fFkKgUBlp2pHN9znSwiO6LT">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,325.583)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_NSfe3yPdDhnL3p3u42gD7PE1j5LT0W9e)">
				<text transform="matrix(1.043,0,0,1.043,382.435,338.105)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_NSfe3yPdDhnL3p3u42gD7PE1j5LT0W9e">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,325.583)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Vrm3pANefHUuf9wQDSKtmUqxo22su0zb)">
				<text transform="matrix(1.043,0,0,1.043,399.13,338.105)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Vrm3pANefHUuf9wQDSKtmUqxo22su0zb">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,399.13,325.583)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_l8Rx1IIP6xt4pXy04DlCC1ROaTT25Jci)">
				<text transform="matrix(1.043,0,0,1.043,232.174,356.888)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_l8Rx1IIP6xt4pXy04DlCC1ROaTT25Jci">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_VMQ9mG8hMN2dilsso4m14d3uIGiWG6wW)">
				<text transform="matrix(1.043,0,0,1.043,365.739,356.888)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_VMQ9mG8hMN2dilsso4m14d3uIGiWG6wW">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_r39kDywkaePqKwBWCUHCI2i4qG625UIg)">
				<text transform="matrix(1.043,0,0,1.043,382.435,356.888)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_r39kDywkaePqKwBWCUHCI2i4qG625UIg">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_zTZ4ce78TbYO45zERsIYDHiRoUhJ6hCw)">
				<text transform="matrix(1.043,0,0,1.043,399.13,356.888)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_zTZ4ce78TbYO45zERsIYDHiRoUhJ6hCw">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,399.13,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_OuzBo1oFTYnaPs5vxLGsWRmpZwxBhG7l)">
				<text transform="matrix(1.043,0,0,1.043,415.826,356.888)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_OuzBo1oFTYnaPs5vxLGsWRmpZwxBhG7l">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,415.826,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ANrULFBFFuQlpiQdPXBOPHWtSc9ZEGv4)">
				<text transform="matrix(1.043,0,0,1.043,432.522,356.888)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ANrULFBFFuQlpiQdPXBOPHWtSc9ZEGv4">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.043,0,0,1.043,432.522,344.366)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ly8Y2gDHLpRt4GhkLySSN9QtYFINQIGL)">
				<text transform="matrix(1.043,0,0,1.043,232.174,375.67)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ly8Y2gDHLpRt4GhkLySSN9QtYFINQIGL">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,363.148)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MSPvk3gKdJtYTKkLvoTSAgBR4Vkgdkej)">
				<text transform="matrix(1.043,0,0,1.043,365.739,375.67)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MSPvk3gKdJtYTKkLvoTSAgBR4Vkgdkej">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,363.148)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ccFqwRyOxNO0eoq8cWijGxzJvSa01qPl)">
				<text transform="matrix(1.043,0,0,1.043,382.435,375.67)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ccFqwRyOxNO0eoq8cWijGxzJvSa01qPl">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,363.148)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_emg7AZniw7WMcJD8iAwaTMLFj2koOZ9Z)">
				<text transform="matrix(1.043,0,0,1.043,399.13,375.67)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_emg7AZniw7WMcJD8iAwaTMLFj2koOZ9Z">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,399.13,363.148)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_d5NtZyLNhLpwwklVVoATi8xMx6iELkQH)">
				<text transform="matrix(1.043,0,0,1.043,232.174,394.453)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_d5NtZyLNhLpwwklVVoATi8xMx6iELkQH">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,381.931)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_bK8zWKkVJgkfFFzcfDfNtubF4OyTMyJ3)">
				<text transform="matrix(1.043,0,0,1.043,365.739,394.453)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_bK8zWKkVJgkfFFzcfDfNtubF4OyTMyJ3">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,381.931)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AhekOBqVcSEkMALPSWyECER203Q3Mgix)">
				<text transform="matrix(1.043,0,0,1.043,390.783,394.453)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AhekOBqVcSEkMALPSWyECER203Q3Mgix">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,381.931)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_X8iBEprIQ1GCYl0EmmXwG1Mps5iUXAkl)">
				<text transform="matrix(1.043,0,0,1.043,407.478,394.453)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x1000</text>
			</g>
			<defs>
				<clipPath id="_clipPath_X8iBEprIQ1GCYl0EmmXwG1Mps5iUXAkl">
					<rect x="0" y="0" width="58" height="16" transform="matrix(1.043,0,0,1.043,407.478,381.931)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0hOGvBChY3zjdvdomfFiOAmfqGoLa2JI)">
				<text transform="matrix(1.043,0,0,1.043,474.261,394.453)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">---&gt; EVT_CODE_SYSTEM_LIB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0hOGvBChY3zjdvdomfFiOAmfqGoLa2JI">
					<rect x="0" y="0" width="194" height="16" transform="matrix(1.043,0,0,1.043,474.261,381.931)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_UM3iTI2e8etLdIV0ydgYRR2nfGw1PIMO)">
				<text transform="matrix(1.043,0,0,1.043,232.174,413.235)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_UM3iTI2e8etLdIV0ydgYRR2nfGw1PIMO">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.043,0,0,1.043,232.174,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_uwlZQU5mgaxXLQtWUE3y9spEfZcjubwd)">
				<text transform="matrix(1.043,0,0,1.043,365.739,413.235)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_uwlZQU5mgaxXLQtWUE3y9spEfZcjubwd">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_1dAH7rAxNh7SgzfQJNZV7MbqK58QLOzR)">
				<text transform="matrix(1.043,0,0,1.043,390.783,413.235)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1dAH7rAxNh7SgzfQJNZV7MbqK58QLOzR">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_yaqMY6yXND6RMtMsD4ZlhTdRiEH29Mnd)">
				<text transform="matrix(1.043,0,0,1.043,407.478,413.235)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_yaqMY6yXND6RMtMsD4ZlhTdRiEH29Mnd">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,407.478,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_n1ecMum2kCcRtaHMzmIRnMU6QZotEbzv)">
				<text transform="matrix(1.043,0,0,1.043,415.826,413.235)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_n1ecMum2kCcRtaHMzmIRnMU6QZotEbzv">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,415.826,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AN6ruS4KQpbGhfzAq6xK4OtJTuXjmItz)">
				<text transform="matrix(1.043,0,0,1.043,432.522,413.235)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AN6ruS4KQpbGhfzAq6xK4OtJTuXjmItz">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,432.522,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MiK5k0vwOJ9fBHZeLQBilZIyqTUOulpx)">
				<text transform="matrix(1.043,0,0,1.043,440.87,413.235)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MiK5k0vwOJ9fBHZeLQBilZIyqTUOulpx">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.043,0,0,1.043,440.87,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_2IetjhuWfK5PIjEstaI8Mjftgdj4XGW3)">
				<text transform="matrix(1.043,0,0,1.043,490.957,413.235)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_2IetjhuWfK5PIjEstaI8Mjftgdj4XGW3">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,490.957,400.714)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_HwUgDPbGoHml0xIGAxg1cBh9IzIwszsd)">
				<text transform="matrix(1.043,0,0,1.043,232.174,432.018)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_HwUgDPbGoHml0xIGAxg1cBh9IzIwszsd">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.043,0,0,1.043,232.174,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_xbkV0GNRfEwd7JnrpOlO0nOLxZ22Dkda)">
				<text transform="matrix(1.043,0,0,1.043,365.739,432.018)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_xbkV0GNRfEwd7JnrpOlO0nOLxZ22Dkda">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,365.739,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_fsQvYMcajOuUcNqV9WDSZFfmJgf79Q0a)">
				<text transform="matrix(1.043,0,0,1.043,390.783,432.018)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_fsQvYMcajOuUcNqV9WDSZFfmJgf79Q0a">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,390.783,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_8JKyGZKUjNsKXEv1VA90bZh7pa2Bsif5)">
				<text transform="matrix(1.043,0,0,1.043,407.478,432.018)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_8JKyGZKUjNsKXEv1VA90bZh7pa2Bsif5">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,407.478,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Q4V2L95CtcTxgqFXIUDtHxHMBRqgaPrO)">
				<text transform="matrix(1.043,0,0,1.043,415.826,432.018)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Q4V2L95CtcTxgqFXIUDtHxHMBRqgaPrO">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,415.826,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ogtKqq2F9jlveXJG10df01PCdY0nHrvw)">
				<text transform="matrix(1.043,0,0,1.043,432.522,432.018)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ogtKqq2F9jlveXJG10df01PCdY0nHrvw">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,432.522,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ETHgD9zfreoxFWrxpIy8wP98bqXCkVVB)">
				<text transform="matrix(1.043,0,0,1.043,440.87,432.018)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ETHgD9zfreoxFWrxpIy8wP98bqXCkVVB">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,440.87,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_iT8rcSOTzWbdckbhDZtF6Oo33d13uVNK)">
				<text transform="matrix(1.043,0,0,1.043,465.913,432.018)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iT8rcSOTzWbdckbhDZtF6Oo33d13uVNK">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,465.913,419.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_LPdXbNYL1Yj4scZIp5HC5Z3xNRdyvMS6)">
				<text transform="matrix(1.043,0,0,1.043,232.174,450.801)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">BLR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_LPdXbNYL1Yj4scZIp5HC5Z3xNRdyvMS6">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,438.279)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_I4eoI0td4QXnBFXScdrGYMXlCKrjiNgF)">
				<text transform="matrix(1.043,0,0,1.043,365.739,450.801)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_I4eoI0td4QXnBFXScdrGYMXlCKrjiNgF">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,438.279)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mOapR1EQ5W0d8BWAC8iB5d4Y9PBuKiF4)">
				<text transform="matrix(1.043,0,0,1.043,390.783,450.801)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">On suspicious system lib detected</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mOapR1EQ5W0d8BWAC8iB5d4Y9PBuKiF4">
					<rect x="0" y="0" width="266" height="16" transform="matrix(1.043,0,0,1.043,390.783,438.279)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_qwyPQd3IW659PMm7Psv2pN5GAjEXQdwy)">
				<text transform="matrix(1.043,0,0,1.043,232.174,469.583)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_qwyPQd3IW659PMm7Psv2pN5GAjEXQdwy">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,232.174,457.062)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eKSixvCHH7pFnBKPJO3gbxJaMukz62kZ)">
				<text transform="matrix(1.043,0,0,1.043,365.739,469.583)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eKSixvCHH7pFnBKPJO3gbxJaMukz62kZ">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.043,0,0,1.043,365.739,457.062)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_4Wvr0IVS9qdpZ2lZZM6S1T0SgiqYLU9l)">
				<text transform="matrix(1.043,0,0,1.043,382.435,469.583)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_4Wvr0IVS9qdpZ2lZZM6S1T0SgiqYLU9l">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.043,0,0,1.043,382.435,457.062)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eCnEku0BzHlgBFu4LEXScEmwT2fl9JGL)">
				<text transform="matrix(1.043,0,0,1.043,399.13,469.583)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X20</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eCnEku0BzHlgBFu4LEXScEmwT2fl9JGL">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.043,0,0,1.043,399.13,457.062)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="top">
		<path d="M 223.5 22.67 L 753.15 22.67 C 754.806 22.67 756.15 24.014 756.15 25.67 L 756.15 129.24 C 756.15 130.896 754.806 132.24 753.15 132.24 L 223.5 132.24 C 221.844 132.24 220.5 130.896 220.5 129.24 L 220.5 25.67 C 220.5 24.014 221.844 22.67 223.5 22.67 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 223.5 22.67 L 753.15 22.67 C 754.806 22.67 756.15 24.014 756.15 25.67 L 756.15 129.24 C 756.15 130.896 754.806 132.24 753.15 132.24 L 223.5 132.24 C 221.844 132.24 220.5 130.896 220.5 129.24 L 220.5 25.67 C 220.5 24.014 221.844 22.67 223.5 22.67 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_1Z97lEmkugGNw4muinYEusriPefhfQCf)">
				<text transform="matrix(1.035,0,0,1.035,232.174,40.912)" id="Text" class="hlr hlr-name-label" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_100EC946C</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1Z97lEmkugGNw4muinYEusriPefhfQCf">
					<rect x="0" y="0" width="106" height="16" transform="matrix(1.035,0,0,1.035,232.174,28.493)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AwxFBDzmlOdhMR4tjcIr2Ppx5P3Rfbe4)">
				<text transform="matrix(1.035,0,0,1.035,232.174,59.541)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ADR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AwxFBDzmlOdhMR4tjcIr2Ppx5P3Rfbe4">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.035,0,0,1.035,232.174,47.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_GmeIo3bIp9p8YQyN9jtDIUm89W8oIgnT)">
				<text transform="matrix(1.035,0,0,1.035,364.642,59.541)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_GmeIo3bIp9p8YQyN9jtDIUm89W8oIgnT">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.035,0,0,1.035,364.642,47.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_IrMCXeYZnSfZYqrsfau4oMAgA0gPJGMN)">
				<text transform="matrix(1.035,0,0,1.035,381.201,59.541)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_IrMCXeYZnSfZYqrsfau4oMAgA0gPJGMN">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.035,0,0,1.035,381.201,47.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_me9B8wkiRORiAInsQUM6fNoxuefVC2md)">
				<text transform="matrix(1.035,0,0,1.035,397.759,59.541)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">check_region_cbk</text>
			</g>
			<defs>
				<clipPath id="_clipPath_me9B8wkiRORiAInsQUM6fNoxuefVC2md">
					<rect x="0" y="0" width="130" height="16" transform="matrix(1.035,0,0,1.035,397.759,47.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9TP3Qab1ilW1aQq0gHu0QVj3XsdrdYDM)">
				<text transform="matrix(1.035,0,0,1.035,232.174,78.169)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">BL</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9TP3Qab1ilW1aQq0gHu0QVj3XsdrdYDM">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.035,0,0,1.035,232.174,65.75)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_GoHIxyrGoY3BeMDjrEQnMHxfNpR63SoI)">
				<text transform="matrix(1.035,0,0,1.035,364.642,78.169)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">iterate_system_region</text>
			</g>
			<defs>
				<clipPath id="_clipPath_GoHIxyrGoY3BeMDjrEQnMHxfNpR63SoI">
					<rect x="0" y="0" width="226" height="16" transform="matrix(1.035,0,0,1.035,364.642,65.75)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9CSJorTkFnoUsuxH9rrroSS1XlJ5bztO)">
				<text transform="matrix(1.035,0,0,1.035,232.174,96.797)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ORR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9CSJorTkFnoUsuxH9rrroSS1XlJ5bztO">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.035,0,0,1.035,232.174,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_KwWCj2fUCGdgJgtOG9vpmX14Z04RALM1)">
				<text transform="matrix(1.035,0,0,1.035,364.642,96.797)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_KwWCj2fUCGdgJgtOG9vpmX14Z04RALM1">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.035,0,0,1.035,364.642,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_8eGVCqqIE9hpV6VfQLyTcEFEIkSdm9FQ)">
				<text transform="matrix(1.035,0,0,1.035,381.201,96.797)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_8eGVCqqIE9hpV6VfQLyTcEFEIkSdm9FQ">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.035,0,0,1.035,381.201,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tz7C9iur0kizhNtwCtHueoi6YWYPUooP)">
				<text transform="matrix(1.035,0,0,1.035,397.759,96.797)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tz7C9iur0kizhNtwCtHueoi6YWYPUooP">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.035,0,0,1.035,397.759,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_iGLmCGFcZ6ozqWqzYRCx1jwHiaRjhApK)">
				<text transform="matrix(1.035,0,0,1.035,414.318,96.797)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iGLmCGFcZ6ozqWqzYRCx1jwHiaRjhApK">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.035,0,0,1.035,414.318,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Gt3VF4gw4XNEe4Y64KKwyfX377onxaOp)">
				<text transform="matrix(1.035,0,0,1.035,430.876,96.797)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W20</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Gt3VF4gw4XNEe4Y64KKwyfX377onxaOp">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.035,0,0,1.035,430.876,84.378)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_FHBpkO6H6R7l5Gb7kjvVgTjDCfSMdADi)">
				<text transform="matrix(1.035,0,0,1.035,232.174,115.426)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">CBZ</text>
			</g>
			<defs>
				<clipPath id="_clipPath_FHBpkO6H6R7l5Gb7kjvVgTjDCfSMdADi">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.035,0,0,1.035,232.174,103.007)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_z5Zqges4EDpWpJqlirRr8r7MH7QUUopT)">
				<text transform="matrix(1.035,0,0,1.035,364.642,115.426)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_z5Zqges4EDpWpJqlirRr8r7MH7QUUopT">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.035,0,0,1.035,364.642,103.007)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_U9cjEg9KeK8V5tqwUSOBwZC72thzHwjN)">
				<text transform="matrix(1.035,0,0,1.035,381.201,115.426)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_U9cjEg9KeK8V5tqwUSOBwZC72thzHwjN">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.035,0,0,1.035,381.201,103.007)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7Zmfh2ocRJN6eoM6X8A6oENuvOAaqPwu)">
				<text transform="matrix(1.035,0,0,1.035,397.759,115.426)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_libs_ok</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7Zmfh2ocRJN6eoM6X8A6oENuvOAaqPwu">
					<rect x="0" y="0" width="90" height="16" transform="matrix(1.035,0,0,1.035,397.759,103.007)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="skip_path">
		<path d=" M 414.783 143.913 L 414.783 156.087 L 780 156.087 L 780 509.13 L 426.957 509.13 L 426.957 521.304" id="Path" fill="none" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(0,150,136)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 422.007 520.342 L 426.957 530.242 L 431.906 520.342 Z " fill="rgb(0,150,136)" stroke="none"/>
	</g>
	<g id="detec_path">
		<line x1="366.087" y1="143.913" x2="366.087" y2="168.261" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 167.299 L 366.087 177.198 L 371.037 167.299 Z " fill="rgb(255,0,0)" stroke="none"/>
		<line x1="366.087" y1="496.957" x2="366.087" y2="521.304" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 520.342 L 366.087 530.242 L 371.037 520.342 Z " fill="rgb(255,0,0)" stroke="none"/>
	</g>
	<g id="libs">
		<line x1="20" y1="22.174" x2="20" y2="570" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(8,35,97)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<g id="E">
			<g clip-path="url(#_clipPath_1OhYZLfzBxj3vSUlkicrOdTd0pKzUzQT)">
				<text transform="matrix(1,0,0,1,30,523.692)" id="libAWDSupport" style="font-family:'Fira Code';font-weight:400;font-size:12px;font-style:normal;fill:#082361;stroke:none;">ios_module_security</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1OhYZLfzBxj3vSUlkicrOdTd0pKzUzQT">
					<rect x="0" y="0" width="180" height="20" transform="matrix(1,0,0,1,30,510)"/>
				</clipPath>
			</defs>
			<circle vector-effect="non-scaling-stroke" cx="20" cy="520.4347826086951" r="6.521739130434952" id="Ellipse" fill="rgb(109,207,246)"/>
		</g>
		<g id="D">
			<g clip-path="url(#_clipPath_iS6v1rXejIpicA65NVoHLvs7OdUjp0cN)">
				<text transform="matrix(1,0,0,1,30,411.192)" id="libAWDSupport" style="font-family:'Fira Code';font-weight:400;font-size:12px;font-style:normal;fill:#082361;stroke:none;">CoreFoundation</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iS6v1rXejIpicA65NVoHLvs7OdUjp0cN">
					<rect x="0" y="0" width="180" height="20" transform="matrix(1,0,0,1,30,397.5)"/>
				</clipPath>
			</defs>
			<circle vector-effect="non-scaling-stroke" cx="20" cy="407.9347826086951" r="6.521739130434952" id="Ellipse" fill="rgb(109,207,246)"/>
		</g>
		<g id="C">
			<g clip-path="url(#_clipPath_Y9dHAtDr8jmWuewKf74dBtA0Gy2Toqym)">
				<text transform="matrix(1,0,0,1,30,298.692)" id="libAWDSupport" style="font-family:'Fira Code';font-weight:400;font-size:12px;font-style:normal;fill:#082361;stroke:none;">NDIWrapper</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Y9dHAtDr8jmWuewKf74dBtA0Gy2Toqym">
					<rect x="0" y="0" width="180" height="20" transform="matrix(1,0,0,1,30,285)"/>
				</clipPath>
			</defs>
			<circle vector-effect="non-scaling-stroke" cx="20" cy="295.4347826086951" r="6.521739130434952" id="Ellipse" fill="rgb(109,207,246)"/>
		</g>
		<g id="B">
			<g clip-path="url(#_clipPath_CpP2xGTKW31KbnQSsIhusI6o4oXQWEZN)">
				<text transform="matrix(1,0,0,1,30,186.192)" id="libAWDSupport" style="font-family:'Fira Code';font-weight:400;font-size:12px;font-style:normal;fill:#082361;stroke:none;">libswiftDispatch.dylib</text>
			</g>
			<defs>
				<clipPath id="_clipPath_CpP2xGTKW31KbnQSsIhusI6o4oXQWEZN">
					<rect x="0" y="0" width="180" height="20" transform="matrix(1,0,0,1,30,172.5)"/>
				</clipPath>
			</defs>
			<circle vector-effect="non-scaling-stroke" cx="20" cy="182.93478260869512" r="6.521739130434952" id="Ellipse" fill="rgb(109,207,246)"/>
		</g>
		<g id="A">
			<g clip-path="url(#_clipPath_JJAtMXw5va6dajV5sMPNyjHNWAJsQOQu)">
				<text transform="matrix(1,0,0,1,30,73.692)" id="libAWDSupport" style="font-family:'Fira Code';font-weight:400;font-size:12px;font-style:normal;fill:#082361;stroke:none;">libAWDSupport.dylib</text>
			</g>
			<defs>
				<clipPath id="_clipPath_JJAtMXw5va6dajV5sMPNyjHNWAJsQOQu">
					<rect x="0" y="0" width="180" height="20" transform="matrix(1,0,0,1,30,60)"/>
				</clipPath>
			</defs>
			<circle vector-effect="non-scaling-stroke" cx="20" cy="70.43478260869514" r="6.521739130434952" id="Ellipse" fill="rgb(109,207,246)"/>
		</g>
	</g>
</svg>



</figure>
<figcaption></figcaption>
</center>
<h3 id="evt_env_debugger">EVT_ENV_DEBUGGER</h3>
<center>
<figure class="mb-4" id="fig-ixg-env-debugger">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="0 0 825 600" width="100%" height="100%">
	<g id="bottom">
		<path d="M 223.5 533.98 L 753.15 533.98 C 754.806 533.98 756.15 535.324 756.15 536.98 L 756.15 567.5 C 756.15 569.156 754.806 570.5 753.15 570.5 L 223.5 570.5 C 221.844 570.5 220.5 569.156 220.5 567.5 L 220.5 536.98 C 220.5 535.324 221.844 533.98 223.5 533.98 Z" style="stroke:none;fill:#353333;stroke-miterlimit:10;"/>
		<path d="M 223.5 533.98 L 753.15 533.98 C 754.806 533.98 756.15 535.324 756.15 536.98 L 756.15 567.5 C 756.15 569.156 754.806 570.5 753.15 570.5 L 223.5 570.5 C 221.844 570.5 220.5 569.156 220.5 567.5 L 220.5 536.98 C 220.5 535.324 221.844 533.98 223.5 533.98 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g clip-path="url(#_clipPath_BqMl16JMkfhKGyHLNCdhPsTsLO7nI28C)">
			<text transform="matrix(1.029,0,0,1.029,228.157,556.101)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_not_debugged</text>
		</g>
		<defs>
			<clipPath id="_clipPath_BqMl16JMkfhKGyHLNCdhPsTsLO7nI28C">
				<rect x="0" y="0" width="130" height="16" transform="matrix(1.029,0,0,1.029,228.157,543.758)"/>
			</clipPath>
		</defs>
	</g>
	<g id="middle">
		<path d="M 223.5 180.93 L 753.15 180.93 C 754.806 180.93 756.15 182.274 756.15 183.93 L 756.15 482.28 C 756.15 483.936 754.806 485.28 753.15 485.28 L 223.5 485.28 C 221.844 485.28 220.5 483.936 220.5 482.28 L 220.5 183.93 C 220.5 182.274 221.844 180.93 223.5 180.93 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 223.5 180.93 L 753.15 180.93 C 754.806 180.93 756.15 182.274 756.15 183.93 L 756.15 482.28 C 756.15 483.936 754.806 485.28 753.15 485.28 L 223.5 485.28 C 221.844 485.28 220.5 483.936 220.5 482.28 L 220.5 183.93 C 220.5 182.274 221.844 180.93 223.5 180.93 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_11B62wYN4pKyKTJfUAgH3mA2BYpVW92p)">
				<text transform="matrix(1.029,0,0,1.029,228.157,197.859)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_11B62wYN4pKyKTJfUAgH3mA2BYpVW92p">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,185.515)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_4YjFqQjQKWFvhfYrD0bkP9CpaP2KFv0k)">
				<text transform="matrix(1.029,0,0,1.029,359.821,197.859)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X21</text>
			</g>
			<defs>
				<clipPath id="_clipPath_4YjFqQjQKWFvhfYrD0bkP9CpaP2KFv0k">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,185.515)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_8jUNTRtvzePjAHMqoaVKI9O2itTlNyNl)">
				<text transform="matrix(1.029,0,0,1.029,384.508,197.859)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_8jUNTRtvzePjAHMqoaVKI9O2itTlNyNl">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,185.515)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Q14BaD3jgehof58yQkMRE8HXNvjUACCD)">
				<text transform="matrix(1.029,0,0,1.029,400.966,197.859)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Q14BaD3jgehof58yQkMRE8HXNvjUACCD">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,185.515)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_YSn3OWT0GLU9cU9GxHhgoUnhgnA2NMFO)">
				<text transform="matrix(1.029,0,0,1.029,228.157,216.374)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_YSn3OWT0GLU9cU9GxHhgoUnhgnA2NMFO">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,204.031)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_xiLv3mdghYqrjLwq4NsT4efWeLBbONQH)">
				<text transform="matrix(1.029,0,0,1.029,359.821,216.374)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_xiLv3mdghYqrjLwq4NsT4efWeLBbONQH">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,204.031)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mYgj5EGV5YzoSxtXDzgObHILSSwSqFi3)">
				<text transform="matrix(1.029,0,0,1.029,376.279,216.374)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mYgj5EGV5YzoSxtXDzgObHILSSwSqFi3">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,204.031)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AJv7aO2gNOeakknNBS1s8L0pk9hIGHGx)">
				<text transform="matrix(1.029,0,0,1.029,392.737,216.374)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AJv7aO2gNOeakknNBS1s8L0pk9hIGHGx">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,392.737,204.031)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_U2VX0ldJVt6rrRWoAvndGCONtGDUS3aq)">
				<text transform="matrix(1.029,0,0,1.029,228.157,234.889)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_U2VX0ldJVt6rrRWoAvndGCONtGDUS3aq">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_oqLIaKuyrV3vx8Kiw3n4xtjw2PSzgxgA)">
				<text transform="matrix(1.029,0,0,1.029,359.821,234.889)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_oqLIaKuyrV3vx8Kiw3n4xtjw2PSzgxgA">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ACjeaELynV1OXOLVcpJbUsSlC8XsbuEx)">
				<text transform="matrix(1.029,0,0,1.029,376.279,234.889)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ACjeaELynV1OXOLVcpJbUsSlC8XsbuEx">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ypkK53VgaXgYC2IWFpnNPflFU3FUyIj7)">
				<text transform="matrix(1.029,0,0,1.029,392.737,234.889)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ypkK53VgaXgYC2IWFpnNPflFU3FUyIj7">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,392.737,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_kK0j5g8wHMYC0aAuvMIZpY5OP4iYRvOP)">
				<text transform="matrix(1.029,0,0,1.029,409.195,234.889)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_kK0j5g8wHMYC0aAuvMIZpY5OP4iYRvOP">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,409.195,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_M0s1PelsN7lCivr5tFvE3IryV78kPmHa)">
				<text transform="matrix(1.029,0,0,1.029,425.652,234.889)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_M0s1PelsN7lCivr5tFvE3IryV78kPmHa">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,425.652,222.546)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MzTjcik5C0SuPoLy8WIubL6hHXc7OFr2)">
				<text transform="matrix(1.029,0,0,1.029,228.157,253.405)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MzTjcik5C0SuPoLy8WIubL6hHXc7OFr2">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,241.061)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_veq9c6FCYUDZQIQHTrYpZU8Ou6o2vWbX)">
				<text transform="matrix(1.029,0,0,1.029,359.821,253.405)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_veq9c6FCYUDZQIQHTrYpZU8Ou6o2vWbX">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,241.061)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eig7Wkhk6kHqlQO9oSpTOw9YZIdlpFlh)">
				<text transform="matrix(1.029,0,0,1.029,376.279,253.405)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eig7Wkhk6kHqlQO9oSpTOw9YZIdlpFlh">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,241.061)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_COFJiiCNEAb84LuNbQUXxxmsqPqF4qWv)">
				<text transform="matrix(1.029,0,0,1.029,392.737,253.405)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_COFJiiCNEAb84LuNbQUXxxmsqPqF4qWv">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,392.737,241.061)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_weZfQ3Oz46QfO37xiWRvJdjaAHm5GxrK)">
				<text transform="matrix(1.029,0,0,1.029,228.157,271.92)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_weZfQ3Oz46QfO37xiWRvJdjaAHm5GxrK">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,259.576)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_TEWJO5ePTZv4Mo3isaeOBioSKiOD6ZXw)">
				<text transform="matrix(1.029,0,0,1.029,359.821,271.92)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_TEWJO5ePTZv4Mo3isaeOBioSKiOD6ZXw">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,259.576)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_i2XSqt3ABP0SFBTdQ74wR8BMh0C0k9V1)">
				<text transform="matrix(1.029,0,0,1.029,384.508,271.92)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_i2XSqt3ABP0SFBTdQ74wR8BMh0C0k9V1">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,259.576)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_O08rmf6Gp91dWPY8FFkQROqZfadYQX7R)">
				<text transform="matrix(1.029,0,0,1.029,400.966,271.92)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_O08rmf6Gp91dWPY8FFkQROqZfadYQX7R">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,259.576)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_xCwD4xsOSNCnjQWcPdJmlBpWCkcPKlSn)">
				<text transform="matrix(1.029,0,0,1.029,228.157,290.435)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_xCwD4xsOSNCnjQWcPdJmlBpWCkcPKlSn">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_VJ2r2lwEUEjnrOVL3abtynOaWAeLIOpS)">
				<text transform="matrix(1.029,0,0,1.029,359.821,290.435)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_VJ2r2lwEUEjnrOVL3abtynOaWAeLIOpS">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_CTPtuwnjCHoeCqfCK7RhFIOVKd5qLK8u)">
				<text transform="matrix(1.029,0,0,1.029,376.279,290.435)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_CTPtuwnjCHoeCqfCK7RhFIOVKd5qLK8u">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_WseCL4gpvYVfhZRVi7NFdh2Ie0VMFY02)">
				<text transform="matrix(1.029,0,0,1.029,392.737,290.435)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_WseCL4gpvYVfhZRVi7NFdh2Ie0VMFY02">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,392.737,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_d6wYFRNvBBltJDgIUatsvMDEVvmci1fQ)">
				<text transform="matrix(1.029,0,0,1.029,417.423,290.435)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_d6wYFRNvBBltJDgIUatsvMDEVvmci1fQ">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,417.423,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_l20tiWZZvcczlZWdcQ6lzIT7tthmoaYg)">
				<text transform="matrix(1.029,0,0,1.029,433.881,290.435)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_l20tiWZZvcczlZWdcQ6lzIT7tthmoaYg">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,433.881,278.092)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_2DNCBhCYJFHVFyRJ10i1c3eWTwp6l62c)">
				<text transform="matrix(1.029,0,0,1.029,228.157,308.95)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_2DNCBhCYJFHVFyRJ10i1c3eWTwp6l62c">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,296.607)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nzNo9IRTeaogSApJAB0Q6dyWbRBr8fmm)">
				<text transform="matrix(1.029,0,0,1.029,359.821,308.95)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nzNo9IRTeaogSApJAB0Q6dyWbRBr8fmm">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,296.607)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vkLE8CjYsA1d7Qrb1CZILIikrnWqpx0p)">
				<text transform="matrix(1.029,0,0,1.029,376.279,308.95)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vkLE8CjYsA1d7Qrb1CZILIikrnWqpx0p">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,296.607)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_WdnfaS8APcc1lLq4lru6gp2dWdwpvMRG)">
				<text transform="matrix(1.029,0,0,1.029,392.737,308.95)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_WdnfaS8APcc1lLq4lru6gp2dWdwpvMRG">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,392.737,296.607)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_yPgSlbGFCy49dFMMlrd92ZOfkbZpSDJN)">
				<text transform="matrix(1.029,0,0,1.029,228.157,327.466)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_yPgSlbGFCy49dFMMlrd92ZOfkbZpSDJN">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,228.157,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_W2b8aFgMqWe4LNDOSLq5L5h2CcoAJ0gN)">
				<text transform="matrix(1.029,0,0,1.029,359.821,327.466)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_W2b8aFgMqWe4LNDOSLq5L5h2CcoAJ0gN">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_QGPOZypkOQIceE15OYPBprIzzjUWJypS)">
				<text transform="matrix(1.029,0,0,1.029,376.279,327.466)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_QGPOZypkOQIceE15OYPBprIzzjUWJypS">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_X08Ecp7mZRMLmjymkbfL76elXzjIjyao)">
				<text transform="matrix(1.029,0,0,1.029,392.737,327.466)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_X08Ecp7mZRMLmjymkbfL76elXzjIjyao">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,392.737,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vgC4LkPpjaucpHlS6ozpheA3hidJTw6M)">
				<text transform="matrix(1.029,0,0,1.029,400.966,327.466)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vgC4LkPpjaucpHlS6ozpheA3hidJTw6M">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,400.966,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ghKcDfCL3C5rxpWkYifhXNUH4aUV1xuL)">
				<text transform="matrix(1.029,0,0,1.029,425.652,327.466)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ghKcDfCL3C5rxpWkYifhXNUH4aUV1xuL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,425.652,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_OLG62u5on0sltpO5kq8fO5QaKbCvl69O)">
				<text transform="matrix(1.029,0,0,1.029,433.881,327.466)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_OLG62u5on0sltpO5kq8fO5QaKbCvl69O">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,433.881,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_DcLVII02Qua6a5QKU4XbJRosv7v833qy)">
				<text transform="matrix(1.029,0,0,1.029,458.568,327.466)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_DcLVII02Qua6a5QKU4XbJRosv7v833qy">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,458.568,315.122)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_55QgL4kL5tXIbYrXVJ24Jo9rlXriqD4R)">
				<text transform="matrix(1.029,0,0,1.029,228.157,345.981)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_55QgL4kL5tXIbYrXVJ24Jo9rlXriqD4R">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,333.637)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_w9F7EJHV06qbwIU4A33hRtuBsYXGr7oH)">
				<text transform="matrix(1.029,0,0,1.029,359.821,345.981)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_w9F7EJHV06qbwIU4A33hRtuBsYXGr7oH">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,333.637)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_qNdeOoAFPAA6Hn1wYIh3VgtTh4OuyCzc)">
				<text transform="matrix(1.029,0,0,1.029,376.279,345.981)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_qNdeOoAFPAA6Hn1wYIh3VgtTh4OuyCzc">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,333.637)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MZ3YkPp69ZNSNB07yH6ApE19w5hmUOzA)">
				<text transform="matrix(1.029,0,0,1.029,392.737,345.981)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#2</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MZ3YkPp69ZNSNB07yH6ApE19w5hmUOzA">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,392.737,333.637)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_SJOQcMzx2lyk549kdhqkotiH23n1fQqn)">
				<text transform="matrix(1.029,0,0,1.029,417.423,345.981)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">---&gt; EVT_ENV_DEBUGGER</text>
			</g>
			<defs>
				<clipPath id="_clipPath_SJOQcMzx2lyk549kdhqkotiH23n1fQqn">
					<rect x="0" y="0" width="170" height="16" transform="matrix(1.029,0,0,1.029,417.423,333.637)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_GtZ8yx6tgzJmdCP781viAsu6xlShhkzK)">
				<text transform="matrix(1.029,0,0,1.029,228.157,364.496)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_GtZ8yx6tgzJmdCP781viAsu6xlShhkzK">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,228.157,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Ul1p3rINhQruvxwb75AquwoP3qRSA9qx)">
				<text transform="matrix(1.029,0,0,1.029,359.821,364.496)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Ul1p3rINhQruvxwb75AquwoP3qRSA9qx">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_KjpleLjuDpi2uHHFJ6XJQ5sV92GuQ7n4)">
				<text transform="matrix(1.029,0,0,1.029,376.279,364.496)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_KjpleLjuDpi2uHHFJ6XJQ5sV92GuQ7n4">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_s0rCVoPKX3pv30SgiUBKkONNwCyTsOvj)">
				<text transform="matrix(1.029,0,0,1.029,392.737,364.496)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_s0rCVoPKX3pv30SgiUBKkONNwCyTsOvj">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,392.737,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MrVRYJLFxrbadKBgCRrGg2UbfG6n92rH)">
				<text transform="matrix(1.029,0,0,1.029,400.966,364.496)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MrVRYJLFxrbadKBgCRrGg2UbfG6n92rH">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,400.966,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_L1Do3R0Hg1EcdZfkscGSzgoiJYawAwfE)">
				<text transform="matrix(1.029,0,0,1.029,425.652,364.496)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_L1Do3R0Hg1EcdZfkscGSzgoiJYawAwfE">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,425.652,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_HzyhUJLqf64rNoJEkNZAwzIsyfOlPLSe)">
				<text transform="matrix(1.029,0,0,1.029,433.881,364.496)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_HzyhUJLqf64rNoJEkNZAwzIsyfOlPLSe">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.029,0,0,1.029,433.881,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_thDBPV83sHCtIrRziaAcpr6YX7Ix4spi)">
				<text transform="matrix(1.029,0,0,1.029,483.255,364.496)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_thDBPV83sHCtIrRziaAcpr6YX7Ix4spi">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,483.255,352.153)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_NcpKSOiDEf0Ickg4x9Hr3p2qQxYi5zAg)">
				<text transform="matrix(1.029,0,0,1.029,228.157,383.011)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_NcpKSOiDEf0Ickg4x9Hr3p2qQxYi5zAg">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,370.668)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tnh0OcVZwfbr4TVDSk60iqZm8ZG0muQj)">
				<text transform="matrix(1.029,0,0,1.029,359.821,383.011)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tnh0OcVZwfbr4TVDSk60iqZm8ZG0muQj">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,370.668)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_D5Dmlx3lZsUTOcNhuEN7YJYQ673DxWv9)">
				<text transform="matrix(1.029,0,0,1.029,376.279,383.011)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_D5Dmlx3lZsUTOcNhuEN7YJYQ673DxWv9">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,370.668)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_65y5DLBa4jjACB91EVtMYrDfg6dXS7yY)">
				<text transform="matrix(1.029,0,0,1.029,392.737,383.011)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x13B76A15BC51C03</text>
			</g>
			<defs>
				<clipPath id="_clipPath_65y5DLBa4jjACB91EVtMYrDfg6dXS7yY">
					<rect x="0" y="0" width="146" height="16" transform="matrix(1.029,0,0,1.029,392.737,370.668)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_wb1SE2SAU4U2JSBQGsAOg3Hq9r8XBFk3)">
				<text transform="matrix(1.029,0,0,1.029,228.157,401.527)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_wb1SE2SAU4U2JSBQGsAOg3Hq9r8XBFk3">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_zpnNMtkYppNe1HBRYPVt9DMiFraySPa6)">
				<text transform="matrix(1.029,0,0,1.029,359.821,401.527)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X27</text>
			</g>
			<defs>
				<clipPath id="_clipPath_zpnNMtkYppNe1HBRYPVt9DMiFraySPa6">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_6nhAyALsoTIcRQZqkOCMx4839vRWq8W9)">
				<text transform="matrix(1.029,0,0,1.029,384.508,401.527)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_6nhAyALsoTIcRQZqkOCMx4839vRWq8W9">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_JhPogCk4Jobj9wOj1Kbbc0CvE6WD7iIC)">
				<text transform="matrix(1.029,0,0,1.029,400.966,401.527)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_JhPogCk4Jobj9wOj1Kbbc0CvE6WD7iIC">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Tn0MeZ28r6ndosdzGszlEZkzEcsLY5yW)">
				<text transform="matrix(1.029,0,0,1.029,417.423,401.527)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Tn0MeZ28r6ndosdzGszlEZkzEcsLY5yW">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,417.423,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_fD063WAjZuF1QSL0F5TaUbjrXTyxEzr9)">
				<text transform="matrix(1.029,0,0,1.029,433.881,401.527)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_fD063WAjZuF1QSL0F5TaUbjrXTyxEzr9">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,433.881,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZTMJDTFiRMKYU3oxm5UzjnjTsLyarAJU)">
				<text transform="matrix(1.029,0,0,1.029,442.11,401.527)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZTMJDTFiRMKYU3oxm5UzjnjTsLyarAJU">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,442.11,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_n2H9TJkckT0vhFNGTaq7aRjkihtAnd1R)">
				<text transform="matrix(1.029,0,0,1.029,458.568,401.527)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_n2H9TJkckT0vhFNGTaq7aRjkihtAnd1R">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,458.568,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_uvOahH3bYYfCnh3IQcdinDPDRxpyaahS)">
				<text transform="matrix(1.029,0,0,1.029,466.797,401.527)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_uvOahH3bYYfCnh3IQcdinDPDRxpyaahS">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.029,0,0,1.029,466.797,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_gGBuRVn9KeQPvfUagwRgj4UlEwGr1Zu5)">
				<text transform="matrix(1.029,0,0,1.029,516.171,401.527)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_gGBuRVn9KeQPvfUagwRgj4UlEwGr1Zu5">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,516.171,389.183)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0zO8lB3ODboo1q00UgQZGxc0C1FpP9tv)">
				<text transform="matrix(1.029,0,0,1.029,228.157,420.042)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ADRP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0zO8lB3ODboo1q00UgQZGxc0C1FpP9tv">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,228.157,407.698)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_kLWLpNrlwBRNwOS4MZh2kyfMwYqCyrlg)">
				<text transform="matrix(1.029,0,0,1.029,359.821,420.042)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_kLWLpNrlwBRNwOS4MZh2kyfMwYqCyrlg">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,407.698)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_TGFpigcMBhlbV4hXjiQdLteiW4yF5VLS)">
				<text transform="matrix(1.029,0,0,1.029,376.279,420.042)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_TGFpigcMBhlbV4hXjiQdLteiW4yF5VLS">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,407.698)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Roaoi9RCII1m62HLGRxxNm3i7E4NiBsR)">
				<text transform="matrix(1.029,0,0,1.029,392.737,420.042)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_ENV_DEBUGGER_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Roaoi9RCII1m62HLGRxxNm3i7E4NiBsR">
					<rect x="0" y="0" width="202" height="16" transform="matrix(1.029,0,0,1.029,392.737,407.698)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_c4qPtLwvSMCgc8vj4mdbc2UvPmzdan4M)">
				<text transform="matrix(1.029,0,0,1.029,598.461,420.042)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
			</g>
			<defs>
				<clipPath id="_clipPath_c4qPtLwvSMCgc8vj4mdbc2UvPmzdan4M">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,598.461,407.698)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_RRvJe5ncbrPo0PCUg0pkN3jiNRIl5JKG)">
				<text transform="matrix(1.029,0,0,1.029,228.157,438.557)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">LDR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_RRvJe5ncbrPo0PCUg0pkN3jiNRIl5JKG">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_uD9ja6KaZYGJPlEUS5ubsYXC4iwvTaoQ)">
				<text transform="matrix(1.029,0,0,1.029,359.821,438.557)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_uD9ja6KaZYGJPlEUS5ubsYXC4iwvTaoQ">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mGoThttNTDfynGgJt3qgYvqkYrLenYOR)">
				<text transform="matrix(1.029,0,0,1.029,376.279,438.557)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mGoThttNTDfynGgJt3qgYvqkYrLenYOR">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_wLhFtfQWulhIcehXXTbBL2y8z8COWJDI)">
				<text transform="matrix(1.029,0,0,1.029,392.737,438.557)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_wLhFtfQWulhIcehXXTbBL2y8z8COWJDI">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,392.737,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vnk8KrlB3y8pOCaUQfKWSCA6BdmgPcvP)">
				<text transform="matrix(1.029,0,0,1.029,400.966,438.557)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vnk8KrlB3y8pOCaUQfKWSCA6BdmgPcvP">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZXI9w7RuYC8w2YO7a0RbhppHhTi95pAL)">
				<text transform="matrix(1.029,0,0,1.029,417.423,438.557)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZXI9w7RuYC8w2YO7a0RbhppHhTi95pAL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,417.423,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_P2v4OLb2J6YoaRLqXvi36toVSFE7mTkh)">
				<text transform="matrix(1.029,0,0,1.029,425.652,438.557)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_ENV_DEBUGGER_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_P2v4OLb2J6YoaRLqXvi36toVSFE7mTkh">
					<rect x="0" y="0" width="202" height="16" transform="matrix(1.029,0,0,1.029,425.652,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_oXXttKgMMkTeyq1j2ZggYa4oo2tUvcUx)">
				<text transform="matrix(1.029,0,0,1.029,631.377,438.557)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGEOFF</text>
			</g>
			<defs>
				<clipPath id="_clipPath_oXXttKgMMkTeyq1j2ZggYa4oo2tUvcUx">
					<rect x="0" y="0" width="66" height="16" transform="matrix(1.029,0,0,1.029,631.377,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_47a8gaJmiRQUbZIAgvhk1C5ygRWUwyZl)">
				<text transform="matrix(1.029,0,0,1.029,697.209,438.557)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_47a8gaJmiRQUbZIAgvhk1C5ygRWUwyZl">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,697.209,426.214)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_hwvxZc8rLdVFIH1x1y99MiN57JMrOYiv)">
				<text transform="matrix(1.029,0,0,1.029,228.157,457.072)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">BLR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_hwvxZc8rLdVFIH1x1y99MiN57JMrOYiv">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,444.729)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Sh1E4NBRlQ8oQDoPrto7p0C0CL6ZqapO)">
				<text transform="matrix(1.029,0,0,1.029,359.821,457.072)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Sh1E4NBRlQ8oQDoPrto7p0C0CL6ZqapO">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,444.729)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0RK0NSV7sQfey57as4ct9kpb80F5Bcqj)">
				<text transform="matrix(1.029,0,0,1.029,392.737,457.072)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">On Debugger Detected</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0RK0NSV7sQfey57as4ct9kpb80F5Bcqj">
					<rect x="0" y="0" width="162" height="16" transform="matrix(1.029,0,0,1.029,392.737,444.729)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AN2xybjkCLruqy1FnYqRIBc6DltVBz8h)">
				<text transform="matrix(1.029,0,0,1.029,228.157,475.587)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AN2xybjkCLruqy1FnYqRIBc6DltVBz8h">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,463.244)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_h523YMCzGhesdownxjkQiWfXwiXtfxnA)">
				<text transform="matrix(1.029,0,0,1.029,359.821,475.587)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_h523YMCzGhesdownxjkQiWfXwiXtfxnA">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,359.821,463.244)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9hLp7iO76OsvxmyVBZ3m8DfwkNmobuEB)">
				<text transform="matrix(1.029,0,0,1.029,376.279,475.587)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9hLp7iO76OsvxmyVBZ3m8DfwkNmobuEB">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,376.279,463.244)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_RpQLEjBd2Ue2DjkYojKlPprjuqRTiYYz)">
				<text transform="matrix(1.029,0,0,1.029,392.737,475.587)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X21</text>
			</g>
			<defs>
				<clipPath id="_clipPath_RpQLEjBd2Ue2DjkYojKlPprjuqRTiYYz">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,392.737,463.244)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="top">
		<path d="M 223.5 22.67 L 753.15 22.67 C 754.806 22.67 756.15 24.014 756.15 25.67 L 756.15 129.24 C 756.15 130.896 754.806 132.24 753.15 132.24 L 223.5 132.24 C 221.844 132.24 220.5 130.896 220.5 129.24 L 220.5 25.67 C 220.5 24.014 221.844 22.67 223.5 22.67 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 223.5 22.67 L 753.15 22.67 C 754.806 22.67 756.15 24.014 756.15 25.67 L 756.15 129.24 C 756.15 130.896 754.806 132.24 753.15 132.24 L 223.5 132.24 C 221.844 132.24 220.5 130.896 220.5 129.24 L 220.5 25.67 C 220.5 24.014 221.844 22.67 223.5 22.67 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_PwbMNh6qdyTEaSse8zIRGjyakMuDWwJO)">
				<text transform="matrix(1.029,0,0,1.029,228.157,44.041)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_PwbMNh6qdyTEaSse8zIRGjyakMuDWwJO">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,31.697)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_6VDaI4O6LsHouBB0JaEWz1FQrFrRti16)">
				<text transform="matrix(1.029,0,0,1.029,359.821,44.041)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X16</text>
			</g>
			<defs>
				<clipPath id="_clipPath_6VDaI4O6LsHouBB0JaEWz1FQrFrRti16">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,31.697)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cXl0BD7eUgdth0TBOtYK1NiEHaSG39tS)">
				<text transform="matrix(1.029,0,0,1.029,384.508,44.041)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cXl0BD7eUgdth0TBOtYK1NiEHaSG39tS">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,31.697)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7me3WBmna1gR1pSgUjsplKK1Pj78DgPr)">
				<text transform="matrix(1.029,0,0,1.029,400.966,44.041)" id="Text" class="hlr hlr-comment-special-red" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#SYS_getppid</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7me3WBmna1gR1pSgUjsplKK1Pj78DgPr">
					<rect x="0" y="0" width="98" height="16" transform="matrix(1.029,0,0,1.029,400.966,31.697)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_kuaVT7M9Puyq9MUTbRWIueytLEkdBbrn)">
				<text transform="matrix(1.029,0,0,1.029,228.157,62.556)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SVC</text>
			</g>
			<defs>
				<clipPath id="_clipPath_kuaVT7M9Puyq9MUTbRWIueytLEkdBbrn">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,50.212)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ztf1SxCLkNxWmZhXXZECGrmbKlwiGlHi)">
				<text transform="matrix(1.029,0,0,1.029,359.821,62.556)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">0x80</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ztf1SxCLkNxWmZhXXZECGrmbKlwiGlHi">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,359.821,50.212)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0ChpH1YswAQZbzznof9nHL5l2FV8BCcV)">
				<text transform="matrix(1.029,0,0,1.029,228.157,81.071)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0ChpH1YswAQZbzznof9nHL5l2FV8BCcV">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,68.728)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_KHlhmlAbWKk8zV8IyR5VkHCXGxzmCF6d)">
				<text transform="matrix(1.029,0,0,1.029,359.821,81.071)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X21</text>
			</g>
			<defs>
				<clipPath id="_clipPath_KHlhmlAbWKk8zV8IyR5VkHCXGxzmCF6d">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,68.728)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_r5p4taftVuM8xOTzNH21Q8n0J470iGiL)">
				<text transform="matrix(1.029,0,0,1.029,384.508,81.071)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_r5p4taftVuM8xOTzNH21Q8n0J470iGiL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,68.728)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cR44tH2pWmYgpCeI3SjvnEmsgrgOsmu7)">
				<text transform="matrix(1.029,0,0,1.029,400.966,81.071)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cR44tH2pWmYgpCeI3SjvnEmsgrgOsmu7">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,68.728)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_BxasDphxut2xtU4aua86VityDbVqy06o)">
				<text transform="matrix(1.029,0,0,1.029,228.157,99.586)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">CMP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_BxasDphxut2xtU4aua86VityDbVqy06o">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,228.157,87.243)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_bbOqMB46SiMqjFTkJMYzu7WDsaFWLR3m)">
				<text transform="matrix(1.029,0,0,1.029,359.821,99.586)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X21</text>
			</g>
			<defs>
				<clipPath id="_clipPath_bbOqMB46SiMqjFTkJMYzu7WDsaFWLR3m">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,359.821,87.243)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZOtzZJqq3cgOdTF8mrG1GiRJP2m9qzhc)">
				<text transform="matrix(1.029,0,0,1.029,384.508,99.586)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZOtzZJqq3cgOdTF8mrG1GiRJP2m9qzhc">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,384.508,87.243)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mrVt7noapKf4dxnJUvDnbhKrlyyzFgS0)">
				<text transform="matrix(1.029,0,0,1.029,400.966,99.586)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#1</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mrVt7noapKf4dxnJUvDnbhKrlyyzFgS0">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.966,87.243)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_MmCnvVTwlKgOO1Ug6qftwB8gevgN6mlj)">
				<text transform="matrix(1.029,0,0,1.029,425.652,99.586)" id="Text" class="hlr hlr-comment-single" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">; 1 --&gt; /sbin/launchd -s</text>
			</g>
			<defs>
				<clipPath id="_clipPath_MmCnvVTwlKgOO1Ug6qftwB8gevgN6mlj">
					<rect x="0" y="0" width="194" height="16" transform="matrix(1.029,0,0,1.029,425.652,87.243)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AiDK7lFoaUDq5Bl3jVnPrzakDhf0BTUG)">
				<text transform="matrix(1.029,0,0,1.029,228.157,118.101)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">B.EQ</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AiDK7lFoaUDq5Bl3jVnPrzakDhf0BTUG">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,228.157,105.758)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nV5dlwHdpWwaBvxMGrJZ16eWNjs76wGv)">
				<text transform="matrix(1.029,0,0,1.029,359.821,118.101)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_not_debugged</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nV5dlwHdpWwaBvxMGrJZ16eWNjs76wGv">
					<rect x="0" y="0" width="130" height="16" transform="matrix(1.029,0,0,1.029,359.821,105.758)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="skip_path">
		<path d=" M 414.783 143.913 L 414.783 156.087 L 780 156.087 L 780 509.13 L 426.957 509.13 L 426.957 521.304" id="Path" fill="none" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(0,150,136)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 422.007 520.342 L 426.957 530.242 L 431.906 520.342 Z " fill="rgb(0,150,136)" stroke="none"/>
	</g>
	<g id="detec_path">
		<line x1="366.087" y1="143.913" x2="366.087" y2="168.261" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 167.299 L 366.087 177.198 L 371.037 167.299 Z " fill="rgb(255,0,0)" stroke="none"/>
		<line x1="366.087" y1="496.957" x2="366.087" y2="521.304" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 520.342 L 366.087 530.242 L 371.037 520.342 Z " fill="rgb(255,0,0)" stroke="none"/>
	</g>
	<g id="debug">
		<g id="Group">
			<path d=" M 123.194 265.125 C 122.303 265.124 121.48 264.647 121.036 263.873 C 120.593 263.1 120.596 262.148 121.046 261.378 L 138.483 231.485 C 138.93 230.721 139.748 230.25 140.634 230.25 L 153.089 230.25 C 154.465 230.25 155.58 231.365 155.58 232.741 C 155.58 234.117 154.465 235.232 153.089 235.232 L 142.066 235.232 L 125.348 263.889 C 124.901 264.655 124.081 265.126 123.194 265.125 Z " id="Path" fill="rgb(218,220,222)"/>
			<path d=" M 140.634 369.75 L 130.67 369.75 C 129.452 369.75 128.413 368.87 128.213 367.668 L 123.23 337.776 C 123.077 336.895 123.408 336 124.097 335.43 C 124.786 334.86 125.728 334.703 126.564 335.019 C 127.4 335.334 128.004 336.074 128.145 336.957 L 132.78 364.768 L 140.634 364.768 C 142.01 364.768 143.125 365.883 143.125 367.259 C 143.125 368.635 142.01 369.75 140.634 369.75 Z " id="Path" fill="rgb(218,220,222)"/>
			<path d=" M 43.482 347.33 C 42.106 347.33 40.991 346.215 40.991 344.839 L 40.991 332.384 C 40.991 331.627 41.335 330.912 41.925 330.439 L 66.836 310.51 C 67.91 309.65 69.478 309.824 70.338 310.898 C 71.198 311.973 71.024 313.541 69.95 314.401 L 45.973 333.582 L 45.973 344.839 C 45.973 346.215 44.858 347.33 43.482 347.33 Z " id="Path" fill="rgb(218,220,222)"/>
			<path d=" M 70.882 265.125 C 70.39 265.125 69.91 264.979 69.502 264.706 L 54.556 254.742 C 53.863 254.28 53.447 253.502 53.446 252.67 L 53.446 235.232 C 53.446 233.856 54.562 232.741 55.937 232.741 C 57.313 232.741 58.429 233.856 58.429 235.232 L 58.429 251.337 L 72.266 260.561 C 73.179 261.171 73.586 262.306 73.268 263.357 C 72.949 264.408 71.98 265.126 70.882 265.125 Z " id="Path" fill="rgb(218,220,222)"/>
			<path d=" M 168.036 324.911 L 143.125 324.911 C 141.749 324.911 140.634 323.795 140.634 322.42 C 140.634 321.044 141.749 319.929 143.125 319.929 L 168.036 319.929 C 169.411 319.929 170.527 321.044 170.527 322.42 C 170.527 323.795 169.411 324.911 168.036 324.911 Z " id="Path" fill="rgb(218,220,222)"/>
		</g>
		<path d=" M 163.054 307.473 L 163.054 292.527 L 152.467 292.527 C 151.322 285.712 148.611 279.257 144.545 273.67 L 150.598 267.616 L 140.634 257.652 L 134.58 263.705 C 128.993 259.64 122.538 256.928 115.723 255.783 L 115.723 245.196 L 100.777 245.196 L 100.777 255.783 C 93.962 256.928 87.507 259.639 81.92 263.705 L 75.866 257.652 L 65.902 267.616 L 71.955 273.67 C 67.89 279.257 65.178 285.712 64.033 292.527 L 53.446 292.527 L 53.446 307.473 L 64.033 307.473 C 65.178 314.288 67.889 320.743 71.955 326.33 L 65.902 332.384 L 75.866 342.348 L 81.92 336.295 C 87.507 340.36 93.962 343.072 100.777 344.217 L 100.777 354.804 L 115.723 354.804 L 115.723 344.217 C 122.538 343.072 128.993 340.361 134.58 336.295 L 140.634 342.348 L 150.598 332.384 L 144.545 326.33 C 148.61 320.743 151.322 314.288 152.467 307.473 L 163.054 307.473 Z " id="Path" fill="rgb(8,35,97)"/>
		<circle vector-effect="non-scaling-stroke" cx="108.25" cy="300" r="34.875" id="Ellipse" fill="rgb(238,250,254)"/>
		<circle vector-effect="non-scaling-stroke" cx="158.0714285714285" cy="232.74107142857142" r="4.982142857142861" id="Ellipse" fill="rgb(8,35,97)"/>
		<circle vector-effect="non-scaling-stroke" cx="145.61607142857142" cy="367.25892857142856" r="4.982142857142861" id="Ellipse" fill="rgb(8,35,97)"/>
		<circle vector-effect="non-scaling-stroke" cx="43.482142857142826" cy="347.33035714285705" r="4.982142857142854" id="Ellipse" fill="rgb(8,35,97)"/>
		<circle vector-effect="non-scaling-stroke" cx="173.01785714285705" cy="322.4196428571428" r="4.982142857142861" id="Ellipse" fill="rgb(8,35,97)"/>
		<circle vector-effect="non-scaling-stroke" cx="55.937499999999964" cy="232.74107142857142" r="4.982142857142854" id="Ellipse" fill="rgb(8,35,97)"/>
		<path d=" M 79.396 308.519 L 79.396 292.663 L 82.586 292.663 L 82.586 306.026 L 89.214 306.026 L 89.214 308.519 L 79.396 308.519 L 79.396 308.519 Z  M 91.986 308.519 L 91.986 292.663 L 95.176 292.663 L 95.176 306.026 L 101.804 306.026 L 101.804 308.519 L 91.986 308.519 L 91.986 308.519 Z  M 111.461 308.519 L 104.576 308.519 L 104.576 292.663 L 111.451 292.663 L 111.451 292.663 Q 113.75 292.663 115.017 293.399 L 115.017 293.399 L 115.017 293.399 Q 116.285 294.135 116.79 295.386 L 116.79 295.386 L 116.79 295.386 Q 117.295 296.638 117.295 298.195 L 117.295 298.195 L 117.295 303.062 L 117.295 303.062 Q 117.295 304.641 116.763 305.876 L 116.763 305.876 L 116.763 305.876 Q 116.231 307.111 114.963 307.815 L 114.963 307.815 L 114.963 307.815 Q 113.696 308.519 111.461 308.519 L 111.461 308.519 L 111.461 308.519 Z  M 107.766 295.145 L 107.766 306.037 L 111.182 306.037 L 111.182 306.037 Q 112.869 306.037 113.486 305.414 L 113.486 305.414 L 113.486 305.414 Q 114.104 304.791 114.104 303.47 L 114.104 303.47 L 114.104 297.776 L 114.104 297.776 Q 114.104 296.487 113.476 295.816 L 113.476 295.816 L 113.476 295.816 Q 112.847 295.145 111.182 295.145 L 111.182 295.145 L 107.766 295.145 L 107.766 295.145 Z  M 127.929 308.519 L 121.054 308.519 L 121.054 292.663 L 127.156 292.663 L 127.156 292.663 Q 129.379 292.663 130.599 293.114 L 130.599 293.114 L 130.599 293.114 Q 131.818 293.565 132.296 294.484 L 132.296 294.484 L 132.296 294.484 Q 132.774 295.402 132.774 296.831 L 132.774 296.831 L 132.774 296.831 Q 132.774 298.045 132.377 298.808 L 132.377 298.808 L 132.377 298.808 Q 131.979 299.57 130.744 299.882 L 130.744 299.882 L 130.744 299.882 Q 131.839 300.032 132.425 300.542 L 132.425 300.542 L 132.425 300.542 Q 133.01 301.053 133.231 301.858 L 133.231 301.858 L 133.231 301.858 Q 133.451 302.664 133.451 303.706 L 133.451 303.706 L 133.451 303.706 Q 133.451 306.198 132.167 307.358 L 132.167 307.358 L 132.167 307.358 Q 130.883 308.519 127.929 308.519 L 127.929 308.519 L 127.929 308.519 Z  M 124.245 294.844 L 124.245 299.044 L 127.543 299.044 L 127.543 299.044 Q 128.477 299.044 128.891 298.797 L 128.891 298.797 L 128.891 298.797 Q 129.304 298.55 129.412 298.061 L 129.412 298.061 L 129.412 298.061 Q 129.519 297.572 129.519 296.863 L 129.519 296.863 L 129.519 296.863 Q 129.519 296.025 129.326 295.59 L 129.326 295.59 L 129.326 295.59 Q 129.132 295.155 128.585 295 L 128.585 295 L 128.585 295 Q 128.037 294.844 126.952 294.844 L 126.952 294.844 L 124.245 294.844 L 124.245 294.844 Z  M 124.245 300.967 L 124.245 306.284 L 127.338 306.284 L 127.338 306.284 Q 128.585 306.284 129.213 306.08 L 129.213 306.08 L 129.213 306.08 Q 129.841 305.876 130.056 305.301 L 130.056 305.301 L 130.056 305.301 Q 130.271 304.727 130.271 303.631 L 130.271 303.631 L 130.271 303.631 Q 130.271 302.836 130.115 302.24 L 130.115 302.24 L 130.115 302.24 Q 129.96 301.644 129.406 301.305 L 129.406 301.305 L 129.406 301.305 Q 128.853 300.967 127.661 300.967 L 127.661 300.967 L 124.245 300.967 L 124.245 300.967 Z " id="Compound Path" fill="rgb(8,35,97)"/>
	</g>
</svg>



</figure>
<figcaption></figcaption>
</center>
<h3 id="evt_env_jailbreak">EVT_ENV_JAILBREAK</h3>
<center>
<figure class="mb-4" id="fig-ixg-env-jailbreak">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="0 0 825 650" width="100%" height="100%">
	<g id="bottom">
		<path d="M 223.5 583.98 L 753.15 583.98 C 754.806 583.98 756.15 585.324 756.15 586.98 L 756.15 617.5 C 756.15 619.156 754.806 620.5 753.15 620.5 L 223.5 620.5 C 221.844 620.5 220.5 619.156 220.5 617.5 L 220.5 586.98 C 220.5 585.324 221.844 583.98 223.5 583.98 Z" style="stroke:none;fill:#353333;stroke-miterlimit:10;"/>
		<path d="M 223.5 583.98 L 753.15 583.98 C 754.806 583.98 756.15 585.324 756.15 586.98 L 756.15 617.5 C 756.15 619.156 754.806 620.5 753.15 620.5 L 223.5 620.5 C 221.844 620.5 220.5 619.156 220.5 617.5 L 220.5 586.98 C 220.5 585.324 221.844 583.98 223.5 583.98 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g clip-path="url(#_clipPath_7VMDlGUU7yiXWkH0bVMaNYBC3puTWVie)">
			<text transform="matrix(1.029,0,0,1.029,228.989,606.32)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_not_jailbroken</text>
		</g>
		<defs>
			<clipPath id="_clipPath_7VMDlGUU7yiXWkH0bVMaNYBC3puTWVie">
				<rect x="0" y="0" width="146" height="16" transform="matrix(1.029,0,0,1.029,228.989,593.977)"/>
			</clipPath>
		</defs>
	</g>
	<g id="middle">
		<path d="M 223.526 230.93 L 753.124 230.93 C 754.794 230.93 756.15 232.286 756.15 233.956 L 756.15 537.474 C 756.15 539.144 754.794 540.5 753.124 540.5 L 223.526 540.5 C 221.856 540.5 220.5 539.144 220.5 537.474 L 220.5 233.956 C 220.5 232.286 221.856 230.93 223.526 230.93 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 223.526 230.93 L 753.124 230.93 C 754.794 230.93 756.15 232.286 756.15 233.956 L 756.15 537.474 C 756.15 539.144 754.794 540.5 753.124 540.5 L 223.526 540.5 C 221.856 540.5 220.5 539.144 220.5 537.474 L 220.5 233.956 C 220.5 232.286 221.856 230.93 223.526 230.93 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_1bmmScqHYTjfBgTVPITqD1x7ZwKTpHvT)">
				<text transform="matrix(1.029,0,0,1.029,227.325,252.778)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1bmmScqHYTjfBgTVPITqD1x7ZwKTpHvT">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,240.435)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_fqVP1PYCIlyMJp1fHvTYae895OE2KxG1)">
				<text transform="matrix(1.029,0,0,1.029,358.989,252.778)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X25</text>
			</g>
			<defs>
				<clipPath id="_clipPath_fqVP1PYCIlyMJp1fHvTYae895OE2KxG1">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,240.435)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_F4EDjqIp78ddk7lwAt4gJsktPfWjC3at)">
				<text transform="matrix(1.029,0,0,1.029,383.676,252.778)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_F4EDjqIp78ddk7lwAt4gJsktPfWjC3at">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,240.435)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_82Akm0Xd8jUl1PyzsCGoxuK5nKUPlbih)">
				<text transform="matrix(1.029,0,0,1.029,400.134,252.778)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_82Akm0Xd8jUl1PyzsCGoxuK5nKUPlbih">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,240.435)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_SNOETxAsFp03YGhXWWKW4or4enT9P36O)">
				<text transform="matrix(1.029,0,0,1.029,227.325,271.294)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_SNOETxAsFp03YGhXWWKW4or4enT9P36O">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,258.95)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_TkOCNyJj1chVGitytw9AF8yXOZPC7Y7S)">
				<text transform="matrix(1.029,0,0,1.029,358.989,271.294)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_TkOCNyJj1chVGitytw9AF8yXOZPC7Y7S">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,258.95)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_znt1OcnCQPgBWsIH7JQ8lmRFvF5PF1bR)">
				<text transform="matrix(1.029,0,0,1.029,375.447,271.294)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_znt1OcnCQPgBWsIH7JQ8lmRFvF5PF1bR">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,258.95)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_PFdMoBKyX8YbNMpcFHi4m8cRDoQXiY9I)">
				<text transform="matrix(1.029,0,0,1.029,391.905,271.294)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x13B76B477E382CB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_PFdMoBKyX8YbNMpcFHi4m8cRDoQXiY9I">
					<rect x="0" y="0" width="146" height="16" transform="matrix(1.029,0,0,1.029,391.905,258.95)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_DrahGokcPP92NoYVmv6colQ2ynL1Ewfe)">
				<text transform="matrix(1.029,0,0,1.029,227.325,289.809)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_DrahGokcPP92NoYVmv6colQ2ynL1Ewfe">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,277.465)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_xvohmC1oiM4wcN8p7HJlw1uUD5IS8HWj)">
				<text transform="matrix(1.029,0,0,1.029,358.989,289.809)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_xvohmC1oiM4wcN8p7HJlw1uUD5IS8HWj">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,277.465)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_26KNklqPBBeIo1iLDmq9VwngHS73Senb)">
				<text transform="matrix(1.029,0,0,1.029,375.447,289.809)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_26KNklqPBBeIo1iLDmq9VwngHS73Senb">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,277.465)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_BzmQZmxxvqT2cPNBJA3BDRD3jEJpS23V)">
				<text transform="matrix(1.029,0,0,1.029,391.905,289.809)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_BzmQZmxxvqT2cPNBJA3BDRD3jEJpS23V">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,391.905,277.465)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_80v5cc9ZxAv7NJUrPcmEW5H3tGVJQ7Kt)">
				<text transform="matrix(1.029,0,0,1.029,227.325,308.324)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_80v5cc9ZxAv7NJUrPcmEW5H3tGVJQ7Kt">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_L2PEUry0DhNcfDP7kZY1TO1h8zdv11lF)">
				<text transform="matrix(1.029,0,0,1.029,358.989,308.324)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_L2PEUry0DhNcfDP7kZY1TO1h8zdv11lF">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_IuTKlRLHL3BlheHDbOzOY1ATejyGBKIp)">
				<text transform="matrix(1.029,0,0,1.029,383.676,308.324)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_IuTKlRLHL3BlheHDbOzOY1ATejyGBKIp">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_4FXcfFzfWq09RumUGrXFdw8N3pbWn0mM)">
				<text transform="matrix(1.029,0,0,1.029,400.134,308.324)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_4FXcfFzfWq09RumUGrXFdw8N3pbWn0mM">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_PfIJZOeOHo5lysCwsBdqSEOufE7qSKsL)">
				<text transform="matrix(1.029,0,0,1.029,416.592,308.324)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_PfIJZOeOHo5lysCwsBdqSEOufE7qSKsL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,416.592,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_spCa02x9ALliKNgnED2ubGnTFew05pQC)">
				<text transform="matrix(1.029,0,0,1.029,433.05,308.324)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_spCa02x9ALliKNgnED2ubGnTFew05pQC">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,433.05,295.98)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_WihP78hQU2gveyLHOQSbN5bXbKrIvamy)">
				<text transform="matrix(1.029,0,0,1.029,227.325,326.839)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_WihP78hQU2gveyLHOQSbN5bXbKrIvamy">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,314.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_M6sTVZuW7CeNjGra0ugRyGXSiYbkL9cj)">
				<text transform="matrix(1.029,0,0,1.029,358.989,326.839)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_M6sTVZuW7CeNjGra0ugRyGXSiYbkL9cj">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,314.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Gxk0zS3bNp266q72UNS9eh61MUr6bQcl)">
				<text transform="matrix(1.029,0,0,1.029,375.447,326.839)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Gxk0zS3bNp266q72UNS9eh61MUr6bQcl">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,314.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9TnG5mxwUT7SjP5KryYXCZ6htDMkMJDS)">
				<text transform="matrix(1.029,0,0,1.029,391.905,326.839)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9TnG5mxwUT7SjP5KryYXCZ6htDMkMJDS">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,391.905,314.496)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tBeYVjInnI2Es2I2gHCo2jy7K6AsigFS)">
				<text transform="matrix(1.029,0,0,1.029,227.325,345.354)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tBeYVjInnI2Es2I2gHCo2jy7K6AsigFS">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,333.011)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nPHjOOeLXb0RwbxJiW1q0duvhXbdOhTp)">
				<text transform="matrix(1.029,0,0,1.029,358.989,345.354)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nPHjOOeLXb0RwbxJiW1q0duvhXbdOhTp">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,333.011)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_JZicq9U045HxOeXji55YcsylFFAVMkf0)">
				<text transform="matrix(1.029,0,0,1.029,383.676,345.354)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_JZicq9U045HxOeXji55YcsylFFAVMkf0">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,333.011)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_z83jYVweSXvnHKr7ipAHs9krr946shBT)">
				<text transform="matrix(1.029,0,0,1.029,400.134,345.354)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_z83jYVweSXvnHKr7ipAHs9krr946shBT">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,333.011)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_dyHBfPTVLJFVc0zkZYQ6wKDatAXgxmTV)">
				<text transform="matrix(1.029,0,0,1.029,227.325,363.87)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SUB</text>
			</g>
			<defs>
				<clipPath id="_clipPath_dyHBfPTVLJFVc0zkZYQ6wKDatAXgxmTV">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_U5MWK6jaWbADnELib1u7yeHqmeG4ehxn)">
				<text transform="matrix(1.029,0,0,1.029,358.989,363.87)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_U5MWK6jaWbADnELib1u7yeHqmeG4ehxn">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7dOo25NOIpp9xD6TaJJx4teZjMO76Ty6)">
				<text transform="matrix(1.029,0,0,1.029,375.447,363.87)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7dOo25NOIpp9xD6TaJJx4teZjMO76Ty6">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_DOla3HCblTH3OvSzzyWqwJLP2BDwzzBO)">
				<text transform="matrix(1.029,0,0,1.029,391.905,363.87)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_DOla3HCblTH3OvSzzyWqwJLP2BDwzzBO">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,391.905,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_mBN2AwLBuAQ4pMc07DUqwUTSXuiZfNV3)">
				<text transform="matrix(1.029,0,0,1.029,416.592,363.87)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_mBN2AwLBuAQ4pMc07DUqwUTSXuiZfNV3">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,416.592,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7SQjjofPpxeX7toi8y0oykxcqMtmE59Q)">
				<text transform="matrix(1.029,0,0,1.029,433.05,363.87)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7SQjjofPpxeX7toi8y0oykxcqMtmE59Q">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,433.05,351.526)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_5KsB1FCdJwoqGt9sNaPUKH8xY9jGQj3Y)">
				<text transform="matrix(1.029,0,0,1.029,227.325,382.385)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_5KsB1FCdJwoqGt9sNaPUKH8xY9jGQj3Y">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,370.041)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_FizeePH9OeBoEwvaA5BXbDsHJM7z6RdM)">
				<text transform="matrix(1.029,0,0,1.029,358.989,382.385)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_FizeePH9OeBoEwvaA5BXbDsHJM7z6RdM">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,370.041)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_63qR99CbtGBaZG9oYsXa9xCYiRl3GGbU)">
				<text transform="matrix(1.029,0,0,1.029,375.447,382.385)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_63qR99CbtGBaZG9oYsXa9xCYiRl3GGbU">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,370.041)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_p5eJs0vhfPTrf8iMKx7raNlZV3iV4eyu)">
				<text transform="matrix(1.029,0,0,1.029,391.905,382.385)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_p5eJs0vhfPTrf8iMKx7raNlZV3iV4eyu">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,391.905,370.041)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_jKooxaCFqfCjR3RMyUWVUCi2WXiJZhx8)">
				<text transform="matrix(1.029,0,0,1.029,227.325,400.9)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_jKooxaCFqfCjR3RMyUWVUCi2WXiJZhx8">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,227.325,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_wlkffjOkFaSiODiKObVEQjSq1rvRvSg9)">
				<text transform="matrix(1.029,0,0,1.029,358.989,400.9)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_wlkffjOkFaSiODiKObVEQjSq1rvRvSg9">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_gBgBxi7ehjC4OEXulz9mB5b8AW08SiyB)">
				<text transform="matrix(1.029,0,0,1.029,383.676,400.9)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_gBgBxi7ehjC4OEXulz9mB5b8AW08SiyB">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AugG1Rz5G5tOCfEdjSkw36qbNH55d9Cp)">
				<text transform="matrix(1.029,0,0,1.029,400.134,400.9)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AugG1Rz5G5tOCfEdjSkw36qbNH55d9Cp">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,400.134,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ME5zyjh3aODVNg2jdcUVfirsyPagVxEo)">
				<text transform="matrix(1.029,0,0,1.029,408.363,400.9)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ME5zyjh3aODVNg2jdcUVfirsyPagVxEo">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,408.363,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_QfZSVLlVzDz31jBPbynZdAedoPI0dSZE)">
				<text transform="matrix(1.029,0,0,1.029,433.05,400.9)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_QfZSVLlVzDz31jBPbynZdAedoPI0dSZE">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,433.05,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_4yGNkbwavXWwfIowtETjgrKLmG8nXsL0)">
				<text transform="matrix(1.029,0,0,1.029,441.279,400.9)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_4yGNkbwavXWwfIowtETjgrKLmG8nXsL0">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,441.279,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_6aC1ldBOq2BHb80uBN6ypYRUHjaNLudj)">
				<text transform="matrix(1.029,0,0,1.029,465.966,400.9)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_6aC1ldBOq2BHb80uBN6ypYRUHjaNLudj">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,465.966,388.557)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_c4ta1MIDfIFVykZA8JVlemPhE3FH9xjQ)">
				<text transform="matrix(1.029,0,0,1.029,227.325,419.415)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_c4ta1MIDfIFVykZA8JVlemPhE3FH9xjQ">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,407.072)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cugpLbcVF0RNRiMcAdgunWrzlriJ2Glr)">
				<text transform="matrix(1.029,0,0,1.029,358.989,419.415)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cugpLbcVF0RNRiMcAdgunWrzlriJ2Glr">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,407.072)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_6eTABHgwLT0Rztp3Clf62pgE2Slb6Fut)">
				<text transform="matrix(1.029,0,0,1.029,383.676,419.415)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_6eTABHgwLT0Rztp3Clf62pgE2Slb6Fut">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,407.072)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ErJsWacOwHoqZRuDkSySdKGi6r2iA919)">
				<text transform="matrix(1.029,0,0,1.029,400.134,419.415)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#1</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ErJsWacOwHoqZRuDkSySdKGi6r2iA919">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,407.072)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_84zlqTgrtU2BGbohkEpavZFRTHatXfNt)">
				<text transform="matrix(1.029,0,0,1.029,424.821,419.415)" id="Text" class="hlr hlr-comment-special" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">---&gt; EVT_ENV_JAILBREAK</text>
			</g>
			<defs>
				<clipPath id="_clipPath_84zlqTgrtU2BGbohkEpavZFRTHatXfNt">
					<rect x="0" y="0" width="178" height="16" transform="matrix(1.029,0,0,1.029,424.821,407.072)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Qta5gLiJYbZz8uEXJ4WO8xEpDBP74Emd)">
				<text transform="matrix(1.029,0,0,1.029,227.325,437.931)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STUR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Qta5gLiJYbZz8uEXJ4WO8xEpDBP74Emd">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,227.325,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_5uVkSfJcJ4hJ5WbGpGcSDHQjsT7uz00W)">
				<text transform="matrix(1.029,0,0,1.029,358.989,437.931)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_5uVkSfJcJ4hJ5WbGpGcSDHQjsT7uz00W">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Q3OzgKni0rcwWNsnnO7UjRFgWJCuN1AU)">
				<text transform="matrix(1.029,0,0,1.029,383.676,437.931)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Q3OzgKni0rcwWNsnnO7UjRFgWJCuN1AU">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_sax4dqnKfJ0Gcg13PQrVUnhGZCqqnY7o)">
				<text transform="matrix(1.029,0,0,1.029,400.134,437.931)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_sax4dqnKfJ0Gcg13PQrVUnhGZCqqnY7o">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,400.134,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_iRdqkKV2kBNkWmaztxgzpYDnZxkS9Q8N)">
				<text transform="matrix(1.029,0,0,1.029,408.363,437.931)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X11</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iRdqkKV2kBNkWmaztxgzpYDnZxkS9Q8N">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,408.363,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_pt4B2wbi3dWtOgBdQMHQ974y32wBmQe5)">
				<text transform="matrix(1.029,0,0,1.029,433.05,437.931)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_pt4B2wbi3dWtOgBdQMHQ974y32wBmQe5">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,433.05,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_59QS9MU1CePDl3buCdYl4ZRHUuFQJ8Zt)">
				<text transform="matrix(1.029,0,0,1.029,441.279,437.931)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_59QS9MU1CePDl3buCdYl4ZRHUuFQJ8Zt">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.029,0,0,1.029,441.279,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_fG7zbqQ04gsJVaQJG5M52vzsWac8eb9F)">
				<text transform="matrix(1.029,0,0,1.029,490.653,437.931)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_fG7zbqQ04gsJVaQJG5M52vzsWac8eb9F">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,490.653,425.587)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_lrZfxcqf3JEoZPPtd0RQZn1R3sYXqyyh)">
				<text transform="matrix(1.029,0,0,1.029,227.325,456.446)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_lrZfxcqf3JEoZPPtd0RQZn1R3sYXqyyh">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tYfBW1xZJturK5FTtn7PpDSdcjL4Y9Q6)">
				<text transform="matrix(1.029,0,0,1.029,358.989,456.446)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X24</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tYfBW1xZJturK5FTtn7PpDSdcjL4Y9Q6">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_udGZ1EwEhuuXip8alxi6ciFa8hr1SWng)">
				<text transform="matrix(1.029,0,0,1.029,383.676,456.446)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_udGZ1EwEhuuXip8alxi6ciFa8hr1SWng">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_rm1kVQZciwR21y6BrCQk1HBXYuXG4bHS)">
				<text transform="matrix(1.029,0,0,1.029,400.134,456.446)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_rm1kVQZciwR21y6BrCQk1HBXYuXG4bHS">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_oIQLYSMieDSo0NHZZE8naduo7HPbCStc)">
				<text transform="matrix(1.029,0,0,1.029,416.592,456.446)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_oIQLYSMieDSo0NHZZE8naduo7HPbCStc">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,416.592,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nIlXpPCy54z4e5DfltsW5PZQSkq2gTbb)">
				<text transform="matrix(1.029,0,0,1.029,433.05,456.446)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nIlXpPCy54z4e5DfltsW5PZQSkq2gTbb">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,433.05,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_sHfCbcod8DxvT6cjT2a4Hk1i5w9snb5U)">
				<text transform="matrix(1.029,0,0,1.029,441.279,456.446)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_sHfCbcod8DxvT6cjT2a4Hk1i5w9snb5U">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,441.279,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9NwL2wc3lM4fioVpsW65iFKTluPh2HSL)">
				<text transform="matrix(1.029,0,0,1.029,457.737,456.446)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9NwL2wc3lM4fioVpsW65iFKTluPh2HSL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,457.737,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eHcauw8j2ChhDihC3uU6RfvLHCYk31RC)">
				<text transform="matrix(1.029,0,0,1.029,465.966,456.446)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#-0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eHcauw8j2ChhDihC3uU6RfvLHCYk31RC">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.029,0,0,1.029,465.966,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_PAenOHzqjeWVXYr1AhOw0pZ7tA6GQD2J)">
				<text transform="matrix(1.029,0,0,1.029,515.34,456.446)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_PAenOHzqjeWVXYr1AhOw0pZ7tA6GQD2J">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,515.34,444.102)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vgiA23LWwmBGI6LL5zJ0Vd7av2X6xI3R)">
				<text transform="matrix(1.029,0,0,1.029,227.325,474.961)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ADRP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vgiA23LWwmBGI6LL5zJ0Vd7av2X6xI3R">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,227.325,462.618)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0X2YW3Jx6aRvKtmix5P8vpKmQylkayPG)">
				<text transform="matrix(1.029,0,0,1.029,358.989,474.961)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0X2YW3Jx6aRvKtmix5P8vpKmQylkayPG">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,462.618)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0lGIYm21m3KCDoSpE8UB55TeQHGvT2K7)">
				<text transform="matrix(1.029,0,0,1.029,375.447,474.961)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0lGIYm21m3KCDoSpE8UB55TeQHGvT2K7">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,462.618)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9O0fHgV5pkxSv4vvm8tgTAo24agyiv87)">
				<text transform="matrix(1.029,0,0,1.029,391.905,474.961)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_ENV_JAILBREAK_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9O0fHgV5pkxSv4vvm8tgTAo24agyiv87">
					<rect x="0" y="0" width="210" height="16" transform="matrix(1.029,0,0,1.029,391.905,462.618)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_u8sBv9sLPI7yfwaq48icqSjk2Ddtse2k)">
				<text transform="matrix(1.029,0,0,1.029,605.859,474.961)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGE</text>
			</g>
			<defs>
				<clipPath id="_clipPath_u8sBv9sLPI7yfwaq48icqSjk2Ddtse2k">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,605.859,462.618)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_IuKdzJOX4051PLG11JR9PveHCFHDW9jI)">
				<text transform="matrix(1.029,0,0,1.029,227.325,493.476)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">LDR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_IuKdzJOX4051PLG11JR9PveHCFHDW9jI">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vWcKdhSgV8jXyjlR7bgr4d77bVsYig7W)">
				<text transform="matrix(1.029,0,0,1.029,358.989,493.476)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vWcKdhSgV8jXyjlR7bgr4d77bVsYig7W">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_aA2VTL7OODpo9nqHJHddihAqGSK2ESSA)">
				<text transform="matrix(1.029,0,0,1.029,375.447,493.476)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_aA2VTL7OODpo9nqHJHddihAqGSK2ESSA">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_FpVUopud3YlkJ2yqISN6GWTiakTtstAZ)">
				<text transform="matrix(1.029,0,0,1.029,391.905,493.476)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_FpVUopud3YlkJ2yqISN6GWTiakTtstAZ">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,391.905,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_2o6juYJ9OTXIclDIXqpTFjiJ2duoqMVv)">
				<text transform="matrix(1.029,0,0,1.029,400.134,493.476)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_2o6juYJ9OTXIclDIXqpTFjiJ2duoqMVv">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,400.134,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_FpctNsrbeRlwCeIwbfbkREElReE36R5y)">
				<text transform="matrix(1.029,0,0,1.029,416.592,493.476)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_FpctNsrbeRlwCeIwbfbkREElReE36R5y">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,416.592,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tkLIgmG2pGfxYxOOh4bDHdIyOSmuxw9i)">
				<text transform="matrix(1.029,0,0,1.029,424.821,493.476)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#EVT_ENV_JAILBREAK_cbk_ptr</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tkLIgmG2pGfxYxOOh4bDHdIyOSmuxw9i">
					<rect x="0" y="0" width="210" height="16" transform="matrix(1.029,0,0,1.029,424.821,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7WONJxFhZ1pHIWbA6ZwbTGTeiLkuS4L5)">
				<text transform="matrix(1.029,0,0,1.029,638.775,493.476)" id="Text" class="hlr hlr-comment-preproc" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">@PAGEOFF</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7WONJxFhZ1pHIWbA6ZwbTGTeiLkuS4L5">
					<rect x="0" y="0" width="66" height="16" transform="matrix(1.029,0,0,1.029,638.775,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_5g9p92pmfoVIpdL86zkTXhVishJzNy9u)">
				<text transform="matrix(1.029,0,0,1.029,704.607,493.476)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_5g9p92pmfoVIpdL86zkTXhVishJzNy9u">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,704.607,481.133)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_9BuRxphWqQZKIQvcmTiPOvupvsqzXZRu)">
				<text transform="matrix(1.029,0,0,1.029,227.325,511.992)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">BLR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_9BuRxphWqQZKIQvcmTiPOvupvsqzXZRu">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,499.648)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_rdHNvJFN1pQ0Ttt6QxgMM9NqGMozLD3P)">
				<text transform="matrix(1.029,0,0,1.029,358.989,511.992)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_rdHNvJFN1pQ0Ttt6QxgMM9NqGMozLD3P">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,499.648)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_cs6xmeAgpvIQVaucXkJCizC6xiNwR3k2)">
				<text transform="matrix(1.029,0,0,1.029,391.905,511.992)" id="Text" class="hlr hlr-comment" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">On Jailbreak Detected</text>
			</g>
			<defs>
				<clipPath id="_clipPath_cs6xmeAgpvIQVaucXkJCizC6xiNwR3k2">
					<rect x="0" y="0" width="170" height="16" transform="matrix(1.029,0,0,1.029,391.905,499.648)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_oJnue3RZOg05ScRf1kSf5aMDJiaCvJCT)">
				<text transform="matrix(1.029,0,0,1.029,227.325,530.507)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_oJnue3RZOg05ScRf1kSf5aMDJiaCvJCT">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,518.163)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_43ULiAZP7yE57Y06TdbWtp5yOlTrs03c)">
				<text transform="matrix(1.029,0,0,1.029,358.989,530.507)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_43ULiAZP7yE57Y06TdbWtp5yOlTrs03c">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,518.163)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_loXOfTR4rlP8RwdfqbBTnl5hfLuqVfK3)">
				<text transform="matrix(1.029,0,0,1.029,375.447,530.507)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_loXOfTR4rlP8RwdfqbBTnl5hfLuqVfK3">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,518.163)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Wqc8CqKHbSnNfIun4271lHIVNqRYmB9C)">
				<text transform="matrix(1.029,0,0,1.029,391.905,530.507)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X25</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Wqc8CqKHbSnNfIun4271lHIVNqRYmB9C">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,391.905,518.163)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="top">
		<path d="M 224.213 22.67 L 752.437 22.67 C 754.486 22.67 756.15 24.334 756.15 26.383 L 756.15 186.787 C 756.15 188.836 754.486 190.5 752.437 190.5 L 224.213 190.5 C 222.164 190.5 220.5 188.836 220.5 186.787 L 220.5 26.383 C 220.5 24.334 222.164 22.67 224.213 22.67 Z" style="stroke:none;fill:#353333;stroke-linecap:square;stroke-miterlimit:2;"/>
		<path d="M 224.213 22.67 L 752.437 22.67 C 754.486 22.67 756.15 24.334 756.15 26.383 L 756.15 186.787 C 756.15 188.836 754.486 190.5 752.437 190.5 L 224.213 190.5 C 222.164 190.5 220.5 188.836 220.5 186.787 L 220.5 26.383 C 220.5 24.334 222.164 22.67 224.213 22.67 Z" style="fill:none;stroke:#6DCFF6;stroke-width:3;stroke-linecap:square;stroke-miterlimit:2;"/>
		<g id="Group">
			<g clip-path="url(#_clipPath_JOl0BJrBiRvTqK5Ud25LoSYg6I3PhHum)">
				<text transform="matrix(1.029,0,0,1.029,227.325,46.714)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STLR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_JOl0BJrBiRvTqK5Ud25LoSYg6I3PhHum">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,227.325,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_uUYUVTKDnf1VYQj0DiahiVpxJgH3zttW)">
				<text transform="matrix(1.029,0,0,1.029,358.989,46.714)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">WZR</text>
			</g>
			<defs>
				<clipPath id="_clipPath_uUYUVTKDnf1VYQj0DiahiVpxJgH3zttW">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,358.989,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ib5MjS2AzxjYxED08SZe2SCorkNahVYv)">
				<text transform="matrix(1.029,0,0,1.029,383.676,46.714)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ib5MjS2AzxjYxED08SZe2SCorkNahVYv">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,383.676,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_l397xuaiprCD7bEx7DXC6tChG8KWyLr4)">
				<text transform="matrix(1.029,0,0,1.029,400.134,46.714)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_l397xuaiprCD7bEx7DXC6tChG8KWyLr4">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,400.134,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_CSOgKn1G83D598PN8mUymnX3Buw0gcY0)">
				<text transform="matrix(1.029,0,0,1.029,408.363,46.714)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_CSOgKn1G83D598PN8mUymnX3Buw0gcY0">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,408.363,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Ilqownjm30IUiU2vVpKXJhdQRJPUwpNm)">
				<text transform="matrix(1.029,0,0,1.029,424.821,46.714)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Ilqownjm30IUiU2vVpKXJhdQRJPUwpNm">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,424.821,34.37)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_91VAmL0d1wGAa7cRoyYtqHAsxUBRHdI0)">
				<text transform="matrix(1.029,0,0,1.029,227.325,65.229)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_91VAmL0d1wGAa7cRoyYtqHAsxUBRHdI0">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,52.885)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_UHY7MVa4JA9BocdtfhhNowLdjmter7TM)">
				<text transform="matrix(1.029,0,0,1.029,358.989,65.229)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_UHY7MVa4JA9BocdtfhhNowLdjmter7TM">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,52.885)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_AsxIIojxMlZiFU5bOq3AA8UYYQX4sw6Y)">
				<text transform="matrix(1.029,0,0,1.029,375.447,65.229)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_AsxIIojxMlZiFU5bOq3AA8UYYQX4sw6Y">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,52.885)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_0golcmsZ1Lg0fx1dyEEzqd77sybNVF0J)">
				<text transform="matrix(1.029,0,0,1.029,391.905,65.229)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x16</text>
			</g>
			<defs>
				<clipPath id="_clipPath_0golcmsZ1Lg0fx1dyEEzqd77sybNVF0J">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,391.905,52.885)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_nTXvr7wVw7A8kiDg6zFqMkGKDG77e0za)">
				<text transform="matrix(1.029,0,0,1.029,227.325,83.744)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">STP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_nTXvr7wVw7A8kiDg6zFqMkGKDG77e0za">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_bGqgMJkcd7tpYQahtE4m2p081oHboWvN)">
				<text transform="matrix(1.029,0,0,1.029,358.989,83.744)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X9</text>
			</g>
			<defs>
				<clipPath id="_clipPath_bGqgMJkcd7tpYQahtE4m2p081oHboWvN">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_El8sXjjIeZhdCuA3glbbTekhskqVp2bS)">
				<text transform="matrix(1.029,0,0,1.029,375.447,83.744)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_El8sXjjIeZhdCuA3glbbTekhskqVp2bS">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_dW83AEYi6BMPmqeB1dkYTzlo0BsqusaH)">
				<text transform="matrix(1.029,0,0,1.029,391.905,83.744)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">X8</text>
			</g>
			<defs>
				<clipPath id="_clipPath_dW83AEYi6BMPmqeB1dkYTzlo0BsqusaH">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,391.905,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eZwcHkrNSiPFlA0DbrKuAyNyxdP2rRZf)">
				<text transform="matrix(1.029,0,0,1.029,408.363,83.744)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eZwcHkrNSiPFlA0DbrKuAyNyxdP2rRZf">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,408.363,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Ahy6qkxVNUYSmZrEulU9xHnkjw8jqTkS)">
				<text transform="matrix(1.029,0,0,1.029,424.821,83.744)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">[</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Ahy6qkxVNUYSmZrEulU9xHnkjw8jqTkS">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,424.821,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ayelFUrNKOdlcuPaHjSjuMr5bwYwZiZq)">
				<text transform="matrix(1.029,0,0,1.029,433.05,83.744)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ayelFUrNKOdlcuPaHjSjuMr5bwYwZiZq">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,433.05,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_P0jaz0pQg3xW6EUgblYF5YwDRNxeo0bc)">
				<text transform="matrix(1.029,0,0,1.029,449.508,83.744)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_P0jaz0pQg3xW6EUgblYF5YwDRNxeo0bc">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,449.508,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_RIzQMfRgbGkU4HV1UvvfVdcpbY62TL0G)">
				<text transform="matrix(1.029,0,0,1.029,457.737,83.744)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x50</text>
			</g>
			<defs>
				<clipPath id="_clipPath_RIzQMfRgbGkU4HV1UvvfVdcpbY62TL0G">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,457.737,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_5KjAmrj6imi28oFsYRcB4Lzmv8tMpFca)">
				<text transform="matrix(1.029,0,0,1.029,498.882,83.744)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">+</text>
			</g>
			<defs>
				<clipPath id="_clipPath_5KjAmrj6imi28oFsYRcB4Lzmv8tMpFca">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,498.882,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_FlWXg1OoY295KuxSx8BzpIQZ8nEzPX0l)">
				<text transform="matrix(1.029,0,0,1.029,507.111,83.744)" id="Text" class="hlr hlr-name-localvariable" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">var_60</text>
			</g>
			<defs>
				<clipPath id="_clipPath_FlWXg1OoY295KuxSx8BzpIQZ8nEzPX0l">
					<rect x="0" y="0" width="50" height="16" transform="matrix(1.029,0,0,1.029,507.111,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_eEg9dXsyupOV5yxbfGtlpEPomx1aZ0ZT)">
				<text transform="matrix(1.029,0,0,1.029,556.485,83.744)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">]</text>
			</g>
			<defs>
				<clipPath id="_clipPath_eEg9dXsyupOV5yxbfGtlpEPomx1aZ0ZT">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,556.485,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_RSr8Jp2pr1cWmNg8BeGeClhZrPngNFNF)">
				<text transform="matrix(1.029,0,0,1.029,564.714,83.744)" id="Text" class="hlr hlr-error" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">!</text>
			</g>
			<defs>
				<clipPath id="_clipPath_RSr8Jp2pr1cWmNg8BeGeClhZrPngNFNF">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,564.714,71.401)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_tCOkL9bKpDqWjDFt40GDZBiUDeZIazVc)">
				<text transform="matrix(1.029,0,0,1.029,227.325,102.259)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">MOV</text>
			</g>
			<defs>
				<clipPath id="_clipPath_tCOkL9bKpDqWjDFt40GDZBiUDeZIazVc">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,89.916)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_jXVI3LcFY3zUG9zdfA47nI7iiEJ6ivd6)">
				<text transform="matrix(1.029,0,0,1.029,358.989,102.259)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_jXVI3LcFY3zUG9zdfA47nI7iiEJ6ivd6">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,89.916)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_iF1pBwCEMM4z563PxJFgVBDK37xv6zZL)">
				<text transform="matrix(1.029,0,0,1.029,375.447,102.259)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_iF1pBwCEMM4z563PxJFgVBDK37xv6zZL">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,89.916)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_VXcdiinoo0voK4kn0ZXKw6ooCpLQ15ze)">
				<text transform="matrix(1.029,0,0,1.029,391.905,102.259)" id="Text" class="hlr hlr-comment-special-red" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#SYS_pathconf</text>
			</g>
			<defs>
				<clipPath id="_clipPath_VXcdiinoo0voK4kn0ZXKw6ooCpLQ15ze">
					<rect x="0" y="0" width="106" height="16" transform="matrix(1.029,0,0,1.029,391.905,89.916)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_w0HCFmDc0x1jPjAicEIVqDI1yDJdyLbH)">
				<text transform="matrix(1.029,0,0,1.029,227.325,120.775)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">BL</text>
			</g>
			<defs>
				<clipPath id="_clipPath_w0HCFmDc0x1jPjAicEIVqDI1yDJdyLbH">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,227.325,108.431)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_wCjaLINH33F16dUeps1egJpK7UwIa2yk)">
				<text transform="matrix(1.029,0,0,1.029,358.989,120.775)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">_syscall</text>
			</g>
			<defs>
				<clipPath id="_clipPath_wCjaLINH33F16dUeps1egJpK7UwIa2yk">
					<rect x="0" y="0" width="66" height="16" transform="matrix(1.029,0,0,1.029,358.989,108.431)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_hoyZCxLQu1D44EzIQ3TUuHlP7RTNlrre)">
				<text transform="matrix(1.029,0,0,1.029,227.325,139.29)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">ADD</text>
			</g>
			<defs>
				<clipPath id="_clipPath_hoyZCxLQu1D44EzIQ3TUuHlP7RTNlrre">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Msc1iVU3tXYCFaWEQDUZErf7Ahi2aMth)">
				<text transform="matrix(1.029,0,0,1.029,358.989,139.29)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Msc1iVU3tXYCFaWEQDUZErf7Ahi2aMth">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_UkFUFVFqgcU8bnVxObFNee3X6YtprzB8)">
				<text transform="matrix(1.029,0,0,1.029,375.447,139.29)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_UkFUFVFqgcU8bnVxObFNee3X6YtprzB8">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_7WMV5E6Rov7B6s0U0ma842OK7ZRl7lua)">
				<text transform="matrix(1.029,0,0,1.029,391.905,139.29)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">SP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_7WMV5E6Rov7B6s0U0ma842OK7ZRl7lua">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,391.905,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_3uLC97BDgE5ExMCsF3Zf7VnwX6mt72NN)">
				<text transform="matrix(1.029,0,0,1.029,408.363,139.29)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_3uLC97BDgE5ExMCsF3Zf7VnwX6mt72NN">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,408.363,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_H52K9ox1Kkgrx8cTRqCzyNt3iQFSriZ0)">
				<text transform="matrix(1.029,0,0,1.029,424.821,139.29)" id="Text" class="hlr hlr-literal-number-hex" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#0x10</text>
			</g>
			<defs>
				<clipPath id="_clipPath_H52K9ox1Kkgrx8cTRqCzyNt3iQFSriZ0">
					<rect x="0" y="0" width="42" height="16" transform="matrix(1.029,0,0,1.029,424.821,126.946)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_1N3tH203sLz5CcwCQVnh4nFa6KsQBmFX)">
				<text transform="matrix(1.029,0,0,1.029,227.325,157.805)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">CMP</text>
			</g>
			<defs>
				<clipPath id="_clipPath_1N3tH203sLz5CcwCQVnh4nFa6KsQBmFX">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,227.325,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_vYwJuxk4A97u3Q0wgudLBfDwbhdciJxg)">
				<text transform="matrix(1.029,0,0,1.029,358.989,157.805)" id="Text" class="hlr hlr-name-register" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">W0</text>
			</g>
			<defs>
				<clipPath id="_clipPath_vYwJuxk4A97u3Q0wgudLBfDwbhdciJxg">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,358.989,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZnJwLTV7Ig2KnQs7cBqmfc3buGsA5mEM)">
				<text transform="matrix(1.029,0,0,1.029,375.447,157.805)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZnJwLTV7Ig2KnQs7cBqmfc3buGsA5mEM">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,375.447,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ibqEurrLQNEcCqXrQxhxUFpt9XLjl4Pk)">
				<text transform="matrix(1.029,0,0,1.029,391.905,157.805)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#1</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ibqEurrLQNEcCqXrQxhxUFpt9XLjl4Pk">
					<rect x="0" y="0" width="18" height="16" transform="matrix(1.029,0,0,1.029,391.905,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_li1K15d3dY68gMRhBuU2PtSfIhEroaz5)">
				<text transform="matrix(1.029,0,0,1.029,408.363,157.805)" id="Text" class="hlr hlr-punctuation" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">,</text>
			</g>
			<defs>
				<clipPath id="_clipPath_li1K15d3dY68gMRhBuU2PtSfIhEroaz5">
					<rect x="0" y="0" width="10" height="16" transform="matrix(1.029,0,0,1.029,408.363,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_DjUXZWZavzEujgeQdgffJSAK0ySMukDM)">
				<text transform="matrix(1.029,0,0,1.029,416.592,157.805)" id="Text" class="hlr hlr-keyword-type" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">LSL</text>
			</g>
			<defs>
				<clipPath id="_clipPath_DjUXZWZavzEujgeQdgffJSAK0ySMukDM">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,416.592,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_Yz74vF27N9VMOaHmNeC912EWwZ1Js4xU)">
				<text transform="matrix(1.029,0,0,1.029,441.279,157.805)" id="Text" class="hlr hlr-literal-number-integer" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">#12</text>
			</g>
			<defs>
				<clipPath id="_clipPath_Yz74vF27N9VMOaHmNeC912EWwZ1Js4xU">
					<rect x="0" y="0" width="26" height="16" transform="matrix(1.029,0,0,1.029,441.279,145.462)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_ZQSbTGdu8xqS5ptkkGwCA7ahMIMIXjiH)">
				<text transform="matrix(1.029,0,0,1.029,227.325,176.32)" id="Text" class="hlr hlr-name-instruction" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">B.NE</text>
			</g>
			<defs>
				<clipPath id="_clipPath_ZQSbTGdu8xqS5ptkkGwCA7ahMIMIXjiH">
					<rect x="0" y="0" width="34" height="16" transform="matrix(1.029,0,0,1.029,227.325,163.977)"/>
				</clipPath>
			</defs>
			<g clip-path="url(#_clipPath_28KNdQ9gwaIis5z25KQgNNrlyIC1dlNJ)">
				<text transform="matrix(1.029,0,0,1.029,358.989,176.32)" id="Text" class="hlr hlr-name-function" font-family="Fira Code" font-weight="400" font-size="13px" font-style="normal" font-variant-ligatures="none" stroke="none">loc_not_jailbroken</text>
			</g>
			<defs>
				<clipPath id="_clipPath_28KNdQ9gwaIis5z25KQgNNrlyIC1dlNJ">
					<rect x="0" y="0" width="146" height="16" transform="matrix(1.029,0,0,1.029,358.989,163.977)"/>
				</clipPath>
			</defs>
		</g>
	</g>
	<g id="skip_path">
		<path d=" M 414.783 193.913 L 414.783 206.087 L 780 206.087 L 780 559.13 L 426.957 559.13 L 426.957 571.304" id="Path" fill="none" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(0,150,136)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 422.007 570.342 L 426.957 580.242 L 431.906 570.342 Z " fill="rgb(0,150,136)" stroke="none"/>
	</g>
	<g id="detec_path">
		<line x1="366.087" y1="193.913" x2="366.087" y2="218.261" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 217.299 L 366.087 227.198 L 371.037 217.299 Z " fill="rgb(255,0,0)" stroke="none"/>
		<line x1="366.087" y1="546.957" x2="366.087" y2="571.304" id="Path" vector-effect="non-scaling-stroke" stroke-width="2" stroke="rgb(255,0,0)" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="3"/>
		<path d=" M 361.137 570.342 L 366.087 580.242 L 371.037 570.342 Z " fill="rgb(255,0,0)" stroke="none"/>
	</g>
	<g id="cydia">
		<g id="g896">
			<path d=" M 59.21 384.685 C 52.786 383.127 47.278 377.772 45.639 371.491 C 45.051 369.239 45 365.174 45 320.17 C 45 275.166 45.051 271.101 45.639 268.849 C 47.322 262.401 53.135 256.917 59.749 255.538 C 62.522 254.96 157.478 254.96 160.251 255.538 C 166.865 256.917 172.678 262.401 174.361 268.849 C 174.949 271.101 175 275.166 175 320.17 C 175 365.174 174.949 369.239 174.361 371.491 C 172.678 377.939 166.865 383.423 160.251 384.802 C 157.261 385.425 61.807 385.315 59.21 384.685 L 59.21 384.685 Z " id="path875" fill="rgb(93,46,31)"/>
			<g id="Group">
				<path d=" M 117.991 365.337 C 134.192 361.945 147.379 350.366 152.503 335.032 C 154.217 329.906 154.764 326.353 154.764 320.356 C 154.764 316.424 154.568 313.85 154.099 311.621 C 150.174 292.98 136.482 279.286 117.805 275.322 C 113.453 274.398 104.689 274.398 100.336 275.322 C 81.66 279.286 67.968 292.98 64.043 311.621 C 63.128 315.966 63.128 324.746 64.043 329.09 C 67.379 344.935 77.745 357.289 92.604 363.129 C 100.219 366.122 110.125 366.984 117.991 365.337 L 117.991 365.337 Z " id="path873" fill="rgb(255,255,255)"/>
			</g>
			<path d=" M 100.868 360.293 C 85.77 357.12 73.766 345.811 69.645 330.877 C 68.461 326.587 68.036 318.914 68.722 314.222 C 70.56 301.655 78.684 290.371 90.375 284.15 C 101.641 278.155 116.5 278.155 127.767 284.15 C 135.553 288.294 141.928 294.813 145.845 302.634 C 150.92 312.772 151.08 326.679 146.241 337.152 C 141.719 346.94 133.19 354.896 123.232 358.618 C 116.675 361.068 107.74 361.737 100.868 360.293 L 100.868 360.293 Z " id="path871" fill="rgb(93,46,31)"/>
			<g id="Group">
				<path d=" M 124.495 346.447 L 132.858 342.952 L 132.961 337.694 C 133.018 334.802 132.916 332.435 132.735 332.435 C 132.554 332.435 127.303 334.503 121.067 337.03 L 109.729 341.626 L 109.049 340.468 C 108.675 339.832 107.734 338.308 106.958 337.081 L 105.547 334.851 L 105.543 344.582 L 105.54 354.313 L 110.836 352.127 C 113.749 350.925 119.896 348.369 124.495 346.447 L 124.495 346.447 Z " id="path869" fill="rgb(255,255,255)"/>
				<path d=" M 102.938 342.099 C 102.938 334.019 102.817 330.577 102.532 330.577 C 102.309 330.577 99.295 331.508 95.833 332.646 L 89.54 334.715 L 87.133 332.8 L 84.726 330.884 L 84.726 335.935 L 84.726 340.985 L 86.654 342.378 C 93.049 347.001 102.422 353.568 102.659 353.592 C 102.813 353.608 102.938 348.436 102.938 342.099 Z " id="path867" fill="rgb(250,249,249)"/>
				<path d=" M 135.744 328.388 C 135.971 328.168 134.314 319.164 133.972 318.761 C 133.904 318.681 111.065 327.14 106.562 328.913 C 106.204 329.054 105.912 329.303 105.912 329.467 C 105.912 329.721 109.401 335.806 110.948 338.249 C 111.446 339.037 111.579 338.991 123.456 333.854 C 130.058 330.999 135.588 328.539 135.744 328.388 L 135.744 328.388 Z " id="path865" fill="rgb(255,255,255)"/>
				<path d=" M 98.061 329.754 L 100.432 328.863 L 91.743 321.436 C 86.963 317.352 82.85 313.884 82.601 313.731 C 82.154 313.454 74.877 319.149 74.877 319.776 C 74.877 319.941 78.289 322.92 82.46 326.395 L 90.044 332.713 L 92.867 331.679 C 94.42 331.11 96.757 330.244 98.061 329.754 Z " id="path863" fill="rgb(255,255,255)"/>
				<path d=" M 117.053 322.777 C 117.041 322.495 109.906 319.423 109.269 319.425 C 108.272 319.428 97.689 323.99 97.993 324.285 C 98.158 324.445 99.43 325.479 100.821 326.583 L 103.35 328.591 L 110.206 325.779 C 113.977 324.233 117.058 322.882 117.053 322.777 Z " id="path861" fill="rgb(255,255,255)"/>
				<path d=" M 102.84 320.289 L 108.142 318.178 L 108.142 316.201 C 108.142 315.113 108.016 314.22 107.863 314.216 C 107.71 314.212 105.117 315.252 102.102 316.525 L 96.62 318.841 L 96.62 320.621 C 96.62 321.786 96.778 322.4 97.079 322.4 C 97.332 322.4 99.924 321.45 102.84 320.289 L 102.84 320.289 Z " id="path859" fill="rgb(255,255,255)"/>
				<path d=" M 118.992 319.705 C 118.904 318.428 118.803 317.348 118.768 317.306 C 118.734 317.264 116.831 316.394 114.539 315.373 L 110.372 313.516 L 110.372 315.542 C 110.372 316.657 110.352 317.694 110.328 317.847 C 110.293 318.076 118.251 321.913 118.944 322.002 C 119.059 322.016 119.081 320.983 118.992 319.705 L 118.992 319.705 Z " id="path857" fill="rgb(255,255,255)"/>
				<path d=" M 95.115 319.891 L 95.097 318.126 L 90.409 314.781 C 84.23 310.372 84.651 310.581 84.793 311.979 C 84.892 312.952 85.713 313.847 89.744 317.373 C 92.401 319.698 94.701 321.612 94.854 321.628 C 95.008 321.644 95.125 320.862 95.115 319.891 L 95.115 319.891 Z " id="path855" fill="rgb(255,255,255)"/>
				<path d=" M 127.163 319.342 L 131.874 317.502 L 131.994 314.561 C 132.06 312.943 132.074 311.62 132.025 311.621 C 131.975 311.621 129.341 312.915 126.171 314.496 L 120.407 317.371 L 120.412 318.678 C 120.415 319.396 120.519 320.365 120.644 320.831 C 120.911 321.83 120.622 321.896 127.163 319.342 L 127.163 319.342 Z " id="path853" fill="rgb(255,255,255)"/>
				<path d=" M 101.567 315.114 C 104.263 313.969 106.588 312.922 106.734 312.787 C 107.007 312.534 95.186 304.931 94.519 304.931 C 93.786 304.931 84.913 308.558 84.971 308.834 C 85.024 309.087 96.243 317.197 96.54 317.197 C 96.609 317.197 98.87 316.26 101.567 315.114 Z " id="path851" fill="rgb(255,255,255)"/>
				<path d=" M 126.539 312.929 C 128.175 312.173 129.916 311.397 130.408 311.204 C 131.237 310.878 131.016 310.676 127.365 308.435 L 123.427 306.019 L 117.178 309.16 L 110.929 312.301 L 112.23 312.855 C 112.946 313.159 114.935 313.99 116.651 314.701 L 119.772 315.993 L 121.669 315.147 C 122.712 314.682 124.904 313.684 126.539 312.929 L 126.539 312.929 Z " id="path849" fill="rgb(255,255,255)"/>
				<path d=" M 139.331 307.388 C 139.074 307.149 123.403 299.356 123.178 299.356 C 123.064 299.356 123.02 300.234 123.082 301.308 L 123.194 303.259 L 128.389 306.493 C 133.823 309.875 134.53 310.491 134.53 311.842 C 134.53 312.516 134.977 312.201 137.008 310.098 C 138.37 308.687 139.416 307.467 139.331 307.388 L 139.331 307.388 Z " id="path847" fill="rgb(255,255,255)"/>
				<path d=" M 88.925 305.222 L 94.576 302.807 L 96.129 303.869 C 96.984 304.453 97.778 304.931 97.895 304.931 C 98.011 304.931 98.106 303.628 98.106 302.035 L 98.106 299.139 L 101.277 297.711 C 103.022 296.925 104.392 296.227 104.324 296.158 C 104.228 296.062 93.297 300.373 81.123 305.31 L 80.307 305.641 L 81.68 308.607 L 83.054 311.574 L 83.164 309.605 L 83.274 307.637 L 88.925 305.222 Z " id="path845" fill="rgb(255,255,255)"/>
				<path d=" M 108.414 306.348 C 108.207 305.837 100.029 301.398 99.77 301.657 C 99.688 301.739 99.741 302.876 99.886 304.185 L 100.151 306.564 L 104.053 308.909 L 107.956 311.254 L 108.283 309.045 C 108.463 307.83 108.522 306.617 108.414 306.348 L 108.414 306.348 Z " id="path843" fill="rgb(255,255,255)"/>
				<path d=" M 115.801 308.063 L 121.15 305.248 L 121.15 303.046 C 121.15 301.516 121.008 300.852 120.686 300.872 C 120.43 300.887 117.963 302.016 115.203 303.38 L 110.186 305.86 L 110.076 308.369 C 110.015 309.749 110.075 310.878 110.209 310.878 C 110.343 310.878 112.859 309.611 115.801 308.063 L 115.801 308.063 Z " id="path841" fill="rgb(255,255,255)"/>
				<path d=" M 114.832 301.982 L 119.849 299.444 L 118.548 298.896 C 117.833 298.595 115.796 297.716 114.022 296.943 L 110.795 295.538 L 106.216 297.514 C 103.698 298.601 101.495 299.61 101.321 299.758 C 101.006 300.025 108.736 304.577 109.442 304.54 C 109.647 304.529 112.072 303.378 114.832 301.982 L 114.832 301.982 Z " id="path837" fill="rgb(255,255,255)"/>
			</g>
			<path d=" M 86.966 414.198 L 86.966 414.198 L 86.966 414.198 Q 84.753 414.198 83.378 413.765 L 83.378 413.765 L 83.378 413.765 Q 82.002 413.333 81.272 412.558 L 81.272 412.558 L 81.272 412.558 Q 80.542 411.783 80.272 410.739 L 80.272 410.739 L 80.272 410.739 Q 80.003 409.694 80.003 408.47 L 80.003 408.47 L 80.003 402.934 L 80.003 402.934 Q 80.003 401.676 80.267 400.603 L 80.267 400.603 L 80.267 400.603 Q 80.531 399.531 81.255 398.733 L 81.255 398.733 L 81.255 398.733 Q 81.979 397.936 83.361 397.492 L 83.361 397.492 L 83.361 397.492 Q 84.742 397.049 86.966 397.049 L 86.966 397.049 L 86.966 397.049 Q 89.088 397.049 90.385 397.481 L 90.385 397.481 L 90.385 397.481 Q 91.683 397.914 92.356 398.7 L 92.356 398.7 L 92.356 398.7 Q 93.03 399.486 93.266 400.547 L 93.266 400.547 L 93.266 400.547 Q 93.502 401.608 93.502 402.866 L 93.502 402.866 L 93.502 403.068 L 90.234 403.45 L 90.234 402.608 L 90.234 402.608 Q 90.234 401.44 89.942 400.805 L 89.942 400.805 L 89.942 400.805 Q 89.65 400.171 88.942 399.918 L 88.942 399.918 L 88.942 399.918 Q 88.235 399.666 86.966 399.666 L 86.966 399.666 L 86.966 399.666 Q 85.113 399.666 84.226 400.25 L 84.226 400.25 L 84.226 400.25 Q 83.338 400.833 83.338 402.541 L 83.338 402.541 L 83.338 408.807 L 83.338 408.807 Q 83.338 409.941 83.731 410.542 L 83.731 410.542 L 83.731 410.542 Q 84.125 411.143 84.927 411.362 L 84.927 411.362 L 84.927 411.362 Q 85.73 411.581 86.977 411.581 L 86.977 411.581 L 86.977 411.581 Q 88.246 411.581 88.954 411.362 L 88.954 411.362 L 88.954 411.362 Q 89.661 411.143 89.948 410.531 L 89.948 410.531 L 89.948 410.531 Q 90.234 409.919 90.234 408.74 L 90.234 408.74 L 90.234 408.212 L 93.502 408.212 L 93.502 408.515 L 93.502 408.515 Q 93.502 409.739 93.277 410.772 L 93.277 410.772 L 93.277 410.772 Q 93.053 411.806 92.39 412.575 L 92.39 412.575 L 92.39 412.575 Q 91.728 413.344 90.425 413.771 L 90.425 413.771 L 90.425 413.771 Q 89.122 414.198 86.966 414.198 Z  M 96.602 419.353 L 96.602 419.353 L 96.377 416.826 L 96.377 416.826 Q 97.511 416.657 98.337 415.978 L 98.337 415.978 L 98.337 415.978 Q 99.162 415.298 99.679 413.939 L 99.679 413.939 L 99.87 413.445 L 95.321 401.844 L 98.365 401.844 L 101.363 410.02 L 103.901 401.844 L 106.945 401.844 L 102.778 413.771 L 102.778 413.771 Q 101.801 416.567 100.291 417.831 L 100.291 417.831 L 100.291 417.831 Q 98.78 419.094 96.602 419.353 Z  M 108.719 410.267 L 108.719 410.267 L 108.719 405.449 L 108.719 405.449 Q 108.719 403.776 109.904 402.681 L 109.904 402.681 L 109.904 402.681 Q 111.089 401.586 113.728 401.586 L 113.728 401.586 L 113.728 401.586 Q 114.245 401.586 114.845 401.704 L 114.845 401.704 L 114.845 401.704 Q 115.446 401.822 115.974 402.013 L 115.974 402.013 L 115.974 396.892 L 119.029 396.892 L 119.029 413.906 L 116.962 413.906 L 116.637 413.198 L 116.637 413.198 Q 116.053 413.614 115.25 413.889 L 115.25 413.889 L 115.25 413.889 Q 114.447 414.164 113.515 414.164 L 113.515 414.164 L 113.515 414.164 Q 111.066 414.164 109.893 413.125 L 109.893 413.125 L 109.893 413.125 Q 108.719 412.086 108.719 410.267 Z  M 115.974 411.536 L 115.974 411.536 L 115.974 404.135 L 115.974 404.135 Q 115.671 403.989 115.149 403.854 L 115.149 403.854 L 115.149 403.854 Q 114.626 403.72 113.986 403.72 L 113.986 403.72 L 113.986 403.72 Q 112.942 403.72 112.358 404.09 L 112.358 404.09 L 112.358 404.09 Q 111.774 404.461 111.774 405.382 L 111.774 405.382 L 111.774 410.312 L 111.774 410.312 Q 111.774 411.233 112.319 411.626 L 112.319 411.626 L 112.319 411.626 Q 112.863 412.019 113.874 412.019 L 113.874 412.019 L 113.874 412.019 Q 114.503 412.019 115.064 411.884 L 115.064 411.884 L 115.064 411.884 Q 115.626 411.75 115.974 411.536 Z  M 122.173 413.906 L 122.173 401.844 L 125.217 401.844 L 125.217 413.906 L 122.173 413.906 L 122.173 413.906 Z  M 122.151 399.868 L 122.151 396.892 L 125.228 396.892 L 125.228 399.868 L 122.151 399.868 L 122.151 399.868 Z  M 131.36 414.164 L 131.36 414.164 L 131.36 414.164 Q 129.81 414.164 128.839 413.266 L 128.839 413.266 L 128.839 413.266 Q 127.867 412.367 127.867 410.874 L 127.867 410.874 L 127.867 410.874 Q 127.867 410.02 128.215 409.357 L 128.215 409.357 L 128.215 409.357 Q 128.563 408.695 129.484 408.128 L 129.484 408.128 L 129.484 408.128 Q 130.405 407.561 132.124 407.021 L 132.124 407.021 L 132.124 407.021 Q 133.527 406.572 134.196 406.19 L 134.196 406.19 L 134.196 406.19 Q 134.864 405.809 134.864 405.18 L 134.864 405.18 L 134.864 405.18 Q 134.864 404.45 134.431 404.085 L 134.431 404.085 L 134.431 404.085 Q 133.999 403.72 132.966 403.72 L 132.966 403.72 L 132.966 403.72 Q 131.82 403.72 131.455 404.169 L 131.455 404.169 L 131.455 404.169 Q 131.09 404.618 131.09 405.314 L 131.09 405.314 L 131.09 405.786 L 128.227 405.786 L 128.227 405.427 L 128.227 405.427 Q 128.227 403.675 129.395 402.63 L 129.395 402.63 L 129.395 402.63 Q 130.563 401.586 133.033 401.586 L 133.033 401.586 L 133.033 401.586 Q 134.841 401.586 135.897 402.091 L 135.897 402.091 L 135.897 402.091 Q 136.953 402.597 137.413 403.512 L 137.413 403.512 L 137.413 403.512 Q 137.874 404.427 137.874 405.674 L 137.874 405.674 L 137.874 410.447 L 137.874 410.447 Q 137.874 411.267 138.081 411.519 L 138.081 411.519 L 138.081 411.519 Q 138.289 411.772 138.851 411.772 L 138.851 411.772 L 138.727 413.996 L 138.087 413.996 L 138.087 413.996 Q 136.829 413.996 136.133 413.647 L 136.133 413.647 L 136.133 413.647 Q 135.437 413.299 135.111 412.569 L 135.111 412.569 L 135.111 412.569 Q 134.628 413.209 133.656 413.687 L 133.656 413.687 L 133.656 413.687 Q 132.685 414.164 131.36 414.164 Z  M 132.382 412.131 L 132.382 412.131 L 132.382 412.131 Q 132.943 412.131 133.696 411.817 L 133.696 411.817 L 133.696 411.817 Q 134.448 411.502 134.864 410.851 L 134.864 410.851 L 134.864 407.796 L 134.864 407.796 Q 134.561 408.043 133.898 408.341 L 133.898 408.341 L 133.898 408.341 Q 133.235 408.639 132.472 408.919 L 132.472 408.919 L 132.472 408.919 Q 131.472 409.29 131.158 409.739 L 131.158 409.739 L 131.158 409.739 Q 130.843 410.188 130.843 410.705 L 130.843 410.705 L 130.843 410.705 Q 130.843 411.435 131.27 411.783 L 131.27 411.783 L 131.27 411.783 Q 131.697 412.131 132.382 412.131 Z " id="Compound Path" fill="rgb(93,46,31)"/>
		</g>
	</g>
</svg>



</figure>
<figcaption></figcaption>
</center>
<p>Thanks to the <span class="dark-boxed dark-purple">#EVT_*</span> cross-references, we can go <strong>statically</strong> through
all the basic blocks that use these <span class="dark-boxed dark-purple">#EVT_*</span> variables and
highlight the underlying checks that could trigger the RASP callback(s).
Before detailing the checks, it is worth mentioning the following points:</p>
<ol>
<li>Whilst the application uses a commercial obfuscator which provides native code obfuscation in addition to
RASP, the code is <strong>lightly obfuscated</strong> which makes static assembly code analysis doable very easily.</li>
<li>As it will be discussed in <a href="#rasp-design-weaknesses">&quot;<em>RASP Weaknesses</em>&quot;</a>, the application setups the <strong>same callback</strong> for <strong>all</strong>
the RASP events. Thus, it eases the RASP bypass and the dynamic analysis of the application.</li>
</ol>
<h2 id="anti-debug">Anti-Debug</h2>
<p>The version of the obfuscator used by SingPass implements two kinds of debug check. First, it checks if
the parent process id (<code>ppid</code>) is the same as <code>/sbin/launchd</code> which should be <strong>1</strong>.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> pid_t LAUNCHD_PID <span style="color:#666">=</span> <span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>pid_t ppid <span style="color:#666">=</span> getppid();
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (ppid <span style="color:#666">!=</span> LAUNCHD_PID) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Trigger EVT_ENV_DEBUGGER
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-binary-lock" style="color: #084298" >&#160;</span>
  <code>getppid</code> is called either through a function or with a syscall.
</div>
<p>If it is not the case, it triggers the <code>EVT_ENV_DEBUGGER</code> event. The second check is based on <code>sysctl</code> which
is used to access the <code>extern_proc.p_flag</code> value. If this flag contains the <code>P_TRACED</code> value, the RASP routine
triggers the <code>EVT_ENV_DEBUGGER</code> event.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> names[] <span style="color:#666">=</span> {
</span></span><span style="display:flex;"><span>  CTL_KERN,
</span></span><span style="display:flex;"><span>  KERN_PROC,
</span></span><span style="display:flex;"><span>  KERN_PROC_PID,
</span></span><span style="display:flex;"><span>  getpid(),
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>kinfo_proc info;
</span></span><span style="display:flex;"><span><span style="color:#b00040">int</span> sizeof_info <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">sizeof</span>(kinfo_proc);
</span></span><span style="display:flex;"><span><span style="color:#b00040">int</span> ret <span style="color:#666">=</span> sysctl(names, <span style="color:#666">4</span>, <span style="color:#666">&amp;</span>info, <span style="color:#666">&amp;</span>sizeof_info, <span style="color:#008000;font-weight:bold">nullptr</span>, <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (info.kp_proc.p_flag  <span style="color:#666">&amp;</span> P_TRACED) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Trigger EVT_ENV_DEBUGGER
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>In the SingPass binary, we can find an instance of these two checks in the following ranges of addresses:</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <samp>ppid:   0x10071F420 &ndash; 0x10071F474</samp><br />
<samp>sysctl: 0x100151668 &ndash; 0x100151730</samp>
</div>
<h2 id="jailbreak-detection">Jailbreak Detection</h2>
<p>As for most of the jailbreak detections, the obfuscator tries to detect if the device
is jailbroken by checking if some files exist (or not) on the device.</p>
<p>Files or directories are checked with syscalls or a regular functions thanks to the following <em>helpers</em>:</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <pre>
<samp>pathconf:    0x100008EB0 -- 0x100008F28</samp>
<samp>utimes:      0x10000D8D4 -- 0x10000D948</samp>
<samp>stat:        0x100012188 -- 0x10001221C</samp>
<samp>open:        0x10002D478 -- 0x10002D4D8</samp>
<samp>fopen:       0x1000474E4 -- 0x100047554</samp>
<samp>stat64:      0x10006AA30 -- 0x10006AAD8</samp>
<samp>getfsstat64: 0x10047E82C -- 0x10047E914</samp></pre>
</div>
<p>While in the introduction, I mentioned that a dump of the section <code>__data</code> reveals strings related to jailbreak
detection, the dump does not reveal <strong>all the strings</strong> used by the obfuscator.</p>
<p>By looking closely at the strings encoding mechanism, it turns out that some strings are decoded <em>just-in-time</em>
in a <em>temporary variable</em>. I&rsquo;ll explain the strings encoding mechanism in the second part of this series of blog posts
but at this point, we can uncover the strings by setting hooks on functions like <code>fopen</code>, <code>utimes</code> and dumping the
<code>__data</code> section right after these calls.
Then, we can iterate over the different dumps to see if new strings appear.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>$ python dump_analysis.py
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Processing __data_0.raw
</span></span><span style="display:flex;"><span>0x01010b935c h/.installed_unc0ver
</span></span><span style="display:flex;"><span>0x01010b986a w/taurine/pspawn_payload.dylib
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Processing __data_392.raw
</span></span><span style="display:flex;"><span>0x01010b910e y__TEXT
</span></span><span style="display:flex;"><span>0x01010b91b3 /System/Library/dyld/dyld_shared_cache_arm64e
</span></span><span style="display:flex;"><span>0x01010b9174 /System/Library/Caches/com.apple.dyld/dyld_shared_cache_arm64e
</span></span><span style="display:flex;"><span>0x01010b9136 /System/Library/Caches/com.apple.dyld/dyld_shared_cache_arm64
</span></span><span style="display:flex;"><span>0x01010b9126 dyld_v1  arm64e
</span></span><span style="display:flex;"><span>0x01010b9116 dyld_v1   arm64
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Processing __data_393.raw
</span></span><span style="display:flex;"><span>0x01010afb90 /Users/xxxxxxx/Desktop/Xcode/ndi-sp-mobile-ios-swift/SingPass/[...]
</span></span><span style="display:flex;"><span>0x01010b942c /var/jb
</span></span><span style="display:flex;"><span>0x01010af910 https://bio-stream.singpass.gov.sg
</span></span><span style="display:flex;"><span>0x01010af6a0 https://api.myinfo.gov.sg/spm/v3
</span></span><span style="display:flex;"><span>0x01010b93b0 /.mount_rw
</span></span></code></pre></div><p>In the end, the approach does not enable to have all the strings decoded but it enables to have a <em>good coverage</em>.
The list of the files used for detecting jailbreak is given the <a href="#annexes">Annexes</a>.</p>
<p>There is also a particular check for detecting the <code>unc0ver</code> jailbreak which consists in trying to unmount <code>/.installed_unc0ver</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#666">0x100E4D814</span><span style="color:#666">:</span> _unmount(<span style="color:#ba2121">&#34;/.installed_unc0ver&#34;</span>)
</span></span></code></pre></div><h2 id="environment">Environment</h2>
<p>The obfuscator also checks environment variables that trigger the <code>EVT_ENV_JAILBREAK</code> event.
Some of these checks seem to be related to code lifting detection while still triggering the <code>EVT_ENV_JAILBREAK</code>
event.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (strncmp(_dyld_get_image_name(<span style="color:#666">0</span>), <span style="color:#ba2121">&#34;/private/var/folders&#34;</span>, <span style="color:#666">0x14</span>)) {
</span></span><span style="display:flex;"><span>  <span style="color:#666">-&gt;</span> Trigger EVT_ENV_JAILBREAK
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (strncmp(getenv(<span style="color:#ba2121">&#34;HOME&#34;</span>), <span style="color:#ba2121">&#34;/Users&#34;</span>, <span style="color:#666">6</span>) <span style="color:#666">==</span> <span style="color:#666">0</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#666">-&gt;</span> Trigger EVT_ENV_JAILBREAK
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (strncmp(getenv(<span style="color:#ba2121">&#34;HOME&#34;</span>), <span style="color:#ba2121">&#34;mobile&#34;</span>, <span style="color:#666">6</span>) <span style="color:#666">!=</span> <span style="color:#666">0</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#666">-&gt;</span> Trigger EVT_ENV_JAILBREAK
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">char</span> buffer[<span style="color:#666">0x400</span>];
</span></span><span style="display:flex;"><span>size_t buff_size <span style="color:#666">=</span> <span style="color:#666">0x400</span>;
</span></span><span style="display:flex;"><span>_NSGetExecutablePath(buffer, <span style="color:#666">&amp;</span>buff_size);
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (buffer.startswith(<span style="color:#ba2121">&#34;/private/var/folders&#34;</span>)) {
</span></span><span style="display:flex;"><span>  <span style="color:#666">-&gt;</span> Trigger EVT_ENV_JAILBREAK
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-gears" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">startswith()</h3>
    From a reverse engineering perspective, startswith() is actually implemented as a
succession of xor that are &ldquo;or-ed&rdquo; to get a boolean. This might be the result of an optimization from the compiler.
You can observe this pattern in the basic block located at the address: 0x100015684.
  </div>
  </div>
  </div>
</div>
<h2 id="advanced-detections">Advanced Detections</h2>
<p>In addition to regular checks, the obfuscator performs advanced checks like verifying
the current status of the SIP (<strong>S</strong>ystem <strong>I</strong>ntegrity <strong>P</strong>rotection), and more precisely,
the KEXTS code signing status.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-face-monocle" style="color: #084298" >&#160;</span>
  From my weak experience in iOS jailbreaking, I think that no Jailbreak disables
the <code>CSR_ALLOW_UNTRUSTED_KEXTS</code> flag. Instead, I guess that it is used to detect if the application is running
on an Apple M1 which allows such deactivation.
</div>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>csr_config_t buffer <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (__csrctl(CSR_ALLOW_UNTRUSTED_KEXTS, buffer, <span style="color:#008000;font-weight:bold">sizeof</span>(csr_config_t)) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/*
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">   * SIP is disabled with CSR_ALLOW_UNTRUSTED_KEXTS
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">   * -&gt; Trigger EVT_ENV_JAILBREAK
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">   */</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly range: 0x100004640 &ndash; 0x1000046B8</samp>
</div>
<p>The obfuscator also uses the Sandbox API to verify if some paths exist:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> ret <span style="color:#666">=</span> __mac_syscall(<span style="color:#ba2121">&#34;Sandbox&#34;</span>, <span style="color:#408080;font-style:italic">/* Sandbox Check */</span> <span style="color:#666">2</span>,
</span></span><span style="display:flex;"><span>                        getpid(), <span style="color:#ba2121">&#34;file-test-existence&#34;</span>, SANDBOX_FILTER_PATH,
</span></span><span style="display:flex;"><span>                        <span style="color:#ba2121">&#34;/opt/homebrew/bin/brew&#34;</span>);
</span></span></code></pre></div><p>The paths checked through this API are OSX-related directories, so I guess it is also used to verify that the
current code has not been lifted on an Apple Silicon.
Here is, for instance, a list of directories checked with the <em>Sandbox</em> API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>/Applications/Xcode.app/Contents/MacOS/Xcode
</span></span><span style="display:flex;"><span>/System/iOSSupport/
</span></span><span style="display:flex;"><span>/opt/homebrew/bin/brew
</span></span><span style="display:flex;"><span>/usr/local/bin/brew
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly range: 0x100ED7684 (function)</samp>
</div>
<p>In addition, it uses the Sandbox attribute <code>file-read-metadata</code> as an alternative to the <code>stat()</code>
function.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly range: 0x1000ECA5C &ndash; 0x1000ECE54</samp>
</div>
<p>The application uses the sandbox API through private syscalls to determine whether some jailbreak artifacts exists.
This is very smart but I guess it&rsquo;s not really compliant with the Apple policy.</p>
<h2 id="code-symbol-table">Code Symbol Table</h2>
<p>The purpose of this check is to verify that the addresses of the resolved imports point to the right library.
In other words, this check verifies that the import table is not tampered with pointers that could be used
to hook imported functions.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Initialization: part of sub_100E544E8</samp>
</div>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly range: 0x100016FC4 &ndash; 0x100017024</samp>
</div>
<p>During the RASP checks initialization (<code>sub_100E544E8</code>), the obfuscator <strong>manually</strong> resolves
the imported functions. This manual resolution is performed by iterating over the symbols in
the <code>SingPass</code> binary, checking the library that imports the symbol, accessing (in-memory) the <code>__LINKEDIT</code>
segment of this library, parsing the exports trie, etc.
This manual resolution fills a table that contains the <strong>absolute address</strong> of the resolved symbols.</p>
<p>In addition, the initialization routine setups &ndash; what I called &ndash; a metadata structure that follows this layout:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 592 228" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="500">

<rect x="0" y="0" width="592" height="228" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="20"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0C8&#160;</tspan><tspan fill="#ffffff">nb_symbols</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCD</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0x399</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="36"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0C8</tspan></text>
<text x="7" y="52"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0D8&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">ALIGN</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0x20</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="68"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan fill="#C364FC">;&#160;symbols_metadata_t&#160;metadata</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="84"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan fill="#ffffff">metadata</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">symbols_index</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;symbols_index</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="100"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">origins</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;origins</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="116"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;resolved_la_syms</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="132"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;resolved_got_syms</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="148"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;macho_la_syms</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="164"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;macho_got_syms</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="180"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;stub_helper_start</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="196"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;stub_helper_end</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="212"  xml:space="preserve"><tspan fill="#5C92EA">__data:</tspan><tspan fill="#5C92EA">000000010109F0E0&#160;</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ababab">DCQ</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;field_unknown</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="228"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p><span class="dark-boxed dark-purple">symbols_index</span> is a kind of translation table that converts
an index known by the obfuscator into an index in the <code>__got</code> or the <code>__la_symbol_ptr</code> section.
The index&rsquo;s origin (i.e <code>__got</code> or <code>__la_symbol_ptr</code>) is determined by the <span class="dark-boxed dark-purple">origins</span>
table which contains enum-like integers:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">enum</span> <span style="color:#00f;font-weight:bold">SYM_ORIGINS</span> <span style="color:#666">:</span> <span style="color:#b00040">uint8_t</span> {
</span></span><span style="display:flex;"><span>  NONE      <span style="color:#666">=</span> <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>  LA_SYMBOL <span style="color:#666">=</span> <span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>  GOT       <span style="color:#666">=</span> <span style="color:#666">2</span>,
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><p>The length of both tables: <span class="dark-boxed dark-purple">symbols_index</span> and <span class="dark-boxed dark-purple">origins</span>,
is defined by the static variable <span class="dark-boxed text-white">nb_symbols</span> which is set to <span class="dark-boxed dark-clear-blue">0x399</span>.
The metadata structure is followed by two pointers: <code>resolved_la_syms</code> and <code>resolved_got_syms</code> which point to
the imports address table manually filled by the obfuscator.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-circle-info" style="color: #084298" >&#160;</span>
  There is a dedicated table for each section: <code>__got</code> and <code>__la_symbol_ptr</code>.
</div>
<p>Then, <span class="dark-boxed dark-purple">macho_la_syms</span> points to the beginning of the <code>__la_symbol_ptr</code>
section while <span class="dark-boxed dark-purple">macho_got_syms</span> points to the <code>__got</code> section.</p>
<p>Finally, <span class="dark-boxed dark-purple">stub_helper_start / stub_helper_end</span> holds the memory range
of the <code>__stub_helper</code> section. I&rsquo;ll describe the purpose of these values later.</p>
<p>All the values of this metadata structure are set during the initialization which takes place
in the function <code>sub_100E544E8</code>.</p>
<p>In different places of the <code>SingPass</code> binary, the obfuscator uses this metadata information to verify the
integrity of the resolved import(s). It starts by accessing the <span class="dark-boxed dark-purple">symbols_index</span> and
the <span class="dark-boxed dark-purple">origins</span> with a fixed value:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 571 226" width="100%" height="100%">
    <g font-family="Fira Code" font-size="12px" font-weight="500">

<rect x="0" y="0" width="571" height="226" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="22"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FC4&#160;</tspan><tspan fill="#ffffff">LDR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W26</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X22</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0xCA8</tspan><tspan fill="#aaaaaa">]</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;X22&#160;-&gt;&#160;symbols_index</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="39" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FC8&#160;</tspan><tspan fill="#ffffff">LDR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x498</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="56" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FCC&#160;</tspan><tspan fill="#ffffff">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">XZR</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">XZR</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x20</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="73" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FD0&#160;</tspan><tspan fill="#ffffff">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X22</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X23</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x58</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="90" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FD4&#160;</tspan><tspan fill="#ffffff">LDP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">Q0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">Q1</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x30</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="107" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016FD8&#160;</tspan><tspan fill="#ffffff">STUR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">Q0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x68</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="124"  xml:space="preserve"><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="141" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016F54&#160;</tspan><tspan fill="#ffffff">LDR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X25</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x488</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="158" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016F58&#160;</tspan><tspan fill="#ffffff">LDR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X24</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X19</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x490</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="175"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016F5C&#160;</tspan><tspan fill="#ffffff">LDRB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W21</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X23</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0x32A</tspan><tspan fill="#aaaaaa">]</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;X23&#160;-&gt;&#160;origins&#160;table</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="192" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016F60&#160;</tspan><tspan fill="#ffffff">ADRL</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">check_region_cbk</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;cbk</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="209" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100016F68&#160;</tspan><tspan fill="#ffffff">BL</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#FDD418">iterate_system_region</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="226"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-hand-point-right" style="color: #084298" >&#160;</span>
  Since the <code>symbols_index</code> table contains <code>uint32_t</code> values, <code>#0xCA8</code> matches
<code>#0x32A</code> (index for the origins table) when divided by <code>sizeof(uint32_t)</code>: <code>0xCA8 = 0x32A * sizeof(uint32_t)</code>
</div>
<p>In other words, we have the following operations:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">uint32_t</span> sym_idx   <span style="color:#666">=</span> metadata.symbols_index[<span style="color:#666">0x32a</span>];
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> SYM_ORIGINS origin <span style="color:#666">=</span> metadata.origins[<span style="color:#666">0x32a</span>]
</span></span></code></pre></div><p>Then, given the <code>sym_idx</code> value and depending on the origin of the symbol, the function accesses either
the resolved <code>__got</code> table or the resolved <code>__la_symbol_ptr</code> table. This access is done with a helper function
located at <code>sub_100ED6CC0</code>. It can be summed up with the following pseudo-code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>uintptr_t<span style="color:#666">*</span> section_ptr       <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>uintptr_t<span style="color:#666">*</span> manually_resolved <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span>      (origin <span style="color:#666">==</span> <span style="color:#408080;font-style:italic">/* 1 */</span> SYM_ORIGINS<span style="color:#666">::</span>LA_SYMBOL) {
</span></span><span style="display:flex;"><span>  section_ptr       <span style="color:#666">=</span> metadata.macho_la_syms;
</span></span><span style="display:flex;"><span>  manually_resolved <span style="color:#666">=</span> metadata.resolved_la_syms;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">else</span> <span style="color:#00f">if</span> (origin <span style="color:#666">==</span> <span style="color:#408080;font-style:italic">/* 2 */</span> SYM_ORIGINS<span style="color:#666">::</span>GOT) {
</span></span><span style="display:flex;"><span>  section_ptr       <span style="color:#666">=</span> metadata.macho_got_syms;
</span></span><span style="display:flex;"><span>  manually_resolved <span style="color:#666">=</span> metadata.resolved_got_syms;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The entries at the index <code>sym_idx</code> of <code>section_ptr</code> and <code>manually_resolved</code> are compared and if they
don&rsquo;t match, the event <span class="dark-boxed dark-purple">#EVT_CODE_SYMBOL_TABLE</span> is triggered.</p>
<p>Actually, the comparison covers different cases. First, the obfuscator handles the case where the symbol
at <code>sym_idx</code> is not yet resolved. In that case, <code>section_ptr[sym_idx]</code> points to the symbols resolution stub
located in the section <code>__stub_helper</code>. That&rsquo;s why the <code>metadata</code> structure contains the memory range of this section:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> uintptr_t addr_from_section <span style="color:#666">=</span> section_ptr[sym_idx];
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (metadata.stub_helper_start <span style="color:#666">&lt;=</span> addr <span style="color:#666">&amp;&amp;</span> addr <span style="color:#666">&lt;</span> metadata.stub_helper_end) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Skip
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>In addition, if the pointers do not match, the function verifies their location using <code>dladdr</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> uintptr_t addr_from_section    <span style="color:#666">=</span> section_ptr[sym_idx];
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> uintptr_t addr_from_resolution <span style="color:#666">=</span> manually_resolved[sym_idx];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (addr_from_section <span style="color:#666">!=</span> addr_from_resolution) {
</span></span><span style="display:flex;"><span>  Dl_info info_section;
</span></span><span style="display:flex;"><span>  Dl_info info_resolution;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  dl_info(addr_from_section,    <span style="color:#666">&amp;</span>info_section);
</span></span><span style="display:flex;"><span>  dl_info(addr_from_resolution, <span style="color:#666">&amp;</span>info_resolution);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (info_section.dli_fbase <span style="color:#666">!=</span> info_resolution.dli_fbase) {
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">// --&gt; Trigger EVT_CODE_SYMBOL_TABLE;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-hand-point-right" style="color: #084298" >&#160;</span>
  Two pointers might not match if, for instance, an imported function is hooked with Frida.
</div>
<p>In the case where the <code>origin[sym_idx]</code> is set to <code>SYM_ORIGINS::NONE</code> the function skips the check. Thus,
we can simply disable this RASP check by filling the original table with 0. The number of symbols is close
to the metadata structure and the address of the metadata structure is leaked by the <code>___atomic_load</code> and
<code>___atomic_store</code> functions.</p>
<center>

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="825" height="400" viewBox="0 0 218.28125 105.83333" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="ixg_code_symbol_table.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="false" showguides="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5"/><sodipodi:guide position="-6.6145829,99.218749" orientation="0,-1" id="guide2693"/><sodipodi:guide position="6.6145829,-6.6145776" orientation="1,0" id="guide2695"/><sodipodi:guide position="211.76969,32.059275" orientation="1,0" id="guide2697"/><sodipodi:guide position="224.89582,6.6145882" orientation="0,-1" id="guide2699"/></sodipodi:namedview><defs id="defs2"><rect x="12.248169" y="197.19025" width="122.75183" height="192.80975" id="rect61440"/><linearGradient id="linearGradient58177"><stop style="stop-color:#3485fd;stop-opacity:1" offset="0" id="stop58173"/><stop style="stop-color:#ffffff;stop-opacity:0;" offset="0.31358811" id="stop58175"/></linearGradient><rect x="519.219" y="36.396082" width="138.50527" height="38.100309" id="rect56787"/><rect x="167.71789" y="58.299003" width="315.67285" height="95.700982" id="rect53759"/><linearGradient id="linearGradient46458"><stop style="stop-color:#1b5ec3;stop-opacity:1;" offset="0" id="stop46454"/><stop style="stop-color:#5c92ea;stop-opacity:0;" offset="0.21300586" id="stop46456"/></linearGradient><rect x="550.5" y="275" width="19.5" height="25" id="rect27412"/><rect x="569.99997" y="159.99999" width="124.99999" height="20" id="rect19264"/><rect x="574.99997" y="199.99999" width="289.99998" height="94.999994" id="rect18426"/><rect x="24.999999" y="24.999998" width="135.90723" height="19.000002" id="rect12549"/><inkscape:path-effect effect="bspline" id="path-effect8487" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8161"/><inkscape:path-effect effect="bspline" id="path-effect7874" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5194" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5190" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5186" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5182" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5178" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><inkscape:path-effect effect="bspline" id="path-effect5174" is_visible="true" lpeversion="1" weight="33.333333" steps="2" helper_size="0" apply_no_weight="true" apply_with_weight="true" only_selected="false"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8375"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8431"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8437"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8443"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect8449"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12915"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12917"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12919"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12921"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12923"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect12925"/><rect x="24.999999" y="24.999998" width="135.90723" height="19.000002" id="rect12927"/><rect x="29.922562" y="30.459557" width="52.750687" height="19.680611" id="rect12921-9"/><rect x="29.922562" y="30.459557" width="52.750687" height="19.680611" id="rect8449-9"/><rect x="569.99997" y="159.99999" width="124.99999" height="20" id="rect19272"/><rect x="569.99997" y="159.99999" width="150.52004" height="95.299243" id="rect20240"/><rect x="569.99997" y="159.99999" width="150.52004" height="95.299243" id="rect20298"/><rect x="550.5" y="275" width="19.5" height="25" id="rect28824"/><rect x="550.5" y="275" width="20.516426" height="19.466484" id="rect29594"/><rect x="29.922562" y="30.459557" width="52.750687" height="19.680611" id="rect30493"/><rect x="29.922562" y="30.459557" width="52.750687" height="19.680611" id="rect30883"/><linearGradient xlink:href="#linearGradient46458" id="linearGradient46460" x1="574.88269" y1="377.78" x2="574.26526" y2="139.41711" gradientUnits="userSpaceOnUse"/><rect x="29.922562" y="30.459556" width="52.750687" height="19.680611" id="rect56214"/><linearGradient xlink:href="#linearGradient46458" id="linearGradient57696" gradientUnits="userSpaceOnUse" x1="574.88269" y1="377.78" x2="574.26526" y2="139.41711"/><linearGradient xlink:href="#linearGradient58177" id="linearGradient58179" x1="134" y1="269.99999" x2="385.99999" y2="269.99999" gradientUnits="userSpaceOnUse"/><linearGradient xlink:href="#linearGradient58177" id="linearGradient58903" gradientUnits="userSpaceOnUse" x1="134" y1="269.99999" x2="385.99999" y2="269.99999"/><rect x="12.248169" y="197.19025" width="122.75183" height="192.80975" id="rect63549"/></defs><g id="layer1"><g id="g33990" style="stroke-width:1.00012498;stroke-dasharray:none"><rect style="opacity:1;mix-blend-mode:normal;fill:none;fill-opacity:1;stroke:url(#linearGradient46460);stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" id="rect33878" width="340.00003" height="230.00002" x="394.99997" y="149.99998" transform="scale(0.26458333)"/><rect style="opacity:1;mix-blend-mode:normal;fill:none;fill-opacity:1;stroke:url(#linearGradient57696);stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" id="rect57694" width="340.00003" height="230.00002" x="394.99997" y="149.99998" transform="matrix(0.26458333,0,0,-0.26458333,0,140.22916)"/><g id="path32649" transform="scale(0.26458333)"><path style="color:#000000;fill:#c364fc;stroke-miterlimit:2;-inkscape-stroke:none" d="M 417,93.998047 165,94 v 2 l 250,-0.002 V 270 h 2 z" id="path68503"/><g id="g68493"><g id="path68495" transform="matrix(0,0.62429472,-0.62429472,0,415.99998,269.99999)"><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path68499"/><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path68501"/></g></g></g><path style="opacity:1;fill:none;fill-opacity:1;stroke:#c364fc;stroke-width:1.99999999;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 664.99997,94.999995 h -40" id="path32651" transform="scale(0.26458333)"/><g id="path32653" transform="scale(0.26458333)"><path style="color:#000000;fill:#c364fc;stroke-miterlimit:2;-inkscape-stroke:none" d="m 573.89453,93.857422 -0.12891,38.134768 2,0.006 0.1211,-36.126956 L 594.99414,96 l 0.0117,-2 z" id="path68517"/><g id="g68507"><g id="path68509" transform="matrix(-0.00210166,0.62429118,-0.62429118,-0.00210166,574.76525,131.99508)"><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path68513"/><path style="color:#000000;fill:#c364fc;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path68515"/></g></g></g><path style="display:none;opacity:1;fill:none;fill-opacity:1;stroke:#0b2822;stroke-width:3.77999999;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 150,94.997415 H 415.99998 V 274.99999" id="path50408" transform="scale(0.26458333)" sodipodi:nodetypes="ccc" sodipodi:insensitive="true"/></g><g id="g10366"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2.26996;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1" id="rect4230" width="141.13498" height="114.09193" x="49.999996" y="130" transform="matrix(0.23432564,0,0,0.23191557,-5.1003268,-18.244138)" ry="0"/><g id="g10559"><g id="g8936" style="display:inline" transform="translate(-0.52265413,15.051963)"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,18.281254,9.0743693)" id="text8435" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8437);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68745">0x18e</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.21985429,9.0537454)" id="text8429" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8431);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68747">0x190</tspan></text></g><g id="g8483" transform="translate(0.81620138,2.25344)" style="display:inline"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-1.1190012,12.799313)" id="text8441" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8443);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68749">0x191</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,16.805629,12.686152)" id="text8447" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8449);display:inline;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68751">0x18f</tspan></text></g><g id="g8471" transform="translate(-0.446262,5.2319124)" style="display:inline"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.14346219,0.48104902)" id="text8159" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8161);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:1.99937;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68753">0x18f</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,18.152759,0.37358748)" id="text8373" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect8375);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68755">0x0a8</tspan></text></g><path style="fill:#6dcff6;fill-opacity:1;stroke:#6dcff6;stroke-width:1.00000001;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 87.50259,44.994845 V 144.99998" id="path11047" transform="scale(0.26458333)"/><g id="path11053" transform="matrix(0.26458333,0,0,0.26458333,-6.8350416e-4,0.00937853)"/><path style="color:#000000;display:inline;fill:#c364fc;stroke-miterlimit:2;-inkscape-stroke:none" d="M 23.005859,75.039062 23,114.96094 h 4 l 0.0059,-39.921878 z" id="path11737" transform="matrix(0.26458333,0,0,0.26458333,-6.8350341e-4,0.00937853)" sodipodi:nodetypes="ccccc"/><path style="fill:#c364fc;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 22.997417,114.99639 H 148.99433" id="path11755" transform="scale(0.26458333)" sodipodi:nodetypes="cc"/><path style="fill:#c364fc;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 22.997417,114.99639 H 148.99433" id="path11757" transform="matrix(0.26458333,0,0,0.26458333,0,-10.583333)" sodipodi:nodetypes="cc"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.8506453,-0.24607267)" id="text12547" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12549);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="25" y="38.859238" id="tspan68757">Symbols Index</tspan></text></g></g><g id="g12913" transform="translate(171.7132,-0.33674335)"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2.26996;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:1" id="rect12865" width="141.13498" height="114.09193" x="49.999996" y="130" transform="matrix(0.23432564,0,0,0.23191557,-5.1003268,-18.244138)" ry="0"/><g id="g12911"><g id="g12875" style="display:inline" transform="translate(-0.52265413,15.051963)"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,18.281254,9.0743693)" id="text12869" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12915);display:inline;fill:#b42b6f;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68759">1</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.21985429,9.0537454)" id="text12873" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12917);display:inline;fill:#b42b6f;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68761">0x190</tspan></text></g><g id="g12885" transform="translate(0.81620138,2.25344)" style="display:inline"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-1.1190012,12.799313)" id="text12879" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12919);display:inline;fill:#ea95bf;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68763">0x191</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,16.805629,12.686152)" id="text12883" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12921);display:inline;fill:#ea95bf;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68765">1</tspan></text></g><g id="g12895" transform="translate(-0.446262,5.2319124)" style="display:inline"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,0.14346219,0.48104902)" id="text12889" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12923);display:inline;fill:#b42b6f;fill-opacity:1;stroke:none;stroke-width:1.99937;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68767">0x18f</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,18.152759,0.37358748)" id="text12893" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12925);display:inline;fill:#b42b6f;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="43.292347" id="tspan68769">2</tspan></text></g><path style="fill:#6dcff6;fill-opacity:1;stroke:#6dcff6;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 87.50259,44.994845 V 144.99998" id="path12897" transform="scale(0.26458333)"/><g id="g12899" transform="matrix(0.26458333,0,0,0.26458333,-6.8350416e-4,0.00937853)"/><g id="g13769" transform="matrix(-1,0,0,1,46.307149,2.7188781e-4)"><path style="color:#000000;display:inline;fill:#c364fc;stroke-miterlimit:2;-inkscape-stroke:none" d="M 23.005859,75.039062 23,114.96094 h 4 l 0.0059,-39.921878 z" id="path12901" transform="matrix(0.26458333,0,0,0.26458333,-6.8350341e-4,0.00937853)" sodipodi:nodetypes="ccccc"/><path style="fill:#c364fc;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 22.997417,114.99639 H 148.99433" id="path12903" transform="scale(0.26458333)" sodipodi:nodetypes="cc"/><path style="fill:#c364fc;fill-opacity:1;stroke:#c364fc;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="M 22.997417,114.99639 H 148.99433" id="path12905" transform="matrix(0.26458333,0,0,0.26458333,0,-10.583333)" sodipodi:nodetypes="cc"/></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.4138052,-0.10943977)" id="text12909" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect12927);display:inline;fill:#5c92ea;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="25" y="38.859238" id="tspan68771">Origins Table</tspan></text></g></g><g id="g18370" transform="translate(-6.614578)"><g id="g18354" transform="translate(-2.6458375)"><g id="g59352" transform="translate(9.2604155)"><rect style="opacity:1;fill:none;fill-opacity:1;stroke:url(#linearGradient58179);stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" id="rect58119" width="249.99998" height="240" x="135" y="149.99998" transform="scale(0.26458333)"/><rect style="opacity:1;fill:none;fill-opacity:1;stroke:url(#linearGradient58903);stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" id="rect58901" width="249.99998" height="240" x="135" y="149.99998" transform="matrix(-0.26458333,0,0,0.26458333,137.58333,0)"/></g><g id="g20180"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect17832" width="99.999992" height="150" x="24.999998" y="199.99998" transform="matrix(0.26458333,0,0,0.26458333,42.333335,6.6145779)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-102.08154,11.827074)" id="text19270" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect19272);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="570" y="173.85924" id="tspan68773">__got</tspan></text><g id="g23710" transform="translate(9.2604155)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23273" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,-1.5938544)"><tspan sodipodi:role="line" id="tspan23271" x="159.84544" y="249.99997">194d8fb00</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23680" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,4.9937183)"><tspan sodipodi:role="line" id="tspan23678" x="159.84544" y="249.99997">194d9181c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23684" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,11.581291)"><tspan sodipodi:role="line" id="tspan23682" x="159.84544" y="249.99997">194da5e5c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23688" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,18.168864)"><tspan sodipodi:role="line" id="tspan23686" x="159.84544" y="249.99997">194db6ae0</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23692" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,24.756436)"><tspan sodipodi:role="line" id="tspan23690" x="159.84544" y="249.99997">1da39a668</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23696" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,31.344009)"><tspan sodipodi:role="line" id="tspan23694" x="159.84544" y="249.99997">198648120</tspan></text></g></g><g id="g20177"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect18356" width="99.999992" height="150" x="24.999998" y="199.99998" transform="matrix(0.26458333,0,0,0.26458333,75.40625,-6.6145879)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-69.152557,-1.2115923)" id="text20238" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect20240);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="570" y="173.85924" id="tspan68775">Computed</tspan></text><g id="g23736" transform="translate(42.33333,-13.381471)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23714" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,-1.5938544)"><tspan sodipodi:role="line" id="tspan23712" x="159.84544" y="249.99997">194d8fb00</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23718" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,4.9937183)"><tspan sodipodi:role="line" id="tspan23716" x="159.84544" y="249.99997">194d9181c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23722" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,11.581291)"><tspan sodipodi:role="line" id="tspan23720" x="159.84544" y="249.99997">194da5e5c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23726" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,18.168864)"><tspan sodipodi:role="line" id="tspan23724" x="159.84544" y="249.99997">194db6ae0</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23730" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,24.756436)"><tspan sodipodi:role="line" id="tspan23728" x="159.84544" y="249.99997">1da39a668</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23734" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,31.344009)"><tspan sodipodi:role="line" id="tspan23732" x="159.84544" y="249.99997">198648120</tspan></text></g></g></g><g id="g18362" transform="matrix(-1,0,0,1,234.15624,0)"><g id="g19286"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect18358" width="99.999992" height="150" x="24.999998" y="199.99998" transform="matrix(0.26458333,0,0,0.26458333,42.333335,6.6145779)"/><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,226.43571,11.446073)" id="text19262" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect19264);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="570" y="173.85924" id="tspan68777">__la_symbol_ptr</tspan></text><g id="g23827" transform="matrix(-1,0,0,1,115.09375,-0.15230529)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23805" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,-1.5938544)"><tspan sodipodi:role="line" id="tspan23803" x="159.84544" y="249.99997">101582eb4</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23809" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,4.9937183)"><tspan sodipodi:role="line" id="tspan23807" x="159.84544" y="249.99997">1015de344</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23813" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,11.581291)"><tspan sodipodi:role="line" id="tspan23811" x="159.84544" y="249.99997">10246db7c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23817" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,18.168864)"><tspan sodipodi:role="line" id="tspan23815" x="159.84544" y="249.99997">10252a2c4</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#ff2a2a;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23821" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,24.756436)"><tspan sodipodi:role="line" id="tspan23819" x="159.84544" y="249.99997">102d0b9d4</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23825" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,31.344009)"><tspan sodipodi:role="line" id="tspan23823" x="159.84544" y="249.99997">102580d64</tspan></text></g><g id="g26562" style="fill:#ff0000;stroke:#ff0000" transform="translate(-70.11461,13.229167)"><rect style="fill:#ff0000;stroke:none;opacity:0.241153;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect26987" width="19.500008" height="25.00001" x="550.5" y="275" transform="matrix(-0.26458333,0,0,0.26458333,296.46564,-0.04052703)"/><path style="fill:#ff0000;fill-opacity:1;stroke:#ff0000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 424.99998,274.99999 145.00009,-1e-5" id="path26554" transform="matrix(0.26458333,0,0,0.26458333,2e-6,0)" sodipodi:nodetypes="cc"/><path style="fill:#ff0000;fill-opacity:1;stroke:#ff0000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 424.99998,299.99998 145.0001,0" id="path26558" transform="scale(0.26458333)" sodipodi:nodetypes="cc"/><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,295.66802,1.516852)" id="text29592" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:12px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect29594);display:inline;opacity:0.989639;fill:#800000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="550.5" y="285.5" id="tspan68779">!=</tspan></text><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,125.98507,65.905666)" id="text30881" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect30883);display:inline;fill:#003380;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="44.458984" id="tspan68781">0x18f</tspan></text></g></g><g id="g19283"><rect style="fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect18360" width="99.999992" height="150" x="24.999998" y="199.99998" transform="matrix(0.26458333,0,0,0.26458333,75.40625,-6.6145879)"/><text xml:space="preserve" transform="matrix(-0.26458333,0,0,0.26458333,259.52027,-1.2115923)" id="text20296" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:16px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect20298);display:inline;fill:#353333;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="570" y="173.85924" id="tspan68783">Computed</tspan></text><g id="g23788" transform="matrix(-1,0,0,1,148.16667,-13.381471)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#ff2a2a;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23782" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,24.756436)"><tspan sodipodi:role="line" id="tspan23780" x="159.84544" y="249.99997">10256296c</tspan></text><g id="g31316"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23766" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,-1.5938544)"><tspan sodipodi:role="line" id="tspan23764" x="159.84544" y="249.99997">101582eb4</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23770" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,4.9937183)"><tspan sodipodi:role="line" id="tspan23768" x="159.84544" y="249.99997">1015de344</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23774" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,11.581291)"><tspan sodipodi:role="line" id="tspan23772" x="159.84544" y="249.99997">10246db7c</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23778" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,18.168864)"><tspan sodipodi:role="line" id="tspan23776" x="159.84544" y="249.99997">10252a2c4</tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.66666662px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#6dcff6;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="159.84544" y="249.99997" id="text23786" transform="matrix(0.26458333,0,0,0.26458333,-1.162899,31.344009)"><tspan sodipodi:role="line" id="tspan23784" x="159.84544" y="249.99997">102580d64</tspan></text></g></g><g id="g24311" style="fill:#ff0000;stroke:#ff0000" transform="matrix(-1,0,0,1,227.54166,0)"><path style="fill:#ff0000;fill-opacity:1;stroke:#ff0000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 424.99998,274.99999 144.99998,0" id="path24253" transform="matrix(0.26458333,0,0,0.26458333,2e-6,0)" sodipodi:nodetypes="cc"/><path style="fill:#ff0000;fill-opacity:1;stroke:#ff0000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" d="m 424.99998,299.99998 144.99999,0" id="path26547" transform="scale(0.26458333)" sodipodi:nodetypes="cc"/><rect style="opacity:0.241153;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" id="rect26983" width="19.500008" height="25.00001" x="550.5" y="275" transform="matrix(0.26458333,0,0,0.26458333,-2e-6,0)"/><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,1.2771224,0.95236558)" id="text27410" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect27412);display:inline;opacity:0.989639;fill:#800000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="550.5" y="289" id="tspan68785">=</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,96.984256,65.905666)" id="text30491" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect30493);display:inline;fill:#003380;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="44.458984" id="tspan68787">0x18f</tspan></text></g></g></g></g><g id="g56228"><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-8.8790599,3.3060323)" id="text53757" style="font-style:normal;font-variant:normal;font-weight:600;font-stretch:normal;font-size:14.6667px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Semi-Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;white-space:pre;shape-inside:url(#rect53759);display:inline;opacity:1;fill:#a81efb;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" x="115.28808" y="0"><tspan x="250.16781" y="71.003158" id="tspan68789">Index translation table</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,152.15019,14.602418)" id="text56212" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:17.3333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect56214);display:inline;fill:#a81efb;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-opacity:0.996078"><tspan x="29.921875" y="45.625622" id="tspan68791">1</tspan></text></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,5.11283,6.9571088)" id="text61438" style="font-style:normal;font-variant:normal;font-weight:600;font-stretch:normal;font-size:14.6667px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Semi-Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect61440);display:inline;opacity:0.970556;fill:#073984;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" x="-45.484833" y="0"><tspan x="12.248047" y="209.89378" id="tspan68793">The origin 2 </tspan><tspan x="12.248047" y="228.22716" id="tspan68795">matches the </tspan><tspan x="12.248047" y="246.56053" id="tspan68797">symbols in the </tspan><tspan x="12.248047" y="264.89391" id="tspan68799">__got section.</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,175.90542,10.02246)" id="text63547" style="font-style:normal;font-variant:normal;font-weight:600;font-stretch:normal;font-size:14.6667px;font-family:'Nunito Sans';-inkscape-font-specification:'Nunito Sans, Semi-Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:end;white-space:pre;shape-inside:url(#rect63549);display:inline;opacity:0.970556;fill:#073984;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" x="64.412743" y="0"><tspan x="55.154452" y="209.89378" id="tspan68801">The origin 1 </tspan><tspan x="53.335801" y="228.22716" id="tspan68803">matches the
</tspan><tspan x="24.955771" y="246.56053" id="tspan68805">__la_symbol_ptr
</tspan><tspan x="87.509239" y="264.89391" id="tspan68807">section</tspan></text></g></svg>

</center>
<h2 id="code-tracing">Code Tracing</h2>
<p>The <em>Code Tracing</em> check aims to verify that the current is not <em>traced</em>.
By looking at the cross-references of <span class="dark-boxed dark-purple">#EVT_CODE_TRACING_cbk_ptr</span>,
we can identify two kinds of verification.</p>
<h3 id="gumexecctx">GumExecCtx</h3>
<p><span class="dark-boxed dark-purple">EVT_CODE_TRACING</span> seems able to <strong>detect</strong> if the
<strong>Frida&rsquo;s Stalker</strong> is running. It&rsquo;s the first time I can observe this kind of check and it&rsquo;s very smart.
For those who would like to follow this analysis with the raw assembly code, I will use this range of addresses
from the <a href="/post/22-08-singpass-rasp-analysis/bin/SingPass" alt="SingPass" target="_blank">SingPass</a>
 binary:</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>0x10019B6FC &ndash; 0x10019B82C</samp>
</div>
<p>Here is the graph of the function that performs the Frida Stalker check:</p>
<center>
<figure class="mb-4" id="fig-ixg-frida-stalker-detection">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="805.00024" height="1355.0005" viewBox="0 0 212.98965 358.51034" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="frida-stalker.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="true"><inkscape:grid type="xygrid" id="grid10793" spacingx="2.9104166" spacingy="2.9104166" snapvisiblegridlinesonly="false" originx="0" originy="0"/></sodipodi:namedview><defs id="defs2"><marker markerWidth="2.0669999" markerHeight="2.0669999" refX="4.0332971" refY="4.0332971" orient="auto" id="marker32409" viewBox="0 0 8.0665947 8.0665947" preserveAspectRatio="xMidYMid"><circle style="opacity:1;fill:#28a745;fill-opacity:1;stroke:none;stroke-width:0.296733;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" id="circle32403" cx="303.71848" cy="1138.2244" transform="matrix(0.89165945,0,0,0.89165945,-266.78015,-1010.8752)" r="4.5233607"/></marker><marker markerWidth="3.414" markerHeight="3.9468207" refX="4.4860001" refY="4.0300002" orient="auto" id="marker34426" viewBox="0 0 6.0095861 6.9474984" preserveAspectRatio="xMidYMid"><path style="color:#000000;opacity:1;fill:#28a745;fill-rule:evenodd;stroke:#28a745;stroke-width:0.264583pt;stroke-opacity:1;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path34418" transform="matrix(0.65472083,0,0,0.65472083,2.3220766,4.0300589)" sodipodi:nodetypes="cccc"/></marker><marker markerWidth="2.0669999" markerHeight="2.0669999" refX="4.0332971" refY="4.0332971" orient="auto" id="marker34441" viewBox="0 0 8.0665947 8.0665947" preserveAspectRatio="xMidYMid"><circle style="opacity:1;fill:#28a745;fill-opacity:1;stroke:none;stroke-width:0.296733;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" id="circle34420" cx="303.71848" cy="1138.2244" transform="matrix(0.89165945,0,0,0.89165945,-266.78015,-1010.8752)" r="4.5233607"/></marker><marker markerWidth="3.01" markerHeight="3.4797688" refX="3.486001" refY="4.0300589" orient="auto" id="marker37722" viewBox="0 0 6.0095861 6.9474984" preserveAspectRatio="xMidYMid"><path style="color:#000000;display:inline;fill:#dc3545;fill-rule:evenodd;stroke:#dc3545;stroke-width:0.264583pt;stroke-opacity:1;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path34412" transform="matrix(0.65472083,0,0,0.65472083,2.3220766,4.0300589)"/></marker></defs><g id="layer1" transform="translate(-2.6458334,-2.6458333)"><g id="g11415"><rect style="fill:#fafafa;fill-opacity:1;stroke:none;stroke-width:1.00157;stroke-linecap:square;stroke-miterlimit:6.9;paint-order:fill markers stroke" id="rect3274" width="803.00018" height="1353.0004" x="11.000003" y="11.000003" transform="scale(0.26458326)" ry="3.122077e-15"/><path style="fill:#fafafa;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" d="M 55.000015,11.000003 H 11.000003 v 44.000012" id="path9702" transform="scale(0.26458326)"/><path style="fill:#fafafa;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" d="M 55.000015,11.000003 H 11.000003 v 44.000012" id="path11108" transform="matrix(-0.26458326,0,0,0.26458326,218.01666,-1.6124934e-7)"/><path style="fill:#fafafa;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" d="M 55.000015,11.000003 H 11.000003 v 44.000012" id="path11110" transform="matrix(0.26458326,0,0,-0.26458326,-5.3750054e-8,363.80208)"/><path style="fill:#fafafa;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" d="M 55.000015,11.000003 H 11.000003 v 44.000012" id="path11112" transform="matrix(-0.26458326,0,0,-0.26458326,218.28125,363.80208)"/></g><g id="g25724" transform="matrix(1.1664,0,0,1.1664,-36.155451,60.99304)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect25689" width="92.337875" height="31.891167" x="78.399002" y="209.85005"/><g id="g23923" transform="matrix(0.26458333,0,0,0.26458333,78.175899,13.519548)"><text x="8" y="762" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21207">if</text><text x="32" y="762" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21209">(</text><text x="40" y="762" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21211">detected) {</text><text x="8" y="780" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21217"/><text x="24" y="780" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21219">rasp_event_t</text><text x="160" y="780" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21221" transform="translate(-34.293544)">event</text><text x="200" y="780" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21223" transform="translate(-36.008221)">;</text><text x="8" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21225"/><text x="24" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21227">event</text><text x="64" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21229">.</text><text x="72" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21231">code</text><text x="104" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21233"/><text x="184" y="798" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21235">=</text><text x="200" y="798" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21237">0x2000</text><text x="248" y="798" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21239">;</text><text x="8" y="816" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21241"/><text x="24" y="816" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21243">event</text><text x="64" y="816" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21245">.</text><text x="72" y="816" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21247">corrupted_ptr</text><text x="184" y="816" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21249">=</text><text x="200" y="816" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21251">0x13b71ae1e16d02e</text><text x="336" y="816" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21253">;</text><text x="8" y="834" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21255"/><text x="24" y="834" style="fill:#fdd418" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21257">EVT_CODE_TRACING_cbk_ptr</text><text x="216" y="834" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21259">(</text><text x="224" y="834" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21261">&amp;</text><text x="232" y="834" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21263">event</text><text x="272" y="834" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21265">)</text><text x="280" y="834" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21267">;</text><text x="8" y="852" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21269">}</text></g></g><g id="g25638" transform="matrix(1.1664,0,0,1.1664,-24.604,51.732606)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect25627" width="61.012154" height="8.1449633" x="84.158356" y="194.63014"/><g id="g23889" transform="matrix(0.26458333,0,0,0.26458333,84.072427,22.064147)"><text x="8" y="672" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21193">do</text><text x="32" y="672" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21195">while</text><text x="80" y="672" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21197">(</text><text x="88" y="672" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21199">tlv_idx</text><text x="152" y="672" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21201">!=</text><text x="176" y="672" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21203">0x200</text><text x="216" y="672" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21205">)</text></g></g><g id="g25592" transform="matrix(1.1664,0,0,1.1664,-31.056109,51.588708)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect25579" width="62.851822" height="17.482925" x="88.770164" y="171.73778"/><g id="g23880" transform="matrix(0.26458333,0,0,0.26458333,88.717714,18.010083)"><text x="8" y="600" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21175">detected</text><text x="80" y="600" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21177">=</text><text x="96" y="600" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21179">tlv_idx</text><text x="160" y="600" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21181">&lt;</text><text x="176" y="600" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21183">0x1fff</text><text x="224" y="600" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21185">;</text><text x="8" y="636" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21187">+</text><text x="16" y="636" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21189">+</text><text x="24" y="636" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21191">tlv_idx</text></g></g><g id="g30760" transform="matrix(1.1664,0,0,1.1664,39.98089,33.68197)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect30762" width="15.548337" height="7.2547073" x="51.519131" y="161.18269"/><g id="g30752" transform="matrix(0.26458333,0,0,0.26458333,46.803202,21.351202)"><text x="24" y="546" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21169">break</text><text x="64" y="546" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21171">;</text></g></g><g id="g24491" transform="matrix(1.1664,0,0,1.1664,-1.9909801,27.437007)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect24547" width="140.75844" height="31.876722" x="24.898193" y="126.88497"/><g id="g23869" transform="matrix(0.26458333,0,0,0.26458333,24.578983,16.019126)"><text x="8" y="438" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21057">bool</text><text x="48" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21059">in_range</text><text x="120" y="438" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21061">=</text><text x="136" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21063">address</text><text x="200" y="438" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21065">&lt;=</text><text x="224" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21067">tlv_addr</text><text x="296" y="438" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21069">&amp;&amp;</text><text x="320" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21071">tlv_addr</text><text x="392" y="438" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21073">&lt;</text><text x="408" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21075">address</text><text x="472" y="438" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21077">+</text><text x="488" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21079">size</text><text x="520" y="438" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21081">;</text><text x="8" y="456" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21083">bool</text><text x="48" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21085">cond</text><text x="80" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21087"/><text x="120" y="456" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21089">=</text><text x="136" y="456" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21091">*</text><text x="144" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21093">(</text><text x="152" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21095">tlv_addr</text><text x="224" y="456" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21097">+</text><text x="240" y="456" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21099">0x18</text><text x="272" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21101">)</text><text x="288" y="456" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21103">==</text><text x="312" y="456" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21105">tid</text><text x="344" y="456" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21107">&amp;&amp;</text><text x="8" y="474" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21109"/><text x="136" y="474" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21111">*</text><text x="144" y="474" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21113">(</text><text x="152" y="474" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21115">tlv_addr</text><text x="224" y="474" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21117">+</text><text x="240" y="474" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21119">0x24</text><text x="272" y="474" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21121">)</text><text x="288" y="474" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21123">&lt;=</text><text x="312" y="474" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21125">5</text><text x="320" y="474" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21127"/><text x="344" y="474" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21129">&amp;&amp;</text><text x="8" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21131"/><text x="136" y="492" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21133">*</text><text x="144" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21135">(</text><text x="152" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21137">tlv_addr</text><text x="224" y="492" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21139">+</text><text x="240" y="492" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21141">0x28</text><text x="272" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21143">)</text><text x="288" y="492" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21145">&lt;</text><text x="296" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21147"/><text x="312" y="492" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21149">3</text><text x="320" y="492" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21151">;</text><text x="8" y="528" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21153">if</text><text x="32" y="528" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21155">(</text><text x="40" y="528" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21157">in_range</text><text x="112" y="528" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21159">&amp;&amp;</text><text x="136" y="528" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21161">cond</text><text x="168" y="528" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21163">)</text><text x="8" y="546" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21167"/></g></g><g id="g23943" transform="matrix(1.1664,0,0,1.1664,-13.037332,2.4410929)" sodipodi:insensitive="true"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect23932" width="39.58606" height="7.9244323" x="84.954849" y="131.0276"/><g id="g23808" transform="matrix(0.26458333,0,0,0.26458333,84.646599,29.862038)"><text x="8" y="402" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21045">if</text><text x="32" y="402" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21047">(</text><text x="40" y="402" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21049">size</text><text x="80" y="402" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21051">&gt;=</text><text x="104" y="402" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21053">0x30</text><text x="136" y="402" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21055">)</text></g></g><g id="g23429" transform="matrix(1.1664,0,0,1.1664,-21.650491,15.935722)" sodipodi:insensitive="true"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect23799" width="138.63493" height="55.282185" x="42.814808" y="54.813046"/><g id="g23334" transform="matrix(0.26458333,0,0,0.26458333,42.547741,10.418679)"><text x="8" y="186" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20897">uint64_t</text><text x="80" y="186" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20899">size</text><text x="112" y="186" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20901"/><text x="168" y="186" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20903">=</text><text x="184" y="186" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20905">0</text><text x="192" y="186" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20907">;</text><text x="8" y="204" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20909">uint64_t</text><text x="80" y="204" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20911">address</text><text x="136" y="204" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20913"/><text x="168" y="204" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20915">=</text><text x="184" y="204" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20917">tlv_addr</text><text x="248" y="204" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20919">;</text><text x="8" y="222" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20921">int32_t</text><text x="72" y="222" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20923">object_name</text><text x="168" y="222" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20925">=</text><text x="184" y="222" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20927">0</text><text x="192" y="222" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20929">;</text><text x="8" y="240" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20931">auto</text><text x="48" y="240" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20933">info_cnt</text><text x="112" y="240" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20935"/><text x="168" y="240" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20937">=</text><text x="184" y="240" style="fill:#cc7a00" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20939">VM_REGION_BASIC_INFO_COUNT_64</text><text x="416" y="240" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20941">;</text><text x="8" y="258" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20943">auto</text><text x="48" y="258" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20945">task</text><text x="80" y="258" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20947"/><text x="168" y="258" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20949">=</text><text x="184" y="258" style="fill:#fdd418" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20951">mach_task_self</text><text x="296" y="258" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20953">(</text><text x="304" y="258" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20955">)</text><text x="312" y="258" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20957" transform="translate(-3.2722934e-6)">;</text><text x="8" y="294" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20959" transform="translate(-3.2722934e-6)">kern_return_t</text><text x="120" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20961" transform="translate(-3.2722934e-6)">kr</text><text x="144" y="294" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20963" transform="translate(-3.2722934e-6)">=</text><text x="160" y="294" style="fill:#fdd418" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20965" transform="translate(-3.2722934e-6)">_vm_region_64</text><text x="264" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20967" transform="translate(-3.2722934e-6)">(</text><text x="272" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20969" transform="translate(-3.2722934e-6)">task</text><text x="304" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20971" transform="translate(-3.2722934e-6)">,</text><text x="320" y="294" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20973" transform="translate(-3.2722934e-6)">&amp;</text><text x="328" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20975" transform="translate(-3.2722934e-6)">address</text><text x="384" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20977" transform="translate(-3.2722934e-6)">,</text><text x="400" y="294" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20979" transform="translate(-3.2722934e-6)">&amp;</text><text x="408" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20981" transform="translate(-3.2722934e-6)">size</text><text x="440" y="294" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20983" transform="translate(-3.2722934e-6)">,</text><text x="8" y="312" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20985" transform="translate(-3.2722934e-6)"/><text x="272" y="312" style="fill:#cc7a00" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20987" transform="translate(-3.2722934e-6)">VM_REGION_BASIC_INFO_64</text><text x="456" y="312" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20989" transform="translate(-3.2722934e-6)">,</text><text x="472" y="312" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20991" transform="translate(-3.2722934e-6)">&amp;</text><text x="480" y="312" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20993" transform="translate(-3.2722934e-6)">info</text><text x="512" y="312" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20995" transform="translate(-3.2722934e-6)">,</text><text x="8" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20997" transform="translate(-3.2722934e-6)"/><text x="272" y="330" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20999" transform="translate(-3.2722934e-6)">&amp;</text><text x="280" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21001" transform="translate(-3.2722934e-6)">info_cnt</text><text x="344" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21003" transform="translate(-3.2722934e-6)">,</text><text x="360" y="330" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21005" transform="translate(-3.2722934e-6)">&amp;</text><text x="368" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21007" transform="translate(-3.2722934e-6)">object_name</text><text x="456" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21009" transform="translate(-3.2722934e-6)">)</text><text x="464" y="330" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21011" transform="translate(-3.2722934e-6)">;</text><text x="8" y="366" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21013" transform="translate(-3.2722934e-6)">if</text><text x="32" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21015" transform="translate(-3.2722934e-6)">(</text><text x="40" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21017" transform="translate(-3.2722934e-6)">kr</text><text x="64" y="366" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21019" transform="translate(-3.2722934e-6)">==</text><text x="88" y="366" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21021" transform="translate(-3.2722934e-6)">0</text><text x="104" y="366" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21023" transform="translate(-3.2722934e-6)">&amp;&amp;</text><text x="128" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21025" transform="translate(-3.2722934e-6)">info</text><text x="160" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21027" transform="translate(-3.2722934e-6)">.</text><text x="168" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21029" transform="translate(-3.2722934e-6)">protection</text><text x="248" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21031" transform="translate(-3.2722934e-6)">)</text><text x="264" y="366" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21033" transform="translate(-3.2722934e-6)">&amp;</text><text x="280" y="366" style="fill:#cc7a00" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21035" transform="translate(-3.2722934e-6)">VM_PROT_READ</text><text x="376" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21037" transform="translate(-3.2722934e-6)">)</text><text x="392" y="366" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21039" transform="translate(-3.2722934e-6)">!=</text><text x="416" y="366" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21041" transform="translate(-3.2722934e-6)">0</text><text x="424" y="366" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text21043" transform="translate(-3.2722934e-6)">)</text></g></g><g id="g23299" transform="matrix(1.1664,0,0,1.1664,-26.652742,4.5239861)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect23301" width="103.33127" height="13.201753" x="64.755264" y="38.214535"/><g id="g23182" transform="matrix(0.26458333,0,0,0.26458333,64.843024,8.6706824)"><text x="8" y="132" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20853">void</text><text x="40" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20855">*</text><text x="56" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20857">tlv_addr</text><text x="128" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20859">=</text><text x="144" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20861">*</text><text x="152" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20863">(</text><text x="160" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20865">tlv_table</text><text x="240" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20867">+</text><text x="256" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20869">(</text><text x="264" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20871">tlv_idx</text><text x="328" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20873">&lt;</text><text x="336" y="132" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20875">&lt;</text><text x="352" y="132" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20877">3</text><text x="360" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20879">)</text><text x="368" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20881">)</text><text x="376" y="132" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20883">;</text><text x="8" y="150" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20885">if</text><text x="32" y="150" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20887">(</text><text x="40" y="150" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20889">tlv_addr</text><text x="112" y="150" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20891">!=</text><text x="136" y="150" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20893">0</text><text x="144" y="150" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20895">)</text></g></g><g id="g22872" transform="matrix(1.1664,0,0,1.1664,-21.247103,-1.3641459)"><rect style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1" id="rect22836" width="132.62659" height="22.434772" x="45.473141" y="7.6474042"/><g id="g22472" transform="matrix(0.26458333,0,0,0.26458333,45.368963,1.7700616)"><text x="8" y="42" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20789">uint64_t</text><text x="80" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20791">tid</text><text x="104" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20793"/><text x="152" y="42" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20795">=</text><text x="168" y="42" style="fill:#fdd418" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20797">_pthread_mach_thread_np</text><text x="352" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20799">(</text><text x="360" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20801">_pthread_self</text><text x="464" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20803">(</text><text x="472" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20805">)</text><text x="480" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20807">)</text><text x="488" y="42" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20809">;</text><text x="8" y="60" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20811">int64_t</text><text x="72" y="60" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20813">tlv_table</text><text x="152" y="60" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20815">=</text><text x="168" y="60" style="fill:#fdd418" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20817">MRS</text><text x="192" y="60" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20819">(</text><text x="200" y="60" style="fill:#ed1c24" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20821">TPIDRRO_EL0</text><text x="288" y="60" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20823">)</text><text x="304" y="60" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20825">&amp;</text><text x="320" y="60" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20827">0xfffffffffffffff8</text><text x="8" y="78" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20829">bool</text><text x="48" y="78" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20831">detected</text><text x="112" y="78" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20833"/><text x="152" y="78" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20835">=</text><text x="168" y="78" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20837">true</text><text x="200" y="78" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20839">;</text><text x="8" y="96" style="fill:#88b0f0" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20841">size_t</text><text x="64" y="96" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20843">tlv_idx</text><text x="120" y="96" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20845"/><text x="152" y="96" style="fill:#c364fc" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20847">=</text><text x="168" y="96" style="fill:#6dcff6" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20849">0x100</text><text x="208" y="96" style="fill:#ffffff" font-family="'Fira Code'" font-size="13px" font-weight="450" id="text20851">;</text></g></g><g id="g56840"><g id="g32285" style="display:inline"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker34426)" d="m 109.14059,231.6858 v 7.04477 l 50.93228,-0.0765 v 58.20832 l -50.93228,-0.11139 -0.031,6.71942" id="path44540" sodipodi:nodetypes="cccccc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="m 109.1406,35.454157 -1e-5,11.256004" id="path41704" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:#353333;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="M 109.14059,66.939565 V 77.403361" id="path43703" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:#353333;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="m 109.14059,146.04996 v 7.13052" id="path44528" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:#353333;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="m 109.15174,165.8937 -0.0112,7.13971" id="path44530" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:#353333;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="m 109.09256,215.33943 0.048,4.42534" id="path44532" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-mid:url(#marker32409);marker-end:url(#marker34426)" d="m 109.14059,273.99269 v 2.58082" id="path51337" sodipodi:nodetypes="cc"/><path style="display:inline;opacity:1;fill:none;fill-opacity:1;stroke:#28a745;stroke-width:0.79375;stroke-dasharray:3.175, 0.79375;stroke-dashoffset:0;stroke-opacity:1;marker-mid:url(#marker34441);marker-end:url(#marker34426)" d="m 104.77497,289.71867 v 2.91042 h 98.95414 V 43.656238 h -87.31248 l 0.0351,3.053923" id="path47424" sodipodi:nodetypes="cccccc"/></g><g id="g32282" style="display:inline"><path style="opacity:1;fill:none;fill-opacity:1;stroke:#dc3545;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker37722)" d="m 93.133308,215.33943 v 34.44755" id="path48878" sodipodi:nodetypes="cc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#dc3545;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker37722)" d="m 101.86456,146.04996 v 5.29166 H 14.552079 v 87.31248 h 66.410399 v 11.11249" id="path54523" sodipodi:nodetypes="cccccc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#dc3545;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker37722)" d="m 104.77497,165.8937 v 2.91042 H 20.372911 v 61.11873 h 66.939565 v 19.84374" id="path55532" sodipodi:nodetypes="cccccc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#dc3545;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker37722)" d="m 116.41663,66.939565 v 5.820831 h 81.49165 V 247.38535 h -72.7604 v 2.29177" id="path56542" sodipodi:nodetypes="cccccc"/><path style="opacity:1;fill:none;fill-opacity:1;stroke:#dc3545;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker37722)" d="m 93.133308,289.82907 v 13.64135" id="path47422" sodipodi:nodetypes="cc"/></g><g id="path25840" transform="translate(-42.33332,26.458325)"><g id="g27380"><g id="path27386" transform="matrix(0,0.17322817,-0.17322817,0,109.14059,276.57351)"><path style="color:#000000;display:none;fill:#28a745;fill-rule:evenodd;-inkscape-stroke:none" d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z" id="path27392"/></g><path id="path27382" style="fill:context-stroke" d="M 0,-1 H 0.585 C 1.33,-1 1.7,-1.6 2,-2 V 2 C 1.7,1.6 1.33,1 0.585,1 H 0 L -0.1,0 Z" sodipodi:nodetypes="sssssscsss" transform="matrix(0,0.39687499,-0.39687499,0,109.14059,273.99269)"/></g></g></g><g id="g25794" transform="translate(-0.83720973,0.07333025)" style="display:none" sodipodi:insensitive="true"><g id="g25797" transform="translate(0.793767,-3.1591539)"><path style="color:#000000;display:inline;fill:#dc3545;fill-rule:evenodd;stroke:#dc3545;stroke-width:1pt;stroke-opacity:1;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path24714" transform="matrix(0.17322817,0,0,0.17322817,73.630249,303.71249)"/><circle style="opacity:1;fill:#dc3545;fill-opacity:1;stroke:none;stroke-width:1.12151;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" id="path31340" cx="303.71848" cy="1138.2244" transform="matrix(0.23591816,0,0,0.23591816,-0.72323872,35.242336)" r="4.5233607"/></g><g id="g27407" transform="translate(3.343487,-2.1217339)"><path style="color:#000000;opacity:1;fill:#28a745;fill-rule:evenodd;stroke:#28a745;stroke-width:1pt;stroke-opacity:1;-inkscape-stroke:none" d="M 5.77,0 -2.88,5 V -5 Z" id="path27390" transform="matrix(0.17322817,0,0,0.17322817,74.030771,302.67507)" sodipodi:nodetypes="cccc"/><circle style="opacity:1;fill:#28a745;fill-opacity:1;stroke:none;stroke-width:1.12151;stroke-linecap:square;stroke-miterlimit:6.9;stroke-dasharray:none;stroke-opacity:1;paint-order:fill markers stroke" id="circle31500" cx="303.71848" cy="1138.2244" transform="matrix(0.23591816,0,0,0.23591816,5.1545666,34.204916)" r="4.5233607"/></g></g></g></svg>

</figure>
<figcaption>Code associated with Frida Stalker Detection</figcaption>
</center>
<p>Yes, this code is able to detect the Stalker. How? Let&rsquo;s start with the first basic block.
<span class="dark-boxed dark-yellow">_pthread_mach_thread_np(<span class="text-white">_pthread_self()</span>)</span>
aims at getting the thread id of the function that invokes this check.</p>
<p>Then more subtly, <span class="dark-boxed text-white"><span class="dark-yellow">MRS</span>(<span class="dark-red">TPIDRRO_EL0</span>) <span class="dark-purple">&amp;</span> <span class="dark-clear-blue">#-8</span></span>
is used to <strong>manually</strong> access the thread local storage area. On ARM64, Apple uses the least significant byte
of <code>TPIDRRO_EL0</code> to store the number of CPU while the MSB contains the TLS base address.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-brackets-curly" style="color: #084298" >&#160;</span>
  See also: <a href="https://github.com/apple-oss-distributions/dyld/blob/5c9192436bb195e7a8fe61f22a229ee3d30d8222/libdyld/threadLocalHelpers.s#L237-L238">dyld &ndash; threadLocalHelpers.s</a>
</div>
<p>Then, the second basic block &ndash; which is the loop&rsquo;s entry &ndash; accesses the thread local variable with the
<em>key</em> <code>tlv_idx</code> which ranges from <code>0x100</code> to <code>0x200</code> in the loop:</p>
<center style="font-size:19px">
<span class="dark-boxed text-white"><span class="dark-purple">*</span>(tlv_table <span class="dark-purple">+</span> (tlv_idx <span class="dark-purple"><<</span> <span class="dark-clear-blue">3</span>))</span>
<br /><br />
</center>
<p>The following basic block which calls <span class="dark-boxed dark-yellow">_vm_region_64<span class="text-white">(&hellip;)</span></span>
is used to verify that the <code>tlv_addr</code> variable contains a valid
address with a <em>correct</em> size (i.e. larger than <code>0x30</code>). Under these conditions, it jumps into the following
basic block with these <em>strange</em> memory accesses:</p>
<center>
<figure class="mb-4" id="fig-ixg-frida-stalker-condition">

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="624.02448"
   height="144.02585"
   viewBox="0 0 165.10647 38.106839"
   version="1.1"
   id="svg7816"
   inkscape:version="1.2 (dc2aedaf03, 2022-05-15)"
   sodipodi:docname="09-frida-stalker-cond.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview7818"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="px"
     showgrid="false"
     inkscape:zoom="0.914906"
     inkscape:cx="364.51832"
     inkscape:cy="364.51832"
     inkscape:window-width="1785"
     inkscape:window-height="1411"
     inkscape:window-x="1649"
     inkscape:window-y="23"
     inkscape:window-maximized="1"
     inkscape:current-layer="g24491" />
  <defs
     id="defs7813" />
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-26.587386,-7.4049156)">
    <g
       id="g24491"
       transform="matrix(1.1664,0,0,1.1664,-1.990951,-140.1308)"
       inkscape:label="stalker_cond">
      <rect
         style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:0.79375;stroke-dasharray:none;stroke-opacity:1"
         id="rect24547"
         width="140.75844"
         height="31.876722"
         x="24.898193"
         y="126.88497"
         inkscape:label="bg" />
      <g
         id="g23869"
         inkscape:label="inst"
         transform="matrix(0.26458333,0,0,0.26458333,24.578983,16.019126)">
        <g
           id="g14197"
           inkscape:label="top"
           style="opacity:0.3">
          <text
             x="8"
             y="438"
             style="fill:#88b0f0"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21057">bool</text>
          <text
             x="48"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21059">in_range</text>
          <text
             x="120"
             y="438"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21061">=</text>
          <text
             x="136"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21063">address</text>
          <text
             x="200"
             y="438"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21065">&lt;=</text>
          <text
             x="224"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21067">tlv_addr</text>
          <text
             x="296"
             y="438"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21069">&amp;&amp;</text>
          <text
             x="320"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21071">tlv_addr</text>
          <text
             x="392"
             y="438"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21073">&lt;</text>
          <text
             x="408"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21075">address</text>
          <text
             x="472"
             y="438"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21077">+</text>
          <text
             x="488"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21079">size</text>
          <text
             x="520"
             y="438"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21081">;</text>
        </g>
        <g
           id="g14234"
           inkscape:label="mid">
          <text
             x="8"
             y="456"
             style="fill:#88b0f0"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21083">bool</text>
          <text
             x="48"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21085">cond</text>
          <text
             x="80"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21087" />
          <text
             x="120"
             y="456"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21089">=</text>
          <text
             x="136"
             y="456"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21091">*</text>
          <text
             x="144"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21093">(</text>
          <text
             x="152"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21095">tlv_addr</text>
          <text
             x="224"
             y="456"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21097">+</text>
          <text
             x="240"
             y="456"
             style="fill:#6dcff6"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21099">0x18</text>
          <text
             x="272"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21101">)</text>
          <text
             x="288"
             y="456"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21103">==</text>
          <text
             x="312"
             y="456"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21105">tid</text>
          <text
             x="344"
             y="456"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21107">&amp;&amp;</text>
          <text
             x="8"
             y="474"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21109" />
          <text
             x="136"
             y="474"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21111">*</text>
          <text
             x="144"
             y="474"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21113">(</text>
          <text
             x="152"
             y="474"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21115">tlv_addr</text>
          <text
             x="224"
             y="474"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21117">+</text>
          <text
             x="240"
             y="474"
             style="fill:#6dcff6"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21119">0x24</text>
          <text
             x="272"
             y="474"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21121">)</text>
          <text
             x="288"
             y="474"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21123">&lt;=</text>
          <text
             x="312"
             y="474"
             style="fill:#6dcff6"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21125">5</text>
          <text
             x="320"
             y="474"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21127" />
          <text
             x="344"
             y="474"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21129">&amp;&amp;</text>
          <text
             x="8"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21131" />
          <text
             x="136"
             y="492"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21133">*</text>
          <text
             x="144"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21135">(</text>
          <text
             x="152"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21137">tlv_addr</text>
          <text
             x="224"
             y="492"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21139">+</text>
          <text
             x="240"
             y="492"
             style="fill:#6dcff6"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21141">0x28</text>
          <text
             x="272"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21143">)</text>
          <text
             x="288"
             y="492"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21145">&lt;</text>
          <text
             x="296"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21147" />
          <text
             x="312"
             y="492"
             style="fill:#6dcff6"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21149">3</text>
          <text
             x="320"
             y="492"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21151">;</text>
        </g>
        <g
           id="g14243"
           inkscape:label="bot"
           style="opacity:0.3">
          <text
             x="8"
             y="528"
             style="fill:#88b0f0"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21153">if</text>
          <text
             x="32"
             y="528"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21155">(</text>
          <text
             x="40"
             y="528"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21157">in_range</text>
          <text
             x="112"
             y="528"
             style="fill:#c364fc"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21159">&amp;&amp;</text>
          <text
             x="136"
             y="528"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21161">cond</text>
          <text
             x="168"
             y="528"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21163">)</text>
          <text
             x="8"
             y="546"
             style="fill:#ffffff"
             font-family="'Fira Code'"
             font-size="13px"
             font-weight="450"
             id="text21167" />
        </g>
      </g>
    </g>
  </g>
</svg>


</figure>
<figcaption>Condition that (somehow) Triggers EVT_CODE_TRACING</figcaption>
</center>
<p>To figure out the meaning of these memory accesses, let&rsquo;s remind that this function is associated with the <code>EVT_CODE_TRACING</code>
event. Which well-known public tool could be associated with code tracing? Without too much risk, we can
assume the Frida&rsquo;s Stalker.</p>
<p>If we look at the implementation of the Stalker, we can notice this kind of initialisation (in <code>gumstalker-arm64.c</code>):</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">gum_stalker_init</span> (GumStalker<span style="color:#666">*</span> self) {
</span></span><span style="display:flex;"><span>  [...]
</span></span><span style="display:flex;"><span>  self<span style="color:#666">-&gt;</span>exec_ctx <span style="color:#666">=</span> gum_tls_key_new();
</span></span><span style="display:flex;"><span>  [...]
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span><span style="color:#666">*</span> <span style="color:#00f">_gum_stalker_do_follow_me</span>(GumStalker<span style="color:#666">*</span> self, ...) {
</span></span><span style="display:flex;"><span>  GumExecCtx<span style="color:#666">*</span> ctx <span style="color:#666">=</span> gum_stalker_create_exec_ctx(...);
</span></span><span style="display:flex;"><span>  gum_tls_key_set_value (self<span style="color:#666">-&gt;</span>exec_ctx, ctx);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>So the Stalker creates a thread local variable that is used to store a pointer to the <code>GumExecCtx</code> structure
which has the following layout:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">_GumExecCtx</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">volatile</span> gint state;
</span></span><span style="display:flex;"><span>  gint64 destroy_pending_since;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  GumStalker <span style="color:#666">*</span> stalker;
</span></span><span style="display:flex;"><span>  GumThreadId thread_id;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  GumArm64Writer code_writer;
</span></span><span style="display:flex;"><span>  GumArm64Relocator relocator;
</span></span><span style="display:flex;"><span>  [...]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>If we add the offsets of this layout and if we <em>virtually</em> inline the <code>GumArm64Writer</code> structure, we can get this
representation:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">_GumExecCtx</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x00 */</span> <span style="color:#008000;font-weight:bold">volatile</span> gint state;
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x08 */</span> gint64 destroy_pending_since;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x10 */</span> GumStalker <span style="color:#666">*</span> stalker;
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x18 */</span> GumThreadId thread_id;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  GumArm64Writer code_writer {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x20 */</span> <span style="color:#008000;font-weight:bold">volatile</span> gint ref_count;
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x24 */</span> GumOS target_os;
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">/* 0x28 */</span> GumPtrauthSupport ptrauth_support;
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>  };
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-hand-point-right" style="color: #084298" >&#160;</span>
  <code>destroy_pending_since</code> is located at the offset <strong><code>0x08</code></strong> and not <strong><code>0x04</code></strong> because of the alignment enforced
by the compiler.
</div>
<p>With this representation, we can observe that:</p>
<ul>
<li>
<p><span class="dark-boxed text-white"><span class="dark-purple">*</span>(tlv_table <span class="dark-purple">+</span> <span class="dark-clear-blue">0x18</span>)</span>
effectively matches the <code>GumThreadId thread_id</code> attribute.</p>
</li>
<li>
<p><span class="dark-boxed text-white"><span class="dark-purple">*</span>(tlv_table <span class="dark-purple">+</span> <span class="dark-clear-blue">0x24</span>)</span>
matches <code>GumOS target_os</code></p>
</li>
<li>
<p><span class="dark-boxed text-white"><span class="dark-purple">*</span>(tlv_table <span class="dark-purple">+</span> <span class="dark-clear-blue">0x28</span>)</span>
matches <code>GumPtrauthSupport ptrauth_support</code></p>
</li>
</ul>
<p><code>GumOS</code> and <code>GumPtrauthSupport</code> are enums defined  in <code>gumdefs.h</code> and <code>gummemory.h</code> with these values:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">enum</span> <span style="color:#00f;font-weight:bold">_GumOS</span> {
</span></span><span style="display:flex;"><span>  GUM_OS_WINDOWS,
</span></span><span style="display:flex;"><span>  GUM_OS_MACOS,
</span></span><span style="display:flex;"><span>  GUM_OS_LINUX,
</span></span><span style="display:flex;"><span>  GUM_OS_IOS,
</span></span><span style="display:flex;"><span>  GUM_OS_ANDROID,
</span></span><span style="display:flex;"><span>  GUM_OS_QNX
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">enum</span> <span style="color:#00f;font-weight:bold">_GumPtrauthSupport</span> {
</span></span><span style="display:flex;"><span>  GUM_PTRAUTH_INVALID,
</span></span><span style="display:flex;"><span>  GUM_PTRAUTH_UNSUPPORTED,
</span></span><span style="display:flex;"><span>  GUM_PTRAUTH_SUPPORTED
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><p><code>GumOS</code> contains 6 entries starting from <code>GUM_OS_WINDOWS = 0</code> up to <code>GUM_OS_QNX = 5</code> and similarly,
<code>GUM_PTRAUTH_INVALID = 0</code> while the last entry is associated with <code>GUM_PTRAUTH_SUPPORTED = 2</code></p>
<p>Therefore, the previous <em>strange</em> conditions are used to fingerprint the <code>GumExecCtx</code> structure:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 471 148" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="400">

<rect x="0" y="0" width="471" height="148" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="20" opacity="0.5" xml:space="preserve"><tspan fill="#88b0f0">bool</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">in_range</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">=</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">address</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&lt;=</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">tlv_addr</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&amp;&amp;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">tlv_addr</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&lt;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">address</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">+</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">size</tspan><tspan fill="#ffffff">;</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="36"  xml:space="preserve"><tspan fill="#88b0f0">bool</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">cond</tspan><tspan fill="#ffffff">&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">=</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">_GumExecCtx</tspan><tspan fill="#C364FC">-&gt;</tspan><tspan fill="#6DCFF6">thread_id</tspan><tspan fill="#ffffff">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">==</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">tid</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&amp;&amp;</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="52"  xml:space="preserve"><tspan fill="#ffffff">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">_GumExecCtx</tspan><tspan fill="#C364FC">-&gt;</tspan><tspan fill="#6DCFF6">code_writer</tspan><tspan fill="#ffffff">.</tspan><tspan fill="#6DCFF6">target_os</tspan><tspan fill="#ffffff">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">&lt;=</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">5</tspan><tspan fill="#ffffff">&#160;&#160;&#160;</tspan><tspan fill="#C364FC">&amp;&amp;</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="68"  xml:space="preserve"><tspan fill="#ffffff">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">_GumExecCtx</tspan><tspan fill="#C364FC">-&gt;</tspan><tspan fill="#6DCFF6">code_writer</tspan><tspan fill="#ffffff">.</tspan><tspan fill="#6DCFF6">ptrauth_support</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&lt;</tspan><tspan fill="#ffffff">&#160;&#160;</tspan><tspan fill="#6DCFF6">3</tspan><tspan fill="#ffffff">;</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="84" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff"></tspan></text>
<text x="7" y="100" opacity="0.5" xml:space="preserve"><tspan fill="#88b0f0">if</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">(</tspan><tspan fill="#ffffff">in_range</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&amp;&amp;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">cond</tspan><tspan fill="#ffffff">)</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">{</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="116" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff">&#160;&#160;</tspan><tspan fill="#C364FC">-&gt;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">Trigger</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">EVT_CODE_TRACING</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="132" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff">}</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="148"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>One way to prevent this Stalker detection would be to recompile Frida with swapped fields in the <code>_GumExecCtx</code>
structure.</p>
<h3 id="thread-check">Thread Check</h3>
<p>An alternative to the previous Frida stalker check consists in accessing the current thread status
through the following call:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>thread_read_t target <span style="color:#666">=</span> pthread_mach_thread_np(pthread_self());
</span></span><span style="display:flex;"><span><span style="color:#b00040">uint32_t</span> count <span style="color:#666">=</span> ARM_UNIFIED_THREAD_STATE_COUNT;
</span></span><span style="display:flex;"><span>arm_unified_thread_state state;
</span></span><span style="display:flex;"><span>thread_get_state(target, ARM_UNIFIED_THREAD_STATE, <span style="color:#666">&amp;</span>state, <span style="color:#666">&amp;</span>count);
</span></span></code></pre></div><p>Then, it checks if <code>state-&gt;ts_64.__pc</code> is within the <code>libsystem_kernel.dylib</code> thanks to the following
comparison:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> <span style="color:#008000;font-weight:bold">auto</span> mach_msg_addr <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>uintptr_t<span style="color:#666">&gt;</span>(<span style="color:#666">&amp;</span>mach_msg);
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> uintptr_t delta <span style="color:#666">=</span> abs(state<span style="color:#666">-&gt;</span>ts_64.__pc <span style="color:#666">-</span> mach_msg_addr)
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (delta <span style="color:#666">&gt;</span> <span style="color:#666">0x4000</span>) {
</span></span><span style="display:flex;"><span>  rasp_event_info info;
</span></span><span style="display:flex;"><span>  info.event <span style="color:#666">=</span> <span style="color:#666">0x2000</span>; <span style="color:#408080;font-style:italic">// EVT_CODE_TRACING;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  info.ptr <span style="color:#666">=</span> (uintptr_t<span style="color:#666">*</span>)<span style="color:#666">0x13b71a24724edfe</span>;
</span></span><span style="display:flex;"><span>  EVT_CODE_TRACING_cbk_ptr(info);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>In other words, <code>state-&gt;ts_64.__pc</code> is considered to be in <code>libsystem_kernel.dylib</code>, if its distance from
<code>&amp;mach_msg</code> is smaller than <code>0x4000</code>.</p>
<p>At first sight, I was a bit confused by this RASP check but since the previous checks, associated with
<span class="dark-boxed dark-purple">EVT_CODE_TRACING</span>, aims at detecting the Frida Stalker, this
check is also likely designed to detect the Frida Stalker.</p>
<p>To confirm this hypothesis, I developed a small test case that reproduces this check, in a standalone
binary and we can observe a difference depending on whether
it runs through the Frida stalker or not:</p>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="776.99805" height="384.11771" viewBox="0 0 205.58073 101.6314" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="terminal.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="false" showguides="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5" originx="0" originy="0"/><sodipodi:guide position="4.2330696,113.27313" orientation="1,0" id="guide12148"/><sodipodi:guide position="-4.0897503,-4.7156376" orientation="0,1" id="guide12150"/><sodipodi:guide position="29.982789,8.1553331" orientation="0,1" id="guide12156"/><sodipodi:guide position="1.4714648,8.4978287" orientation="-1,0" id="guide12160"/><sodipodi:guide position="-6.3502583,99.137289" orientation="0,1" id="guide12225"/><sodipodi:guide position="203.94177,5.5789242" orientation="1,0" id="guide12289"/></sodipodi:namedview><defs id="defs2"><rect x="38.762257" y="38.789978" width="268.46121" height="18.026539" id="rect11572"/><rect x="24.999998" y="24.999998" width="776.12634" height="358.15497" id="rect11513"/></defs><g id="layer1" transform="translate(-6.3502744,-6.3499994)"><g id="g13878"><rect style="opacity:1;fill:#0b0b0b;fill-opacity:1;stroke:#767676;stroke-width:1.91422;stroke-miterlimit:2;stroke-opacity:1" id="rect4197" width="774.99994" height="349.99997" x="24.999998" y="24.999998" transform="matrix(0.26461254,0,0,0.28879596,-0.01205044,-0.59348948)"/><g id="g13920" transform="translate(-1.1311698e-7,8.4666663)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11080" transform="matrix(0.26458333,0,0,0.26458333,13.99355,0.33085976)"><tspan sodipodi:role="line" id="tspan11078" x="-24.43223" y="368.14719">(3) romain<tspan style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" id="tspan12415">1:romain*</tspan></tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11498" transform="matrix(0.26458333,0,0,0.26458333,186.54061,-0.03005891)"><tspan sodipodi:role="line" id="tspan11496" x="-24.43223" y="368.14719">3.96 5.47 5.03 06:31</tspan></text></g></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.811357,7.5256076)" id="text11511" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11513);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="25" y="37.833363" id="tspan19357">/usr/lib/system/libsystem_platform.dylib:0x1dafa21f0:   stp x14, x15, [x3, #0x30]
</tspan><tspan x="25" y="56.166737" id="tspan19359">/usr/lib/system/libsystem_platform.dylib:0x1dafa21f4:   ret
</tspan><tspan x="25" y="74.500111" id="tspan19361">/usr/lib/system/libsystem_kernel.dylib:0x1bf97735c:     mov w21, #0
</tspan><tspan x="25" y="92.833485" id="tspan19363">/usr/lib/system/libsystem_kernel.dylib:0x1bf977360:     str w22, [x19]
</tspan><tspan x="25" y="111.16686" id="tspan19365">/usr/lib/system/libsystem_kernel.dylib:0x1bf977364:     b #0x1bf9772d4
</tspan><tspan x="25" y="129.50023" id="tspan19367">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772d4:     mov x0, x21
</tspan><tspan x="25" y="147.83361" id="tspan19369">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772d8:     add sp, sp, #1, lsl #12
</tspan><tspan x="25" y="166.16698" id="tspan19371">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772dc:     add sp, sp, #0x470
</tspan><tspan x="25" y="184.50036" id="tspan19373">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e0:     ldp x29, x30, [sp, #0x30]
</tspan><tspan x="25" y="202.83373" id="tspan19375">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e4:     ldp x20, x19, [sp, #0x20]
</tspan><tspan x="25" y="221.1671" id="tspan19377">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e8:     ldp x22, x21, [sp, #0x10]
</tspan><tspan x="25" y="239.50048" id="tspan19379">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772ec:     ldp x28, x27, [sp], #0x40
</tspan><tspan x="25" y="257.83385" id="tspan19381">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772f0:     ret
</tspan><tspan x="25" y="276.16723" id="tspan19383">/tmp/stalker:0x102638208:       ldr x19, [sp, #0x158]
</tspan><tspan x="25" y="294.5006" id="tspan19385">/tmp/stalker:0x10263820c:       mov x0, x20
</tspan><tspan x="25" y="312.83397" id="tspan19387">/tmp/stalker:0x102638210:       bl #0x10264b560
</tspan><tspan x="25" y="331.16735" id="tspan19389">pc: 0x10291caa0 -&gt;  (distance: 0xbd03cf60)
</tspan><tspan x="25" y="349.50072" id="tspan19391">Done!</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-0.06476905,-1.5608276)" id="text11570" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11572);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="38.761719" y="51.622425" id="tspan19393">iPhone:/tmp root# ./stalker
</tspan></text></g></svg>

<br /><br />
<figcaption>Output of the Test Case <b>with</b> the Stalker</figcaption>
</figure>
</center>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="776.99805" height="384.11771" viewBox="0 0 205.58073 101.6314" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="terminal.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="false" showguides="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5" originx="0" originy="0"/><sodipodi:guide position="4.2330696,113.27313" orientation="1,0" id="guide12148"/><sodipodi:guide position="-4.0897503,-4.7156376" orientation="0,1" id="guide12150"/><sodipodi:guide position="29.982789,8.1553331" orientation="0,1" id="guide12156"/><sodipodi:guide position="1.4714648,8.4978287" orientation="-1,0" id="guide12160"/><sodipodi:guide position="-6.3502583,99.137289" orientation="0,1" id="guide12225"/><sodipodi:guide position="203.94177,5.5789242" orientation="1,0" id="guide12289"/></sodipodi:namedview><defs id="defs2"><rect x="38.762257" y="38.789978" width="268.46121" height="18.026539" id="rect11572"/><rect x="24.999998" y="24.999998" width="776.12634" height="358.15497" id="rect11513"/></defs><g id="layer1" style="display:inline" transform="translate(-6.3502744,-6.3499994)"><g id="g13878"><rect style="opacity:1;fill:#0b0b0b;fill-opacity:1;stroke:#767676;stroke-width:1.91422;stroke-miterlimit:2;stroke-opacity:1" id="rect4197" width="774.99994" height="349.99997" x="24.999998" y="24.999998" transform="matrix(0.26461254,0,0,0.28879596,-0.01205044,-0.59348948)"/><g id="g13920" transform="translate(-1.1311698e-7,8.4666663)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11080" transform="matrix(0.26458333,0,0,0.26458333,13.99355,0.33085976)"><tspan sodipodi:role="line" id="tspan11078" x="-24.43223" y="368.14719">(3) romain<tspan style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" id="tspan12415">1:romain*</tspan></tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11498" transform="matrix(0.26458333,0,0,0.26458333,186.54061,-0.03005891)"><tspan sodipodi:role="line" id="tspan11496" x="-24.43223" y="368.14719">3.96 5.47 5.03 06:31</tspan></text></g></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.811357,7.5256076)" id="text11511" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11513);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="25" y="37.833363" id="tspan20178">Stalker check starting ..
</tspan><tspan x="25" y="56.166737" id="tspan20180">pc: 0x1bf95a644 -&gt; /usr/lib/system/libsystem_kernel.dylib (distance: 0xc44)
</tspan><tspan x="25" y="74.500111" id="tspan20182">Done!
</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-0.06476905,-1.5608276)" id="text11570" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11572);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="38.761719" y="51.622425" id="tspan20184">iPhone:/tmp root# ./stalker
</tspan></text></g></svg>

<br /><br />
<figcaption>Output of the Test Case <b>without</b> the Stalker</figcaption>
</figure>
</center>
<p>This check can be bypassed without too much difficulty by using the function <a href="https://github.com/oleavr/frida-gum/blob/b679d454b1f323fa9c181f324ec17d515a7c2f81/gum/gumstalker.h#L62-L63"><code>gum_stalker_exclude</code></a>
to exclude the library <code>libsystem_kernel.dylib</code> from the stalker:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>GumStalker<span style="color:#666">*</span> stalker <span style="color:#666">=</span> gum_stalker_new();
</span></span><span style="display:flex;"><span>exclude(stalker, <span style="color:#ba2121">&#34;libsystem_kernel.dylib&#34;</span>);
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Stalker Check
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>As a result of this exclusion, <code>state-&gt;ts_64.__pc</code> is located in <code>libsystem_kernel.dylib</code>:</p>
<center>
<figure class="mb-4">

<?xml version="1.0" ?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" width="776.99805" height="384.11771" viewBox="0 0 205.58073 101.6314" version="1.1" id="svg5" xml:space="preserve" sodipodi:docname="stalker_bypass.svg"><sodipodi:namedview id="namedview7" pagecolor="#ffffff" bordercolor="#000000" borderopacity="0.25" showgrid="false" showguides="true"><inkscape:grid type="xygrid" id="grid6790" spacingx="1.3229166" spacingy="1.3229166" empspacing="5" originx="0" originy="0"/><sodipodi:guide position="4.2330696,113.27313" orientation="1,0" id="guide12148"/><sodipodi:guide position="-4.0897503,-4.7156376" orientation="0,1" id="guide12150"/><sodipodi:guide position="29.982789,8.1553331" orientation="0,1" id="guide12156"/><sodipodi:guide position="1.4714648,8.4978287" orientation="-1,0" id="guide12160"/><sodipodi:guide position="-6.3502583,99.137289" orientation="0,1" id="guide12225"/><sodipodi:guide position="203.94177,5.5789242" orientation="1,0" id="guide12289"/></sodipodi:namedview><defs id="defs2"><rect x="38.762257" y="38.789978" width="268.46121" height="18.026539" id="rect11572"/><rect x="24.999998" y="24.999998" width="776.12634" height="358.15497" id="rect11513"/></defs><g id="layer1" style="display:inline" transform="translate(-6.3502744,-6.3499994)"><g id="g13878"><rect style="opacity:1;fill:#0b0b0b;fill-opacity:1;stroke:#767676;stroke-width:1.91422;stroke-miterlimit:2;stroke-opacity:1" id="rect4197" width="774.99994" height="349.99997" x="24.999998" y="24.999998" transform="matrix(0.26461254,0,0,0.28879596,-0.01205044,-0.59348948)"/><g id="g13920" transform="translate(-1.1311698e-7,8.4666663)"><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11080" transform="matrix(0.26458333,0,0,0.26458333,13.99355,0.33085976)"><tspan sodipodi:role="line" id="tspan11078" x="-24.43223" y="368.14719">(3) romain<tspan style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" id="tspan12415">1:romain*</tspan></tspan></text><text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:9.33333px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;text-anchor:start;opacity:0.837916;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1" x="-24.43223" y="368.14719" id="text11498" transform="matrix(0.26458333,0,0,0.26458333,186.54061,-0.03005891)"><tspan sodipodi:role="line" id="tspan11496" x="-24.43223" y="368.14719">3.96 5.47 5.03 06:31</tspan></text></g></g><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,3.811357,7.5256076)" id="text11511" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11513);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="25" y="37.833363" id="tspan20411">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772dc:     add sp, sp, #0x470
</tspan><tspan x="25" y="56.166737" id="tspan20413">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e0:     ldp x29, x30, [sp, #0x30]
</tspan><tspan x="25" y="74.500111" id="tspan20415">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e4:     ldp x20, x19, [sp, #0x20]
</tspan><tspan x="25" y="92.833485" id="tspan20417">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772e8:     ldp x22, x21, [sp, #0x10]
</tspan><tspan x="25" y="111.16686" id="tspan20419">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772ec:     ldp x28, x27, [sp], #0x40
</tspan><tspan x="25" y="129.50023" id="tspan20421">/usr/lib/system/libsystem_kernel.dylib:0x1bf9772f0:     ret
</tspan><tspan x="25" y="147.83361" id="tspan20423">/tmp/stalker:0x104d00250:       ldr x19, [sp, #0x158]
</tspan><tspan x="25" y="166.16698" id="tspan20425">/tmp/stalker:0x104d00254:       mov x0, x20
</tspan><tspan x="25" y="184.50036" id="tspan20427">/tmp/stalker:0x104d00258:       bl #0x104d137b4
</tspan><tspan x="25" y="202.83373" id="tspan20429">pc: 0x1bf95a644 -&gt; /usr/lib/system/libsystem_kernel.dylib (distance: 0xc44)</tspan></text><text xml:space="preserve" transform="matrix(0.26458333,0,0,0.26458333,-0.06476905,-1.5608276)" id="text11570" style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;white-space:pre;shape-inside:url(#rect11572);display:inline;opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:2;stroke-dasharray:none;stroke-opacity:1"><tspan x="38.761719" y="51.622425" id="tspan20431">iPhone:/tmp root# ./stalker
</tspan></text></g></svg>

<br /><br />
<figcaption>Output of the Test Case with Excluded Memory Ranges</figcaption>
</figure>
</center>
<h2 id="app-loaded-libraries">App Loaded Libraries</h2>
<p>The RASP event <span class="dark-boxed dark-purple">EVT_APP_LOADED_LIBRARIES</span> aims at checking the integrity of the Mach-O&rsquo;s dependencies.
In other words, it checks that the Mach-O imported libraries have not been altered.</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly ranges: 0x100E4CDF8 &ndash; 0x100e4d39c</samp>
</div>
<p>The code associated with this check starts by accessing the Mach-O header thanks to the <code>dladdr</code> function:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>Dl_info dl_info;
</span></span><span style="display:flex;"><span>dladdr(<span style="color:#666">&amp;</span>static_var, <span style="color:#666">&amp;</span>dl_info);
</span></span></code></pre></div><p><code>Dl_info</code> contains the base address of the library which encompasses the address provided in the first parameter
and since, a Mach-O binary is loaded with its header, <code>dl_info.dli_fbase</code> actually points to a <code>mach_header_64</code>.</p>
<p>Then the function iterates over the <code>LC_ID_DYLIB</code>-like  commands to access dependency&rsquo;s name:</p>
<center>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="825"
   height="400"
   viewBox="0 0 218.28125 105.83333"
   version="1.1"
   id="svg5"
   xml:space="preserve"
   inkscape:version="1.2 (dc2aedaf03, 2022-05-15)"
   sodipodi:docname="app_loaded_library.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="true"
     inkscape:zoom="1.829812"
     inkscape:cx="557.16106"
     inkscape:cy="264.2348"
     inkscape:window-width="3434"
     inkscape:window-height="1411"
     inkscape:window-x="0"
     inkscape:window-y="23"
     inkscape:window-maximized="1"
     inkscape:current-layer="g15439"><inkscape:grid
       type="xygrid"
       id="grid6790"
       spacingx="1.3229166"
       spacingy="1.3229166"
       empspacing="5" /></sodipodi:namedview><defs
     id="defs2" /><g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2"><g
       id="g15593"
       style="display:inline"
       transform="matrix(0.26458333,0,0,0.26458333,2.0103483,12.344796)"><rect
         style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-opacity:1"
         id="rect16352"
         width="773.39954"
         height="107.24821"
         x="10.064102"
         y="67.211586"
         transform="matrix(1.0257938,0,0,1.1830675,-12.708413,-78.864469)" /><g
         id="g15439"
         style="display:inline"><text
           x="7"
           y="20"
           xml:space="preserve"
           id="text14943"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan14917"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan14919"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD1C </tspan><tspan
             fill="#ffffff"
             id="tspan14921"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">LDRB</tspan><tspan
             id="tspan14923"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">      </tspan><tspan
             fill="#d1f0fc"
             id="tspan14925"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W15</tspan><tspan
             fill="#aaaaaa"
             id="tspan14927"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan14929"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#aaaaaa"
             id="tspan14931"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">[</tspan><tspan
             fill="#d1f0fc"
             id="tspan14933"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X11</tspan><tspan
             fill="#aaaaaa"
             id="tspan14935"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             fill="#59eb42"
             id="tspan14937"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">#dylib_command.dylib.name.offset</tspan><tspan
             fill="#aaaaaa"
             id="tspan14939"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">]</tspan><tspan
             fill="#aaaaaa"
             id="tspan14941"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="36"
           xml:space="preserve"
           id="text14973"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan14945"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan14947"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD20 </tspan><tspan
             fill="#ffffff"
             id="tspan14949"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">ADD</tspan><tspan
             id="tspan14951"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">       </tspan><tspan
             fill="#d1f0fc"
             id="tspan14953"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X15</tspan><tspan
             fill="#aaaaaa"
             id="tspan14955"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan14957"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan14959"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X11</tspan><tspan
             fill="#aaaaaa"
             id="tspan14961"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan14963"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan14965"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X15</tspan><tspan
             id="tspan14967"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#c364fc"
             id="tspan14969"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">; `dylib.name.offset` is relative to the</tspan><tspan
             fill="#aaaaaa"
             id="tspan14971"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="52"
           xml:space="preserve"
           id="text14985"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan14975"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan14977"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD20 </tspan><tspan
             fill="#aaaaaa"
             id="tspan14979"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">                        </tspan><tspan
             fill="#c364fc"
             id="tspan14981"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">; command (x11)</tspan><tspan
             fill="#aaaaaa"
             id="tspan14983"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.6667px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="68"
           xml:space="preserve"
           id="text14991"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan14987"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan14989"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD24</tspan></text><text
           x="7"
           y="84"
           xml:space="preserve"
           id="text15029"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan14993"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan14995"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD24 </tspan><tspan
             fill="#ffffff"
             id="tspan14997"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">STR</tspan><tspan
             id="tspan14999"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">       </tspan><tspan
             fill="#d1f0fc"
             id="tspan15001"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X15</tspan><tspan
             fill="#aaaaaa"
             id="tspan15003"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15005"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#aaaaaa"
             id="tspan15007"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">[</tspan><tspan
             fill="#d1f0fc"
             id="tspan15009"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X14</tspan><tspan
             fill="#aaaaaa"
             id="tspan15011"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             fill="#d1f0fc"
             id="tspan15013"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W10</tspan><tspan
             fill="#aaaaaa"
             id="tspan15015"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             fill="#ababab"
             id="tspan15017"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">UXTW</tspan><tspan
             fill="#6dcff6"
             id="tspan15019"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">#3</tspan><tspan
             fill="#aaaaaa"
             id="tspan15021"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">]</tspan><tspan
             id="tspan15023"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"></tspan><tspan
             fill="#c364fc"
             id="tspan15025"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">; Save the name of the dependency</tspan><tspan
             fill="#aaaaaa"
             id="tspan15027"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="100"
           xml:space="preserve"
           id="text15055"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15031"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15033"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD28 </tspan><tspan
             fill="#ffffff"
             id="tspan15035"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">ADD</tspan><tspan
             id="tspan15037"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">       </tspan><tspan
             fill="#d1f0fc"
             id="tspan15039"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W10</tspan><tspan
             fill="#aaaaaa"
             id="tspan15041"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15043"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan15045"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W10</tspan><tspan
             fill="#aaaaaa"
             id="tspan15047"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15049"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#6dcff6"
             id="tspan15051"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">#1</tspan><tspan
             fill="#aaaaaa"
             id="tspan15053"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="116"
           xml:space="preserve"
           id="text15069"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15057"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15059"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CD2C </tspan><tspan
             fill="#ffffff"
             id="tspan15061"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">B</tspan><tspan
             id="tspan15063"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">         </tspan><tspan
             fill="#fdd418"
             id="tspan15065"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">loc_100E4CCDC</tspan><tspan
             fill="#aaaaaa"
             id="tspan15067"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text></g></g><g
       id="g15666"
       transform="matrix(0.26458333,0,0,0.26458333,32.266492,22.691988)"
       style="display:inline"><rect
         style="opacity:1;fill:#353333;fill-opacity:1;stroke:#6dcff6;stroke-width:2;stroke-linecap:square;stroke-miterlimit:6.9;stroke-opacity:1"
         id="rect16354"
         width="565.86505"
         height="106.91692"
         x="10.115384"
         y="195.74748"
         transform="matrix(1.2440147,0,0,1.1836269,-14.72428,-102.17301)" /><g
         id="g15509"><text
           x="7"
           y="132"
           xml:space="preserve"
           id="text15073"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#aaaaaa"
             id="tspan15071"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="148"
           xml:space="preserve"
           id="text15079"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15075"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15077"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCDC</tspan></text><text
           x="7"
           y="164"
           xml:space="preserve"
           id="text15089"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15081"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15083"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCDC </tspan><tspan
             fill="#fdd418"
             id="tspan15085"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">loc_100E4CCDC</tspan><tspan
             fill="#aaaaaa"
             id="tspan15087"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="180"
           xml:space="preserve"
           id="text15117"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15091"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15093"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCDC </tspan><tspan
             fill="#ffffff"
             id="tspan15095"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">LDR</tspan><tspan
             id="tspan15097"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">             </tspan><tspan
             fill="#d1f0fc"
             id="tspan15099"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W15</tspan><tspan
             fill="#aaaaaa"
             id="tspan15101"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15103"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#aaaaaa"
             id="tspan15105"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">[</tspan><tspan
             fill="#d1f0fc"
             id="tspan15107"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X11</tspan><tspan
             fill="#aaaaaa"
             id="tspan15109"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             fill="#59eb42"
             id="tspan15111"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">#dyld_info_command.cmdsize</tspan><tspan
             fill="#aaaaaa"
             id="tspan15113"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">]</tspan><tspan
             fill="#aaaaaa"
             id="tspan15115"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="196"
           xml:space="preserve"
           id="text15143"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15119"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15121"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCE0 </tspan><tspan
             fill="#ffffff"
             id="tspan15123"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">ADD</tspan><tspan
             id="tspan15125"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">             </tspan><tspan
             fill="#d1f0fc"
             id="tspan15127"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X11</tspan><tspan
             fill="#aaaaaa"
             id="tspan15129"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15131"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan15133"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X11</tspan><tspan
             fill="#aaaaaa"
             id="tspan15135"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15137"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan15139"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">X15</tspan><tspan
             fill="#aaaaaa"
             id="tspan15141"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="212"
           xml:space="preserve"
           id="text15169"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15145"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15147"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCE4 </tspan><tspan
             fill="#ffffff"
             id="tspan15149"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">ADD</tspan><tspan
             id="tspan15151"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">             </tspan><tspan
             fill="#d1f0fc"
             id="tspan15153"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W9</tspan><tspan
             fill="#aaaaaa"
             id="tspan15155"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15157"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan15159"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W9</tspan><tspan
             fill="#aaaaaa"
             id="tspan15161"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15163"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#6dcff6"
             id="tspan15165"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">#1</tspan><tspan
             fill="#aaaaaa"
             id="tspan15167"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="228"
           xml:space="preserve"
           id="text15189"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15171"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15173"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCE8 </tspan><tspan
             fill="#ffffff"
             id="tspan15175"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">CMP</tspan><tspan
             id="tspan15177"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">             </tspan><tspan
             fill="#d1f0fc"
             id="tspan15179"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W9</tspan><tspan
             fill="#aaaaaa"
             id="tspan15181"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">,</tspan><tspan
             id="tspan15183"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"> </tspan><tspan
             fill="#d1f0fc"
             id="tspan15185"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">W8</tspan><tspan
             fill="#aaaaaa"
             id="tspan15187"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="244"
           xml:space="preserve"
           id="text15203"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal"><tspan
             fill="#5c92ea"
             id="tspan15191"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">__text:</tspan><tspan
             fill="#5c92ea"
             id="tspan15193"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">0000000100E4CCEC </tspan><tspan
             fill="#ffffff"
             id="tspan15195"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">B.CS</tspan><tspan
             id="tspan15197"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">            </tspan><tspan
             fill="#fdd418"
             id="tspan15199"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal">loc_100E4CD30</tspan><tspan
             fill="#aaaaaa"
             id="tspan15201"
             style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></text><text
           x="7"
           y="260"
           xml:space="preserve"
           id="text15205"
           style="font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;font-size:14.66666685px;font-family:'Fira Code';-inkscape-font-specification:'Fira Code, Medium';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal" /></g></g><g
       id="path17475"
       transform="scale(0.26458333)"><path
         style="color:#000000;fill:#0f17ed;stroke-linecap:square;stroke-miterlimit:1;-inkscape-stroke:none"
         d="m 400.88672,177.23828 v 1 28.26172 1 h 2 v -1 -28.26172 -1 z"
         id="path21606" /><g
         id="g21596"><g
           id="path21598"
           transform="rotate(90,98.694235,303.19342)"><path
             style="color:#000000;fill:#0f17ed;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none"
             d="M 5.77,0 -2.88,5 V -5 Z"
             id="path21602" /><path
             style="color:#000000;fill:#0f17ed;fill-rule:evenodd;-inkscape-stroke:none"
             d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z"
             id="path21604" /></g></g></g><path
       style="opacity:1;fill:none;fill-opacity:0.72635;stroke:#ff0000;stroke-width:4.00000005;stroke-linecap:square;stroke-miterlimit:1;stroke-dasharray:none;stroke-opacity:1"
       d="m 449.99998,344.99998 v 40 h 379.99998"
       id="path22553"
       transform="scale(0.26458333)" /><path
       style="opacity:1;fill:none;fill-opacity:0.72635;stroke:#44aa00;stroke-width:2.00000003;stroke-linecap:square;stroke-miterlimit:1;stroke-dasharray:none;stroke-opacity:1"
       d="m 379.99998,344.99998 v 40 H -24.999999"
       id="path24841"
       transform="scale(0.26458333)" /><g
       id="path27517"
       transform="scale(0.26458333)"><path
         style="color:#000000;fill:#ff0000;stroke-linecap:square;stroke-miterlimit:1;-inkscape-stroke:none"
         d="m -16,24 v 2 h 1 419 v 9 1 h 2 V 35 25 l -1,-1 H -15 Z"
         id="path30667" /><g
         id="g30657"><g
           id="path30659"
           transform="rotate(90,184.99999,219.99999)"><path
             style="color:#000000;fill:#ff0000;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none"
             d="M 5.77,0 -2.88,5 V -5 Z"
             id="path30663" /><path
             style="color:#000000;fill:#ff0000;fill-rule:evenodd;-inkscape-stroke:none"
             d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z"
             id="path30665" /></g></g></g><g
       id="path27948"
       transform="scale(0.26458333)"><path
         style="color:#000000;fill:#44aa00;stroke-linecap:square;stroke-miterlimit:1;-inkscape-stroke:none"
         d="m 819,-21 v 1 214 H 431 l -1,1 v 9.3418 1 h 2 v -1 V 196 h 388 l 1,-1 v -215 -1 z"
         id="path33433" /><g
         id="g33423"><g
           id="path33425"
           transform="rotate(90,113.32921,317.67077)"><path
             style="color:#000000;fill:#44aa00;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none"
             d="M 5.77,0 -2.88,5 V -5 Z"
             id="path33429" /><path
             style="color:#000000;fill:#44aa00;fill-rule:evenodd;-inkscape-stroke:none"
             d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z"
             id="path33431" /></g></g></g><g
       id="path27950"
       transform="scale(0.26458333)"><path
         style="color:#000000;fill:#44aa00;stroke-linecap:square;stroke-miterlimit:1;-inkscape-stroke:none"
         d="m 809,-11 v 1 194 H 415 l -1,1 v 19.3418 1 h 2 v -1 V 186 h 394 l 1,-1 v -195 -1 z"
         id="path33451" /><g
         id="g33441"><g
           id="path33443"
           transform="matrix(0,1,1,0,414.99998,204.46059)"><path
             style="color:#000000;fill:#44aa00;fill-rule:evenodd;stroke-width:1pt;-inkscape-stroke:none"
             d="M 5.77,0 -2.88,5 V -5 Z"
             id="path33447" /><path
             style="color:#000000;fill:#44aa00;fill-rule:evenodd;-inkscape-stroke:none"
             d="M -3.546875,-6.15625 V 6.15625 L 7.1015625,0 6.1035156,-0.578125 Z m 1.3339844,2.3125 L 4.4355469,0 -2.2128906,3.84375 Z"
             id="path33449" /></g></g></g></g></svg>


<br /><br />
</center>
<p>This name contains the path to the dependency. For instance, we can access this list as follows:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>singpass <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;./SingPass&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> lib <span style="color:#a2f;font-weight:bold">in</span> singpass<span style="color:#666">.</span>libraries:
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span>(lib<span style="color:#666">.</span>name)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Output:</span>
</span></span><span style="display:flex;"><span><span style="color:#666">/</span>System<span style="color:#666">/</span>Library<span style="color:#666">/</span>Frameworks<span style="color:#666">/</span>AVFoundation<span style="color:#666">.</span>framework<span style="color:#666">/</span>AVFoundation
</span></span><span style="display:flex;"><span><span style="color:#666">/</span>System<span style="color:#666">/</span>Library<span style="color:#666">/</span>Frameworks<span style="color:#666">/</span>AVKit<span style="color:#666">.</span>framework<span style="color:#666">/</span>AVKit
</span></span><span style="display:flex;"><span><span style="color:#666">...</span>
</span></span><span style="display:flex;"><span><span style="color:#a2f">@rpath</span><span style="color:#666">/</span>leveldb<span style="color:#666">.</span>framework<span style="color:#666">/</span>leveldb
</span></span><span style="display:flex;"><span><span style="color:#a2f">@rpath</span><span style="color:#666">/</span>nanopb<span style="color:#666">.</span>framework<span style="color:#666">/</span>nanopb
</span></span></code></pre></div><p>The dependency&rsquo;s names are used to fill a hash table in which a hash value in encoded on 32 bits:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Pseudo code
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#b00040">uint32_t</span> TABLE[<span style="color:#666">0x6d</span>]
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; i <span style="color:#666">&lt;</span> <span style="color:#666">0x6d</span>; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>  TABLE[i] <span style="color:#666">=</span> hash(lib_names[i]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Later in the the code, this computed table is compared with another hash table &ndash; <strong>hard-coded in the code</strong> &ndash;
which looks like this:</p>
<center>
<figure class="mb-4" id="fig-4">

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 617 388" width="100%" height="100%">
    <g font-family="Fira Code" font-size="11px" font-weight="400">

<rect x="0" y="0" width="617" height="388" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="20"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF38&#160;</tspan><tspan class="hlr hlr-name-label">loc_100E4CF38</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-comment-single">;&#160;CODE&#160;XREF:&#160;sub_100E4CC54+230↑j</tspan><tspan class="hlr hlr-text-whitespace"></tspan></text>
<text x="7" y="36"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF38&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X10</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">SP</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="52"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF3C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">SUB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X10</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x1C0</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="68"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF40&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">SP</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="84"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF44&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X9</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-integer">#0</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="100"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF48&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x1D2A29E0195DDC1</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="116"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF58&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x4AA0A7902C19769</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="132"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF68&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="148"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF6C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x64CAED105C09EBA</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="164"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF7C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0xEDC68A50A44D7D1</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="180"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF8C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-hex">#0x10</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="196"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CF90&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x128801E010DCF774</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="212"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFA0&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x14EDACA112DF984A</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="228"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFB0&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-hex">#0x20</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="244"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFB4&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x166DA22D164DF42A</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="260"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFC4&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x1B2CAF8A1ACDDCCF</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="276"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFD4&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-hex">#0x30</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="292"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFD8&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x1CF2CE101BB56374</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="308"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFE8&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x235D2E461E37FF16</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="324"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFF8&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-hex">#0x40</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="340"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4CFFC&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x28F80E87260C94F3</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="356"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4D00C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-literal-number-hex">#0x2CBB87222BFB0F4D</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="372"  xml:space="preserve"><tspan class="hlr hlr-name-section">__text:</tspan><tspan class="hlr hlr-literal-number-address">0000000100E4D01C&#160;</tspan><tspan class="hlr hlr-text-whitespace">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-instruction">STP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="hlr hlr-name-register">X11</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-name-register">X12</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan>&#160;</tspan><tspan class="hlr hlr-error">[</tspan><tspan class="hlr hlr-name-register">X8</tspan><tspan class="hlr hlr-punctuation">,</tspan><tspan class="hlr hlr-literal-number-hex">#0x50</tspan><tspan class="hlr hlr-error">]</tspan><tspan class="hlr hlr-text"></tspan></text>
<text x="7" y="388"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
<figcaption>Fig 4. Examples of Hashes</figcaption>
</figure>
</center>
<p>If some libraries have been modified to inject, for instance, <code>FridaGadget.dylib</code> then the hash <strong>dynamically</strong>
computed will not match the hash hard-coded in the code.</p>
<p>Whilst the implementation of this check is pretty <em>&ldquo;standard&rdquo;</em>, there are a few points worth mentioning:</p>
<ul>
<li>
<p>Firstly, the hash function seems be a derivation of the <a href="https://en.wikipedia.org/wiki/MurmurHash">MurmurHash</a>.</p>
</li>
<li>
<p>Secondly, the hash is encoded on <strong>32 bits</strong> but the code in the <a href="#fig-4">Figure 4</a> references the X11/X12 registers
which are 64 bits. This is actually a compiler optimization to limit the number of memory accesses.</p>
</li>
<li>
<p>Thirdly, the hard coded hash values are duplicated in the binary for each instance of the check.
In SingPass, this RASP check is present twice thus, we find these values at the following locations:
<code>0x100E4CF38</code>, <code>0x100E55678</code>.
This duplication is likely used to prevent a single spot location that would be easy to patch.</p>
</li>
</ul>
<h2 id="code-system-lib">Code System Lib</h2>
<p>This check is associated with the event <span class="dark-boxed dark-purple">EVT_CODE_SYSTEM_LIB</span>
which consists in verifying the integrity of
the <strong>in-memory</strong> system libraries with their content in the dyld shared cache (<strong>on-disk</strong>).</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <samp>Assembly ranges: 0x100ED5BF8 &ndash; 0x100ED5D6C and 0x100ED5E0C &ndash; 0x100ED62D4</samp>
</div>
<p>This check usually starts with the following pattern:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 610 379" width="100%" height="100%">
    <g font-family="Fira Code" font-size="12px" font-weight="500">

<rect x="0" y="0" width="610" height="379" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="22"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80AF0&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">ADR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">check_region_cbk</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;cbk</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="39"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80AF4&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">NOP</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="56"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80AF8&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">BL</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#FDD418">iterate_system_region</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="73" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80AFC&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">ORR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">W0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">W21</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="90" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B00&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">CBZ</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">loc_100E80B50</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="107" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B04&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X21</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="124" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B08&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">ADRP</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">#EVT_CODE_SYSTEM_LIB_cbk_ptr</tspan><tspan fill="#ababab">@PAGE</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="141" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B0C&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">LDR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X8</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#C364FC">#EVT_CODE_SYSTEM_LIB_cbk_ptr</tspan><tspan fill="#ababab">@PAGEOFF</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="158" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B10&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="175" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B14&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">SUB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X10</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0x10</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="192" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B18&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X10</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="209" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B1C&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X11</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0x13B851C07E9DBCD</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="226" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B2C&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">STUR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X11</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#-0x10</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="243" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B30&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="260" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B34&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">SUB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0x10</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="277" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B38&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X0</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="294" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B3C&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W11</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0x1000</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="311" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B40&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">STUR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W11</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#-0x10</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="328" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B44&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">STUR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X10</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#-8</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="345" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B48&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">BLR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X8</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="362" opacity="0.5" xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">00100E80B4C&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X21</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="379"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>If the result of <code>iterate_system_region</code> with the given <code>check_region_cbk</code> callback is not 0,
it triggers the <span class="dark-boxed dark-purple">EVT_CODE_SYSTEM_LIB</span> event:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (iterate_system_region(check_region_cbk) <span style="color:#666">!=</span> <span style="color:#666">0</span>) {
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Trigger `EVT_CODE_SYSTEM_LIB`
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>To understand the logic behind this check, we need to understand the purpose of the <code>iterate_system_region</code>
function and its relationship with the callback <code>check_region_cbk</code>.</p>
<h3 id="iterate_system_region">iterate_system_region</h3>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-circle-info" style="color: #084298" >&#160;</span>
  As for all the functions referenced in the blog post, their names come from my own analysis and might be inaccurate.
Most of the functions related to the RASP checks were obviously stripped.
In this case, <code>iterate_system_region</code> matches the original <em><code>sub_100ED5BF8</code></em>
</div>
<p>This function aims to call the system function <code>vm_region_recurse_64</code> and then, filter its output on
conditions that could trigger the callback given in the first parameter: <span class="dark-boxed dark-yellow">check_region_cbk</span>.</p>
<p><span class="dark-boxed dark-yellow">iterate_system_region</span> starts by accessing the base address of
the dyld shared cache thanks to the <span class="dark-boxed dark-red">SYS_shared_region_check_np</span> syscall.
This address is used to read and <strong>memoize</strong> a few attributes from the <code>dyld_cache_header</code> structure:</p>
<ol>
<li>The shared cache header</li>
<li>The shared cache end address</li>
<li>Other limits related to the shared cache</li>
</ol>
<p>The following snippet gives an overview of these computations:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> dyld_shared_cache<span style="color:#666">*</span> header <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>; <span style="color:#408080;font-style:italic">/* At: 0x1010DE940 */</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> uintptr_t g_shared_cache_end;        <span style="color:#408080;font-style:italic">/* At: 0x1010DE948 */</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> uintptr_t g_overflow_address;        <span style="color:#408080;font-style:italic">/* At: 0x1010DE950 */</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> uintptr_t g_module_last_addr;        <span style="color:#408080;font-style:italic">/* At: 0x1010DE958 */</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (header <span style="color:#666">==</span> <span style="color:#008000;font-weight:bold">nullptr</span>) {
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// return;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>uintptr_t shared_cache_base;
</span></span><span style="display:flex;"><span>syscall(SYS_shared_region_check_np, <span style="color:#666">&amp;</span>shared_cache_base);
</span></span><span style="display:flex;"><span>header <span style="color:#666">=</span> shared_cache_base;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g_shared_cache_end <span style="color:#666">=</span> shared_cache_addr <span style="color:#666">+</span> header<span style="color:#666">-&gt;</span>mappings[<span style="color:#666">0</span>].size;
</span></span><span style="display:flex;"><span>g_overflow_address <span style="color:#666">=</span> <span style="color:#666">-</span><span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>g_module_last_addr <span style="color:#666">=</span> g_shared_cache_end;
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (header<span style="color:#666">-&gt;</span>imagesTextCount <span style="color:#666">&gt;</span> <span style="color:#666">0</span>) {
</span></span><span style="display:flex;"><span>  uintptr_t slide <span style="color:#666">=</span> shared_cache_addr <span style="color:#666">-</span> header<span style="color:#666">-&gt;</span>mappings[<span style="color:#666">0</span>].address;
</span></span><span style="display:flex;"><span>  uintptr_t tmp_overflow_address <span style="color:#666">=</span> <span style="color:#666">-</span><span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>  uintptr_t shared_cache_end_tmp <span style="color:#666">=</span> shared_cache_end;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; i <span style="color:#666">&lt;</span> header<span style="color:#666">-&gt;</span>imagesTextCount; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> uintptr_t txt_start_addr <span style="color:#666">=</span> slide      <span style="color:#666">+</span> header<span style="color:#666">-&gt;</span>imagesText[i].loadAddress;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> uintptr_t txt_end_addr   <span style="color:#666">=</span> start_addr <span style="color:#666">+</span> header<span style="color:#666">-&gt;</span>imagesText[i].textSegmentSize;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (txt_start_addr <span style="color:#666">&gt;=</span> shared_cache_end_tmp <span style="color:#666">&amp;&amp;</span> txt_start_addr <span style="color:#666">&lt;</span> tmp_overflow_address) {
</span></span><span style="display:flex;"><span>      g_overflow_address   <span style="color:#666">=</span> start_addr;
</span></span><span style="display:flex;"><span>      tmp_overflow_address <span style="color:#666">=</span> start_addr;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (txt_end_addr <span style="color:#666">&gt;=</span> shared_cache_end_tmp) {
</span></span><span style="display:flex;"><span>      g_module_last_addr   <span style="color:#666">=</span> txt_end_addr;
</span></span><span style="display:flex;"><span>      shared_cache_end_tmp <span style="color:#666">=</span> txt_end_addr;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #FAFCFF; color: #084298;">
  <span class="fas fa-face-thinking" style="color: #084298" >&#160;</span>
  From a reverse engineering point of view, the stack variable used to memoize these information
is aliased with the parameter <code>info</code> of <code>vm_region_recurse_64</code> that is called later. I don&rsquo;t know if this aliasing
is on purpose, but it makes the reverse engineering of the structures a bit more complicated.
</div>
<p>Following this memoization, there is a loop on <code>vm_region_recurse_64</code> which queries the <code>vm_region_submap_info_64</code>
information for these addresses in the range of the dyld shared cache.
We can identify the type of the query (<code>vm_region_submap_info_64</code>) thanks to the
<code>mach_msg_type_number_t *infoCnt</code> argument which is set to <code>19</code>:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 653 311" width="100%" height="100%">
    <g font-family="Fira Code" font-size="12px" font-weight="500">

<rect x="0" y="0" width="653" height="311" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="22"  xml:space="preserve"><tspan fill="#C364FC">;&#160;In&#160;this&#160;basic&#160;block,&#160;the&#160;stack&#160;variable&#160;`#0xB0+info`&#160;is&#160;aliased&#160;with</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="39"  xml:space="preserve"><tspan fill="#C364FC">;&#160;the&#160;variable&#160;used&#160;for,&#160;saving&#160;(temporarily)&#160;the&#160;shared&#160;cache&#160;information</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="56"  xml:space="preserve"><tspan fill="#C364FC">;&#160;c.f.&#160;loc_100ED5C68</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="73"  xml:space="preserve"><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="90"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D24&#160;</tspan><tspan fill="#FDD418">loc_100ED5D24</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="107"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D24&#160;</tspan><tspan fill="#aaaaaa">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">X9</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">&lt;</tspan><tspan fill="#aaaaaa">-</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">shared</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">cache</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">base</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">address</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="124"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D24&#160;</tspan><tspan fill="#ffffff">STR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X9</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0xB0</tspan><tspan fill="#aaaaaa">+</tspan><tspan fill="#CC7A00">pAddr</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="141"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D28&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0x13</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;-&gt;&#160;19&#160;&lt;=&gt;&#160;vm_region_submap_info_64</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="158"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D2C&#160;</tspan><tspan fill="#ffffff">STR</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W8</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">[</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan fill="#6DCFF6">#0xB0</tspan><tspan fill="#aaaaaa">+</tspan><tspan fill="#CC7A00">infoCnt</tspan><tspan fill="#aaaaaa">]</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="175"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D30&#160;</tspan><tspan fill="#ffffff">ADD</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X1</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0xB0</tspan><tspan fill="#aaaaaa">+</tspan><tspan fill="#CC7A00">pAddr</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;address</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="192"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D34&#160;</tspan><tspan fill="#ffffff">SUB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X2</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X29</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">#</tspan><tspan fill="#aaaaaa">-</tspan><tspan fill="#CC7A00">size</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;size</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="209"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D38&#160;</tspan><tspan fill="#ffffff">SUB</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X3</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X29</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#aaaaaa">#</tspan><tspan fill="#aaaaaa">-</tspan><tspan fill="#CC7A00">nesting_depth</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">;&#160;nesting_depth</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="226"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D3C&#160;</tspan><tspan fill="#ffffff">ADD</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X4</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0xB0</tspan><tspan fill="#aaaaaa">+</tspan><tspan fill="#CC7A00">info</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;info</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="243"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D40&#160;</tspan><tspan fill="#ffffff">ADD</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X5</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">SP</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">#0xB0</tspan><tspan fill="#aaaaaa">+</tspan><tspan fill="#CC7A00">infoCnt</tspan><tspan>&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;infoCnt</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="260"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D44&#160;</tspan><tspan fill="#ffffff">MOV</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">X0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#D1F0FC">X20</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#C364FC">;&#160;target_task</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="277"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D48&#160;</tspan><tspan fill="#ffffff">BL</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#FDD418">_vm_region_recurse_64</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="294"  xml:space="preserve"><tspan fill="#5C92EA">__text:</tspan><tspan fill="#5C92EA">0000000100ED5D4C&#160;</tspan><tspan fill="#ffffff">CBZ</tspan><tspan>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan fill="#D1F0FC">W0</tspan><tspan fill="#aaaaaa">,</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">loc_100ED5D70</tspan><tspan fill="#aaaaaa"></tspan></text>
<text x="7" y="311"  xml:space="preserve"></text>

    </g>
</svg>
        

<br /><br />
</center>
<p>This loop breaks under certain conditions and the callback is triggered with other conditions.
As it is explained a bit later, the callback verifies the in-memory integrity of the library present
in the dyld shared cache.</p>
<p>The verification and the logic behind this check is prone to take time, that&rsquo;s why the authors of the check
took care of filtering the addresses to check to avoid useless (heavy) computations.</p>
<p>Basically, the callback that performs the in-depth inspection of the shared cache is triggered if:</p>
<center>

<?xml version="1.0" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 531 107" width="100%" height="100%">
    <g font-family="Fira Code" font-size="12px" font-weight="500">

<rect x="0" y="0" width="531" height="107" fill="#353333"
      stroke-width="5" stroke="#6DCFF6" />

    <text x="7" y="22"  xml:space="preserve"><tspan fill="#88b0f0">if</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">(</tspan><tspan fill="#ffffff">info</tspan><tspan fill="#ffffff">.</tspan><tspan fill="#ffffff">pages_swapped_out</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">!=</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">|</tspan><tspan fill="#C364FC">|</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="39"  xml:space="preserve"><tspan fill="#ffffff">&#160;&#160;&#160;&#160;</tspan><tspan fill="#ffffff">info</tspan><tspan fill="#ffffff">.</tspan><tspan fill="#ffffff">pages_swapped_out</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">==</tspan><tspan>&#160;</tspan><tspan fill="#6DCFF6">0</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&amp;&amp;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">info</tspan><tspan fill="#ffffff">.</tspan><tspan fill="#ffffff">protection</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">&amp;</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">VM_PROT_EXECUTE</tspan><tspan fill="#ffffff">)</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="56" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff">{</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="73" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff">&#160;&#160;</tspan><tspan fill="#88b0f0">bool</tspan><tspan>&#160;</tspan><tspan fill="#ffffff">integrity_failed</tspan><tspan>&#160;</tspan><tspan fill="#C364FC">=</tspan><tspan>&#160;</tspan><tspan fill="#FDD418">check_region_cbk</tspan><tspan fill="#ffffff">(</tspan><tspan fill="#ffffff">address</tspan><tspan fill="#ffffff">)</tspan><tspan fill="#ffffff">;</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="90" opacity="0.5" xml:space="preserve"><tspan fill="#ffffff">}</tspan><tspan fill="#ffffff"></tspan></text>
<text x="7" y="107"  xml:space="preserve"></text>

    </g>
</svg>
        

</center>
<h4 id="check_region_cbk">check_region_cbk</h4>
<p>When the conditions are met, <span class="dark-boxed dark-yellow">iterate_system_region</span> calls the
<span class="dark-boxed dark-yellow">check_region_cbk</span> with the suspicious address in the first parameter:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">iterate_system_region</span>(callback_t cbk) {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">int</span> ret <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (cond(address)) {
</span></span><span style="display:flex;"><span>    ret <span style="color:#666">=</span> cbk(address) {
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">// Checks on the dyld_shared_cache
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> ret;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>During the analysis of SingPass, only <strong>one</strong> callback is used in pair with
<span class="dark-boxed dark-yellow">iterate_system_region</span>, and its code
is not <strong>especially obfuscated</strong> (except the strings). Once we know that the checks are related to the dyld shared cache,
we can quite easily figure out the structures involved in this function.
This callback is located at the address <code>0x100ed5e0c</code> and renamed
<span class="dark-boxed dark-yellow">check_region_cbk</span>.</p>
<p>Firstly, it starts by accessing the information about the address:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">check_region_cbk</span>(uintptr_t address) {
</span></span><span style="display:flex;"><span>  Dl_info info;
</span></span><span style="display:flex;"><span>  dladdr(address, info);
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>This information is used to read the content of the <code>__TEXT</code> segment associated with the <code>address</code> parameter:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">auto</span><span style="color:#666">*</span> header <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>mach_header_64<span style="color:#666">*&gt;</span>(info.dli_fbase);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>segment_command_64 __TEXT <span style="color:#666">=</span> get_text_segment(header);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>vm_offset_t data <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>mach_msg_type_number_t<span style="color:#666">*</span> dataCnt <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>vm_read(task_self_trap(), info.dli_fbase, __TEXT.vmsize, <span style="color:#666">&amp;</span>data, <span style="color:#666">&amp;</span>dataCnt);
</span></span></code></pre></div><div class="alert alert-info" role="alert" style="border: none !important; background-color: #fff5f5; color: #b20000;">
  <span class="fas fa-shield-halved" style="color: #b20000" >&#160;</span>
  The <code>__TEXT</code> strings is encoded as well as the different paths of the shared cache like <code>/System/Library/Caches/com.apple.dyld/dyld_shared_cache_arm64e</code>
and the header&rsquo;s magic values: <code>0x01010b9126: dyld_v1  arm64e</code> or <code>0x01010b9116: dyld_v1   arm64</code>
</div>
<p>On the other hand, the function opens the <code>dyld_shared_cache</code> and looks for the section of the shared cache
that contains the library associated with the <code>address</code> parameter:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> fd <span style="color:#666">=</span> open(<span style="">&#39;</span><span style="color:#666">/</span>System<span style="color:#666">/</span>Library<span style="color:#666">/</span>Caches<span style="color:#666">/</span>com.apple.dyld<span style="color:#666">/</span>dyld_shared_cache_arm64<span style="">&#39;</span>);
</span></span><span style="display:flex;"><span>(<span style="color:#666">1</span>) mmap(<span style="color:#008000;font-weight:bold">nullptr</span>, <span style="color:#666">0x100000</span>, VM_PROT_READ, MAP_NOCACHE <span style="color:#666">|</span> MAP_PRIVATE, fd, <span style="color:#666">0x0</span>)<span style="color:#666">:</span> <span style="color:#666">0x109680000</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Look for the shared cache entry associated with the provided address
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>(<span style="color:#666">2</span>) mmap(<span style="color:#008000;font-weight:bold">nullptr</span>, <span style="color:#666">0xad000</span>, VM_PROT_READ, MAP_NOCACHE <span style="color:#666">|</span> MAP_PRIVATE, fd, <span style="color:#666">0x150a9000</span>)<span style="color:#666">:</span> <span style="color:#666">0x109681000</span>
</span></span></code></pre></div><p>The purpose of the second call to <code>mmap()</code> is to load the slice of the shared cache that contains the code of the library.
Then, the function checks <strong>byte per byte</strong> that the <code>__TEXT</code> segment&rsquo;s content matches the in-memory content.
The loop which performs this comparison is located between these addresses: <code>0x100ED6C58 - 0x100ED6C70</code>.</p>
<hr>
<p>As we can observe from the description of this RASP check, the authors paid a lot of attention to
avoid performance issues and memory overhead. On the other hand, the callback <span class="dark-boxed dark-yellow">check_region_cbk</span>
was never called during my experimentations (even when I hooked system function).
I don&rsquo;t know if it&rsquo;s because I misunderstood the conditions but in the end,
I had to manually force the conditions (by forcing the <code>pages_swapped_out</code> to 1).</p>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #fcfbfe; color: #4b2d83;">
  <span class="fas fa-bars-staggered" style="color: #4b2d83" >&#160;</span>
  <code>vm_region_recurse_64</code> seems also always paired with an anti-hooking verification that is slightly different from
the check described at the beginning of this blog post. Its analysis is quite easy and can be a good exercise.
</div>
<h2 id="rasp-design-weaknesses">RASP Design Weaknesses</h2>
<p>Thanks to the different <span class="dark-boxed dark-purple">#EVT_*</span> static variables that hold
function pointers, the obfuscator enables to have dedicated callbacks for the supported RASP events.
Nevertheless, the function <span class="dark-boxed dark-yellow">init_and_check_rasp</span> defined by the application&rsquo;s developers
setup <strong>all</strong> these pointers <strong>to the same</strong> callback: <span class="dark-boxed dark-yellow">hook_detect_cbk_user_def</span>.
In such a design, all the RASP events end up in a single function which weakens the strength of the different RASP checks.</p>
<p>It means that we only have to target this function to disable or bypass the RASP checks.</p>
<p>Using Frida Gum, the bypass is as simple as using <code>gum_interceptor_replace</code> with an empty function:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">enum</span> <span style="color:#008000;font-weight:bold">class</span> <span style="color:#00f;font-weight:bold">RASP_EVENTS</span> <span style="color:#666">:</span> <span style="color:#b00040">uint32_t</span> {
</span></span><span style="display:flex;"><span>  EVT_ENV_JAILBREAK        <span style="color:#666">=</span> <span style="color:#666">0x1</span>,
</span></span><span style="display:flex;"><span>  EVT_ENV_DEBUGGER         <span style="color:#666">=</span> <span style="color:#666">0x2</span>,
</span></span><span style="display:flex;"><span>  EVT_APP_SIGNATURE        <span style="color:#666">=</span> <span style="color:#666">0x20</span>,
</span></span><span style="display:flex;"><span>  EVT_APP_LOADED_LIBRARIES <span style="color:#666">=</span> <span style="color:#666">0x40</span>,
</span></span><span style="display:flex;"><span>  EVT_CODE_PROLOGUE        <span style="color:#666">=</span> <span style="color:#666">0x400</span>,
</span></span><span style="display:flex;"><span>  EVT_CODE_SYMBOL_TABLE    <span style="color:#666">=</span> <span style="color:#666">0x800</span>,
</span></span><span style="display:flex;"><span>  EVT_CODE_SYSTEM_LIB      <span style="color:#666">=</span> <span style="color:#666">0x1000</span>,
</span></span><span style="display:flex;"><span>  EVT_CODE_TRACING         <span style="color:#666">=</span> <span style="color:#666">0x2000</span>,
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">event_info_t</span> {
</span></span><span style="display:flex;"><span>  RASP_EVENTS event;
</span></span><span style="display:flex;"><span>  uintptr_t<span style="color:#666">**</span> ptr_to_corrupt;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">do_nothing</span>(event_info_t info) {
</span></span><span style="display:flex;"><span>  RASP_EVENTS evt <span style="color:#666">=</span> info.event;
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">return</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// This is **pseudo code**
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>gum_interceptor_replace(
</span></span><span style="display:flex;"><span>  listener<span style="color:#666">-&gt;</span>interceptor,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(<span style="color:#666">&amp;</span>hook_detect_cbk_user_def)
</span></span><span style="display:flex;"><span>  do_nothing,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(<span style="color:#666">&amp;</span>hook_detect_cbk_user_def)
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>Thanks to this weakness, I could prevent the error message from being displayed as soon as the application starts.</p>
<center>
<figure class="mb-4">
<video class="mb-4" controls="yes">
<source src="/post/22-08-singpass-rasp-analysis/poc.webm" type="video/webm"></video>
</figure>
<figcaption class="mb-4">SingPass Jailbreak & RASP Bypass</figcaption>
</center>
<div class="alert alert-info" role="alert" style="border: none !important; background-color: #f9f9f9; color: #4d4d4d;">
  <span class="fas fa-shield-halved" style="color: #4d4d4d" >&#160;</span>
  It exists two other RASP checks: <code>EVT_APP_MACHO</code> and <code>EVT_APP_SIGNATURE</code> which were not enabled
by the developers and thus, are not present in SingPass.
</div>
<h2 id="conclusion">Conclusion</h2>
<p>This first part is a good example of the challenges when using or designing an obfuscator with RASP features.
On one hand, the commercial solution implements strong and advanced RASP functionalities with, for instance, inlined syscalls
spread in different places of the application. On the other hand, the app&rsquo;s developers weakened the RASP functionalities
by setting the <strong>same callback</strong> for all the events. In addition, it seems that the application <strong>does not
use the native code obfuscation</strong> provided by the commercial solution which makes the RASP checks un-protected against static
code analysis. It could be worth to enforce code obfuscation on these checks regardless the configuration provided
by the user.</p>
<p>From a developer point of view, it can be very difficult to understand the impact in term of reverse-engineering
when choosing to setup the same callback while it can be a good design decision from an architecture perspective.</p>
<p>In the second part of this series about iOS code obfuscation, we will dig a bit more in native code obfuscation
through another application,
where the application reacts differently to the RASP events and where the code is obfuscated with
MBA, Control-Flow Flattening, etc.</p>
<p>If you have questions feel free to ping me 📫.</p>
<h3 id="annexes">Annexes</h3>
<table>
<thead>
<tr>
<th>JB Detection Files</th>
<th>Listed in PokemonGO</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/.bootstrapped</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/.installed_taurine</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/.mount_rw</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/Library/dpkg/lock</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/binpack</code></td>
<td><strong>Yes</strong></td>
</tr>
<tr>
<td><code>/odyssey/cstmp</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/odyssey/jailbreakd</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/payload</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/payload.dylib</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/private/var/mobile/Library/Caches/kjc.loader</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/private/var/mobile/Library/Sileo</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/amfidebilitate</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/cstmp</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/jailbreakd</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/jbexec</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/launchjailbreak</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/taurine/pspawn_payload.dylib</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/var/dropbear</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/var/jb</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/var/lib/undecimus/apt</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/var/motd</code></td>
<td>No</td>
</tr>
<tr>
<td><code>/var/tmp/cydia.log</code></td>
<td>No</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Flagged Packages</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/Applications/AutoTouch.app/AutoTouch</code></td>
</tr>
<tr>
<td><code>/Applications/iGameGod.app/iGameGod</code></td>
</tr>
<tr>
<td><code>/Applications/zxtouch.app/zxtouch</code></td>
</tr>
<tr>
<td><code>/Library/Activator/Listeners/me.autotouch.AutoTouch.ios8</code></td>
</tr>
<tr>
<td><code>/Library/LaunchDaemons/com.rpetrich.rocketbootstrapd.plist</code></td>
</tr>
<tr>
<td><code>/Library/LaunchDaemons/com.tigisoftware.filza.helper.plist</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/ATTweak.dylib</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/GameGod.dylib</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/LocalIAPStore.dylib</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/Satella.dylib</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/iOSGodsiAPCracker.dylib</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/pccontrol.dylib</code></td>
</tr>
<tr>
<td><code>/Library/PreferenceBundles/SatellaPrefs.bundle/SatellaPrefs</code></td>
</tr>
<tr>
<td><code>/Library/PreferenceBundles/iOSGodsiAPCracker.bundle/iOSGodsiAPCracker</code></td>
</tr>
</tbody>
</table>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/featured.png"/></item><item><title>A Journey in iOS App Obfuscation</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/22-08-ios-obfuscation/</guid><description>This series of blog posts details how obfuscators can protect iOS applications from reverse engineering</description><content:encoded><![CDATA[<p>Back in July 2021, I had a look at the protections provided by Arxan to detect jailbroken devices in PokemonGO for iOS
(<a href="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/"><em>Gotta Catch &lsquo;Em All: Frida &amp; jailbreak detection</em></a>).</p>
<p>To continue walking along the path of iOS reverse engineering, I recently had a look at two iOS applications
protected by a solution providing both native code obfuscation and RASP (<em>Runtime Application Self Protection</em>) protections.</p>
<p>I ended up with two blog posts:</p>
<ul>
<li><a href="https://www.romainthomas.fr/post/22-08-singpass-rasp-analysis/">Part 1 &ndash; SingPass RASP Analysis</a></li>
<li><a href="https://www.romainthomas.fr/post/22-09-ios-obfuscation-syscall-hooking/">Part 2 &ndash; Native Code Obfuscation and RASP Syscalls Bypass</a></li>
</ul>
<p>The first part is an in-depth analysis of RASP detections methods on iOS while the second part details
native code obfuscation and a new technique to bypass inlined syscalls (without Frida/Frida&rsquo;s stalker and without a disassembler)</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #f2fcf5">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-shield-check" style="color: #17642e" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #17642e">
    <h3 class="h5 m-0 mb-1" style="color: #17642e">Disclaimer</h3>
    <p>The obfuscator mentioned in these blog posts provides strong and state-of-the-art protections to hinder reverse engineering.
When dealing with obfuscation, saying that something is broken does not make really sense
as if an attacker is skilled and <strong>strongly motivated</strong>, he will very likely achieve his goal.</p>
<p>Moreover, this series of blog posts do not (and can&rsquo;t) <strong>exhaustively</strong> evaluate the strength of this commercial
solution because:</p>
<ol>
<li>The applications analyzed might not use the latest version of the obfuscator.</li>
<li>All the obfuscation features might not have been enabled by the developers (e.g. for performance reasons).</li>
<li>The developers might have weakened the obfuscation scheme (unintentionally).</li>
</ol>
<p>In summary, these blog posts aim at sharing &ndash; from a technical point of view &ndash; what RASP and native code
obfuscation look like on iOS. The scripts/code associated with these blog posts will not be published as it
does not really bring more information.</p>
<p>The commercial solution not mentioned in the blog posts is and remains a good choice for protecting assets from
reverse engineering. If you have doubts I would be very happy to discuss it.</p>
  </div>
  </div>
  </div>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/22-08-ios-obfuscation/featured.png"/></item><item><title>PGSharp: Analysis of a Cheating App for PokemonGO</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/21-11-pgsharp-analysis/</guid><description>This blog post is about the internal mechanisms of PGSharp, a cheat engine for PokemonGO.</description><content:encoded><![CDATA[<style>
  .green {
    color:green;
    font-family: 'Fira Code', monospace;
  }

  .blue {
    color: blue;
    font-family: 'Fira Code', monospace;
  }
  .orange {
    color: #FF6347;
    font-family: 'Fira Code', monospace;
  }

  .red {
    color: #c02032;
    font-family: 'Fira Code', monospace;
  }

  a.ul {
    color: #c02032 !important;
  }

  .hl-comment {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
  }

  .hl-keyword {
    color: #A90D91;
    font-family: 'Fira Code', monospace;
  }

  .hl-literal {
    color: #1C01CE;
    font-family: 'Fira Code', monospace;
  }

  .hl-preproc {
    color: #633820;
    font-family: 'Fira Code', monospace;
  }

  .hl-strings {
    color: #C41A16;
    font-family: 'Fira Code', monospace;
  }
  .yellow {
    color: #CC7000;
    font-family: 'Fira Code', monospace;
  }


</style>
<h2 id="introduction">Introduction</h2>
<p>A few days after the release of the blog post <a href="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/"><em>Gotta Catch &lsquo;Em All: Frida &amp; jailbreak detection</em></a>, someone on <a href="https://www.reddit.com/r/ReverseEngineering/comments/on6ya9/comment/h5rhkoc/">reddit - r/ReverseEngineering</a>
caught my attention on a cheating app for the Android version of PokemonGO:</p>
<p><img src="reddit.png" alt="reddit comment about PGSharp"></p>
<p>So here it is!</p>
<p>PGSharp belongs to the family of PokemonGO&rsquo;s cheating app that is not (yet) banned by Niantic.
This cheat provides an <em>enhanced</em> game experience with interesting functionalities such as:</p>
<ul>
<li>GPS Spoofing</li>
<li>Quick Catch</li>
<li>Pokemon Feed</li>
<li>Nearby Radar</li>
<li>&hellip;</li>
</ul>
<p>Last but not least, PGSharp runs on regular devices, <strong>rooted or not</strong>.</p>
<p>This cheat made my weekends for the last 4 months and, from a technical point of view, it was worth it.
As will be discussed through this blog post, PGSharp uses several interesting tricks.</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    <p>The content of this blog post is based on <strong>PGSharp 1.33.0</strong> which is related to the following APKs:</p>
<p><i class="fas fa-gamepad"></i> <a href="https://data.romainthomas.fr/21-09-pgsharp/pgs1.33.0.apk">PGSharp v1.33.0</a></p>
<p><i class="fas fa-gamepad"></i> <a href="https://data.romainthomas.fr/21-09-pgsharp/com.nianticlabs.pokemongo_0.221.0-2021093001.apk">PokemonGO v0.221.0</a></p>
  </div>
  </div>
  </div>
</div>
<p>This blog post is quite <strong>long</strong> but the different parts are
more or less independents, so feel free to jump on them depending on your interests:</p>
<p><span id="toc"></span></p>
<ul>
<li><a href="#code-protection"><i class='fas fa-shield-alt'></i>  Code Protection</a>
<ul>
<li><a href="#lua-vm">Lua VM</a></li>
<li><a href="#java-obfuscation">Java Obfuscation</a></li>
</ul>
</li>
<li><a href="#cheat-mechanisms"><i class='fas fa-cogs'></i>  Cheat Mechanisms</a>
<ul>
<li><a href="#dex-files-diff">DEX Files Comparison</a></li>
<li><a href="#libmain">libmain.so</a></li>
<li><a href="#signature-bypass">Signature Bypass</a></li>
<li><a href="#dynamic-apk-loading">Dynamic APK Loading</a></li>
<li><a href="#gps-spoofing">GPS Spoofing</a></li>
<li><a href="#jnienv-proxifier">JNIEnv Proxifier</a></li>
<li><a href="#unity-hooks">Unity Hooks</a></li>
<li><a href="#network">Network Communications</a></li>
<li><a href="#safetynet">SafetyNet</a></li>
<li><a href="#pgsharp-signature-check">When PGSharp avoids PokemonGO pitfalls</a></li>
</ul>
</li>
<li><a href="#final-words"><i class='fas fa-power-off'></i>  Final Words</a></li>
<li><a href="#acknowledgments"><i class='fas fa-stream'></i>  Acknowledgments</a></li>
<li><a href="#annexes"><i class='fas fa-clipboard'></i>  Annexes</a></li>
</ul>
<p>You can also check the slides to get an overview of the content:</p>
<div class="pdfpreview shortcode shortcode--pdfpreview mb-4">
<embed src="/publication/21-ekoparty-mobile-hacking-space-pgsharp/21-10-ekoparty-mobile-hacking-space-pgsharp.pdf" type="application/pdf" width="100%" height=450px />
</div>

<center>
<br /><br />
<p><b>Enjoy!</b></p>
</center>
<h2 id="code-protection"><a href="#toc"><i class='fas fa-angle-up'></i>  Code Protection</a></h2>
<p>PokemonGO is a target of choice for reverse engineers and some critical functionalities are protected by a commercial solution.
It is worth mentioning that only a subset of the game is obfuscated. For instance, the &ldquo;Java&rdquo; part of the
game is absolutely not protected, such as we have the original class and method names.
The Unity part is &ldquo;compiled&rdquo; into <code>libil2cpp.so</code> but we can recover some metadata with <a href="https://github.com/Perfare/Il2CppDumper">Perfare/Il2CppDumper</a>.</p>
<p>All the obfuscation is focused on <code>libNianticLabsPlugin.so</code> (c.f. <a href="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/"><em>Gotta Catch &lsquo;Em All: Frida &amp; jailbreak detection</em></a>),
and since only this part of the game is heavily obfuscated, it gives a hint about where the critical functionalities are.</p>
<p>On the other hand, PGSharp uses different layers of obfuscation to prevent its analysis.
First of all, it uses O-LLVM to obfuscate the native code that includes, at least, control-flow flattening and
string encryption. Nevertheless, the obfuscation is <em>relatively</em> weak against emulation and static analysis<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<h3 id="lua-vm"><a href="#toc"><i class='fas fa-angle-up'></i>  Lua VM</a></h3>
<p>Some obfuscation techniques are based on transforming the original code through a VM (like <a href="https://vmpsoft.com/">VMProtect</a>).
It adds another layer to reverse, as we need to understand the VM architecture before being able to understand the original semantic of the code.</p>
<center>
<b><p>
But what about using an interpreted language (like Python) and obfuscate its VM or its interpreter with O-LLVM?
</p></b><br />
</center>
<p>This is what PGSharp does with Lua. Some parts of the cheat are written in Lua whose VM has been modified to:</p>
<ol>
<li>Fake the version: try to make believe <code>Lua 5.1</code> while it&rsquo;s <code>Lua 5.3</code></li>
<li>Add new opcodes (<code>OP_RUN</code>, <code>OP_GETDOWNVAL</code>, <code>OP_OLDTABLE</code>, and <code>OP_XXOR</code>) to break decompilation and
common Lua tools.</li>
</ol>
<p>The native library that implements the cheat functionalities and that contains the Lua VM being stripped, one of the
challenges lies in recognizing the Lua C API among the library&rsquo;s functions<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. For instance,
here is a basic block of a native function that uses the Lua API:</p>
<p><img src="lua_func_re.png" alt="Stripped PGSharp function"></p>
<p>Among all the Lua C functions, some of them are worth identifying to ease reverse engineering:</p>
<ul>
<li>
<dl>
<dt><code>luaL_loadbuffer</code></dt>
<dd><blockquote>
<p><em>&ldquo;Load a buffer as a Lua chunk.&rdquo;</em>.</p>
</blockquote>
</dd>
<dd>
<p>Basically, it loads a Lua bytecode from a buffer given in parameter.
This Lua bytecode is the result of the <em>compilation</em> of the original script with <a href="https://www.lua.org/manual/5.3/luac.html">luac</a>.
By hooking this function, we can recover the following files:</p>
<ul>
<li><span class="orange">base64.luac</span></li>
<li><span class="green">class.luac</span></li>
<li><span class="green">global.luac</span></li>
<li><span class="green">init.luac</span></li>
<li><span class="orange">json.luac - from <a href="https://github.com/rxi/json.lua">https://github.com/rxi/json.lua</a></span></li>
<li><span class="green">location.luac</span></li>
<li><span class="orange">md5.luac - from <a href="https://github.com/kikito/md5.lua">https://github.com/kikito/md5.lua</a></span></li>
<li><span class="green">pgo.luac</span></li>
<li><span class="green">pgodump.luac</span></li>
<li><span class="green">plugin.luac</span></li>
<li><span class="green">reflect.luac</span></li>
</ul>
</dd>
</dl>
<p>The <span class="orange">orange files</span> are utilities, while the <span class="green">green ones</span>
contain cheat mechanisms.</p>
</li>
<li>
<dl>
<dt><code>luaD_precall</code></dt>
<dd>Function that is involved when calling a C native function or a pure Lua function.
Since its prototype is <span class="blue">(lua_State *L, StkId func, int nresults)</span>,
it can help to dynamically identify which function is called:</dd>
</dl>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x6776a8 luaD_precall(&#39;gamehelper&#39;)
</span></span><span style="display:flex;"><span>0x6776a8 luaD_precall(&#39;@./app/arm64-v8a/luac/global.lua:0 - sub_71733ea5d0&#39;) {
</span></span><span style="display:flex;"><span>0x694d90 luaD_precall(&#39;@./app/arm64-v8a/luac/global.lua:246 - sub_71733f7b50&#39;) {
</span></span><span style="display:flex;"><span>0x6776a8 luaD_precall(&#39;@./app/arm64-v8a/luac/location.lua:38 - sub_717346d650&#39;) {
</span></span></code></pre></div></li>
<li>
<dl>
<dt><code>lua_pushcclosure</code></dt>
<dd><blockquote>
<p>Pushes a new C closure onto the stack.</p>
</blockquote>
</dd>
<dd>
<p>This function is particularly interesting to recover
native C functions linked to Lua function:</p>
</dd>
</dl>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x0e9cc0: lua_pushcclosure(&#39;initil2cppmethods&#39;)
</span></span><span style="display:flex;"><span>0x0e9cd4: lua_setfield(-2, &#39;initil2cppmethods&#39;, &#39;func_0xedaa0&#39;)
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>0x0e9d10: lua_pushcclosure(&#39;nar&#39;)
</span></span><span style="display:flex;"><span>0x0e9d24: lua_setfield(-2, &#39;nar&#39;, &#39;func_0xeddbc&#39;)
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>0x0ea020: lua_pushcclosure(&#39;ipf&#39;)
</span></span><span style="display:flex;"><span>0x0ea034: lua_setfield(-2, &#39;ipf&#39;, &#39;func_0x1318b0&#39;)
</span></span></code></pre></div></li>
<li>
<dl>
<dt><code>lua_pushstring</code></dt>
<dd><blockquote>
<p><em>&ldquo;Pushes the zero-terminated string pointed to by s onto the stack.&rdquo;</em></p>
</blockquote>
</dd>
<dd>
<p>This function enables to dynamically recover strings that might not be present
in the native code or somehow encoded:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x0ebdfc: lua_pushstring(&#39;https://tens.pgsharp.com/v1/scc-2-[...]/&#39;)
</span></span><span style="display:flex;"><span>0x0ebe28: lua_pushstring(&#39;me.uw.hela.pref&#39;)
</span></span><span style="display:flex;"><span>0x0c56ac: lua_pushstring(&#39;AIza[...]XhM4&#39;)
</span></span><span style="display:flex;"><span>0x0e15b4: lua_pushstring(&#39;token=[Redacted]&#39;)
</span></span></code></pre></div></dd>
</dl>
</li>
</ul>



<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <p>To dynamically understand the behavior of the Lua VM, we can compile the Frida Gum SDK along with Lua v5.3.</p>
<p>It enables to hook Lua functions with Frida and to leverage the compiled Lua v5.3 to inspect the parameters:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">extern</span> <span style="color:#ba2121">&#34;C&#34;</span> {
</span></span><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&#34;lua.h&#34;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&#34;ldo.h&#34;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&#34;ldebug.h&#34;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>gum_interceptor_attach(listener_<span style="color:#666">-&gt;</span>interceptor,
</span></span><span style="display:flex;"><span>                       luaD_precall_addr, listener_ luaD_precall_addr);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">native_listener_on_enter</span>(GumInvocationListener <span style="color:#666">*</span>listener, GumInvocationContext<span style="color:#666">*</span> ic) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">auto</span><span style="color:#666">*</span> L <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>lua_State<span style="color:#666">*&gt;</span>(ic<span style="color:#666">-&gt;</span>cpu_context<span style="color:#666">-&gt;</span>x[<span style="color:#666">0</span>]);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">auto</span> func <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>StkId<span style="color:#666">&gt;</span>(ic<span style="color:#666">-&gt;</span>cpu_context<span style="color:#666">-&gt;</span>x[<span style="color:#666">1</span>]);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">auto</span> narg <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">static_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">int</span><span style="color:#666">&gt;</span>(ic<span style="color:#666">-&gt;</span>cpu_context<span style="color:#666">-&gt;</span>x[<span style="color:#666">2</span>]);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (ttype(func) <span style="color:#666">!=</span> LUA_TLCL) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> log(<span style="color:#ba2121">&#34;sub_{:x}&#34;</span>, ptr);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  Proto <span style="color:#666">*</span>p <span style="color:#666">=</span> clLvalue(func)<span style="color:#666">-&gt;</span>p;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> log(<span style="color:#ba2121">&#34;{}:{:d} - sub_{:x}&#34;</span>, getstr(p<span style="color:#666">-&gt;</span>source), p<span style="color:#666">-&gt;</span>linedefined, ptr);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>
</div>





<h3 id="java-obfuscation"><a href="#toc"><i class='fas fa-angle-up'></i>  Java Obfuscation</a></h3>
<p>Contrary to the PokemonGO&rsquo;s Java layer, PGSharp protects its Java code with Proguard and the strings are xored
with the hardcoded key:</p>
<center>
<p><b class="orange"><p>vqGqQWCVnDRrNXTR</b></p><br />
</center>
<p>This key seems to not change across the different versions of PGSharp and the encoded strings look
like this:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#b00040">void</span> <span style="color:#00f">q</span><span style="color:#666">()</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  String a <span style="color:#666">=</span> GL<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;FAQgLiQlLw==&#34;</span><span style="color:#666">),</span> <span style="color:#666">(</span>String<span style="color:#666">)</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span>a <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>    JSONObject jSONObject <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">new</span> JSONObject<span style="color:#666">();</span>
</span></span><span style="display:flex;"><span>    Context context <span style="color:#666">=</span> GL<span style="color:#666">.</span><span style="color:#7d9029">c</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;Agg3FA==&#34;</span><span style="color:#666">),</span> r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;Axg=&#34;</span><span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;Axgj&#34;</span><span style="color:#666">),</span> UI<span style="color:#666">.</span><span style="color:#7d9029">g</span><span style="color:#666">(</span>context<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;BQUmBTQ=&#34;</span><span style="color:#666">),</span> <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">s</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;BQEoHjc+LTE=&#34;</span><span style="color:#666">),</span> <span style="color:#666">((</span>Boolean<span style="color:#666">)</span> <span style="color:#666">...);</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;BAUr&#34;</span><span style="color:#666">),</span> UI<span style="color:#666">.</span><span style="color:#7d9029">f</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;Gh8g&#34;</span><span style="color:#666">),</span> Locale<span style="color:#666">.</span><span style="color:#7d9029">getDefault</span><span style="color:#666">().</span><span style="color:#7d9029">getDisplayLanguage</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;FxMu&#34;</span><span style="color:#666">),</span> UI<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;FBA1&#34;</span><span style="color:#666">),</span> LayoutInflater$Factory2o<span style="color:#666">.</span><span style="color:#7d9029">i</span><span style="color:#666">.</span><span style="color:#7d9029">e</span><span style="color:#666">(</span>context<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span>r3<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;Gx4j&#34;</span><span style="color:#666">),</span> Build<span style="color:#666">.</span><span style="color:#7d9029">MODEL</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>    String str <span style="color:#666">=</span> Build<span style="color:#666">.</span><span style="color:#7d9029">VERSION</span><span style="color:#666">.</span><span style="color:#7d9029">RELEASE</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>The string encoding routine being easy to reverse, we can create a Jadx plugin
that automatically decodes these strings:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#666">[...]</span>
</span></span><span style="display:flex;"><span>passes<span style="color:#666">.</span><span style="color:#7d9029">add</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">new</span> SimplifyVisitor<span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>passes<span style="color:#666">.</span><span style="color:#7d9029">add</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">new</span> PGSharpString<span style="color:#666">());</span> <span style="color:#408080;font-style:italic">// Automatically decode the strings
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>
</span></span><span style="display:flex;"><span>passes<span style="color:#666">.</span><span style="color:#7d9029">add</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">new</span> CheckRegions<span style="color:#666">());</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[...]</span>
</span></span></code></pre></div><p>It results in this kind of output:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#b00040">void</span> <span style="color:#00f">q</span><span style="color:#666">()</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  String a <span style="color:#666">=</span> GL<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;bug_url&#34;</span><span style="color:#666">,</span> <span style="color:#666">(</span>String<span style="color:#666">)</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span>a <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>    JSONObject jSONObject <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">new</span> JSONObject<span style="color:#666">();</span>
</span></span><span style="display:flex;"><span>    Context context <span style="color:#666">=</span> GL<span style="color:#666">.</span><span style="color:#7d9029">c</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;type&#34;</span><span style="color:#666">,</span> <span style="color:#ba2121">&#34;ui&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;uid&#34;</span><span style="color:#666">,</span> UI<span style="color:#666">.</span><span style="color:#7d9029">g</span><span style="color:#666">(</span>context<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;state&#34;</span><span style="color:#666">,</span> <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">s</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;spoofing&#34;</span><span style="color:#666">,</span> <span style="color:#666">((</span>Boolean<span style="color:#666">)</span> PL<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;hlspoofing&#34;</span><span style="color:#666">)).</span><span style="color:#7d9029">booleanValue</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;rtl&#34;</span><span style="color:#666">,</span> UI<span style="color:#666">.</span><span style="color:#7d9029">f</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;lng&#34;</span><span style="color:#666">,</span> Locale<span style="color:#666">.</span><span style="color:#7d9029">getDefault</span><span style="color:#666">().</span><span style="color:#7d9029">getDisplayLanguage</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;abi&#34;</span><span style="color:#666">,</span> UI<span style="color:#666">.</span><span style="color:#7d9029">a</span><span style="color:#666">());</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;bar&#34;</span><span style="color:#666">,</span> LayoutInflater$Factory2o<span style="color:#666">.</span><span style="color:#7d9029">i</span><span style="color:#666">.</span><span style="color:#7d9029">e</span><span style="color:#666">(</span>context<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>    jSONObject<span style="color:#666">.</span><span style="color:#7d9029">put</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;mod&#34;</span><span style="color:#666">,</span> Build<span style="color:#666">.</span><span style="color:#7d9029">MODEL</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>    String str <span style="color:#666">=</span> Build<span style="color:#666">.</span><span style="color:#7d9029">VERSION</span><span style="color:#666">.</span><span style="color:#7d9029">RELEASE</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>You can find the whole Jadx <em>plugin</em> on Github: <a href="https://github.com/romainthomas/pgsharp/blob/9addafbb6672571d2b7fbba43899f662c21aac8e/jadx/PGSharpStrings.java">PGSharpStrings.java</a></p>
<hr width="50%" />
<h2 id="cheat-mechanisms"><a href="#toc"><i class='fas fa-angle-up'></i>  Cheat Mechanisms</a></h2>
<p>One <del>disruptive</del> feature of PGSharp is that it does not require a rooted device. Until recently,
most of the PokemonGO cheating apps required a jailbroken or a rooted device which raises a barrier
for people who are not familiar with rooting.</p>
<blockquote>
<p>But wait, how <em>hell</em> they do that?</p>
</blockquote>
<p>The structure of the PGSharp APK is <strong>very</strong> close to the genuine PokemonGO
application, which leads identifying which parts of the game have been tampered with.</p>
<p>A naive comparison (cf. <a href="https://github.com/romainthomas/pgsharp/blob/9addafbb6672571d2b7fbba43899f662c21aac8e/zip_diff.py">zip_diff.py</a>) raises mismatches on the following files:</p>
<table>
<thead>
<tr>
<th style="text-align:left">File</th>
<th style="text-align:left">Size in PGSharp</th>
<th style="text-align:left">Size in PGO</th>
<th style="text-align:left">Delta</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">classes.dex</td>
<td style="text-align:left">9057844</td>
<td style="text-align:left">8953000</td>
<td style="text-align:left">+1.17%</td>
</tr>
<tr>
<td style="text-align:left">classes2.dex</td>
<td style="text-align:left">7131864</td>
<td style="text-align:left">7107296</td>
<td style="text-align:left">+0.34%</td>
</tr>
<tr>
<td style="text-align:left">lib/arm64-v8a/libmain.so</td>
<td style="text-align:left">21278480</td>
<td style="text-align:left">6424</td>
<td style="text-align:left">+331134%</td>
</tr>
<tr>
<td style="text-align:left">META-INF/MANIFEST.MF</td>
<td style="text-align:left">351045</td>
<td style="text-align:left">355533</td>
<td style="text-align:left">-1.26%</td>
</tr>
</tbody>
</table>
<p>The high level of similarity between the two applications, associated with a different signature
confirms that PGSharp repackaged the original application.</p>
<h4 id="dex-files-diff"><a href="#toc"><i class='fas fa-angle-up'></i>  DEX Files Comparison</a></h4>
<p>To figure out which parts of the DEX files have been modified, we can use LIEF (yes, LIEF can <u><b>read</b></u> the DEX format).
Basically, the idea is to check which method(s) has a bytecode whose size is different from the real PokemonGO
application:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">zipfile</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">with</span> zipfile<span style="color:#666">.</span>ZipFile(CHEAT_FILE) <span style="color:#008000;font-weight:bold">as</span> zip_file:
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">with</span> zip_file<span style="color:#666">.</span>open(target) <span style="color:#008000;font-weight:bold">as</span> f:
</span></span><span style="display:flex;"><span>        hela_dex <span style="color:#666">=</span> f<span style="color:#666">.</span>read()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">with</span> zipfile<span style="color:#666">.</span>ZipFile(ORIG_FILE) <span style="color:#008000;font-weight:bold">as</span> zip_file:
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">with</span> zip_file<span style="color:#666">.</span>open(target) <span style="color:#008000;font-weight:bold">as</span> f:
</span></span><span style="display:flex;"><span>        pgo_dex <span style="color:#666">=</span> f<span style="color:#666">.</span>read()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>hela_dex <span style="color:#666">=</span> lief<span style="color:#666">.</span>DEX<span style="color:#666">.</span>parse(<span style="color:#008000">list</span>(hela_dex))
</span></span><span style="display:flex;"><span>pgo_dex  <span style="color:#666">=</span> lief<span style="color:#666">.</span>DEX<span style="color:#666">.</span>parse(<span style="color:#008000">list</span>(pgo_dex))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>hela <span style="color:#666">=</span> {<span style="color:#ba2121">f</span><span style="color:#ba2121">&#34;</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>cls<span style="color:#666">.</span>pretty_name<span style="color:#b68;font-weight:bold">}</span><span style="color:#ba2121">.</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>name<span style="color:#b68;font-weight:bold">}</span><span style="color:#ba2121">.</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>prototype<span style="color:#b68;font-weight:bold">!s}</span><span style="color:#ba2121">&#34;</span>: <span style="color:#008000">len</span>(m<span style="color:#666">.</span>bytecode) \
</span></span><span style="display:flex;"><span>          <span style="color:#008000;font-weight:bold">for</span> m <span style="color:#a2f;font-weight:bold">in</span> hela_dex<span style="color:#666">.</span>methods}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>pgo  <span style="color:#666">=</span> {<span style="color:#ba2121">f</span><span style="color:#ba2121">&#34;</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>cls<span style="color:#666">.</span>pretty_name<span style="color:#b68;font-weight:bold">}</span><span style="color:#ba2121">.</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>name<span style="color:#b68;font-weight:bold">}</span><span style="color:#ba2121">.</span><span style="color:#b68;font-weight:bold">{</span>m<span style="color:#666">.</span>prototype<span style="color:#b68;font-weight:bold">!s}</span><span style="color:#ba2121">&#34;</span>: <span style="color:#008000">len</span>(m<span style="color:#666">.</span>bytecode) \
</span></span><span style="display:flex;"><span>          <span style="color:#008000;font-weight:bold">for</span> m <span style="color:#a2f;font-weight:bold">in</span> pgo_dex<span style="color:#666">.</span>methods}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> k, size_hela <span style="color:#a2f;font-weight:bold">in</span> hela<span style="color:#666">.</span>items():
</span></span><span style="display:flex;"><span>    size_pgo <span style="color:#666">=</span> pgo[k]
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> size_pgo <span style="color:#666">!=</span> size_hela:
</span></span><span style="display:flex;"><span>        <span style="color:#008000">print</span>(<span style="color:#ba2121">f</span><span style="color:#ba2121">&#34;Mismatch: </span><span style="color:#b68;font-weight:bold">{</span>k<span style="color:#b68;font-weight:bold">}</span><span style="color:#ba2121">&#34;</span>)
</span></span></code></pre></div><p>By running this script on <code>classes.dex</code>, we don&rsquo;t find any difference.
Actually, the PGSharp authors tried to prevent <em>diffing</em> by changing the line number attribute of the DEX classes.
If we try to diff the two applications from the output of apktool or Jadx, we get a lot of noise as the line number is
used in the output. On the other hand, the size bytecode for this kind of repackaging is suitable<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>Running the same script on <code>classes2.dex</code> raises the following mismatches:</p>
<ul>
<li><code>holoholo.libholoholo.unity.UnityMainActivity.onActivityResult</code></li>
<li><code>holoholo.nativelib.Library.&lt;clinit&gt;</code></li>
</ul>
<p>In <code>UnityMainActivity.onActivityResult</code>, they changed this piece of code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#b00040">void</span> <span style="color:#00f">onActivityResult</span><span style="color:#666">(</span><span style="color:#b00040">int</span> i<span style="color:#666">,</span> <span style="color:#b00040">int</span> i2<span style="color:#666">,</span> Intent intent<span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  UnityCallbackInfo unityCallbackInfo <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">activityCallbacks</span><span style="color:#666">.</span><span style="color:#7d9029">get</span><span style="color:#666">(</span>Integer<span style="color:#666">.</span><span style="color:#7d9029">valueOf</span><span style="color:#666">(</span>i<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span>unityCallbackInfo <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>    UnityPlayer<span style="color:#666">.</span><span style="color:#7d9029">UnitySendMessage</span><span style="color:#666">(</span>unityCallbackInfo<span style="color:#666">.</span><span style="color:#7d9029">mGameObjectName</span><span style="color:#666">,</span>
</span></span><span style="display:flex;"><span>                                 unityCallbackInfo<span style="color:#666">.</span><span style="color:#7d9029">mMethodName</span><span style="color:#666">,</span>
</span></span><span style="display:flex;"><span>                                 String<span style="color:#666">.</span><span style="color:#7d9029">valueOf</span><span style="color:#666">(</span>i2<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span> <span style="color:#008000;font-weight:bold">else</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>    Client<span style="color:#666">.</span><span style="color:#7d9029">handleActivityResult</span><span style="color:#666">(</span>i<span style="color:#666">,</span> intent<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>into:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#b00040">void</span> <span style="color:#00f">onActivityResult</span><span style="color:#666">(</span><span style="color:#b00040">int</span> i<span style="color:#666">,</span> <span style="color:#b00040">int</span> i2<span style="color:#666">,</span> Intent intent<span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  UnityCallbackInfo unityCallbackInfo <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">activityCallbacks</span><span style="color:#666">.</span><span style="color:#7d9029">get</span><span style="color:#666">(</span>Integer<span style="color:#666">.</span><span style="color:#7d9029">valueOf</span><span style="color:#666">(</span>i<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span>unityCallbackInfo <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>      String mGameObjectName <span style="color:#666">=</span> unityCallbackInfo<span style="color:#666">.</span><span style="color:#7d9029">mGameObjectName</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>      UnityPlayer<span style="color:#666">.</span><span style="color:#7d9029">UnitySendMessage</span><span style="color:#666">(</span>mGameObjectName<span style="color:#666">,</span> unityCallbackInfo<span style="color:#666">.</span><span style="color:#7d9029">mMethodName</span><span style="color:#666">,</span> <span style="color:#ba2121">&#34;HL.PL&#34;</span><span style="color:#666">.</span><span style="color:#7d9029">equals</span><span style="color:#666">(</span>mGameObjectName<span style="color:#666">)</span> <span style="color:#666">?</span> intent <span style="color:#666">==</span> <span style="color:#008000;font-weight:bold">null</span> <span style="color:#666">?</span> <span style="color:#ba2121">&#34;&#34;</span> <span style="color:#666">:</span> intent<span style="color:#666">.</span><span style="color:#7d9029">getData</span><span style="color:#666">().</span><span style="color:#7d9029">toString</span><span style="color:#666">()</span> <span style="color:#666">:</span> String<span style="color:#666">.</span><span style="color:#7d9029">valueOf</span><span style="color:#666">(</span>i2<span style="color:#666">));</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span><span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span>  Client<span style="color:#666">.</span><span style="color:#7d9029">handleActivityResult</span><span style="color:#666">(</span>i<span style="color:#666">,</span> intent<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>While in the static constructor of the <code>Library</code> class, they force the loading of <b class="red">libmain.so</b>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  System<span style="color:#666">.</span><span style="color:#7d9029">loadLibrary</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;main&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  System<span style="color:#666">.</span><span style="color:#7d9029">loadLibrary</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;holoholo&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>Now, let&rsquo;s look at <b class="red">libmain.so</b></p>
<h4 id="libmain"><a href="#toc"><i class='fas fa-angle-up'></i>  libmain.so</a></h4>
<p>Compared to the original PokemonGO APK, <b class="red">libmain.so</b> in PGSharp is substantially larger. Moreover,
the ELF metadata leaks the original file name of the file:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -d libmain.so
</span></span><span style="display:flex;"><span><span style="color:#888">...
</span></span></span><span style="display:flex;"><span><span style="color:#888">0x000000000000000e (SONAME)             Library soname: [libhela.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888">...
</span></span></span></code></pre></div><p>During the analysis of PGSharp, we find references to <a href="https://en.wikipedia.org/wiki/Hela_(comics)">Hela</a>
in different places, like the package name
of the dynamically-loaded APK: <code>me.underworld.helaplugin</code>.</p>
<p>Originally, the purpose of this library is to initialize some parts of the Unity engine but PGSharp
uses it to load its main payload.</p>
<p>In the cheating app, <b class="red">libmain.so</b> is responsible for:</p>
<ol>
<li>Initializing the Lua VM</li>
<li>Implementing Lua native C functions</li>
<li>Implementing JNI functions</li>
<li>Calling the Lua scripts</li>
</ol>
<p><b class="red">libmain.so</b> exposes <code>JNI_OnLoad</code> which is used as an entrypoint
to perform the actions listed above.</p>
<p>The JNI functions don&rsquo;t have a meaningful name but thanks to their callsites, we can figure out their purpose:</p>
<table>
<thead>
<tr>
<th style="text-align:left">Name</th>
<th style="text-align:left">Description</th>
<th style="text-align:left">Rename</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">NRL</td>
<td style="text-align:left">Trigger Lua function from Java</td>
<td style="text-align:left">NativeRunLua</td>
</tr>
<tr>
<td style="text-align:left">NSMTC</td>
<td style="text-align:left">Trigger PGSharp Action</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">NOHRB</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">NativeOkHttpResponseByte</td>
</tr>
<tr>
<td style="text-align:left">NOHR</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">NativeOkHttpResponse</td>
</tr>
<tr>
<td style="text-align:left">NOHF</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">NativeOkHttpFailure</td>
</tr>
<tr>
<td style="text-align:left">NIOS</td>
<td style="text-align:left">Google Signing?</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">NIOR</td>
<td style="text-align:left"><em>Seems not used</em></td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">NOT</td>
<td style="text-align:left">Perform periodic actions on Lua threads</td>
<td style="text-align:left">NativeOnTimer</td>
</tr>
<tr>
<td style="text-align:left">NIPE</td>
<td style="text-align:left">Related to PokemonGO Plus</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">NIOF</td>
<td style="text-align:left"><em>Seems to do nothing relevant</em></td>
<td style="text-align:left">-</td>
</tr>
</tbody>
</table>
<p>Similarly, for the Lua C closures, we get the following table:</p>
<table>
<thead>
<tr>
<th style="text-align:left">Name</th>
<th style="text-align:left">Description</th>
<th style="text-align:left">Rename</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">callpgo</td>
<td style="text-align:left">Trigger Lua function from Java</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">add_unity_task</td>
<td style="text-align:left">Trigger PGSharp Action</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">initil2cppbase</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">initil2cpphooks</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">initil2cppmethods</td>
<td style="text-align:left">OkHtttp callback</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">newjbytearray</td>
<td style="text-align:left">Create a <em>Java</em> bytearray from Lua</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">nar</td>
<td style="text-align:left">-</td>
<td style="text-align:left">nativeAttestResponse</td>
</tr>
<tr>
<td style="text-align:left">ngak</td>
<td style="text-align:left">-</td>
<td style="text-align:left">nativeGetApiKey</td>
</tr>
<tr>
<td style="text-align:left">findclass</td>
<td style="text-align:left">Find a <em>Java</em> class from Lua</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">gettid</td>
<td style="text-align:left">Get Thread ID</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">logi</td>
<td style="text-align:left">Log info (empty)</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">logv</td>
<td style="text-align:left">Log verbose (empty)</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">init_plugin_natives</td>
<td style="text-align:left">Init Java layer (JNI + <code>nUSlwbRIjReLowOP</code>)</td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">uf_whitelist</td>
<td style="text-align:left"><em>empty</em></td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">uf_forbid</td>
<td style="text-align:left"><em>empty</em></td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">uf_redirect</td>
<td style="text-align:left"><em>empty</em></td>
<td style="text-align:left">-</td>
</tr>
<tr>
<td style="text-align:left">fkinitjni</td>
<td style="text-align:left">Lua wrapper<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></td>
<td style="text-align:left">FakeInitJNI</td>
</tr>
<tr>
<td style="text-align:left">fknalp</td>
<td style="text-align:left">Lua wrapper<sup id="fnref1:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></td>
<td style="text-align:left">FakeNativeAddLocationProvider</td>
</tr>
<tr>
<td style="text-align:left">fkngsu</td>
<td style="text-align:left">Lua wrapper<sup id="fnref2:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></td>
<td style="text-align:left">FakeNativeGpsStatusUpdate</td>
</tr>
<tr>
<td style="text-align:left">fknlu</td>
<td style="text-align:left">Lua wrapper<sup id="fnref3:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></td>
<td style="text-align:left">FakeNativeLocationUpdate</td>
</tr>
<tr>
<td style="text-align:left">getPoisFromCache</td>
<td style="text-align:left">Related to the autowalk feature</td>
<td style="text-align:left">-</td>
</tr>
</tbody>
</table>
<div class="accordion accordion-flush" id="spoiler-5">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-5">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-5" aria-expanded="true" aria-controls="flush-collapse-spoiler-5">
        <i class='fas fa-table'></i>&nbsp;&nbsp;NRL Actions</button></h2>
    <div id="flush-collapse-spoiler-5" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-5" data-bs-parent="#spoiler-5">
      <div class="accordion-body">
        <table>
<thead>
<tr>
<th style="text-align:left">Action</th>
<th style="text-align:left">Event Task</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">plg.float.click</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">plg.float.remove</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">plg.map.tp</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">plg.setspeed</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">plg.randomwalk</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">plg.enablespoof</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">plg.joystart</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">plg.joystop</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">plg.entergame</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">plg.pause</td>
</tr>
</tbody>
</table>

      </div>
    </div>
  </div>
</div>


<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  Long story short, PGSharp repackages the PokemonGO application and implements its payload in <b class="red">libmain.so</b>
</div>
<blockquote>
<p><em>But wait, since they repackage the application they have to re-sign the application and you won&rsquo;t tell me that PokemonGO does have
signature checks?</em></p>
</blockquote>
<center>
<p>And this is where the fun begins!</p>
<br />
</center>
<p>The functionalities of PGSharp heavily rely on hooking but not the hooking you might think of &hellip;</p>
<h3 id="signature-bypass"><a href="#toc"><i class='fas fa-angle-up'></i>  Signature Bypass</a></h3>
<p>As it is detailed in the next section, <b class="red">libmain.so</b> dynamically loads another APK. Within
this APK, and more precisely in the class <code>androidx.appcompat.app.AppCompatDelegateImpl</code><sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>, we can notice this method:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">/* renamed from: g */</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#008000;font-weight:bold">static</span> <span style="color:#b00040">void</span> <span style="color:#00f">proxifySignatureCheck</span><span style="color:#666">(</span>Context context<span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  String packageName <span style="color:#666">=</span> context<span style="color:#666">.</span><span style="color:#7d9029">getPackageName</span><span style="color:#666">();</span>
</span></span><span style="display:flex;"><span>  Class<span style="color:#666">&lt;?&gt;</span> aThreadCls <span style="color:#666">=</span> Class<span style="color:#666">.</span><span style="color:#7d9029">forName</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;android.app.ActivityThread&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  Object mCurrentActivityThread <span style="color:#666">=</span> aThreadCls<span style="color:#666">.</span><span style="color:#7d9029">getDeclaredMethod</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;currentActivityThread&#34;</span><span style="color:#666">,</span> <span style="color:#008000;font-weight:bold">new</span> Class<span style="color:#666">[</span>0<span style="color:#666">]).</span><span style="color:#7d9029">invoke</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">null</span><span style="color:#666">,</span> <span style="color:#008000;font-weight:bold">new</span> Object<span style="color:#666">[</span>0<span style="color:#666">]);</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  Field sPackageManager <span style="color:#666">=</span> aThreadCls<span style="color:#666">.</span><span style="color:#7d9029">getDeclaredField</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;sPackageManager&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  sPackageManager<span style="color:#666">.</span><span style="color:#7d9029">setAccessible</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">true</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  Object pm <span style="color:#666">=</span> sPackageManager<span style="color:#666">.</span><span style="color:#7d9029">get</span><span style="color:#666">(</span>mCurrentActivityThread<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  Class<span style="color:#666">&lt;?&gt;</span> IPackageManager <span style="color:#666">=</span> Class<span style="color:#666">.</span><span style="color:#7d9029">forName</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;android.content.pm.IPackageManager&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  SignatureMock mock <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">new</span> SignatureMock<span style="color:#666">(</span>pm<span style="color:#666">,</span> <span style="color:#ba2121">&#34;30820 [ ... ] aa001f55&#34;</span><span style="color:#666">,</span> packageName<span style="color:#666">)</span>
</span></span><span style="display:flex;"><span>  Object newProxyInstance <span style="color:#666">=</span> Proxy<span style="color:#666">.</span><span style="color:#7d9029">newProxyInstance</span><span style="color:#666">(</span>IPackageManager<span style="color:#666">.</span><span style="color:#7d9029">getClassLoader</span><span style="color:#666">(),</span>
</span></span><span style="display:flex;"><span>                                                   <span style="color:#008000;font-weight:bold">new</span> Class<span style="color:#666">[]{</span>IPackageManager<span style="color:#666">},</span> mock<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  sPackageManager<span style="color:#666">.</span><span style="color:#7d9029">set</span><span style="color:#666">(</span>mCurrentActivityThread<span style="color:#666">,</span> newProxyInstance<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  PackageManager packageManager <span style="color:#666">=</span> context<span style="color:#666">.</span><span style="color:#7d9029">getPackageManager</span><span style="color:#666">();</span>
</span></span><span style="display:flex;"><span>  Field mPM <span style="color:#666">=</span> packageManager<span style="color:#666">.</span><span style="color:#7d9029">getClass</span><span style="color:#666">().</span><span style="color:#7d9029">getDeclaredField</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;mPM&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  mPM<span style="color:#666">.</span><span style="color:#7d9029">setAccessible</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">true</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>  mPM<span style="color:#666">.</span><span style="color:#7d9029">set</span><span style="color:#666">(</span>packageManager<span style="color:#666">,</span> newProxyInstance<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>This code leverages the Java <em>hooking</em> API, <a href="https://developer.android.com/reference/java/lang/reflect/Proxy">java.lang.reflect.Proxy</a>,
to <em>proxify</em> the Android PackageManager ¯\_(ツ)_/¯.</p>
<p>The <em>mocked</em> PackageManager looks like this:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">public</span> <span style="color:#00f">SignatureMock</span><span style="color:#666">(</span>Object pm<span style="color:#666">,</span> String originalSignature<span style="color:#666">,</span> String packageName<span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageManager</span> <span style="color:#666">=</span> pm<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mOriginalSignature</span> <span style="color:#666">=</span> originalSignature<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageName</span> <span style="color:#666">=</span> packageName<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#a2f">@Override</span> <span style="color:#408080;font-style:italic">// java.lang.reflect.InvocationHandler
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">public</span> Object <span style="color:#00f">invoke</span><span style="color:#666">(</span>Object obj<span style="color:#666">,</span> Method inMeth<span style="color:#666">,</span> Object<span style="color:#666">[]</span> args<span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>  PackageInfo packageInfo<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  SigningInfo signingInfo<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Hook getPackageInfo
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span><span style="color:#ba2121">&#34;getPackageInfo&#34;</span><span style="color:#666">.</span><span style="color:#7d9029">equals</span><span style="color:#666">(</span>inMeth<span style="color:#666">.</span><span style="color:#7d9029">getName</span><span style="color:#666">()))</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>    String pkgName <span style="color:#666">=</span> <span style="color:#666">(</span>String<span style="color:#666">)</span> args<span style="color:#666">[</span>0<span style="color:#666">];</span>
</span></span><span style="display:flex;"><span>    <span style="color:#b00040">int</span> flags <span style="color:#666">=</span> <span style="color:#666">((</span>Integer<span style="color:#666">)</span> args<span style="color:#666">[</span>1<span style="color:#666">]).</span><span style="color:#7d9029">intValue</span><span style="color:#666">();</span>
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">// Handle both
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    <span style="color:#408080;font-style:italic">// GET_SIGNATURES           (0x00000040) - Deprecated in API 28
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    <span style="color:#408080;font-style:italic">// GET_SIGNING_CERTIFICATES (0x08000000)
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">((</span>flags <span style="color:#666">&amp;</span> PackageManager<span style="color:#666">.</span><span style="color:#7d9029">GET_SIGNATURES</span><span style="color:#666">)</span> <span style="color:#666">!=</span> 0 <span style="color:#666">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageName</span><span style="color:#666">.</span><span style="color:#7d9029">equals</span><span style="color:#666">(</span>pkgName<span style="color:#666">))</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>      PackageInfo fakePkgInfo <span style="color:#666">=</span> <span style="color:#666">(</span>PackageInfo<span style="color:#666">)</span> inMeth<span style="color:#666">.</span><span style="color:#7d9029">invoke</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageManager</span><span style="color:#666">,</span> args<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">// Fake the signature
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>      fakePkgInfo<span style="color:#666">.</span><span style="color:#7d9029">signatures</span><span style="color:#666">[</span>0<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">new</span> Signature<span style="color:#666">(</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mOriginalSignature</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> fakePkgInfo<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#666">}</span> <span style="color:#008000;font-weight:bold">else</span> <span style="color:#008000;font-weight:bold">if</span> <span style="color:#666">(</span>Build<span style="color:#666">.</span><span style="color:#7d9029">VERSION</span><span style="color:#666">.</span><span style="color:#7d9029">SDK_INT</span> <span style="color:#666">&gt;=</span> 28 <span style="color:#666">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>              <span style="color:#666">(</span>flags <span style="color:#666">&amp;</span> GET_SIGNING_CERTIFICATES<span style="color:#666">)</span> <span style="color:#666">!=</span> 0 <span style="color:#666">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>              <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageName</span><span style="color:#666">.</span><span style="color:#7d9029">equals</span><span style="color:#666">(</span>pkgName<span style="color:#666">)</span> <span style="color:#666">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>              <span style="color:#666">(</span>signingInfo <span style="color:#666">=</span> <span style="color:#666">(</span>packageInfo <span style="color:#666">=</span> <span style="color:#666">(</span>PackageInfo<span style="color:#666">)</span> method<span style="color:#666">.</span><span style="color:#7d9029">invoke</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageManager</span><span style="color:#666">,</span> args<span style="color:#666">)).</span><span style="color:#7d9029">signingInfo</span><span style="color:#666">)</span> <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">null</span><span style="color:#666">)</span> <span style="color:#666">{</span>
</span></span><span style="display:flex;"><span>      Field FieldSigningDetails <span style="color:#666">=</span> signingInfo<span style="color:#666">.</span><span style="color:#7d9029">getClass</span><span style="color:#666">().</span><span style="color:#7d9029">getDeclaredField</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;mSigningDetails&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      FieldSigningDetails<span style="color:#666">.</span><span style="color:#7d9029">setAccessible</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">true</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      Object mSigningDetails <span style="color:#666">=</span> FieldSigningD<span style="color:#666">.</span><span style="color:#7d9029">get</span><span style="color:#666">(</span>packageInfo<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      Signature<span style="color:#666">[]</span> fakeSigArray <span style="color:#666">=</span> <span style="color:#666">{</span><span style="color:#008000;font-weight:bold">new</span> Signature<span style="color:#666">(</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mOriginalSignature</span><span style="color:#666">)};</span>
</span></span><span style="display:flex;"><span>      Field FieldSignatures <span style="color:#666">=</span> mSigningDetails<span style="color:#666">.</span><span style="color:#7d9029">getClass</span><span style="color:#666">().</span><span style="color:#7d9029">getDeclaredField</span><span style="color:#666">(</span><span style="color:#ba2121">&#34;signatures&#34;</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      FieldSignatures<span style="color:#666">.</span><span style="color:#7d9029">setAccessible</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">true</span><span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      FieldSignatures<span style="color:#666">.</span><span style="color:#7d9029">set</span><span style="color:#666">(</span>FieldSigningDetails<span style="color:#666">,</span> fakeSigArray<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> packageInfo<span style="color:#666">;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#666">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> inMeth<span style="color:#666">.</span><span style="color:#7d9029">invoke</span><span style="color:#666">(</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">.</span><span style="color:#7d9029">mPackageManager</span><span style="color:#666">,</span> args<span style="color:#666">);</span>
</span></span><span style="display:flex;"><span><span style="color:#666">}</span>
</span></span></code></pre></div><p>In doing so, when PokemonGO accesses the PackageManager, it gets a <em>mocked</em> version of the PackageManager
that is <strong>controlled</strong> by PGSharp.
PGSharp changes the behavior of <code>getPackageInfo()</code> to return the real PokemonGO signature instead of its own.</p>
<p>The following figure outlines the process:</p>
<p><img src="mock_signature.png" alt="Mock Android PackageManager"></p>
<h3 id="dynamic-apk-loading"><a href="#toc"><i class='fas fa-angle-up'></i>  Dynamic APK Loading</a></h3>
<p>In the Lua script <code>plugin.lua</code>, PGSharp defines an <code>init</code> function that performs the following
actions:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">local</span> filesdir     <span style="color:#666">=</span> (ref.call_method)(runtime.app, <span style="color:#ba2121">&#34;getFilesDir&#34;</span>, <span style="color:#ba2121">&#34;()Ljava/io/File;&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">local</span> filesdirpath <span style="color:#666">=</span> (ref.call_method)(filesdir, <span style="color:#ba2121">&#34;getAbsolutePath&#34;</span>, <span style="color:#ba2121">&#34;()Ljava/lang/String;&#34;</span>)
</span></span><span style="display:flex;"><span>u_plugin_path      <span style="color:#666">=</span> (gh.ipf)(loadjstring(filesdirpath))
</span></span></code></pre></div><p><code>ipf</code> is a function that takes the output of <code>cxt.getFilesDir().getAbsolutePath()</code> as parameter,
in other words, the path of the <em>files</em> directory of PokemonGO: <code>/data/data/com.nianticlabs.pokemongo/files</code>,
and returns a <code>u_plugin_path</code> as a Lua string.</p>
<p>If we look for <code>ipf</code> in the Lua scripts, we don&rsquo;t find any implementation. Actually, this
function is referenced in the <code>gamehelper()</code> function of <b class="red">libmain.so</b> where it is
linked as follows:</p>
<p><img src="ipf.png" alt="Lua registering IPF"></p>
<p>So <code>ipf</code> is a native Lua C function registered with <code>lua_pushcclosure</code>.</p>
<p>Once we identified the location of <code>ipf</code>, the logic of the function can be summarized with this pseudo code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// file_dir: /data/user/0/com.nianticlabs.pokemongo/files
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#b00040">void</span> <span style="color:#00f">ipf</span>(lua_State <span style="color:#666">*</span>L) {
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// std::string ctor @0xA4F00
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  std<span style="color:#666">::</span>string outpath <span style="color:#666">=</span> lua_tostring(L, <span style="color:#666">-</span><span style="color:#666">1</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// std::string::append @0xD868C
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  outpath.append(<span style="color:#ba2121">&#34;/&#34;</span>);
</span></span><span style="display:flex;"><span>  outpath.append(<span style="color:#ba2121">&#34;LZZqoKpt.plg&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  FILE<span style="color:#666">*</span> fout <span style="color:#666">=</span> fopen(outpath.c_str(), <span style="color:#ba2121">&#34;wb&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// @0x634424
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  extract_apk_file(FILE<span style="color:#666">*</span> fout) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> (<span style="color:#a0a000">chunk</span> : chunks) {
</span></span><span style="display:flex;"><span>      decode(chunk, <span style="color:#666">0x2710</span>);
</span></span><span style="display:flex;"><span>      fwrite(chunk, <span style="color:#666">0x2710</span>, <span style="color:#666">1</span>, fout);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  fclose(fout);
</span></span><span style="display:flex;"><span>  lua_pushlstring(L, outpath.c_str(), outpath.size());
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">inline_decode</span>(<span style="color:#b00040">uint8_t</span><span style="color:#666">*</span> data, size_t size) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; i <span style="color:#666">&lt;</span> size; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">// Byte decoding
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    data[i] <span style="color:#666">=</span> (<span style="color:#666">0xb3</span> <span style="color:#666">&amp;</span> <span style="color:#666">~</span>data[i]) <span style="color:#666">|</span> (data[i] <span style="color:#666">&amp;</span> <span style="color:#666">0x4c</span>)
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  Since the decoded file is written in the <code>/data</code> partition,
one can also pull the file from the device (this file is not removed when PGSharp stops running).
</div>
<p>The written file, <code>LZZqoKpt.plg</code>, is actually an APK that is loaded with <code>PathClassLoader</code> in the Lua script:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span>u_classloader <span style="color:#666">=</span> (ref.new_instance)(<span style="color:#ba2121">&#34;dalvik/system/PathClassLoader&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#ba2121">&#34;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V&#34;</span>,
</span></span><span style="display:flex;"><span>                (env.NewStringUTF)(u_plugin_path),
</span></span><span style="display:flex;"><span>                nativeLibraryDir,
</span></span><span style="display:flex;"><span>                gh.pgo_classloader);
</span></span></code></pre></div><div class="accordion accordion-flush" id="spoiler-8">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-8">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-8" aria-expanded="true" aria-controls="flush-collapse-spoiler-8">
        <i class='fas fa-file-code'></i>&nbsp;&nbsp;Rest of the function</button></h2>
    <div id="flush-collapse-spoiler-8" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-8" data-bs-parent="#spoiler-8">
      <div class="accordion-body">
        <div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span>u_plugin_cls                <span style="color:#666">=</span> findclass(<span style="color:#ba2121">&#34;me/underworld/helaplugin/PL&#34;</span>, u_classloader)
</span></span><span style="display:flex;"><span>u_global_cls                <span style="color:#666">=</span> findclass(<span style="color:#ba2121">&#34;me/underworld/helaplugin/GL&#34;</span>, u_classloader)
</span></span><span style="display:flex;"><span>u_runnable_cls              <span style="color:#666">=</span> findclass(<span style="color:#ba2121">&#34;me/underworld/helaplugin/HR&#34;</span>, u_classloader)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>u_global_cls                <span style="color:#666">=</span> (env.NewGlobalRef)(u_global_cls)
</span></span><span style="display:flex;"><span>u_plugin_cls                <span style="color:#666">=</span> (env.NewGlobalRef)(u_plugin_cls)
</span></span><span style="display:flex;"><span>u_classloader               <span style="color:#666">=</span> (env.NewGlobalRef)(u_classloader)
</span></span><span style="display:flex;"><span>u_runnable_cls              <span style="color:#666">=</span> (env.NewGlobalRef)(u_runnable_cls)
</span></span><span style="display:flex;"><span>u_runnable_init_mid         <span style="color:#666">=</span> (env.GetMethodID)(u_runnable_cls, <span style="color:#ba2121">&#34;&lt;init&gt;&#34;</span>, <span style="color:#ba2121">&#34;(ILjava/lang/Object;)V&#34;</span>)
</span></span><span style="display:flex;"><span>u_geturl_mid                <span style="color:#666">=</span> (env.GetStaticMethodID)(u_plugin_cls, <span style="color:#ba2121">&#34;GU&#34;</span>, <span style="color:#ba2121">&#34;(Ljava/lang/String;Ljava/lang/String;)I&#34;</span>)
</span></span><span style="display:flex;"><span>u_postString_mid            <span style="color:#666">=</span> (env.GetStaticMethodID)(u_plugin_cls, <span style="color:#ba2121">&#34;vtEdUZmWQYAgtGWs&#34;</span>, <span style="color:#ba2121">&#34;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I&#34;</span>)
</span></span><span style="display:flex;"><span>u_postBytes_mid             <span style="color:#666">=</span> (env.GetStaticMethodID)(u_plugin_cls, <span style="color:#ba2121">&#34;BbTwaTXurePBxTDt&#34;</span>, <span style="color:#ba2121">&#34;(Ljava/lang/String;[BLjava/lang/String;)I&#34;</span>)
</span></span><span style="display:flex;"><span>u_onLuaMessage_mid          <span style="color:#666">=</span> (env.GetStaticMethodID)(u_plugin_cls, <span style="color:#ba2121">&#34;tFAxNZCNHOXBTYGM&#34;</span>, <span style="color:#ba2121">&#34;(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&#34;</span>)
</span></span><span style="display:flex;"><span>u_global_updatelocation_mid <span style="color:#666">=</span> (env.GetStaticMethodID)(u_global_cls, <span style="color:#ba2121">&#34;ul&#34;</span>, <span style="color:#ba2121">&#34;(DD)V&#34;</span>)
</span></span><span style="display:flex;"><span>u_global_savelocation_mid   <span style="color:#666">=</span> (env.GetStaticMethodID)(u_global_cls, <span style="color:#ba2121">&#34;sl&#34;</span>, <span style="color:#ba2121">&#34;()V&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>(gh.init_plugin_natives)(u_classloader)
</span></span><span style="display:flex;"><span>(ref.call_static_method)(u_plugin_cls,
</span></span><span style="display:flex;"><span>                         <span style="color:#ba2121">&#34;rDymrMuxPIlIESFe&#34;</span>, <span style="color:#ba2121">&#34;(Landroid/app/Application;Ljava/lang/String;I)V&#34;</span>,
</span></span><span style="display:flex;"><span>                         runtime.app, (env.NewStringUTF)(u_plugin_path), runtime.log_level)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">local</span> cls              <span style="color:#666">=</span> (gh.findclass)(<span style="color:#ba2121">&#34;me.underworld.helaplugin.HLVM&#34;</span>, u_classloader)
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">local</span> hlviewmanagerref <span style="color:#666">=</span> (ref.call_static_method)(cls, <span style="color:#ba2121">&#34;getInstance&#34;</span>, <span style="color:#ba2121">&#34;()Lme/underworld/helaplugin/HLVM;&#34;</span>)
</span></span><span style="display:flex;"><span>u_sm_mid               <span style="color:#666">=</span> (env.GetMethodID)(cls, <span style="color:#ba2121">&#34;SM&#34;</span>, <span style="color:#ba2121">&#34;(Ljava/lang/String;I)V&#34;</span>)
</span></span><span style="display:flex;"><span>u_setviewshow_mid      <span style="color:#666">=</span> (env.GetMethodID)(cls, <span style="color:#ba2121">&#34;SVC&#34;</span>, <span style="color:#ba2121">&#34;(Ljava/lang/String;Z)V&#34;</span>)
</span></span><span style="display:flex;"><span>u_hlviewmanager        <span style="color:#666">=</span> (env.NewGlobalRef)(hlviewmanagerref)
</span></span><span style="display:flex;"><span>plugin.classloader     <span style="color:#666">=</span> u_classloader
</span></span></code></pre></div>
      </div>
    </div>
  </div>
</div>


<h3 id="gps-spoofing"><a href="#toc"><i class='fas fa-angle-up'></i>  GPS Spoofing</a></h3>
<p>Since PokemonGO heavily relies on the user&rsquo;s location, the must-have feature for the PokemonGO cheat engines
is to be able to spoof the GPS location.</p>
<p>The genuine PokemonGO application manages the user location through the Java class <code>NianticLocationManager</code>,
which exposes three natives functions:</p>
<ol>
<li><span class="blue">nativeAddLocationProviders(Context ctx)</span></li>
<li><span class="blue">nativeGpsStatusUpdate(int i, SatelliteInfo[] info)</span></li>
<li><span class="blue">nativeLocationUpdate(String providerName, Location location, &hellip;)</span></li>
</ol>
<p><code>nativeAddLocationProviders</code> aims at instantiating the different location providers as Java object:</p>
<ol>
<li>FusedLocationProvider</li>
<li>GnssLocationProvider</li>
<li>GpsLocationProvider</li>
<li>NetworkLocationProvider</li>
</ol>
<p>while <code>nativeLocationUpdate</code> and <code>nativeGpsStatusUpdate</code> are a kind of callbacks triggered when there is
a new user location to consider.</p>
<p>The implementation of <code>nativeLocationUpdate</code> checks natively if the location object given in the second parameter
is <em>mocked</em> (cf. <a href="https://developer.android.com/reference/android/location/Location#isMock()">isMock()</a> or <a href="https://developer.android.com/reference/android/location/Location#isFromMockProvider()">isFromMockProvider()</a>).</p>
<p>Actually PGSharp hooks two of these three native methods:</p>
<ol>
<li><span class="red"><i class="fas fa-cogs"> </i>nativeAddLocationProviders(Context ctx)</span></li>
<li><span class="blue">nativeGpsStatusUpdate(int i, SatelliteInfo[] info)</span></li>
<li><span class="red"><i class="fas fa-cogs"> </i>nativeLocationUpdate(String provider, Location location, &hellip;)</span></li>
</ol>
<p>By hooking <code>nativeLocationUpdate</code>, they can modify the value of the <code>Location</code> parameter to change
the real location.</p>
<blockquote>
<p><em>&ldquo;You assert that PGSharp hooks <code>nativeLocationUpdate</code> and <code>nativeAddLocationProviders</code> in
<code>libNianticLabsPlugin.so</code>, but this library is protected by a commercial obfuscator
which has anti-hooks features. How do they hook these functions?&rdquo;</em></p>
</blockquote>
<p>And this is where the fun reaches another level 🚀</p>
<h3 id="jnienv-proxifier"><a href="#toc"><i class='fas fa-angle-up'></i>  JNIEnv Proxifier</a></h3>
<p>I would assume that <code>nativeLocationUpdate</code> and <code>nativeAddLocationProviders</code> are critical
enough to be protected against hooking. It turns out that PGSharp embeds a hooking framework to hook
Unity functions, but they don&rsquo;t use it on these functions.</p>
<center>
<p><b>
The authors of PGSharp found a subtle trick to circumvent the anti-hook protection.<br />
</b></p>
</center>
<p><code>nativeLocationUpdate</code> and <code>nativeAddLocationProviders</code> are JNI functions
that are <strong>dynamically</strong> registered by <code>Java_com_nianticlabs_nia_unity_UnityUtil_nativeInit</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>Java_com_nianticlabs_nia_unity_UnityUtil_nativeInit(env, ...) {
</span></span><span style="display:flex;"><span>  env<span style="color:#666">-&gt;</span>RegisterNatives(...);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The <code>env</code> parameter refers to the JNIEnv structure which is an array of function pointers:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">JNINativeInterface</span> {
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>  jclass      (<span style="color:#666">*</span>GetObjectClass)(JNIEnv<span style="color:#666">*</span>, jobject);
</span></span><span style="display:flex;"><span>  jboolean    (<span style="color:#666">*</span>IsInstanceOf)(JNIEnv<span style="color:#666">*</span>, jobject, jclass);
</span></span><span style="display:flex;"><span>  jmethodID   (<span style="color:#666">*</span>GetMethodID)(JNIEnv<span style="color:#666">*</span>, jclass, <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*</span>, <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*</span>);
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The values
of these pointers are defined by the implementation of the &ldquo;JVM&rdquo; which is, for Android, the <strong>A</strong>ndroid <strong>R</strong>un<strong>T</strong>ime (ART).</p>
<p>For instance, <code>FindClass</code> is actually a pointer
to <code>art::{CheckJNI, JNIImpl}::FindClass</code> located in <code>art/runtime/jni/{jni_internal, check_jni}.cc</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> jclass <span style="color:#00f">FindClass</span>(JNIEnv<span style="color:#666">*</span> env, <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*</span> name) {
</span></span><span style="display:flex;"><span>  Runtime<span style="color:#666">*</span> runtime <span style="color:#666">=</span> Runtime<span style="color:#666">::</span>Current();
</span></span><span style="display:flex;"><span>  ClassLinker<span style="color:#666">*</span> class_linker <span style="color:#666">=</span> runtime<span style="color:#666">-&gt;</span>GetClassLinker();
</span></span><span style="display:flex;"><span>  std<span style="color:#666">::</span>string descriptor(NormalizeJniClassDescriptor(name));
</span></span><span style="display:flex;"><span>  ScopedObjectAccess soa(env);
</span></span><span style="display:flex;"><span>  ObjPtr<span style="color:#666">&lt;</span>mirror<span style="color:#666">::</span>Class<span style="color:#666">&gt;</span> c <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (runtime<span style="color:#666">-&gt;</span>IsStarted()) {
</span></span><span style="display:flex;"><span>    StackHandleScope<span style="color:#666">&lt;</span><span style="color:#666">1</span><span style="color:#666">&gt;</span> hs(soa.Self());
</span></span><span style="display:flex;"><span>    Handle<span style="color:#666">&lt;</span>mirror<span style="color:#666">::</span>ClassLoader<span style="color:#666">&gt;</span> class_loader(hs.NewHandle(GetClassLoader<span style="color:#666">&lt;</span>kEnableIndexIds<span style="color:#666">&gt;</span>(soa)));
</span></span><span style="display:flex;"><span>    c <span style="color:#666">=</span> class_linker<span style="color:#666">-&gt;</span>FindClass(soa.Self(), descriptor.c_str(), class_loader);
</span></span><span style="display:flex;"><span>  } <span style="color:#008000;font-weight:bold">else</span> {
</span></span><span style="display:flex;"><span>    c <span style="color:#666">=</span> class_linker<span style="color:#666">-&gt;</span>FindSystemClass(soa.Self(), descriptor.c_str());
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> soa.AddLocalReference<span style="color:#666">&lt;</span>jclass<span style="color:#666">&gt;</span>(c);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>If we hook <code>Java_com_nianticlabs_nia_unity_UnityUtil_nativeInit</code> from the <strong>genuine</strong> PokemonGO,
and we check where the pointers of the <code>JNIEnv</code> structure point to, we get this kind of output:</p>
<p><img src="jni_ptr_clean.png" alt="Normal values of the JNI Pointers"></p>
<p>This output is consistent with what we said about the <em>JVM</em> and the runtime ART.
If we do the same check <strong>on PGSharp</strong>, we get this result:</p>
<p><img src="jni_ptr_cheat.png" alt="Modified values of the JNI Pointers"></p>
<p>As we can see, some pointers have been relocated to point in <b class="red">libmain.so</b>:</p>
<center>
<table>
<thead>
<tr>
<th style="text-align:left">JNI Function</th>
<th style="text-align:left">Offset in libmain.so (v1.33.0)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">GetMethodID</td>
<td style="text-align:left">0x14540c</td>
</tr>
<tr>
<td style="text-align:left">CallObjectMethodV</td>
<td style="text-align:left">0x145194</td>
</tr>
<tr>
<td style="text-align:left">CallVoidMethodV</td>
<td style="text-align:left">0x145040</td>
</tr>
<tr>
<td style="text-align:left">RegisterNatives</td>
<td style="text-align:left">0x1452f0</td>
</tr>
</tbody>
</table>
</center>
<p>It means that when <code>libNianticLabsPlugin.so</code> is calling one of the functions listed above,
the execution is forwarded to <b class="red">libmain.so</b> instead of <b class="green">libart.so</b>.</p>
<p><img src="jnienv_proxy.png" alt="JNIEnv Proxy"></p>
<p>PGSharp proxifies these functions for the following purposes:</p>
<p><strong>GetMethodID</strong></p>
<p>  To monitor:</p>
<ol>
<li>SafetyNetService.attest</li>
<li>SafetyNetService.cancel</li>
<li>NianticLocationManager.addLocationProvider</li>
</ol>
<p><strong>CallVoidMethodV</strong></p>
<p>  To monitor the parameters of:</p>
<ol>
<li>SafetyNetService.attest (to intercept the nonce)</li>
<li>SafetyNetService.cancel</li>
</ol>
<p><strong>RegisterNatives</strong></p>
<p>  Proxified to get, and potentially change, the effective location of the <br />
  <code>libNianticLabsPlugin.so</code> JNI functions:</p>
<ol>
<li>nativeAttestResponse</li>
<li>nativeGetApiKey</li>
<li>nativeAddLocationProviders</li>
<li>nativeLocationUpdate</li>
<li>initJni</li>
<li>nativeInjectEvent</li>
<li>nativeUnitySendMessage</li>
<li>nativeRender</li>
<li>nativeMuteMasterAudio</li>
</ol>
<p>By managing the function <code>JNIEnv::RegisterNatives</code>, they are able to change the value of <code>JNINativeMethod.fnPtr</code>,
such as when PokemonGO calls <code>nativeLocationUpdate</code>, it actually calls a function managed by PGSharp.</p>
<p>It results that JNI functions used by <code>libNianticLabsPlugin.so</code> have been <em>redefined</em>:</p>
<table>
<thead>
<tr>
<th style="text-align:left">JNI Function</th>
<th style="text-align:left">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><b class="red">NianticLocationManager.nativeAddLocationProviders</b></td>
<td style="text-align:left"><b class="red">libmain.so!ea868</b></td>
</tr>
<tr>
<td style="text-align:left">NianticLocationManager.nativeGpsStatusUpdate</td>
<td style="text-align:left">libNianticLabsPlugin.so!bc508</td>
</tr>
<tr>
<td style="text-align:left"><b class="red">NianticLocationManager.nativeLocationUpdate</b></td>
<td style="text-align:left"><b class="red">libmain.so!ea8bc</b></td>
</tr>
<tr>
<td style="text-align:left">NLog.nativeDispatchLogMessage</td>
<td style="text-align:left">libNianticLabsPlugin.so!4beaa0</td>
</tr>
<tr>
<td style="text-align:left">NetworkConnectivity.nativeNotifyNetworkStateChanged</td>
<td style="text-align:left">libNianticLabsPlugin.so!6f8118</td>
</tr>
<tr>
<td style="text-align:left">NianticTrustManager.nativeCheckClientTrusted</td>
<td style="text-align:left">libNianticLabsPlugin.so!9b9cc</td>
</tr>
<tr>
<td style="text-align:left">NianticTrustManager.nativeCheckServerTrusted</td>
<td style="text-align:left">libNianticLabsPlugin.so!73b42c</td>
</tr>
<tr>
<td style="text-align:left">NianticTrustManager.nativeGetAcceptedIssuers</td>
<td style="text-align:left">libNianticLabsPlugin.so!6dc5c8</td>
</tr>
<tr>
<td style="text-align:left">WebsocketController.nativeOnDidClose</td>
<td style="text-align:left">libNianticLabsPlugin.so!6fcabc</td>
</tr>
<tr>
<td style="text-align:left">WebsocketController.nativeOnDidFail</td>
<td style="text-align:left">libNianticLabsPlugin.so!4a0d0c</td>
</tr>
<tr>
<td style="text-align:left">WebsocketController.nativeOnDidOpen</td>
<td style="text-align:left">libNianticLabsPlugin.so!5922b0</td>
</tr>
<tr>
<td style="text-align:left">WebsocketController.nativeOnDidReceiveData</td>
<td style="text-align:left">libNianticLabsPlugin.so!742fa8</td>
</tr>
<tr>
<td style="text-align:left">SafetyNetService.nativeAttestResponse</td>
<td style="text-align:left">libNianticLabsPlugin.so!5ea1b8</td>
</tr>
<tr>
<td style="text-align:left">SafetyNetService.nativeGetApiKey</td>
<td style="text-align:left">libNianticLabsPlugin.so!6bc60</td>
</tr>
<tr>
<td style="text-align:left">NianticSensorManager.nativeCompassUpdate</td>
<td style="text-align:left">libNianticLabsPlugin.so!4b9bc0</td>
</tr>
<tr>
<td style="text-align:left">NianticSensorManager.nativeSensorUpdate</td>
<td style="text-align:left">libNianticLabsPlugin.so!177c44</td>
</tr>
</tbody>
</table>
<h3 id="unity-hooks"><a href="#toc"><i class='fas fa-angle-up'></i>  Unity Hooks</a></h3>
<p>In addition to GPS spoofing, PGSharp provides other functionalities such as,
Pokemon feed, skip evolve animation &hellip;</p>
<p>In the genuine PokemonGO application, these functionalities are implemented in the Unity layer
that is <em>compiled</em> into <code>libil2cpp.so</code>.</p>
<p>To perform these functionalities, PGSharp hooks (hooking like Frida) some of these Unity functions.</p>
<p>They tried to hide<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup> the underlying hooking framework used to perform these hooks, unfortunately they missed
to remove important strings:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> strings ./libmain.so|grep -i -E <span style="color:#ba2121">&#34;\w\+\.cc&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/InterceptRouting/Routing/FunctionInlineReplace/FunctionInlineReplaceExport.cc
</span></span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/TrampolineBridge/Trampoline/arm64/trampoline-arm64.cc
</span></span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/MemoryAllocator/MemoryArena.cc
</span></span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/InstructionRelocation/arm64/ARM64InstructionRelocation.cc
</span></span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/UserMode/PlatformUtil/Linux/ProcessRuntimeUtility.cc
</span></span></span><span style="display:flex;"><span><span style="color:#888">E:/work/code/Hela/app/src/main/cpp/Dobby/source/UserMode/UnifiedInterface/platform-posix.cc
</span></span></span></code></pre></div><p>So the hooking framework is Dobby:</p>
<center>
<p>
<i class='fab fa-github'></i>&nbsp;&nbsp;&nbsp;<a href="https://github.com/jmpews/Dobby" target="_blank" rel="noopener">https://github.com/jmpews/Dobby</a>
<br />
</p>
</center>
<p>Unity hooks start, in the script <code>init.lua</code> of PGSharp where they wait for the loading of <code>libil2cpp.so</code><sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span>set_event_handler(<span style="color:#ba2121">&#34;pgo.il2ready&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">function</span>(il2base)
</span></span><span style="display:flex;"><span>    runtime.il2base <span style="color:#666">=</span> il2base;
</span></span><span style="display:flex;"><span>    (gh.initil2cppmethods)();
</span></span><span style="display:flex;"><span>    (gh.initil2cpphooks)();
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">end</span>
</span></span><span style="display:flex;"><span>)
</span></span></code></pre></div><p><code>initil2cppmethods()</code> aims at resolving the address of PokemonGO Unity functions needed to perform cheating actions,
while <code>initil2cpphooks()</code> dobby-hooks some Unity functions to change their behaviour.
In the version 1.33 of PGSharp, they hook 207 functions
of <code>libil2cpp.so</code> and we will take one of them to detail the internal mechanisms:</p>
<ul>
<li><code>UnityEngine.Application$$OpenURL</code></li>
</ul>
<p>First of all, if we look at the symbols or the strings of <code>libil2cpp.so</code>, we don&rsquo;t find meaningful information that could
help to figure out the original purpose of the Unity functions. In fact, the Unity metadata are embedded
in <code>global-metadata.dat</code>, and to recover the bindings between this file
and <code>libil2cpp.so</code>, we can use <a href="https://github.com/Perfare/Il2CppDumper">Perfare/Il2CppDumper</a>.</p>
<p>They compute the absolute of a Unity function by adding the offset provided by <code>global-metadata.dat</code>
to the base address of <code>libil2cpp.so</code>. Here is an example <code>UnityEngine.Application$$OpenURL</code>:</p>
<pre tabindex="0"><code class="language-arm" data-lang="arm">MOV   W13, 0x4bfeea0                   ; Offset of the function (thanks to global-metadata.dat)
ADRP  X14, #Application_OpenURL
ADD   X13, X8, X13                     ; Add the libil2cpp.so base address
STR   X13, [X14, #Application_OpenURL] ; Store the absolute address in libmain.so
</code></pre><p>The function associated with <code>initil2cpphooks()</code> is quite large as shown in the figure below:</p>
<p><img src="initil2cpphooks.png" alt="initil2cpphooks"></p>
<p>Actually, the function is large but easily understandable statically<sup id="fnref:8"><a href="#fn:8" class="footnote-ref" role="doc-noteref">8</a></sup>. The right-hand side of the figure is actually
the <code>catch { ... }</code> handlers of the exceptions, while the left-hand side that goes down, initializes
C++ objects. In this area of the CFG, we find the same pattern that repeats all the way down:</p>
<p><img src="dobby_hook_vtable.png" alt="Dobby Hooking VTable"></p>
<p>From what we can see, it initializes a C++ object (on the stack) and the first instructions setup the
VTable. We can find the relevant function in the last entry of the VTable that contains the hooking logic:</p>
<p><img src="hook_OpenURL.png" alt="Dobby Hooking OpenURL"></p>
<p>From this code, we can see that they perform the resolution of the absolute address of
<code>UnityEngine.Application$$OpenURL</code>. Also, thanks to the prototype of <code>DobbyHook()</code> we can
quickly understand that the new behavior of <code>OpenURL</code> is located in the function <code>sub_6C983C</code>:</p>
<p><img src="il2cpp_hooks.png" alt="Dobby Hooking OpenURL"></p>
<p>In this hook, they check if PokemonGO is opening its Google Play URL and redirect the user to the PGSharp home page.</p>
<h3 id="network"><a href="#toc"><i class='fas fa-angle-up'></i>  Network Communications and Encryption</a></h3>
<p>The cheating application communicates with its servers through the TLS/HTTP protocol and adds another layer
of encryption on the top of TLS. To encrypt the HTTP payload, they use AES in the CBC mode.
We can identify the AES algorithm thanks to clear S-BOX present in the <code>.rodata</code> section.</p>
<p>It seems that they use different keys, depending on the endpoint the application targets but
we can retrieve them by hooking the AES key schedule function. It results that we can decrypt the communication
between the application and the PGSharp servers<sup id="fnref:9"><a href="#fn:9" class="footnote-ref" role="doc-noteref">9</a></sup>.</p>
<p>Here are examples of endpoints and the data sent by PGSharp:</p>
<div class="accordion accordion-flush" id="spoiler-9">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-9">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-9" aria-expanded="true" aria-controls="flush-collapse-spoiler-9">
        <i class='fas fa-link'></i>&nbsp;&nbsp;hazelnuts</button></h2>
    <div id="flush-collapse-spoiler-9" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-9" data-bs-parent="#spoiler-9">
      <div class="accordion-body">
        <ul>
<li><strong>POST <code>hazelnuts</code></strong>
<ul>
<li>Action: Handshake</li>
<li>Request:
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;bid&#34;</span>: <span style="color:#ba2121">&#34;com.nianticlabs.pokemongo&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;clt&#34;</span>: <span style="color:#ba2121">&#34;pgs&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;host&#34;</span>: <span style="color:#ba2121">&#34;Samsung A40&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;lv&#34;</span>: <span style="color:#666">-1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;nonce&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;nonce_key&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;pgver&#34;</span>: <span style="color:#ba2121">&#34;0.221.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;uid&#34;</span>: <span style="color:#ba2121">&#34;00000000-00000000-[...]&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;ver&#34;</span>: <span style="color:#ba2121">&#34;1.33.0&#34;</span>
</span></span><span style="display:flex;"><span>  }
</span></span></code></pre></div></li>
<li>Response:
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;err&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;shiny&#34;</span>: [<span style="color:#ba2121">&#34;List of shiny&#34;</span>],
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;hotplaces&#34;</span>: [
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">&#34;name&#34;</span>: <span style="color:#ba2121">&#34;🇧🇷 Consolacao, São Paulo, Brazil&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">&#34;lat&#34;</span>: <span style="color:#666">-23.5512</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">&#34;lng&#34;</span>: <span style="color:#666">-46.6584</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>  ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
</ul>
</li>
</ul>

      </div>
    </div>
  </div>
</div>


<div class="accordion accordion-flush" id="spoiler-10">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-10">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-10" aria-expanded="true" aria-controls="flush-collapse-spoiler-10">
        <i class='fas fa-link'></i>&nbsp;&nbsp;Cw8dfkXpW7mq2i</button></h2>
    <div id="flush-collapse-spoiler-10" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-10" data-bs-parent="#spoiler-10">
      <div class="accordion-body">
        <ul>
<li><strong>POST <code>Cw8dfkXpW7mq2i</code></strong>
<ul>
<li>Action: <code>PGS_ACTIONS.GETPLAYER</code></li>
<li>Request:
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;bid&#34;</span>: <span style="color:#ba2121">&#34;com.nianticlabs.pokemongo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;clt&#34;</span>: <span style="color:#ba2121">&#34;pgs&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;host&#34;</span>: <span style="color:#ba2121">&#34;Samsung A40&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;lv&#34;</span>: <span style="color:#666">4</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;nonce&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;nonce_key&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;pgver&#34;</span>: <span style="color:#ba2121">&#34;0.221.0&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;player&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;ban&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;captured&#34;</span>: <span style="color:#666">3</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;encountered&#34;</span>: <span style="color:#666">5</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;kmwalked&#34;</span>: <span style="color:#666">10.50</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;outage&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;pid&#34;</span>: <span style="color:#ba2121">&#34;[redacted]&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;serverlo&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;susp&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;suspa&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;visits&#34;</span>: <span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;warn&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;warna&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;warndt&#34;</span>: <span style="color:#666">623234511000000000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;warntm&#34;</span>: <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;uid&#34;</span>: <span style="color:#ba2121">&#34;00000000-00000000-[...]&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;ver&#34;</span>: <span style="color:#ba2121">&#34;1.33.0&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
</ul>
</li>
</ul>

      </div>
    </div>
  </div>
</div>


<div class="accordion accordion-flush" id="spoiler-11">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-11">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-11" aria-expanded="true" aria-controls="flush-collapse-spoiler-11">
        <i class='fas fa-link'></i>&nbsp;&nbsp;SSZgBPn6Ixq2ZK</button></h2>
    <div id="flush-collapse-spoiler-11" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-11" data-bs-parent="#spoiler-11">
      <div class="accordion-body">
        <ul>
<li><strong>POST <code>SSZgBPn6Ixq2ZK</code></strong>
<ul>
<li>Action: <code>PGS_ACTIONS.GETREPORTABLE</code></li>
<li>Request:
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;bid&#34;</span>: <span style="color:#ba2121">&#34;com.nianticlabs.pokemongo&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;clt&#34;</span>: <span style="color:#ba2121">&#34;pgs&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;host&#34;</span>: <span style="color:#ba2121">&#34;Samsung A40&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;lv&#34;</span>: <span style="color:#666">4</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;nonce&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;nonce_key&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;pgver&#34;</span>: <span style="color:#ba2121">&#34;0.221.0&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;raid&#34;</span>: [
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;battle&#34;</span>: <span style="color:#666">1634490000000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;campaignId&#34;</span>: <span style="color:#ba2121">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;complete&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;costume&#34;</span>: <span style="color:#666">12233</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;dex&#34;</span>: <span style="color:#666">326</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;eligible&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;end&#34;</span>: <span style="color:#666">1634490000000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;exclusive&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;form&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;free&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;gender&#34;</span>: <span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;hidden&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;lat&#34;</span>: <span style="color:#666">0.1234</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;lng&#34;</span>: <span style="color:#666">5.6789</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;lv&#34;</span>: <span style="color:#666">3</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;mov1&#34;</span>: <span style="color:#666">163</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;mov2&#34;</span>: <span style="color:#666">90</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;schedule&#34;</span>: <span style="color:#008000;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;seed&#34;</span>: <span style="color:#666">5000000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;spawn&#34;</span>: <span style="color:#666">1634400000000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;team&#34;</span>: <span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;web&#34;</span>: <span style="color:#666">0</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;wec&#34;</span>: <span style="color:#666">3</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>],
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;uid&#34;</span>: <span style="color:#ba2121">&#34;00000000-00000000-[...]&#34;</span>,
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&#34;ver&#34;</span>: <span style="color:#ba2121">&#34;1.33.0&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
</ul>
</li>
</ul>

      </div>
    </div>
  </div>
</div>


<div class="accordion accordion-flush" id="spoiler-12">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-12">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-12" aria-expanded="true" aria-controls="flush-collapse-spoiler-12">
        <i class='fas fa-link'></i>&nbsp;&nbsp;/pga/keycode/v-q2mgqcyji/</button></h2>
    <div id="flush-collapse-spoiler-12" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-12" data-bs-parent="#spoiler-12">
      <div class="accordion-body">
        <ul>
<li><strong>POST <code>/pga/keycode/v-q2mgqcyji/</code></strong>
<ul>
<li>Action: Activate PGSharp with a premium key</li>
<li>Request:
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;ver&#34;</span>: <span style="color:#ba2121">&#34;1.33.0&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;gi&#34;</span>: <span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;key&#34;</span>: <span style="color:#ba2121">&#34;AVerySecretKey&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;host&#34;</span>: <span style="color:#ba2121">&#34;Samsung A40&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;clt&#34;</span>: <span style="color:#ba2121">&#34;pgs&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;ua&#34;</span>: <span style="color:#ba2121">&#34;Samsung A40/11/[redacted]/arm64-v8a/[redacted]/unknow/unknown/English&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;uid&#34;</span>: <span style="color:#ba2121">&#34;00000000-00000000-[...]&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
</ul>
</li>
</ul>

      </div>
    </div>
  </div>
</div>


<h3 id="safetynet"><a href="#toc"><i class='fas fa-angle-up'></i>  SafetyNet</a></h3>
<p><img src="snet.svg" alt="safetynet"></p>
<div class="alert alert-warning" role="alert">
    <span class="far fa-brake-warning me-1"></span>
    I skimmed this layer this weekend, so some parts might be inaccurate or wrong.
</div>
<p>In addition to standard code obfuscation, PokemonGO uses SafetyNet as an attestation mechanism.
Similarly to the GPS management, we find a (non-obfuscated) Java layer implemented in the class
<code>SafetyNetService</code>. This class exposes two native functions:</p>
<ol>
<li><span class="blue">String nativeGetApiKey()</span></li>
<li><span class="blue">void nativeAttestResponse(byte[] nonce, String jwtResult)</span></li>
</ol>
<p>The implementation of these two functions is obfuscated within <code>libNianticLabsPlugin.so</code>.</p>
<p>The first function is used to get the Google SafetyNet API key (<code>AIzaSyCh8l[...]_eOTXhM4</code>) while the second one,
is involved in the validation of the SafetyNet attestation.</p>
<p>Thanks to the JNIEnv proxy on <code>GetMethodID</code> and <code>CallVoidMethodV</code>,
PGSharp is able to monitor the calls to <code>SafetyNetService.attest(bytes[] nonce)</code>. When this function is called,
PGSharp intercepts the nonce and forward the request to its servers:</p>
<center>
<p>
<span class="red">https://tens.pgsharp.com/v1/scc-2-eg[...]4/</span><br />
</p>
</center>
<p>The request is performed through a http POST, whose data are encrypted with AES. The clear payload
has the following layout:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;n&#34;</span>: <span style="color:#ba2121">&#34;Cy[...]&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;type&#34;</span>: <span style="color:#ba2121">&#34;attest&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;ver&#34;</span>: <span style="color:#ba2121">&#34;&lt;PGSharp Version&gt;&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;k&#34;</span>: <span style="color:#ba2121">&#34;i3[...]&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;clt&#34;</span>: <span style="color:#ba2121">&#34;pgs&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;data&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;k&#34;</span>: <span style="color:#ba2121">&#34;AIzaSyCh8l[...]_eOTXhM4 &lt;- From nativeGetApiKey&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">&#34;n&#34;</span>: <span style="color:#ba2121">&#34;&lt;nonce&gt;&#34;</span>
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>On success, the server responses with an AES-encrypted payload which has the following layout:</p>
<pre tabindex="0"><code>{&#34;result&#34;:&#34;suc: &lt;JWT SafetyNet Attestation&gt;&#34;}
</code></pre><p>The JWT SafetyNet value is then forwarded by PGSharp to <code>nativeAttestResponse()</code> with the original nonce.
At some point, this JWT attestation is sent to Niantic&rsquo;s servers (on the endpoint <code>plfe/112/rpc2</code>)
wrapped by a Protobuf structure.</p>
<p>To understand how they <em>&ldquo;bypass&rdquo;</em> SafetyNet, let&rsquo;s look at the JWT payload:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;nonce&#34;</span>: <span style="color:#ba2121">&#34;&lt;nonce&gt;&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;timestampMs&#34;</span>: <span style="color:#666">1636265656</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;apkPackageName&#34;</span>: <span style="color:#ba2121">&#34;com.nianticlabs.pokemongo&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;apkDigestSha256&#34;</span>: <span style="color:#ba2121">&#34;ioYmlh5mk5EhMUH/DsaG1jrhUoQJDK/2IvK61eiAXJE=&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;ctsProfileMatch&#34;</span>: <span style="color:#008000;font-weight:bold">true</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;apkCertificateDigestSha256&#34;</span>: [
</span></span><span style="display:flex;"><span>    <span style="color:#ba2121">&#34;lEvaRm6vZL4ck4ltXI6aRUoHyNj8vEre7vs1RbM16Xk=&#34;</span>
</span></span><span style="display:flex;"><span>  ],
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;basicIntegrity&#34;</span>: <span style="color:#008000;font-weight:bold">true</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">&#34;evaluationType&#34;</span>: <span style="color:#ba2121">&#34;BASIC&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>First of all, the JWT is correctly signed by Google SafetyNet&rsquo;s key and the <code>apkCertificateDigestSha256</code>
matches the signature of the real PokemonGO application.</p>
<p>But &hellip;</p>
<p>The value of <code>apkDigestSha256</code> does not match the checksum of the genuine PokemonGO application 😕</p>
<p><strong>Here are my hypothesis:</strong></p>
<p>The server <code>https://tens.pgsharp.com/v1/scc-2-eg/...</code> forwards the SafetyNet request to
a real application that runs on a real device. This application would have been created by PGSharp authors
to <em>really</em> run SafetyNet and to get a valid attestation signed with a valid Google key.
The fake application would have been created with <code>com.nianticlabs.pokemongo</code> as package name
and would implement signature mocking, as discussed in the first part.</p>
<p>If they would have managed to break SafetyNet, the <code>apkDigestSha256</code> value would have been consistent.</p>
<p>The JWT attestation is forwarded to Niantic so they might check the consistency of <code>apkDigestSha256</code>
but they might only focus on the signature (which can be faked) and not this value &hellip;</p>
<h3 id="pgsharp-signature-check"><a href="#toc"><i class='fas fa-angle-up'></i>  When PGSharp avoids PokemonGO pitfalls</a></h3>
<p>As discussed in the section <a href="#signature-bypass"><em>Signature Bypass</em></a>, PGSharp
tricks the Android PackageManager to mock the signature of the application.</p>
<p>It turns out that PGSharp is also concerned about app repackaging. As they provide premium
features, they don&rsquo;t want to be cheated &hellip;</p>
<p>In the function associated with <code>PGS_ACTIONS.INITPOST</code> they perform a device fingerprint
whose one of these elements is the APK&rsquo;s signature. But instead of using the Android PackageManager to
retrieve the signature, they use <a href="https://github.com/DimaKoz/stunning-signature">DimaKoz/stunning-signature</a>
to compute the MD5 digest of the signature.</p>
<h2 id="final-words"><a href="#toc"><i class='fas fa-angle-up'></i>  Final Words</a></h2>
<p>When I started to look at this cheating app, I did not expect to find such nice tricks and challenges.
The PGSharp&rsquo;s authors know the sneaky tricks to hinder reverse engineering. Unfortunately,
O-LLVM is relatively weak in this context compared to the commercial obfuscator used by Niantic.</p>
<p>On the other hand, the design of PokemonGO is such that all the reverse engineering difficulties
lie in one single module that can be treated in black-box once we identified the API. In particular, the
un-obfuscated Java layer helps a lot to identify these API.</p>
<p>Regarding the signature bypass, at first, I thought it would be easy to prevent by checking the integrity
of the <code>.apk</code> and/or the native libraries. But, there are some points that need to be taken into account:</p>
<p><strong>APK Integrity Check</strong></p>
<p>Naively, we might want to compute a checksum of the APK or re-compute the signature (as it&rsquo;s done by PGSharp).
But in fact, since a few years, Google tries to push
developers to use app bundle such as an application is no longer a single <code>.apk</code> but a split <code>.apk</code>.
While this feature optimizes the device&rsquo;s data partition size, it complicates the verification
of the signature since it would require to deal with different files and different checksum.</p>
<p>It&rsquo;s not infeasible, but it complicates its implementation in the APK build &amp; development pipeline.</p>
<p><strong>Native Library Integrity Check</strong></p>
<p>I guess that <code>libNianticLabsPlugin.so</code> implements checksum on its own library as it is
a sensitive part of the application. Regarding the other libraries, some of them are owned
by Niantic (like <code>libholoholo.so</code>) and others come from third-parties (like <code>libmain.so</code>). Depending on
how they are integrated, the checksum of these external libraries might not be easy to automatically
compute while releasing a new version of PokemonGO. These third-party libraries are,
most of the time, not copy-pasted by the developers but automatically bundled when compiling the
application. Therefore, computing their checksums might require tweaking the build process
in a non-easy way.</p>
<p>On the top of that, Niantic releases a new version of its games on a monthly basis. It means
that these checks need to be automated in CI/CD pipeline which might not be trivial to do.</p>
<hr width="50%" />
<p>It was a funny and very interesting journey, for those who want to dig a bit more
in PGSharp, I pushed some materials and documents on Github. In particular, you can
find the symbol list of <b class="red">libmain.so</b> based on reverse engineering.</p>
<center>
<p>
<i class='fab fa-github'></i>&nbsp;&nbsp;&nbsp;<a href="https://github.com/romainthomas/pgsharp" target="_blank" rel="noopener">https://github.com/romainthomas/pgsharp</a>
</p>
</center>
<h2 id="acknowledgments"><a href="#toc"><i class='fas fa-angle-up'></i>  Acknowledgments</a></h2>
<p>This analysis has been independently done in my spare time while being at <a href="https://www.quarkslab.com">Quarkslab</a> and
<a href="https://www.ul.com" target="_blank" rel="noopener" class="ul">UL</a>,
my current employer.</p>
<h2 id="annexes"><a href="#toc"><i class='fas fa-angle-up'></i>  Annexes</a></h2>
<h3 id="third-party">Third-Party</h3>
<p>Here is the (non exhaustive) list of the open-source projects used by PGSharp:</p>
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://github.com/jmpews/Dobby">https://github.com/jmpews/Dobby</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/or-dvir/EasySettings">https://github.com/or-dvir/EasySettings</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/zupet/LuaTinker">https://github.com/zupet/LuaTinker</a> or <a href="https://github.com/yanwei1983/luatinkerE">https://github.com/yanwei1983/luatinkerE</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/DimaKoz/stunning-signature">https://github.com/DimaKoz/stunning-signature</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.sqlite.org/index.html">https://www.sqlite.org/index.html</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/nlohmann/json">https://github.com/nlohmann/json</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.lua.org/manual/5.3/">https://www.lua.org/manual/5.3/</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/kikito/md5.lua">https://github.com/kikito/md5.lua</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/rxi/json.lua">https://github.com/rxi/json.lua</a></td>
</tr>
</tbody>
</table>
<h3 id="list-of-the-unity-functions-used-by-pgsharp">List of the Unity Functions used by PGSharp</h3>
<div class="accordion accordion-flush" id="spoiler-15">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-heading-spoiler-15">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-spoiler-15" aria-expanded="true" aria-controls="flush-collapse-spoiler-15">
        <i class='fas fa-table'></i>&nbsp;&nbsp;Expand</button></h2>
    <div id="flush-collapse-spoiler-15" class="accordion-collapse collapse" aria-labelledby="flush-heading-spoiler-15" data-bs-parent="#spoiler-15">
      <div class="accordion-body">
        <div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>object__Invoke
</span></span><span style="display:flex;"><span>String_CreateString1
</span></span><span style="display:flex;"><span>String_CreateString3
</span></span><span style="display:flex;"><span>ulong_object___get_Item
</span></span><span style="display:flex;"><span>ulong_object___ContainsKey
</span></span><span style="display:flex;"><span>ulong_object___TryGetValue
</span></span><span style="display:flex;"><span>Application_OpenURL
</span></span><span style="display:flex;"><span>Application_set_targetFrameRate
</span></span><span style="display:flex;"><span>Quaternion_Angle
</span></span><span style="display:flex;"><span>PlayerPrefs_TrySetInt
</span></span><span style="display:flex;"><span>PlayerPrefs_TrySetFloat
</span></span><span style="display:flex;"><span>PlayerPrefs_TrySetSetString
</span></span><span style="display:flex;"><span>PlayerPrefs_SetInt
</span></span><span style="display:flex;"><span>PlayerPrefs_GetInt
</span></span><span style="display:flex;"><span>PlayerPrefs_SetFloat
</span></span><span style="display:flex;"><span>PlayerPrefs_GetFloat
</span></span><span style="display:flex;"><span>PlayerPrefs_SetString
</span></span><span style="display:flex;"><span>PlayerPrefs_GetStringNoDefault
</span></span><span style="display:flex;"><span>PlayerPrefs_HasKey
</span></span><span style="display:flex;"><span>PlayerPrefs_DeleteKey
</span></span><span style="display:flex;"><span>Component_get_gameObject
</span></span><span style="display:flex;"><span>Transform_get_rotation
</span></span><span style="display:flex;"><span>Animator_get_speed
</span></span><span style="display:flex;"><span>Animator_set_speed
</span></span><span style="display:flex;"><span>Animator_SetTriggerID
</span></span><span style="display:flex;"><span>Animator_Update
</span></span><span style="display:flex;"><span>Promise__ctor
</span></span><span style="display:flex;"><span>Promise_Complete
</span></span><span style="display:flex;"><span>MapMath_MetersBetween
</span></span><span style="display:flex;"><span>NL_NLAny_object_
</span></span><span style="display:flex;"><span>NL_NLFirst_object_
</span></span><span style="display:flex;"><span>InputField_ActivateInputField
</span></span><span style="display:flex;"><span>InputField_DeactivateInputField
</span></span><span style="display:flex;"><span>Text_set_text
</span></span><span style="display:flex;"><span>Text_set_fontSize
</span></span><span style="display:flex;"><span>DiContainer_InjectExplicitInternal
</span></span><span style="display:flex;"><span>Schedule_WaitOn_c__AnonStorey0____m__0
</span></span><span style="display:flex;"><span>GameState_EnterState
</span></span><span style="display:flex;"><span>GameState_ExitState
</span></span><span style="display:flex;"><span>RpcBindings_Send
</span></span><span style="display:flex;"><span>RpcManager_DispatchCallbacks
</span></span><span style="display:flex;"><span>Animator_SetTriggerID
</span></span><span style="display:flex;"><span>RpcManager_DispatchCallbacks
</span></span><span style="display:flex;"><span>AuthService_get_CachedCredentialsExist
</span></span><span style="display:flex;"><span>AuthService_Logout
</span></span><span style="display:flex;"><span>DeviceServiceExtensions_IsUsable
</span></span><span style="display:flex;"><span>GameMasterData_IsPokemonWeatherBoosted
</span></span><span style="display:flex;"><span>Animator_SetTriggerID
</span></span><span style="display:flex;"><span>AuthService_get_CachedCredentialsExist
</span></span><span style="display:flex;"><span>AuthService_Logout
</span></span><span style="display:flex;"><span>PgpApi_UpdateNotifications
</span></span><span style="display:flex;"><span>ARPlusEncounterValuesProto__ctor
</span></span><span style="display:flex;"><span>ARPlusEncounterValuesProto__cctor
</span></span><span style="display:flex;"><span>PlayerService_GetPlayerDayBucket
</span></span><span style="display:flex;"><span>PlayerService_get_PlayerStats
</span></span><span style="display:flex;"><span>PlayerService_get_CurrentPokeball
</span></span><span style="display:flex;"><span>PlayerService_get_CurrentLinkedLogins
</span></span><span style="display:flex;"><span>AuthService_get_CachedCredentialsExist
</span></span><span style="display:flex;"><span>PlayerService_get_PokemonBag
</span></span><span style="display:flex;"><span>PlayerService_GetPlayerProfile
</span></span><span style="display:flex;"><span>PlayerService_set_CurrentPokeball
</span></span><span style="display:flex;"><span>PlayerService_get_BagIsFull
</span></span><span style="display:flex;"><span>PlayerService_GetCandyCountForPokemon
</span></span><span style="display:flex;"><span>StateToken_Complete
</span></span><span style="display:flex;"><span>TimeUtil_ServerNowMs
</span></span><span style="display:flex;"><span>RequestGymDetailsById_onSucceed
</span></span><span style="display:flex;"><span>RequestGymDetailsById_onError
</span></span><span style="display:flex;"><span>PlayerPrefs_SetInt
</span></span><span style="display:flex;"><span>BluetoothUtil_get_IsBluetoothEnabled
</span></span><span style="display:flex;"><span>PgpGuiController_ClickIcon
</span></span><span style="display:flex;"><span>PgpGuiService_SetSfidaIconVisible
</span></span><span style="display:flex;"><span>PgpGuiService_EnableSfidaIcon
</span></span><span style="display:flex;"><span>ulong_object___get_Item
</span></span><span style="display:flex;"><span>PgpService_get_IsSessionActive
</span></span><span style="display:flex;"><span>PgpService_GetCurrentNotificationType
</span></span><span style="display:flex;"><span>ItemBagImpl_GetItemCount
</span></span><span style="display:flex;"><span>PokemonBagImpl_GetPokemon
</span></span><span style="display:flex;"><span>ulong_object___get_Item
</span></span><span style="display:flex;"><span>PgpApi_UpdateNotifications
</span></span><span style="display:flex;"><span>Animator_set_speed
</span></span><span style="display:flex;"><span>StateToken_Complete
</span></span><span style="display:flex;"><span>VersionCheckService_CheckVersion
</span></span><span style="display:flex;"><span>ulong_object___TryGetValue
</span></span><span style="display:flex;"><span>QuestMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>QuestService_BeginQuestEncounterWithOut
</span></span><span style="display:flex;"><span>EulaGuiController_PressAccept
</span></span><span style="display:flex;"><span>StarterMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>OpenRemoteGym_gymOpner
</span></span><span style="display:flex;"><span>OpenRemoteGym_onSucceed
</span></span><span style="display:flex;"><span>BluetoothUtil_get_IsBluetoothEnabled
</span></span><span style="display:flex;"><span>QuestService_BeginQuestEncounterWithOut
</span></span><span style="display:flex;"><span>RaidState_ExitGymWithRaidDetails
</span></span><span style="display:flex;"><span>AccountChoiceState_ClickNewPlayer
</span></span><span style="display:flex;"><span>AccountChoiceState_ClickExistingPlayer
</span></span><span style="display:flex;"><span>LoginAgeGateState_SubmitSelections
</span></span><span style="display:flex;"><span>LoginChoiceState_ClickPtc
</span></span><span style="display:flex;"><span>LoginChoiceState_ClickGoogle
</span></span><span style="display:flex;"><span>LoginGuiController_ClickSubmit
</span></span><span style="display:flex;"><span>PtcLoginState_SubmitLogin
</span></span><span style="display:flex;"><span>I18n_PokemonMoveName
</span></span><span style="display:flex;"><span>I18n_SetUpLanguageTable
</span></span><span style="display:flex;"><span>I18n_PokemonNameTemporaryEvolution
</span></span><span style="display:flex;"><span>I18n_Text
</span></span><span style="display:flex;"><span>I18n_PokemonName
</span></span><span style="display:flex;"><span>FriendsGuiState_StartOpenGiftFlow
</span></span><span style="display:flex;"><span>FriendsGuiState_StartSendGiftFlow
</span></span><span style="display:flex;"><span>FriendsRpcService_RemoveGiftbox
</span></span><span style="display:flex;"><span>GiftingRpcService_SendGift
</span></span><span style="display:flex;"><span>GiftingRpcService_OpenGift
</span></span><span style="display:flex;"><span>StickerService_GetStickerInventory
</span></span><span style="display:flex;"><span>CombatDirector_Initialize
</span></span><span style="display:flex;"><span>MapPokestop_get_PoiId
</span></span><span style="display:flex;"><span>MapPokestop_get_ActiveIncidentType
</span></span><span style="display:flex;"><span>MapPokestop_get_Location
</span></span><span style="display:flex;"><span>EncounterParkCameraController_PlayIntro
</span></span><span style="display:flex;"><span>RunPokemonCaptured_onDitto
</span></span><span style="display:flex;"><span>EncounterInteractionState_RunAway
</span></span><span style="display:flex;"><span>MapMath_MetersBetween
</span></span><span style="display:flex;"><span>PlayerPrefs_TrySetSetString
</span></span><span style="display:flex;"><span>EncounterInteractionState_IntroCompleted
</span></span><span style="display:flex;"><span>AttemptCapture_onResponse
</span></span><span style="display:flex;"><span>EncounterIntroState_ExitState
</span></span><span style="display:flex;"><span>EncounterPokemon_get_MapPokemon
</span></span><span style="display:flex;"><span>PlayerPrefs_HasKey
</span></span><span style="display:flex;"><span>ItemBagImpl_GetItemCount
</span></span><span style="display:flex;"><span>Pokeball_TryHitPokemon
</span></span><span style="display:flex;"><span>Pokeball_FlyStateImpl_Capture__MoveNext
</span></span><span style="display:flex;"><span>Pokeball_DropStateImpl_Capture__MoveNext
</span></span><span style="display:flex;"><span>EncounterGuiController_ShowPokemonFlee
</span></span><span style="display:flex;"><span>EncounterState_get_EncounterType
</span></span><span style="display:flex;"><span>EncounterState_EncounterStateComplete
</span></span><span style="display:flex;"><span>EncounterState_EncounterStateComplete
</span></span><span style="display:flex;"><span>EncounterState_get_MapPokemon
</span></span><span style="display:flex;"><span>EncounterState_OnEncounterResponse
</span></span><span style="display:flex;"><span>DefaultEncounter_get_DefaultBall
</span></span><span style="display:flex;"><span>ExtraMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>ResearchEncounter_get_DefaultBall
</span></span><span style="display:flex;"><span>ResearchEncounter_get_DefaultBall
</span></span><span style="display:flex;"><span>object_object__object___CurrentPageIndex
</span></span><span style="display:flex;"><span>PokemonInventoryCellView_Initialize
</span></span><span style="display:flex;"><span>ToastService_OneLineMedium
</span></span><span style="display:flex;"><span>ToastService_RewardItemNameAmount
</span></span><span style="display:flex;"><span>ToastService_RewardItemDefault
</span></span><span style="display:flex;"><span>ToastService_RewardItemStardust
</span></span><span style="display:flex;"><span>ToastService_OneLineMediumWithParams
</span></span><span style="display:flex;"><span>ToastService_RewardItemXlCandy
</span></span><span style="display:flex;"><span>ToastService_RewardItemAmount
</span></span><span style="display:flex;"><span>ToastService_TwoLine
</span></span><span style="display:flex;"><span>ToastService_RewardItemAmountType
</span></span><span style="display:flex;"><span>ToastService_RewardItemMegaResource
</span></span><span style="display:flex;"><span>ToastService_RewardSticker
</span></span><span style="display:flex;"><span>ToastService_OneLineWithParams
</span></span><span style="display:flex;"><span>ToastService_OneLineBig
</span></span><span style="display:flex;"><span>ToastService_OneLineBigWithParams
</span></span><span style="display:flex;"><span>ToastService_RewardItemCandy
</span></span><span style="display:flex;"><span>UserPromptsService_HasActiveModal
</span></span><span style="display:flex;"><span>UserPromptsService_DismissActiveModal
</span></span><span style="display:flex;"><span>PokemonInfoDynoScrollRect_Cleanup
</span></span><span style="display:flex;"><span>Quaternion_Angle
</span></span><span style="display:flex;"><span>Animator_get_speed
</span></span><span style="display:flex;"><span>PokemonInfoPanel_DoUpdate
</span></span><span style="display:flex;"><span>GymRootController_get_View
</span></span><span style="display:flex;"><span>GymRootController_get_MapGym
</span></span><span style="display:flex;"><span>MapGym_get_PoiId
</span></span><span style="display:flex;"><span>MapGym_OnTap
</span></span><span style="display:flex;"><span>MapGym_get_Location
</span></span><span style="display:flex;"><span>RaidMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>MapContentHandler_UpdateCells
</span></span><span style="display:flex;"><span>MapEntityCell_get_Pois
</span></span><span style="display:flex;"><span>MapEntityService_get_Cells
</span></span><span style="display:flex;"><span>MapEntityService_GetMapPoi
</span></span><span style="display:flex;"><span>MapEntityService_UpdatePois
</span></span><span style="display:flex;"><span>MapExploreState_GymSelected
</span></span><span style="display:flex;"><span>MapExploreState_EnterQuestEncounter
</span></span><span style="display:flex;"><span>MapPokemon_get_Location
</span></span><span style="display:flex;"><span>MapPokemon_get_DespawnTime
</span></span><span style="display:flex;"><span>MapPokemon_TryCapture
</span></span><span style="display:flex;"><span>PhotobombingMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>MapPokestop_get_ActiveIncidentType
</span></span><span style="display:flex;"><span>SendEncounterRequestCapture_onResponse
</span></span><span style="display:flex;"><span>PoiMapPokemon_get_SpawnPointId
</span></span><span style="display:flex;"><span>PoiMapPokemon_get_EncounterId
</span></span><span style="display:flex;"><span>WildMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>WildMapPokemon_SendEncounterRequest
</span></span><span style="display:flex;"><span>PoiDirectoryService_AddPokemon
</span></span><span style="display:flex;"><span>PoiDirectoryService_RemovePokemon
</span></span><span style="display:flex;"><span>RaidMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>IncidentMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>IncenseMapPokemon_SendEncounterRequest
</span></span><span style="display:flex;"><span>IncenseMapPokemon_OnDestroy
</span></span><span style="display:flex;"><span>IncenseMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>TroyDiskMapPokemon_SendEncounterRequest
</span></span><span style="display:flex;"><span>TroyDiskMapPokemon_get_Pokemon
</span></span><span style="display:flex;"><span>GroundTapHandler_OnTap
</span></span><span style="display:flex;"><span>GroundTapHandler_OnTap1
</span></span><span style="display:flex;"><span>MapViewHandler_GetGroundLocation
</span></span><span style="display:flex;"><span>MapViewHandler_GetGroundPosition
</span></span><span style="display:flex;"><span>MapViewHandler_GetWorldLocation
</span></span><span style="display:flex;"><span>NL_NLFirst_object_
</span></span><span style="display:flex;"><span>CompassGuiController_Update
</span></span><span style="display:flex;"><span>PlayerService_SetPlayerProto
</span></span><span style="display:flex;"><span>MapPokemon_LogEncounterMetrics
</span></span></code></pre></div>
      </div>
    </div>
  </div>
</div>


<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>O-LLVM provides control-flow obfuscation that can be <em>recovered</em> with emulation.
On the other hand, the data-flow (function parameters, stack values, memory accesses) can be analysed at a basic-block level with static analysis.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><b class="red">libmain.so</b> is also <strong>statically</strong> linked against other libraries like <a href="https://github.com/jmpews/Dobby">jmpews/Dobby</a>,
<a href="https://github.com/nlohmann/json">nlohmann/json</a>, <a href="https://github.com/sqlite/sqlite">sqlite</a> &hellip;&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Modded apps use similar tricks as discussed in <a href="https://blog.quarkslab.com/android-application-diffing-analysis-of-modded-version.html#defeating-obfuscation">Android Application Diffing: Analysis of Modded Version</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>In order to arbitrarily call the underlying function when needed.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref1:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref2:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref3:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>The package names are stripped with Proguard but we can quite easily recover those packages.&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p>Basically, they renamed <a href="https://github.com/jmpews/Dobby/blob/bba23cbee8e3cfff5622ef8b63fb797703baea5f/include/dobby.h#L157">DobbyHook</a> in <code>FbbUePBslRNHWkdS</code>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p>The event is triggered when <code>nativeMuteMasterAudio</code> or <code>nativeRender</code> is registered and they
get the base address by iterating over <code>/proc/&lt;pid&gt;/maps</code>.&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:8">
<p>O-LLVM seems not applied on this function&#160;<a href="#fnref:8" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:9">
<p>One can also hook the AES encrypt/decrypt functions whose prototype is <code>(uint8_*t key_schedule, uint8_t* inout_buffer, size_t size)</code>&#160;<a href="#fnref:9" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/21-11-pgsharp-analysis/featured.png"/></item><item><title>Gotta Catch 'Em All: Frida &amp; jailbreak detection</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/</guid><description>This blog post analyzes the Frida and Jailbreak detection in PokemonGO for iOS.</description><content:encoded><![CDATA[<style>
  .green {
    color:green;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .blue {
    color: blue;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .orange {
    color: #FF6347;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .red {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-comment {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-keyword {
    color: #A90D91;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-literal {
    color: #1C01CE;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-preproc {
    color: #633820;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-strings {
    color: #C41A16;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .yellow {
    color: #CC7000;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

</style>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    Do not expect a <em>click &amp; play</em> solution for PokemonGO in this blog post. This blog post is more about
the technical aspects of jailbreak detection than a bypass for this game.
  </div>
  </div>
  </div>
</div>
<h2 id="introduction">Introduction</h2>
<p>While working on LIEF during my vacations to support in-memory parsing for Mach-O files, I found that
PokemonGO was an interesting use case to introduce this feature. It led me to look at the jailbreak
and Frida detection implemented in this game.
Being more familiar with Android than iOS, the analysis workflow on this platform is quite different, which
is also a good opportunity to improve tooling.</p>
<p>The first challenge stems from jailbreaking the device. Fortunately, checkra1n eases this step.
The second difficulty lies in extracting the encrypted iOS app from the device. In contrast to Android,
iOS apps are encrypted on the disk and decrypted by the kernel when loaded. It means that one way to get
the unencrypted code is to dump the file from memory. One could also leverage the function <code>mremap_encrypted()</code>
as described in <a href="https://www.linkedin.com/pulse/decrypting-apps-ios-john-coates/">Decrypting Apps on iOS</a>.</p>
<h2 id="pokemongo-overview">PokemonGO Overview</h2>
<p>When running PokemonGO on a jailbroken device<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, the application immediately crashes with the following backtrace:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0   ???             0x000000020ac46ab8 0 + 8770579128
</span></span><span style="display:flex;"><span>1   libdyld.dylib   0x0000000184df8304 invocation function for block in dyld3::AllImages::runAllInitializersInImage(dyld3::closure::Image const*, dyld3::MachOLoaded const*) + 136
</span></span><span style="display:flex;"><span>2   libdyld.dylib   0x0000000184dea5b0 dyld3::closure::Image::forEachInitializer(void const*, void (void const*) block_pointer) const + 96
</span></span><span style="display:flex;"><span>3   libdyld.dylib   0x0000000184df8160 invocation function for block in dyld3::AllImages::runInitialzersBottomUp(dyld3::closure::Image const*) + 296
</span></span><span style="display:flex;"><span>4   libdyld.dylib   0x0000000184deae6c dyld3::closure::Image::forEachImageToInitBefore(void (unsigned int, bool&amp;) block_pointer) const + 92
</span></span><span style="display:flex;"><span>5   libdyld.dylib   0x0000000184df8b48 dyld3::AllImages::loadImage(Diagnostics&amp;, char const*, unsigned int, dyld3::closure::DlopenClosure const*, bool, bool, bool, bool, void const*) + 776
</span></span><span style="display:flex;"><span>6   libdyld.dylib   0x0000000184df8698 dyld3::AllImages::dlopen(Diagnostics&amp;, char const*, bool, bool, bool, bool, bool, void const*, bool) + 872
</span></span><span style="display:flex;"><span>7   libdyld.dylib   0x0000000184dfa2b4 dyld3::dlopen_internal(char const*, int, void*) + 368
</span></span><span style="display:flex;"><span>8   libdyld.dylib   0x0000000184ded5b0 dlopen_internal(char const*, int, void*) + 108
</span></span><span style="display:flex;"><span>9   CoreFoundation  0x00000001850ed038 _CFBundleDlfcnLoadFramework + 136
</span></span><span style="display:flex;"><span>10  CoreFoundation  0x00000001850be974 _CFBundleLoadExecutableAndReturnError + 376
</span></span><span style="display:flex;"><span>11  Foundation      0x0000000186359ba8 -[NSBundle loadAndReturnError:] + 332
</span></span><span style="display:flex;"><span>12  pokemongo       0x00000001041a7c5c 0x1041a0000 + 31836
</span></span><span style="display:flex;"><span>13  pokemongo       0x00000001041a7d50 0x1041a0000 + 32080
</span></span><span style="display:flex;"><span>14  libdyld.dylib   0x0000000184de9588 start + 4
</span></span></code></pre></div><div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  The full crash log is available <a href="backtrace.log">here</a>.
</div>
<p>In this backtrace, the main <code>pokemongo</code> binary is a kind of <em>stub</em> that loads the Unity binary: <code>UnityFramework</code> which
contains the main logic of the game.</p>
<p>This library is loaded by the <code>dlopen_internal</code> function at index <strong>8</strong> in the backtrace as a
result of <code>-[NSBundle loadAndReturnError:]</code>.
Since <code>UnityFramework</code> depends on other libraries, they are (pre)loaded with <code>Image::forEachImageToInitBefore</code>
which processes the following files:</p>
<ol>
<li><span class="yellow">@/usr/lib/libc++.1.dylib</span></li>
<li>&hellip;</li>
<li><span class="blue">@rpath/NianticLabsPlugin.framework/NianticLabsPlugin</span></li>
<li>&hellip;</li>
<li><span class="yellow">@rpath/libswiftos.dylib</span></li>
</ol>
<p>Among those dependencies, we can notice the <span class="blue">NianticLabsPlugin</span> library which is a cross-platform
Unity plugin &ndash; also present in the Android version &ndash; that contains the main protections of the game.
These protections are used to prevent cheat, bots, GPS spoofing, in PokemonGO. The whole
being obfuscated by Digital.ai (formerly known as Arxan). <span class="blue">NianticLabsPlugin</span> communicates with the <code>UnityFramework</code> through
an exported function <code>GetN2Api</code> that returns an array of functions (pointers).</p>
<p>The following figure outlines these different components:</p>
<p><img src="overview.png" alt="PokemonGO overview"></p>
<p>Getting back to the backtrace, if we assume that the application crashes when loading <span class="blue">NianticLabsPlugin</span>,
it precisely crashes when calling the Mach-O constructors in <code>AllImages::runAllInitializersInImage</code>.
Since the application is heavily obfuscated, a static analysis reaches quickly its limits, which forces us
to emulate or dynamically analyze the functions of interest.</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    <p>The addresses of the functions/instructions mentioned in this blog post are based on the following version of NianticLabsPlugin:</p>
<p><i class="fas fa-shield-alt"></i> <a href="NianticLabsPlugin.bin">NianticLabsPlugin - 2140426ccdfdfb2529f454697cb5cc83</a></p>
<p><i class="fas fa-code-branch"></i> PokemonGO v0.211.2 - June 2021</p>
  </div>
  </div>
  </div>
</div>
<h2 id="analyzing-mach-o-constructors-with-frida">Analyzing Mach-O constructors with Frida</h2>
<p>From the previous section, we surmised that the application crashed because of the <span class="blue">NianticLabsPlugin</span>&rsquo;s constructors.
Since these functions are called before <strong>any other functions</strong> of the library, it raises the question of finding
a way to perform actions (or hook) before they are executed.</p>
<p>On Android, when we need to analyse a library&rsquo;s constructors, we can hook the <code>call_array</code> function from
<a href="https://github.com/aosp-mirror/platform_bionic/blob/c44b1d0676ded732df4b3b21c5f798eacae93228/linker/linker_soinfo.cpp#L488">Bionic&rsquo;s linker (ELF loader)</a>:</p>
<script src="https://gist.github.com/romainthomas/c10298387a921df730c1556c2ee9cecb.js"></script>
<p>If we try to apply the same approach on iOS, the mirror of the ELF loader on iOS is <code>dyld</code> which contains
most of the logic to load Mach-O files.
It turns out that at some points, the Mach-O&rsquo;s constructors are processed in the <code>doModInitFunctions</code> function
(from <a href="https://github.com/apple-opensource/dyld/blob/1128192c016372ae94793d88530bc5978c1fce93/src/ImageLoaderMachO.cpp#L2290">ImageLoaderMachO.cpp</a>).</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span> ImageLoaderMachO<span style="color:#666">::</span>doModInitFunctions(<span style="color:#008000;font-weight:bold">const</span> LinkContext<span style="color:#666">&amp;</span> context) {
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> (<span style="color:#008000;font-weight:bold">const</span> <span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">macho_section</span><span style="color:#666">*</span> sect<span style="color:#666">=</span>sectionsStart; sect <span style="color:#666">&lt;</span> sectionsEnd; <span style="color:#666">++</span>sect) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">uint8_t</span> type <span style="color:#666">=</span> sect<span style="color:#666">-&gt;</span>flags <span style="color:#666">&amp;</span> SECTION_TYPE;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> ( type <span style="color:#666">==</span> S_MOD_INIT_FUNC_POINTERS ) {
</span></span><span style="display:flex;"><span>      Initializer<span style="color:#666">*</span> inits <span style="color:#666">=</span> (Initializer<span style="color:#666">*</span>)(sect<span style="color:#666">-&gt;</span>addr <span style="color:#666">+</span> fSlide);
</span></span><span style="display:flex;"><span>      ...
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#008000;font-weight:bold">this</span><span style="color:#666">-&gt;</span>containsAddress(stripPointer((<span style="color:#b00040">void</span><span style="color:#666">*</span>)func)) ) {
</span></span><span style="display:flex;"><span>        dyld<span style="color:#666">::</span>throwf(<span style="color:#ba2121">&#34;initializer function %p not in mapped image for %s</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span>, func, <span style="color:#008000;font-weight:bold">this</span><span style="color:#666">-&gt;</span>getPath());
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>      ...
</span></span><span style="display:flex;"><span>      func(context.argc, context.argv, context.envp, context.apple, <span style="color:#666">&amp;</span>context.programVars);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>From this code, we can notice that <strong>all</strong> constructor addresses are checked <strong>beforehand</strong> by the
<code>containsAddress</code> function. Therefore, it makes this function a good hooking spot as it is executed before
calling the constructor itself. One can use the native SDK of <a href="https://github.com/frida/frida-gum">frida-gum</a>
to perform this action:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Address of ImageLoader::containsAddress in /usr/lib/dyld
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">const</span> uintptr_t containsAddress_ptr <span style="color:#666">=</span> ...;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Setup hooks with gum_interceptor_attach
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>GumAttachReturn attach_ret <span style="color:#666">=</span> gum_interceptor_attach(
</span></span><span style="display:flex;"><span>    listener_<span style="color:#666">-&gt;</span>interceptor,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* target */</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(containsAddress_ptr),
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>GumInvocationListener<span style="color:#666">*&gt;</span>(listener_),
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* ID */</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(containsAddress_ptr)
</span></span><span style="display:flex;"><span>);
</span></span><span style="display:flex;"><span>....
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Equivalent of onEnter in Javascript
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#b00040">void</span> native_listener_on_enter(GumInvocationListener<span style="color:#666">*</span> listener, GumInvocationContext<span style="color:#666">*</span> ic) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> uintptr_t ctor_function_addr <span style="color:#666">=</span> ic<span style="color:#666">-&gt;</span>cpu_context<span style="color:#666">-&gt;</span>x[<span style="color:#666">1</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Do stuff with ctor_function_addr
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <code>containsAddress</code> is a member function, therefore <code>x0</code> contains a pointer on <code>this</code> and the address
to check is located in <code>x1</code>.
</div>
<p>By hooking <code>containsAddress()</code>, we get the <strong>control before</strong> the execution of the constructors.
It gives us the ability to perform the following actions that can help to identify the constructor involved in the crash:</p>
<ol>
<li>Trace the constructors (see: <a href="constructors_trace.log">constructors_trace.log</a>)</li>
<li>Replace/disable a constructor (<code>gum_interceptor_replace</code>)</li>
<li>Detect the <strong>first</strong> constructor and hook the next ones (<code>gum_interceptor_attach</code>)</li>
</ol>
<p><span class="blue">NianticLabsPlugin</span> embeds no less than 120 constructors
among those, 6<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> are involved in detecting Frida, jailbroken devices, anti-debug, etc:</p>
<table>
<thead>
<tr>
<th>Index</th>
<th>Offset</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>15</td>
<td>0x4369e0</td>
<td>Anti-debug &amp; anti-emulation</td>
</tr>
<tr>
<td>16</td>
<td>0x00e0d8</td>
<td>Frida detection</td>
</tr>
<tr>
<td>17</td>
<td>0x26bd5c</td>
<td>Anti-bypass?</td>
</tr>
<tr>
<td>18</td>
<td>0x449b84</td>
<td>Anti-jailbreak, anti-Frida</td>
</tr>
<tr>
<td>19</td>
<td>0x731b90</td>
<td>Anti-jailbreak, anti-debug, anti-frida</td>
</tr>
<tr>
<td>20</td>
<td>0x359194</td>
<td>Anti-jailbreak</td>
</tr>
</tbody>
</table>
<p>Once we reduced the set of functions involved in the crash, we can combine dynamic analysis with Frida
and emulation with Unicorn.</p>
<h2 id="anti-debug">Anti-debug</h2>
<p>One of the redundant checks we can find in many functions (not only the constructors) are the
anti-debugs. They always come in two parts:</p>
<ol>
<li>Try to <em>&ldquo;kill&rdquo;</em> its own pid with the 0-signal</li>
<li>Check if PTRACE is flagged</li>
</ol>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">try_kill</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">int</span> pid <span style="color:#666">=</span> getpid(); <span style="color:#408080;font-style:italic">// syscall@0x436cdc
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#b00040">int</span> ret <span style="color:#666">=</span> kill(pid, <span style="color:#666">0</span>);   <span style="color:#408080;font-style:italic">// syscall@0x436d28
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>According to the man page of kill (<code>man 2 kill</code>), the signal <code>0</code> is used to check
that the <code>pid</code> given in the first parameter really exists.</p>
<blockquote>
<p>[&hellip;] A value of 0, however, will cause error checking to be performed (with no signal being sent). This can be used
to check the validity of pid.</p>
</blockquote>
<p>This <em>kill</em> operation is followed by three <code>PTRACE</code> checks:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Done three times
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">inline</span> <span style="color:#b00040">bool</span> <span style="color:#00f">ptrace_detect</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">int32_t</span> opt[<span style="color:#666">4</span>] <span style="color:#666">=</span> {
</span></span><span style="display:flex;"><span>    CTL_KERN,
</span></span><span style="display:flex;"><span>    KERN_PROC,
</span></span><span style="display:flex;"><span>    KERN_PROC_PID,
</span></span><span style="display:flex;"><span>    getpid(),
</span></span><span style="display:flex;"><span>  };
</span></span><span style="display:flex;"><span>  kinfo_proc info;
</span></span><span style="display:flex;"><span>  sysctl(opt, <span style="color:#666">4</span>, <span style="color:#666">&amp;</span>info, <span style="color:#008000;font-weight:bold">sizeof</span>(kinfo_proc), <span style="color:#008000;font-weight:bold">nullptr</span>, <span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> info.kp_proc.p_flag <span style="color:#666">&amp;</span> P_TRACED;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>These three <code>P_TRACED</code> checks <strong>always</strong> come together:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x436cdc: getpid(): 6015
</span></span><span style="display:flex;"><span>0x436d28: kill(6015, 0): 0
</span></span><span style="display:flex;"><span>0x4374b0: sysctl(CTL_KERN, KERN_PROC, KERN_PROC_PID, 6015)
</span></span><span style="display:flex;"><span>0x4371e8: sysctl(CTL_KERN, KERN_PROC, KERN_PROC_PID, 6015)
</span></span><span style="display:flex;"><span>0x437398: sysctl(CTL_KERN, KERN_PROC, KERN_PROC_PID, 6015)
</span></span></code></pre></div><h2 id="frida-detection">Frida Detection</h2>
<p>Frida is detected by the application through its client-server mode, which binds the localhost on the port <code>27042</code>.
When PokemonGO is starting, it tries to open a socket on this port and if it manages to connect, it tests the Frida handshake.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x00e3b8: getifaddrs(0x16b7fb518): 0x0
</span></span><span style="display:flex;"><span>0x016990: socket(&#39;IPV4&#39;, &#39;TCP&#39;, &#39;0&#39;): 0x8
</span></span><span style="display:flex;"><span>0x019d60: bind(&#39;PF_INET&#39;, 0x8, &#39;127.0.0.1:27042&#39;)
</span></span><span style="display:flex;"><span>0x01805c: close(0x8)
</span></span><span style="display:flex;"><span>0x016990: socket(&#39;IPV4&#39;, &#39;TCP&#39;, &#39;0&#39;): 0x8
</span></span><span style="display:flex;"><span>0x019d60: bind(&#39;PF_INET&#39;, 0x8, &#39;192.168.0.26:27042&#39;)
</span></span><span style="display:flex;"><span>0x01805c: close(0x8)
</span></span><span style="display:flex;"><span>0x00e3ec: freeifaddrs(0x10601ac00): 0x105360a00
</span></span></code></pre></div><p>The application also iterates over the list of the libraries loaded in memory with the
<code>_dyld_image_count</code>/<code>_dyld_get_image_name</code> functions. Nevertheless, it seems that they are not used to detect
Frida libraries artifacts (like <code>FridaGadget.dylib</code>).</p>
<h2 id="jailbreak-detection">Jailbreak Detection</h2>
<p>The application implements jailbreak detection by checking if some files are accessible or not on the device.
Most of the checks are done by using the <code>access()</code> syscalls that are inlined in different places:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x44c390: access(&#39;/bin/grep&#39;, 0x0)
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>0x7326b0: access(&#39;/private/var/checkra1n.dmg&#39;, 0x0)
</span></span></code></pre></div><p>The list of the checked files is given in the <a href="#annexes">annexes of the blog post</a>.</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  This list is very close to <a href="https://github.com/XsF1re/vnodebypass/blob/870b21fd3566736cca285355b4faf7f289baa4d5/layout/usr/share/vnodebypass/hidePathList.plist">vnodebypass/hidePathList.plist</a>
</div>
<p>In addition to <em>raw</em> <code>access</code> syscall, the application enhances its detection by creating a symbolic link of the
root directory in a temporary app data directory:</p>
<pre tabindex="0"><code>0x734e08: symlink(&#39;/Applications/..&#39;, &#39;/private/var/mobile/Containers/Data/Application/D933FBC9-90E7-4584-851E-CE2D5E900446/tmp/WCH38bnM0x101a9e7d0&#39;)
</code></pre><p>Then, it performs the same checks with the app data directory as prefix: <code>[...]/tmp/WCH38bnM0x101a9e7d0</code>:</p>
<pre tabindex="0"><code>0x7376d8: access(&#39;/private/var/mobile/Containers/Data/Application/D933FBC9-90E7-4584-851E-CE2D5E900446/tmp/3Odis0x101a9dfd0/usr/bin/passwd&#39;, 0x0)
</code></pre><h2 id="signature-check">Signature Check</h2>
<p>At some point, one function checks the integrity of the signature of the <code>pokemongo</code> binary.
This check starts by opening the main <code>pokemongo</code> binary from <strong>the disk</strong>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x7392ec: add  x0, x19, #6,lsl#12
</span></span><span style="display:flex;"><span>0x7392f0: add  x0, x0, #0x540
</span></span><span style="display:flex;"><span>0x7392f4: mov  w1, #0x1000000
</span></span><span style="display:flex;"><span>0x7392f8: mov  x2, #0
</span></span><span style="display:flex;"><span>0x7392fc: svc  0x80               ; x16 -&gt; SYS_open = 5
</span></span><span style="display:flex;"><span>// open(&#39;/private/var/containers/Bundle/Application/[...]/pokemongo.app/pokemongo&#39;): fd_pgo
</span></span></code></pre></div><p>Then, it reads the beginning of the file in a stack buffer:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x74b494: ldr  x0, [x19, #0xc0]  ; fd
</span></span><span style="display:flex;"><span>0x74b498: ldr  x1, [x19, #0x130] ; buff
</span></span><span style="display:flex;"><span>0x74b49c: ldr  x2, [x19, #0xb8]  ; buff_size
</span></span><span style="display:flex;"><span>0x74b4a0: svc  0x80              ; x16 -&gt; SYS_read = 3
</span></span><span style="display:flex;"><span>// uint8_t macho_head[0x4167];
</span></span><span style="display:flex;"><span>// 0x74b4a0: read(fd_pgo, macho_header, 0x4167);
</span></span></code></pre></div><p>to iterate over the Mach-O load commands:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>; x8 points to the read&#39;s buffer
</span></span><span style="display:flex;"><span>0x73942c: ldr w8, [x8, #0x10]  ; Number of LC_COMMANDS
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>for (size_t i = 0; i &lt; nb_cmds; ++i) {
</span></span><span style="display:flex;"><span>  0x74bc40: ldr w10, [x9, #4] ; Command&#39;s size
</span></span><span style="display:flex;"><span>  0x74ade4: ldr w9,  [x9]     ; command&#39;s type
</span></span><span style="display:flex;"><span>  if (cmd.type == LC_CODE_SIGNATURE) {
</span></span><span style="display:flex;"><span>    0x74b1b8: ldr w10, [x10, #8]  ; read signature offset -&gt; 0xc3d0
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>With the offset of the Mach-O <code>LC_CODE_SIGNATURE</code> command, it reads the raw signature using the
<code>lseek/read</code> syscalls:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>uint8_t sig_header[0x205];
</span></span><span style="display:flex;"><span>0x73a978: lseek(fd_pgo, LC_CODE_SIGNATURE offset, 0x0)
</span></span><span style="display:flex;"><span>0x73aecc: read(fd_pgo, &amp;sig_header, 0x205);
</span></span></code></pre></div><p>The raw signature buffer is processed by chunks of 10 bytes in
a function that looks like a checksum:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>[...]
</span></span><span style="display:flex;"><span>0x73ad58:  ldrsb w13, [x12]
</span></span><span style="display:flex;"><span>0x73ad5c:  mov w14, #83
</span></span><span style="display:flex;"><span>0x73ad60:  sub w13, w14, w13
</span></span><span style="display:flex;"><span>0x73ad64:  ldrsb w14, [x12, #1]
</span></span><span style="display:flex;"><span>0x73ad68:  mov w15, #87
</span></span><span style="display:flex;"><span>0x73ad6c:  sub w14, w15, w14
</span></span><span style="display:flex;"><span>0x73ad70:  ldrsb w16, [x12, #2]
</span></span><span style="display:flex;"><span>0x73ad74:  mov w17, #53
</span></span><span style="display:flex;"><span>0x73ad78:  sub w16, w17, w16
</span></span><span style="display:flex;"><span>0x73ad7c:  ldrsb w17, [x12, #3]
</span></span><span style="display:flex;"><span>0x73ad80:  mov w0, #52
</span></span><span style="display:flex;"><span>0x73ad84:  sub w17, w0, w17
</span></span><span style="display:flex;"><span>0x73ad88:  ldrsb w0, [x12, #4]
</span></span><span style="display:flex;"><span>0x73ad8c:  sub w0, w15, w0
</span></span><span style="display:flex;"><span>0x73ad90:  ldrsb w1, [x12, #5]
</span></span><span style="display:flex;"><span>0x73ad94:  mov w2, #51
</span></span><span style="display:flex;"><span>0x73ad98:  sub w1, w2, w1
</span></span><span style="display:flex;"><span>0x73ad9c:  ldrsb w2, [x12, #6]
</span></span><span style="display:flex;"><span>0x73ada0:  mov w3, #54
</span></span><span style="display:flex;"><span>0x73ada4:  sub w2, w3, w2
</span></span><span style="display:flex;"><span>0x73ada8:  ldrsb w3, [x12, #7]
</span></span><span style="display:flex;"><span>0x73adac:  sub w15, w15, w3
</span></span><span style="display:flex;"><span>0x73adb0:  ldrsb w3, [x12, #8]
</span></span><span style="display:flex;"><span>0x73adb4:  mov w4, #78
</span></span><span style="display:flex;"><span>0x73adb8:  sub w3, w4, w3
</span></span><span style="display:flex;"><span>0x73adbc:  ldrsb w12, [x12, #9]
</span></span><span style="display:flex;"><span>0x73adc0:  mov w4, #70
</span></span><span style="display:flex;"><span>0x73adc4:  sub w4, w4, w12
</span></span><span style="display:flex;"><span>[...]
</span></span></code></pre></div><p>I did not manage to identify the underlying checksum algorithm, but it involves square multiplications and
the key(?): <code>SW5436NF</code></p>
<h2 id="control-fault-injection">Control-Fault Injection</h2>
<p>Once we determined the functions involved in the detections, we might want to disable them in order to
run the game smoothly.
Actually, PokemonGO is protected against such bypass with global variables that assert if a function
ran successfully or not.</p>
<p>This protection is equivalent to the following piece of code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> uintptr_t GOOD <span style="color:#666">=</span> <span style="color:#666">0x00627178</span>; <span style="color:#408080;font-style:italic">// bqx ?
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">static</span> uintptr_t MAGIC_CFI <span style="color:#666">=</span> <span style="color:#666">0xdeadc0de</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>__attribute__((constructor))
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> frida_detect() {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (is_frida_running()) {
</span></span><span style="display:flex;"><span>    crash();
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  MAGIC_CFI <span style="color:#666">=</span> GOOD;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>__attribute__((constructor))
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> control_fault_check() {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (MAGIC_CFI <span style="color:#666">!=</span> GOOD) {
</span></span><span style="display:flex;"><span>    crash();
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>If we only disable <code>frida_detect()</code>, the application will crash because of <code>control_fault_check()</code>.</p>
<p>We could bypass this protection by identifying the address of the
<code>MAGIC_CFI</code> in the <code>__data</code> section, or by disabling the <code>control_fault_check()</code>.</p>
<h2 id="what-about-lief">What about LIEF?</h2>
<p>As mentioned in the introduction, it started with an ongoing feature to parse Mach-O files from memory.
Basically, LIEF will<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> enable to parse Mach-O files<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> from an absolute address with this kind of API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// 0x10234400 -&gt; start of the Mach-O file
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">auto</span> bin <span style="color:#666">=</span> LIEF<span style="color:#666">::</span>MachO<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse_from_memory(<span style="color:#666">0x10234400</span>);
</span></span></code></pre></div><p>Depending on the user&rsquo;s needs, the <code>write()</code> operation will optionally undo all the relocations and the symbol bindings.
This could be useful if we aim at (re)running the file dumped (on a Apple M1?).</p>
<p>As expected, the strings used within the <span class="blue">NianticLabsPlugin</span> library are encoded
by the obfuscator. We could statically analyze the decoding routine (cf. Tim Blazytko&rsquo;s <a href="https://synthesis.to/2021/06/30/automating_string_decryption.html">blog post</a>)
,but another technique consists in using a property of the obfuscator&rsquo;s string encoding mechanism.</p>
<p>It seems that the obfuscator put <strong>all</strong> the strings<sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> in the data section and decrypts <strong>all of them</strong>
in a <strong>single</strong> constructor function.</p>
<p>For instance, if we have the string &ldquo;TOKEN&rdquo; to protect in the following functions:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">protect_me</span>() {
</span></span><span style="display:flex;"><span>  sensitive(<span style="color:#ba2121">&#34;TOKEN&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">protect_me_2</span>() {
</span></span><span style="display:flex;"><span>  sensitive(<span style="color:#ba2121">&#34;TOKEN2&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The obfuscator transforms and decodes the strings into something like:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// __data section
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#b00040">char</span> var_TOKEN[]   <span style="color:#666">=</span> <span style="color:#ba2121">&#34;</span><span style="color:#b62;font-weight:bold">\x00\x1D\xDD\xEE\xAB</span><span style="color:#ba2121">&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#b00040">char</span> var_TOKEN_2[] <span style="color:#666">=</span> <span style="color:#ba2121">&#34;</span><span style="color:#b62;font-weight:bold">\x00\x1D\xDD\xEE\xAF</span><span style="color:#ba2121">&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>__attribute__((constructor))
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> decode_strings() {
</span></span><span style="display:flex;"><span>  decode(var_TOKEN);
</span></span><span style="display:flex;"><span>  decode(var_TOKEN_2);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">protect_me</span>() {
</span></span><span style="display:flex;"><span>  sensitive(var_TOKEN);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">void</span> <span style="color:#00f">protect_me_2</span>() {
</span></span><span style="display:flex;"><span>  sensitive(var_TOKEN_2);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Since <strong>all</strong> the strings are decoded at once in one of the first constructors, if we manage to dump the binary
right after this constructor,
we can recover the original strings for free.</p>
<p>Programmatically, it can be done using (again) frida-gum SDK with the following pseudocode:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Hook associated with ImageLoader::containsAddress
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#b00040">void</span> <span style="color:#00f">native_listener_on_enter</span>(GumInvocationListener<span style="color:#666">*</span> listener,
</span></span><span style="display:flex;"><span>                              GumInvocationContext<span style="color:#666">*</span> ic) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">static</span> size_t CTOR_ID <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> uintptr_t ctor_function_addr <span style="color:#666">=</span> ic<span style="color:#666">-&gt;</span>cpu_context<span style="color:#666">-&gt;</span>x[<span style="color:#666">1</span>];
</span></span><span style="display:flex;"><span>  std<span style="color:#666">::</span>string libname <span style="color:#666">=</span> module_from_addr(ctor_function_addr);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> (libname <span style="color:#666">==</span> <span style="color:#ba2121">&#34;NianticLabsPlugin&#34;</span> <span style="color:#666">&amp;&amp;</span> CTOR_ID<span style="color:#666">++</span> <span style="color:#666">==</span> <span style="color:#666">3</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> uintptr_t base_address <span style="color:#666">=</span> base_addr_from_ptr(ctor_function_addr);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">auto</span> bin <span style="color:#666">=</span> LIEF<span style="color:#666">::</span>MachO<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse_from_memory(base_address);
</span></span><span style="display:flex;"><span>    bin<span style="color:#666">-&gt;</span>write(<span style="color:#ba2121">&#34;/tmp/pokemongo_after_ctor.bin&#34;</span>); <span style="color:#408080;font-style:italic">// /tmp on the iPhone
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>In the end, the dumped file contains the decoded strings:</p>
<p><img src="strings.png" alt="Data area after LIEF dump"></p>
<p>If we skim the <code>__data</code> section, we can also observe the following changes:</p>
<p><img src="data_dump.png" alt="Data area after LIEF dump"></p>
<p>A practiced eye might notice<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup> that some strings of the section are actually
embedded in protobuf structures. We can confirm this observation by trying to infer the data as protobuf
types:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">from</span> <span style="color:#00f;font-weight:bold">.</span> <span style="color:#008000;font-weight:bold">import</span> proto_dump
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>pgo <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;pokemongo_after_ctor.bin&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>start <span style="color:#666">=</span> <span style="color:#666">0x12A51A7</span>
</span></span><span style="display:flex;"><span>end   <span style="color:#666">=</span> <span style="color:#666">0x12A51E2</span>
</span></span><span style="display:flex;"><span>raw_proto <span style="color:#666">=</span> pgo<span style="color:#666">.</span>get_content_from_virtual_address(start, end <span style="color:#666">-</span> start)
</span></span><span style="display:flex;"><span><span style="color:#008000">print</span>(proto_dump(raw_proto))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  #3 = 4
</span></span><span style="display:flex;"><span>  #4 (repeated) = 1 {
</span></span><span style="display:flex;"><span>    #1 = &#34;CheatReputation&#34;
</span></span><span style="display:flex;"><span>    #2 (repeated) = {
</span></span><span style="display:flex;"><span>      #1 = &#34;UNSET&#34;
</span></span><span style="display:flex;"><span>      #2 = 0
</span></span><span style="display:flex;"><span>    } {
</span></span><span style="display:flex;"><span>      #1 = &#34;BOT&#34;
</span></span><span style="display:flex;"><span>      #2 = 1
</span></span><span style="display:flex;"><span>    } {
</span></span><span style="display:flex;"><span>      #1 = &#34;SPOOFER&#34;
</span></span><span style="display:flex;"><span>      #2 = 2
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  #5 = 8
</span></span><span style="display:flex;"><span>  #8 = []
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="final-words">Final Words</h2>
<p>The application embeds other checks in the constructors and in the functions returned by <code>GetN2Api</code>. It can
make a good exercise for those that are interested in.</p>
<p>Generally speaking, the application and the protections are well designed since they slow down reverse engineers.
Nevertheless, <code>anti-{jb, frida, debug}</code> are quite difficult to protect as they need to interact with the OS
through functions or syscalls with unprotected parameters. As a result, and once identified, we can bypass them.</p>
<p>One technique consists in injecting a library with Frida&rsquo;s injector that aims at hooking
the <code>containsAddress()</code> to disable/patch the functions involved in the detections:</p>
<p><img src="jbfree.png" alt="PokemonGo Jailbreak bypass"></p>














  


<video class="mb-4" controls >
  <source src="pokemongo_jb_bypass.mp4" type="video/mp4">
</video>

<p>Nevertheless, this technique is <strong>not persistent</strong> and version-dependant.</p>
<p>After writing this post, it turned out that its structure is very close to <a href="https://hot3eed.github.io/2020/08/02/starling_p2_detections_mitigations.html">Reverse Engineering Starling Bank</a>.
In particular, we can find the same anti-debug and the same Frida detection routine. These similarities suggest
that these two application uses the same obfuscator that also provides <code>anti-{jb, frida, debug}</code> as built-in.</p>
<p>You might also be interested in the recent talk of <a href="https://twitter.com/elvanderb">Eloi Benoist-Vanderbeken</a> <a href="https://2021.pass-the-salt.org/">@Pass the Salt</a>
<a href="https://archives.pass-the-salt.org/Pass%20the%20SALT/2021/videos/PTS2021-Talk-01-JailBreak_detection.mp4">
  <i class="fas fa-laptop-code  pr-1 fa-fw"></i></a>
<a href="https://archives.pass-the-salt.org/Pass%20the%20SALT/2021/slides/PTS2021-Talk-01-JailBreak_detection.pdf">
  <i class="fas fa-file-pdf  pr-1 fa-fw"></i></a>
who detailed another approach to identify and bypass
jailbreak detections.</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <a href="https://lief-project.github.io">LIEF</a> is a tool developed at <a href="https://www.quarkslab.com/">Quarkslab</a> along with
<a href="https://qbdi.quarkslab.com">QBDI</a> &amp; <a href="https://triton.quarkslab.com">Triton</a>.
</div>
<hr>
<h3 id="annexes">Annexes</h3>
<table>
<thead>
<tr>
<th>Files that trigger the JB detection</th>
<th>Files that should be present</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/.bootstrapped_electra</code></td>
<td><code>/cores</code></td>
</tr>
<tr>
<td><code>/Applications/Anemone.app</code></td>
<td><code>/dev/null</code></td>
</tr>
<tr>
<td><code>/Applications/Cydia.app</code></td>
<td><code>/etc/hosts</code></td>
</tr>
<tr>
<td><code>/Applications/SafeMode.app</code></td>
<td><code>/etc/passwd</code></td>
</tr>
<tr>
<td><code>/Library/Frameworks/CydiaSubstrate.framework</code></td>
<td><code>/sbin</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/DynamicLibraries/FlyJB.dylb</code></td>
<td><code>/sbin/launchd</code></td>
</tr>
<tr>
<td><code>/Library/MobileSubstrate/MobileSubstrate.dylib</code></td>
<td><code>/sbin/mount</code></td>
</tr>
<tr>
<td><code>/Library/PreferenceBundles/LaunchInSafeMode.bundle</code></td>
<td><code>/usr</code></td>
</tr>
<tr>
<td><code>/Library/PreferenceLoader/Preferences/LaunchInSafeMode.plist</code></td>
<td></td>
</tr>
<tr>
<td><code>/Library/Themes</code></td>
<td></td>
</tr>
<tr>
<td><code>/Library/dpkg/info/com.inoahdev.launchinsafemode.list</code></td>
<td></td>
</tr>
<tr>
<td><code>/Library/dpkg/info/com.inoahdev.launchinsafemode.md5sums</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/bash</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/bunzip2</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/bzip2</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/cat</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/chgrp</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/chmod</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/chown</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/cp</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/grep</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/gzip</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/kill</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/ln</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/ls</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/mkdir</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/mv</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/sed</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/sh</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/su</code></td>
<td></td>
</tr>
<tr>
<td><code>/bin/tar</code></td>
<td></td>
</tr>
<tr>
<td><code>/binpack</code></td>
<td></td>
</tr>
<tr>
<td><code>/bootstrap</code></td>
<td></td>
</tr>
<tr>
<td><code>/chimera</code></td>
<td></td>
</tr>
<tr>
<td><code>/electra</code></td>
<td></td>
</tr>
<tr>
<td><code>/etc/apt</code></td>
<td></td>
</tr>
<tr>
<td><code>/etc/profile</code></td>
<td></td>
</tr>
<tr>
<td><code>/jb</code></td>
<td></td>
</tr>
<tr>
<td><code>/private/var/binpack</code></td>
<td></td>
</tr>
<tr>
<td><code>/private/var/checkra1n.dmg</code></td>
<td></td>
</tr>
<tr>
<td><code>/private/var/lib/apt</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/diff</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/hostinfo</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/killall</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/passwd</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/recache</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/tar</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/which</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/bin/xargs</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/SBInject</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/SBInject.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/TweakInject</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/TweakInject.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/TweakInjectMapsCheck.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/libjailbreak.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/libsubstitute.0.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/libsubstitute.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/lib/libsubstrate.dylib</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/libexec/sftp-server</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/sbin/sshd</code></td>
<td></td>
</tr>
<tr>
<td><code>/usr/share/terminfo</code></td>
<td></td>
</tr>
<tr>
<td><code>/var/mobile/Library/.sbinjectSafeMode</code></td>
<td></td>
</tr>
<tr>
<td><code>/var/mobile/Library/Preferences/jp.akusio.kernbypass.plist</code></td>
<td></td>
</tr>
</tbody>
</table>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>iPhone 6 running on iOS 14.2 with checkra1n.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>We can identify them by trial and error.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>ETA: likely by the end of the year&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>The Mach-O format is very suitable for this feature as
the header in mapped in memory. Therefore, it eases the parsing.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>More generally, it can encode local data (strings, bytes arrays, &hellip;)&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p>Protobuf strings can be identified as they usually start with <code>0xA</code>, <code>0xB</code>, followed by their lengths
and the string itself (see: <a href="https://developers.google.com/protocol-buffers/docs/encoding#strings">protocol-buffers/docs/encoding</a>)&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/21-07-pokemongo-anti-frida-jailbreak-bypass/featured.png"/></item><item><title>r2-pay: whitebox (part 2)</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/</guid><description>This second blog post explains how to recover the whitebox&amp;rsquo;s key from the obfuscated library libnative-lib.so</description><content:encoded><![CDATA[<style>
  .green {
    color:green;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .blue {
    color: blue;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .orange {
    color: #FF6347;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .red {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-comment {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-keyword {
    color: #A90D91;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-literal {
    color: #1C01CE;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-preproc {
    color: #633820;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-strings {
    color: #C41A16;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .yellow {
    color: #CC7000;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

#
</style>
<h2 id="introduction">Introduction</h2>
<p>In the <a href="/post/20-09-r2con-obfuscated-whitebox-part1/">first part</a> of this write-up, we described the
anti-frida, anti-debug and anti-root techniques used in the application and how to remove most of them.</p>
<p>This second part digs into the JNI function <code>gXftm3iswpkVgBNDUp</code> and the underlying whitebox implementation.</p>
<h2 id="library-shimming">Library Shimming</h2>
<p>The inputs of the function <code>gXftm3iswpkVgBNDUp</code> are provided by the GUI widgets and the function
is triggered when we press the <em>Generate R2Coin</em> button.
Nevertheless, the behavior of <code>gXftm3iswpkVgBNDUp</code> does not rely on UI features nor
the application&rsquo;s context<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p>To take a closer look at the logic of <code>gXftm3iswpkVgBNDUp</code>, it would be pretty useful to be able to feed
the function&rsquo;s inputs with our <strong>own standalone binary</strong>. Basically, we would like to achieve this kind
of interface:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">int</span> argc, <span style="color:#b00040">char</span><span style="color:#666">**</span> argv) {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">void</span><span style="color:#666">*</span> dlopen(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>, RTLD_NOW);
</span></span><span style="display:flex;"><span>  ...
</span></span><span style="display:flex;"><span>  jbyteArray out <span style="color:#666">=</span> gXftm3iswpkVgBNDUp(env, ...);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>This technique is not new and has been already described in a blog post by <a href="https://twitter.com/caleb_fenton">Caleb Fenton</a><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. The idea is to get
the <code>JNIEnv* env</code> variable with <code>JNI_CreateJavaVM</code> which is exported by the Android runtime: <code>libart.so</code>.</p>
<p>Once we have this variable, we can call the <code>gXftm3iswpkVgBNDUp</code> function as well as manipulating the JNI buffers:</p>
<ul>
<li><code>env-&gt;NewByteArray()</code></li>
<li><code>env-&gt;GetArrayLength()</code></li>
<li>&hellip;</li>
</ul>
<p><img src="shim_mechanism.png" alt="Shimming of whitebox library"></p>
<p>Long story short, we can instantiate the Android runtime with the following piece of code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">int</span> argc, <span style="color:#b00040">char</span><span style="color:#666">**</span> argv) {
</span></span><span style="display:flex;"><span>  JavaVMOption opt[<span style="color:#666">2</span>];
</span></span><span style="display:flex;"><span>  opt[<span style="color:#666">0</span>].optionString <span style="color:#666">=</span> <span style="color:#ba2121">&#34;-Djava.class.path=/data/local/tmp/re.pwnme.1.0.apk&#34;</span>;
</span></span><span style="display:flex;"><span>  opt[<span style="color:#666">1</span>].optionString <span style="color:#666">=</span> <span style="color:#ba2121">&#34;-Djava.library.path=/data/local/tmp&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  JavaVMInitArgs args;
</span></span><span style="display:flex;"><span>  args.version            <span style="color:#666">=</span> JNI_VERSION_1_6;
</span></span><span style="display:flex;"><span>  args.options            <span style="color:#666">=</span> opt;
</span></span><span style="display:flex;"><span>  args.nOptions           <span style="color:#666">=</span> <span style="color:#666">2</span>;
</span></span><span style="display:flex;"><span>  args.ignoreUnrecognized <span style="color:#666">=</span> JNI_FALSE;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">void</span><span style="color:#666">*</span> handler <span style="color:#666">=</span> dlopen(<span style="color:#ba2121">&#34;/system/lib64/libart.so&#34;</span>, RTLD_NOW);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">auto</span> JNI_CreateJavaVM_f <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#008000;font-weight:bold">decltype</span>(JNI_CreateJavaVM)<span style="color:#666">*&gt;</span>(dlsym(handler, <span style="color:#ba2121">&#34;JNI_CreateJavaVM&#34;</span>));
</span></span><span style="display:flex;"><span>  JNI_CreateJavaVM_f(<span style="color:#666">&amp;</span>jvm, <span style="color:#666">&amp;</span>env, <span style="color:#666">&amp;</span>args);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Then, we can resolve the <code>gXftm3iswpkVgBNDUp</code> function with the base address of <code>libnative-lib.so</code>
and its offset <code>0x9B41C</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">void</span><span style="color:#666">*</span> hdl <span style="color:#666">=</span> dlopen(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>, RTLD_NOW);
</span></span><span style="display:flex;"><span>uintptr_t base_address <span style="color:#666">=</span> get_base_address(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">using</span> gXftm3iswpkVgBNDUp_t <span style="color:#666">=</span> jbyteArray(<span style="color:#666">*</span>)(JNIEnv<span style="color:#666">*</span>, jobject, jbyteArray, jbyte);
</span></span><span style="display:flex;"><span>gXftm3iswpkVgBNDUp <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>gXftm3iswpkVgBNDUp_t<span style="color:#666">&gt;</span>(base_address <span style="color:#666">+</span> <span style="color:#666">0x9B41C</span>);
</span></span></code></pre></div><p>Finally, we can run the function with our own inputs:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>std<span style="color:#666">::</span>string pin_amount <span style="color:#666">=</span> <span style="color:#ba2121">&#34;0000123400004567&#34;</span>;
</span></span><span style="display:flex;"><span>jbyteArray array <span style="color:#666">=</span> convert_to_jbyteArray(pin_amount, ptr);
</span></span><span style="display:flex;"><span>jbyteArray jencrypted_buffer <span style="color:#666">=</span> gXftm3iswpkVgBNDUp(env, <span style="color:#008000;font-weight:bold">nullptr</span>, array, <span style="color:#666">0xF0</span>);
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> std<span style="color:#666">::</span>vector<span style="color:#666">&lt;</span><span style="color:#b00040">uint8_t</span><span style="color:#666">&gt;</span> encrypted_buffer <span style="color:#666">=</span> from_jbytes(jencrypted_buffer);
</span></span><span style="display:flex;"><span>std<span style="color:#666">::</span>string hex_str <span style="color:#666">=</span> to_hex(encrypted_buffer);
</span></span><span style="display:flex;"><span>LOG_INFO(<span style="color:#ba2121">&#34;{} --&gt; {}&#34;</span>, pin_amount, ref_str);
</span></span></code></pre></div><div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  The whole implementation is available <a href="https://github.com/romainthomas/r2pay/blob/master/shim-whitebox">here <i class="fab fa-github"></i></a>.
</div>
<h2 id="function-tracing">Function Tracing</h2>
<p>Now that we are able to run the <code>gXftm3iswpkVgBNDUp</code> function without the GUI layer, we can easily
create an interface with <a href="https://qbdi.quarkslab.com">QBDI</a>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>VM vm;
</span></span><span style="display:flex;"><span>vm.addInstrumentedModule(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>);
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>jbyteArray array <span style="color:#666">=</span> to_jarray(pin_amount, ptr);
</span></span><span style="display:flex;"><span>jbyteArray qbdi_encrypted_buffer;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>vm.call(
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* ret    */</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>uintptr_t<span style="color:#666">*&gt;</span>(<span style="color:#666">&amp;</span>qbdi_encrypted_buffer),
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* target */</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>uintptr_t<span style="color:#666">&gt;</span>(gXftm3iswpkVgBNDUp),
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* params */</span> {
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">/* p_0: JNIEnv* */</span>      <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>rword<span style="color:#666">&gt;</span>(env),
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">/* p_1: jobject thiz */</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>rword<span style="color:#666">&gt;</span>(<span style="color:#008000;font-weight:bold">nullptr</span>),
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">/* p_2: inbuffer */</span>     <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>rword<span style="color:#666">&gt;</span>(array),
</span></span><span style="display:flex;"><span>                              <span style="color:#666">0xF0</span>
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>The execution in QBDI <strong>without user&rsquo;s callbacks</strong> takes about <strong>3min 30s</strong> which is quite huge compared to
the <strong>real execution</strong> that takes about <strong>853ms</strong>:</p>
<p><img src="benchmark.svg" alt="Performances with different configurations"></p>
<p>This overhead is mostly due to the function <code>0x1038f0</code> that is executed ~20 000 times. After a quick
analysis, it turns out that this function is not relevant to instrument to break the whitebox.
We can force its <em>real</em> execution
(i.e. outside QBDI) <strong>by removing the function&rsquo;s address from the instrumented range</strong><sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> uintptr_t HEAVY_FUNCTION <span style="color:#666">=</span> <span style="color:#666">0x1038f0</span>;
</span></span><span style="display:flex;"><span>vm.removeInstrumentedRange(
</span></span><span style="display:flex;"><span>  base_address <span style="color:#666">+</span> HEAVY_FUNCTION,
</span></span><span style="display:flex;"><span>  base_address <span style="color:#666">+</span> HEAVY_FUNCTION <span style="color:#666">+</span> <span style="color:#666">1</span>
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>This small adjustment <strong>drops the execution to 3'30sec</strong>.</p>
<hr>
<p>Some cryptographic algorithms can be fingerprinted either with predefined constants or with their memory accesses.
According to the Quarkslab&rsquo;s blog post: <a href="https://blog.quarkslab.com/differential-fault-analysis-on-white-box-aes-implementations.html">Differential Fault Analysis on White-box AES Implementations</a>,
the whitebox lookup tables are likely to be stored in the <code>.data, .rodata, ...</code> sections.</p>
<p>By looking at the sizes of these sections, only the <code>.data</code> section seems to have an appropriate size.
We can generate a memory trace on this section to see if we can outline some patterns.
It can be made with the following piece of code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>vm.recordMemoryAccess(MEMORY_READ_WRITE);
</span></span><span style="display:flex;"><span>vm.addMemRangeCB(
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* .data start address           */</span> base_address <span style="color:#666">+</span> <span style="color:#666">0x127000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* .data end address             */</span> base_address <span style="color:#666">+</span> <span style="color:#666">0x127000</span> <span style="color:#666">+</span> <span style="color:#666">0x8e000</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* Record both: reads and writes */</span> MEMORY_READ_WRITE,
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic">/* Memory callback */</span>
</span></span><span style="display:flex;"><span>    [] (VM<span style="color:#666">*</span> vm, GPRState<span style="color:#666">*</span>, FPRState<span style="color:#666">*</span>, <span style="color:#b00040">void</span><span style="color:#666">*</span> data) {
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">auto</span> ctx <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>qbdi_ctx<span style="color:#666">*&gt;</span>(data);
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">/*
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">       * &#39;for&#39; loop since on AArch64 we can have multiple reads / writes
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">       * at once. (e.g. stp x0, x1, [sp, #128])
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">       */</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">for</span> (<span style="color:#008000;font-weight:bold">const</span> MemoryAccess<span style="color:#666">&amp;</span> <span style="color:#a0a000">mem_access</span> : vm<span style="color:#666">-&gt;</span>getInstMemoryAccess()) {
</span></span><span style="display:flex;"><span>        ctx<span style="color:#666">-&gt;</span>trace<span style="color:#666">-&gt;</span>push_back({
</span></span><span style="display:flex;"><span>            mem_access.instAddress   <span style="color:#666">-</span> base_address,
</span></span><span style="display:flex;"><span>            mem_access.accessAddress <span style="color:#666">-</span> base_address,
</span></span><span style="display:flex;"><span>            mem_access.size,
</span></span><span style="display:flex;"><span>        });
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>    }, <span style="color:#666">&amp;</span>ctx);
</span></span></code></pre></div><div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  Generating the memory trace takes about 11sec which is acceptable.
</div>
<p>It leads to the following graph in which we can notice a characteristic pattern at the end of the trace:</p>
<p><img src="memory_trace.png" alt="Memory trace generated with QBDI"></p>
<h2 id="fault-injection">Fault Injection</h2>
<p>The pattern at the end of the trace is quite characteristic of AES-128 where we can identify 10 rounds.
<img src="rounds.png" alt="AES rounds"></p>
<p>We now have all the necessary information to make a <em>fault injection attack</em>:</p>
<ol>
<li>We can identify the 9th round</li>
<li>We can <strong>accurately</strong> fault the <code>.data</code> section thanks to the memory trace</li>
</ol>
<p><img src="injection.png" alt="Fault injection in the 9th round"></p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  The memory trace is available in the <a href="https://github.com/romainthomas/r2pay/blob/master/assets/mem_trace.json"><i class="fab fa-github"></i> mem_trace.json</a> file of the repository.
</div>
<p>To efficiently make
the injection, we can first reduce the memory addresses to only keep those that are used in the last 2 rounds:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>trace_file <span style="color:#666">=</span> CWD <span style="color:#666">/</span> <span style="color:#ba2121">&#34;..&#34;</span> <span style="color:#666">/</span> <span style="color:#ba2121">&#34;assets&#34;</span> <span style="color:#666">/</span> <span style="color:#ba2121">&#34;mem_trace.json&#34;</span>
</span></span><span style="display:flex;"><span>trace <span style="color:#666">=</span> json<span style="color:#666">.</span>loads(trace_file<span style="color:#666">.</span>read_bytes())[<span style="color:#666">0</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Keep the entries that are involved in the last 2-rounds (empirical number)</span>
</span></span><span style="display:flex;"><span>nice_trace <span style="color:#666">=</span> trace[<span style="color:#666">-</span><span style="color:#666">1000</span>:]
</span></span></code></pre></div><p>Then, we can use our shim mechanism to inject the faults in the <code>.data</code> section with the addresses previously selected.
Moreover, we can reduce the set of <code>.data</code> addresses with the faults that introduce exactly <strong>4 differences</strong> in the ciphertext:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Make sure the .data section is writable
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>mprotect(
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(base_address <span style="color:#666">+</span> <span style="color:#408080;font-style:italic">/* .data */</span> <span style="color:#666">0x127000</span>),
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x8e000</span>,
</span></span><span style="display:flex;"><span>  PROT_READ <span style="color:#666">|</span> PROT_WRITE
</span></span><span style="display:flex;"><span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> (uintptr_t <span style="color:#a0a000">fault_addr</span> : selected_addresses) {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint8_t</span><span style="color:#666">&amp;</span> target_byte <span style="color:#666">=</span> <span style="color:#666">*</span><span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">uint8_t</span><span style="color:#666">*&gt;</span>(base_address <span style="color:#666">+</span> fault_addr);
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint8_t</span> backup <span style="color:#666">=</span> target_byte;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Fault 1 byte:
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  target_byte <span style="color:#666">^=</span> <span style="color:#666">0x33</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Run the whitebox with the faulty byte
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">const</span> std<span style="color:#666">::</span>vector<span style="color:#666">&lt;</span><span style="color:#b00040">uint8_t</span><span style="color:#666">&gt;</span> encrypted <span style="color:#666">=</span> encrypt(msg);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Restore the original byte
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  target_byte <span style="color:#666">=</span> backup;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Compute the number of errors
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#408080;font-style:italic">// ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>Finally, with the subset of the addresses that affect exactly 4 bytes, we can generate several faults for a given
address:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> (uintptr_t <span style="color:#a0a000">nice_fault_addr</span> : four_bytes_fault_addresses) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; i <span style="color:#666">&lt;</span> <span style="color:#666">255</span>; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> std<span style="color:#666">::</span>vector<span style="color:#666">&lt;</span><span style="color:#b00040">uint8_t</span><span style="color:#666">&gt;&amp;</span> output <span style="color:#666">=</span> inject_fault(addr, PIN_AMOUNT, i);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">const</span> size_t nb_errors <span style="color:#666">=</span> get_error(genuine_value, output);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (nb_errors <span style="color:#666">==</span> <span style="color:#666">4</span> and unique.insert(output).second) {
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">// Record the entry ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The aforementioned code gives an idea about how to generate the faults. One can find the whole implementation in
this file: <a href="https://github.com/romainthomas/r2pay/blob/master/shim-whitebox/src/main.cpp#L343-L365">shim-whitebox/src/main.cpp</a> that produces
this set of files <a href="https://github.com/romainthomas/r2pay/blob/master/assets/wb-traces">assets/wb-traces</a>.</p>
<h2 id="key-extraction">Key Extraction</h2>
<p>Thanks to the <a href="https://github.com/SideChannelMarvels"><i class="fab fa-github"></i> Side-Channel Marvels</a> project,
we can use <a href="https://github.com/SideChannelMarvels/JeanGrey">JeanGrey</a> &mdash; developed by Philippe Teuwen &mdash; to recover the whitebox&rsquo;s key from the faulty traces:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">pathlib</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">phoenixAES</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>CWD <span style="color:#666">=</span> pathlib<span style="color:#666">.</span>Path(__file__)<span style="color:#666">.</span>parent
</span></span><span style="display:flex;"><span>trace_dir <span style="color:#666">=</span> CWD <span style="color:#666">/</span> <span style="color:#ba2121">&#34;..&#34;</span> <span style="color:#666">/</span> <span style="color:#ba2121">&#34;assets&#34;</span> <span style="color:#666">/</span> <span style="color:#ba2121">&#34;wb-traces&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> f <span style="color:#a2f;font-weight:bold">in</span> trace_dir<span style="color:#666">.</span>iterdir():
</span></span><span style="display:flex;"><span>    x <span style="color:#666">=</span> phoenixAES<span style="color:#666">.</span>crack_file(f)
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> x <span style="color:#a2f;font-weight:bold">is</span> <span style="color:#a2f;font-weight:bold">not</span> <span style="color:#008000;font-weight:bold">None</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#008000">print</span>(x, f<span style="color:#666">.</span>name)
</span></span></code></pre></div><p>It provides the following results which enable to retrieve the key:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> python wb_key_recovery.py
</span></span><span style="display:flex;"><span><span style="color:#888">..8D....7F............9A....79.. injection-1a930d.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">..8D....7F............9A....79.. injection-1a95bd.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">....19....62....B0............8F injection-1a91b2.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">....19....62....B0............8F injection-1a8fdf.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">76............1E....D3....E1.... injection-1a8549.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">......E1....A0....CD....28...... injection-1a8978.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">....19....62....B0............8F injection-1a90ce.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">....19....62....B0............8F injection-1a8efd.trace
</span></span></span><span style="display:flex;"><span><span style="color:#888">r 2 p 4 y 1 s N 0 w S e c u r 3
</span></span></span></code></pre></div><p>Finally, we can verify that <strong>r2p4y1sN0wSecur3</strong> is the right key by trying to decrypt <code>9497cdf1df2600e7f63778d0ae91dcbb</code><sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">from</span> <span style="color:#00f;font-weight:bold">Crypto.Cipher</span> <span style="color:#008000;font-weight:bold">import</span> AES
</span></span><span style="display:flex;"><span>WB_KEY <span style="color:#666">=</span> <span style="color:#ba2121">b</span><span style="color:#ba2121">&#34;r2p4y1sN0wSecur3&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>cipher <span style="color:#666">=</span> AES<span style="color:#666">.</span>new(WB_KEY, AES<span style="color:#666">.</span>MODE_ECB)
</span></span><span style="display:flex;"><span>output <span style="color:#666">=</span> cipher<span style="color:#666">.</span>decrypt(<span style="color:#008000">bytes</span><span style="color:#666">.</span>fromhex(<span style="color:#ba2121">&#34;9497cdf1df2600e7f63778d0ae91dcbb&#34;</span>))
</span></span><span style="display:flex;"><span><span style="color:#008000">print</span>(output<span style="color:#666">.</span>decode())
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> python ./aes_test.py
</span></span><span style="display:flex;"><span><span style="color:#888">0000123400004567
</span></span></span></code></pre></div><h2 id="side-note-about-the-data-section">Side note about the <code>.data</code> section</h2>
<p>Most of the obfuscators encode strings so that we don&rsquo;t have any clue about functions&rsquo; logic. The obfuscator
used in the challenge follows this rule and running the <code>strings</code> utility on the library does not reveal any interesting information.</p>
<p>Nevertheless, we can find a lot of <code>.datadiv_decode&lt;random hex&gt;</code> in the ELF constructors of the library.
As explained in the previous part, they are generated by the obfuscator and aimed to decode the strings.</p>
<p>Since these functions are in the <strong>ELF constructors</strong>, this means that they are executed as soon as the library is loaded.
In particular, when calling <code>dlopen(...)</code> these constructors are executed. It can be confirmed by
dumping the <code>.data</code> section right after <code>dlopen()</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>dlopen(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>, RTLD_NOW);
</span></span><span style="display:flex;"><span>std<span style="color:#666">::</span>ofstream ofs{fmt<span style="color:#666">::</span>format(<span style="color:#ba2121">&#34;/data/local/tmp/{}&#34;</span>, output)};
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">auto</span> start <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*&gt;</span>(base_address <span style="color:#666">+</span> <span style="color:#666">0x127000</span>);
</span></span><span style="display:flex;"><span>ofs.write(start, <span style="color:#408080;font-style:italic">/* sizeof(.data) */</span> <span style="color:#666">0x8d49f</span>);
</span></span></code></pre></div><p>Then, we can compare the bytes distribution with <a href="https://binvis.io/">binvis.io</a>:</p>
<p><img src="data_strings.png" alt="Bytes distribution in the .data section"></p>
<p>At the end of the in-memory <code>.data</code> section, we can found interesting strings used to detect Frida and the
device&rsquo;s root state.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Thanks again to <u>Eduardo Novella</u> (<a href="https://twitter.com/enovella_">@enovella_</a>)
and <u>Gautam Arvind</u> (<a href="https://twitter.com/darvincisec">@darvincisec</a>) for this second part of the challenge :)</p>
<p>Also thanks to <u><a href="https://www.quarkslab.com">Quarkslab</a></u> that allowed this publication.
One can find related blog posts about whitebox attacks on the Quarkslab&rsquo;s blog:</p>
<ul>
<li>
<p><a href="https://blog.quarkslab.com/introduction-to-whiteboxes-and-collision-based-attacks-with-qbdi.html">Introduction to Whiteboxes and Collision-Based Attacks With QBDI
</a> by Paul Hernault (<a href="https://twitter.com/0xAcid">@0xAcid</a>)</p>
</li>
<li>
<p><a href="https://blog.quarkslab.com/when-sidechannelmarvels-meet-lief.html">When SideChannelMarvels meet LIEF </a></p>
</li>
<li>
<p><a href="https://blog.quarkslab.com/differential-fault-analysis-on-white-box-aes-implementations.html">Differential Fault Analysis on White-box AES
Implementations</a> by Philippe Teuwen (<a href="https://twitter.com/doegox">@doegox</a>).
<em>I used this blog post as a reference to resolve this part of the challenge.</em></p>
</li>
</ul>
<h3 id="references">References</h3>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://developer.android.com/reference/android/content/Context">https://developer.android.com/reference/android/content/Context</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://calebfenton.github.io/2017/04/05/creating_java_vm_from_android_native_code/">https://calebfenton.github.io/2017/04/05/creating_java_vm_from_android_native_code/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>QBDI will execute the function using the <a href="https://qbdi.readthedocs.io/en/stable/api_cpp.html#execution-filtering">ExecBroker</a> mechanism.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>It is the output of the function when entering <code>1234</code> in the PIN field and <code>4567</code> in the amount field.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part2/featured.png"/></item><item><title>r2-pay: anti-debug, anti-root &amp; anti-frida (part 1)</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/</guid><description>This first blog post describes the protections in the challenge r2-pay.</description><content:encoded><![CDATA[<style>
  .green {
    color:green;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .blue {
    color: blue;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .orange {
    color: #FF6347;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .red {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-comment {
    color: #df2b04;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-keyword {
    color: #A90D91;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-literal {
    color: #1C01CE;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-preproc {
    color: #633820;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

  .hl-strings {
    color: #C41A16;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }
  .yellow {
    color: #CC7000;
    font-family: 'Fira Code', monospace;
    font-size: 87.5%;
  }

#
</style>
<h2 id="introduction">Introduction</h2>
<p>This series of blog posts explains one way to resolve the r2-pay challenge released during the <a href="https://rada.re/con/2020/">r2con2020</a> conference. This first part is about the
anti-analysis tricks used to hinder reverse-engineering while the second part will be more focused on
breaking the whitebox.</p>
<p>The resolution took me more than a week-end but it covers nice topics that worth it: <strong>obfuscation &amp; whitebox</strong>.
It was also the opportunity to practice attacks against whiteboxes
and to test <a href="https://github.com/SideChannelMarvels/JeanGrey">SideChannelMarvels/JeanGrey</a> developed by Philippe Teuwen (aka. <a href="https://twitter.com/doegox">@doegox</a>).</p>
<p>The challenge has been resolved with the AArch64 version on a device running on Android 9 and rooted with Magisk.</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    <p>Here are the files used in this write-up:</p>
<p><i class="fas fa-mobile-alt"></i> <a href="re.pwnme.1.0.apk">re.pwnme.1.0.apk - af019d3016720592aade7bde9890110c</a></p>
<p><i class="fas fa-shield-alt"></i> <a href="libnative-lib.so">libnative-lib.so (arm64-v8a version)</a></p>
  </div>
  </div>
  </div>
</div>
<h2 id="overview">Overview</h2>
<p>When opening the application on a non-tempered device (or with Magisk hide enabled), we are asked to enter
a PIN and an amount that is used to generate a <em>token</em>.</p>
<p>To resolve the challenge, we have to find the <em>master key</em> that is used to generate the token.
Few days before the CTF I was told that one of the challenges
would involve an obfuscated whitebox&hellip;</p>
<p>The main interface of the APK is located in the Java class <code>re.pwnme.MainActivity</code> which forwards the user inputs (PIN &amp; amount)
to a JNI function named <code>gXftm3iswpkVgBNDUp</code>. This function takes the concatenated input $PIN\ ||\ Amount$
and returns the token as a byte array.</p>
<p>The <strong>static constructor</strong> of the class loads the &ldquo;native-lib&rdquo; library which is available for the architectures:
<code>arm64-v8a</code>, <code>armeabi-v7a</code>, and <code>x86_64</code>. Unsurprisingly, this library is obfuscated and some symbols suggest that it has
been compiled with a fork of O-LLVM <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p><img src="mainactivity_tag.png" alt="re.pwnme.MainActivity in r2pay"></p>
<p>In addition, the library does not export the expected symbol <code>Java_re_pwnme_MainActivity_gXftm3iswpkVgBNDUp</code> but prefers
to use the <code>JNI_OnLoad</code> technique <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. <code>JNI_OnLoad()</code> is also obfuscated along with control-flow-flattening.</p>
<p>The main task of the challenge is to understand the logic of the <code>gXftm3iswpkVgBNDUp</code> function to figure out how the
<em>token</em> is generated.</p>
<h2 id="anti-root--anti-frida">Anti-Root &amp; Anti-Frida</h2>
<p>Along with the <code>libnative-lib.so</code> library, the applications embeds another library <code>libtool-checker.so</code>
whose name sounds quite familiar: it comes from the open-source project <a href="https://github.com/scottyab/rootbeer">rootbeer</a>
which is used to detect if the device is rooted.</p>
<p>Some of the root-checks are done in the MainActivity class and if the device is rooted the application raises
an exception by dividing a number with 0.</p>
<p>On this point, we can disable the check by using <a href="https://frida.re/">Frida</a> on the rootbeer&rsquo;s functions involved in the detection:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// frida -U -l ./bypass-root.js --no-pause -f re.pwnme
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>Java.perform(<span style="color:#008000;font-weight:bold">function</span> () {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">var</span> RootCheck <span style="color:#666">=</span> Java.use(<span style="color:#ba2121">&#39;\u266b.\u1d64&#39;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  RootCheck[<span style="color:#ba2121">&#39;₤&#39;</span>].implementation <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">function</span> () {
</span></span><span style="display:flex;"><span>    console.log(<span style="color:#ba2121">&#34;Skip root&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000;font-weight:bold">false</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  RootCheck[<span style="color:#ba2121">&#39;θ&#39;</span>].overload().implementation <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">function</span> () {
</span></span><span style="display:flex;"><span>    console.log(<span style="color:#ba2121">&#34;Skip root&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000;font-weight:bold">false</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>})
</span></span></code></pre></div><p>Nevertheless, the application still crashes as soon as it starts and generates the following backtrace:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>F libc    : Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xfa929095 in tid 8875 (re.pwnme), pid 8849 (re.pwnme)
</span></span><span style="display:flex;"><span>F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
</span></span><span style="display:flex;"><span>F DEBUG   : Build fingerprint: &#39;google/taimen/taimen:9/PQ3A.190801.002/5670241:user/release-keys&#39;
</span></span><span style="display:flex;"><span>F DEBUG   : Revision: &#39;rev_10&#39;
</span></span><span style="display:flex;"><span>F DEBUG   : ABI: &#39;arm64&#39;
</span></span><span style="display:flex;"><span>F DEBUG   : pid: 8849, tid: 8875, name: re.pwnme  &gt;&gt;&gt; com.google.android.gms &lt;&lt;&lt;
</span></span><span style="display:flex;"><span>F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xfa929095
</span></span><span style="display:flex;"><span>F DEBUG   :     x0  0000007f041f6610  x1  0000007f2565c800  x2  0000007f25600000  x3  000000000000001d
</span></span><span style="display:flex;"><span>F DEBUG   :     x4  000000000000005c  x5  0000000000000001  x6  0000000000000001  x7  0000000000000000
</span></span><span style="display:flex;"><span>F DEBUG   :     x8  0000007f041f6610  x9  0000007f041f6600  x10 00000000fa929095  x11 00000000000035b2
</span></span><span style="display:flex;"><span>F DEBUG   :     x12 00000000e34d79ac  x13 00000000fffffff7  x14 00000000a139577d  x15 0000000000000001
</span></span><span style="display:flex;"><span>F DEBUG   :     x16 0000007fa66af220  x17 0000007fa65e3608  x18 0000000000000000  x19 0000007f041f6680
</span></span><span style="display:flex;"><span>F DEBUG   :     x20 0000000000000000  x21 0000000000000000  x22 0000229100002291  x23 0000000000000000
</span></span><span style="display:flex;"><span>F DEBUG   :     x24 0000007f041ff570  x25 0000007f04102000  x26 0000007fab1ad5e0  x27 0000007f0421a690
</span></span><span style="display:flex;"><span>F DEBUG   :     x28 0000007f04209080  x29 0000007f041ff490
</span></span><span style="display:flex;"><span>F DEBUG   :     sp  0000007f041f65f0  lr  0000007f0423de04  pc  0000007f0423f980
</span></span><span style="display:flex;"><span>F DEBUG   :
</span></span><span style="display:flex;"><span>F DEBUG   : backtrace:
</span></span><span style="display:flex;"><span>F DEBUG   :     #00 pc 000000000003f980  /data/app/re.pwnme-7O3ynhSmMsg2_E5_uqbQxQ==/lib/arm64/libnative-lib.so
</span></span></code></pre></div><p>The backtrace suggests that other checks are performed in the native library. By looking at the ELF&rsquo;s constructors,
we can notice two functions that differ from those generated by the obfuscator:</p>
<p><img src="elf_ctor.png" alt="ELF constructors involved in the detection"></p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <code>.datadiv_decode13003153710004289592</code> functions are in the ELF constructors since they decode global strings that need to be
available as soon as the library is loaded.
</div>
<p>By tracing these functions with <a href="https://qbdi.quarkslab.com/">QBDI</a>, we quickly understand that <span class="green">sub_9080</span> iterates over
<code>/proc/self/maps</code> with the syscalls <span class="blue">openat</span>/<span class="hl-keyword">read</span>
that are located at the addresses <span class="blue">0x009870</span> and <span class="hl-keyword">0x00b448</span>.</p>
<p>Then, we observe the following sequence:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x011fb0: syscall: openat(0xffffffffffffff9c, &#39;/system/lib64/libc.so&#39;)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>0x012884: syscall: read(51, 0x7ffc006c58, 64): &#39;ELF@)@8@&#39;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>0x013170: syscall: lseek(51, 0x112918, 0)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64)
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64)
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;/ &#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;B88&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;J&gt;&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;RoP)&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;\o((&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;io&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;xo0&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64)
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;Bxx`-&#39;
</span></span><span style="display:flex;"><span>0x0145f8: syscall: read(51, 0x7ffc006c18, 64): &#39;PP`&#39;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>0x0151f4: malloc(0x18): 0x7f0c21f4c0
</span></span><span style="display:flex;"><span>0x0156e4: syscall: lseek(51, 0x1a650, 0)
</span></span><span style="display:flex;"><span>0x015a68: malloc(0x1e60): 0x7f0acb2000
</span></span><span style="display:flex;"><span>0x015fa0: syscall: read(51, 0x7f0acb2000, 0x1e60): &#39;{n@b r@ v@ z@ ~@ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ A A&#34; AB Ab A A A A &#34;A &amp;A&#34; *AB .Ab 2A 6A :A &gt;A BA FA&#34; JAB NAb RA VA ZA ^A bA fA&#34; jAB nAb rA vA zA ~A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A B B&#34; BB Bb B B B B &#34;B &amp;B&#34; *BB .Bb 2B 6B :B &gt;B BB FB&#34; JBB NBb RB VB ZB ^B bB fB&#34; jBB nBb rB vB zB ~B B B&#34; BB Bb B B B B B B&#34; B ...&#39;
</span></span><span style="display:flex;"><span>0x016cfc: free(0x7f0acb2000) -&gt; {n@b    r@ v@ z@ ~@ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ @ @&#34; @B @b @ @ @ @ A A&#34; AB Ab A A A A &#34;A &amp;A&#34; *AB .Ab 2A 6A :A &gt;A BA FA&#34; JAB NAb RA VA ZA ^A bA fA&#34; jAB nAb rA vA zA ~A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A A A&#34; AB Ab A A A A B B&#34; BB Bb B B B B &#34;B &amp;B&#34; *BB .Bb 2B 6B :B &gt;B BB FB&#34; JBB NBb RB VB ZB ^B bB fB&#34; jBB nBb rB vB zB ~B B B&#34; BB Bb B B B B B B&#34; B ...
</span></span><span style="display:flex;"><span>0x017118: syscall: close(51)
</span></span></code></pre></div><p>From this output, we can infer the following logic:</p>
<ol>
<li><code>0x011fb0</code>: the function opens the libc</li>
<li><code>0x012884</code>: it reads the ELF header</li>
<li><code>0x013170</code>: it jumps to the ELF sections table</li>
<li><code>0x0145f8</code>: it looks for the <code>.plt</code> section</li>
<li><code>0x015a68</code>, <code>0x015fa0</code>: it reads the content of the <code>.plt</code> section</li>
</ol>
<p>These operations suggest that the function checks if the <code>.plt</code> of <code>/system/lib64/libc.so</code> is not tampered with.
In particular, if we use Frida on a libc&rsquo;s function this check won&rsquo;t pass.</p>
<p>After this check, the function <span class="green">sub_9080</span> spawns a thread:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x0195dc: pthread_create(0xf1079f10, 0x0, 0x1a690, 0x0)
</span></span></code></pre></div><p>The libc integrity check makes more sense as it is probably used to protect the library against a hook of <code>pthread_create()</code>.</p>
<p>The thread&rsquo;s routine <span class="red">sub_1a690</span> starts by making two calls to the mathematical function <code>tan()</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x01b774: tan(0.): 0.
</span></span><span style="display:flex;"><span>0x01b79c: tan(-7832.0): -0.00951489
</span></span><span style="display:flex;"><span>0x01cc74: memcpy(0x7ffc006598, libnative-lib.so!0x1267f0, 80) -&gt; !7Nl
</span></span><span style="display:flex;"><span>0x01ceb8: rand()
</span></span><span style="display:flex;"><span>0x01f774: tan(0.): 0.
</span></span><span style="display:flex;"><span>0x01f79c: tan(-7832.0): -0.00951489
</span></span></code></pre></div><p>My understanding of these calls is that the application tries to protect against tools that would not support
floating-point instructions such as <code>FCMP</code> or <code>FMOV</code>. In addition, I think that if we mock the behavior of
<code>tan()</code> with a constant value it would trigger a crash.</p>
<p><img src="tan_instruction.png" alt="tan"></p>
<p>Then it follows a check of <code>TracerPid</code> value in <code>/proc/self/status</code>. This value is set when
the process is ptrace-debugged (which is the case with gdb).
Dynamically, we observe syscalls that open <code>/proc/self/status</code> and read the content
byte-per-byte:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x020ee0: syscall: openat(0xffffffffffffff9c, &#39;/proc/self/status&#39;): 51
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;N&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;a&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;m&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;e&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;:&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1)
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;r&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;e&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;.&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;p&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;w&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;n&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;m&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;e&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1)
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;S&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;t&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;a&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;t&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;e&#39;
</span></span><span style="display:flex;"><span>0x0231e8: syscall: read(51, 0x7ffc00656c, 1): &#39;:&#39;
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><h2 id="anti-frida-1">Anti-Frida #1</h2>
<p>Still in the thread&rsquo;s routine <span class="red">sub_1a690</span>, the function checks if Frida is running by looking
at all the values of <code>/proc/self/task/&lt;tid&gt;/status</code> and by checking if one of the names is <span class="red"><b><u>gmain</u></b></span>.
It turns out that it&rsquo;s the case when Frida is used in the application :-)</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x0368e4: snprintf(&#39;/proc/self/task/9719/status&#39;, &#39;/proc/self/task/%s/status&#39;): &#39;/proc/self/task/9719/status&#39;
</span></span><span style="display:flex;"><span>0x036a1c: syscall: openat(0xffffffffffffff9c, &#39;/proc/self/task/9719/status&#39;)
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;N&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;a&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;m&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;e&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;:&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1)
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;g&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;m&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;a&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;i&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1): &#39;n&#39;
</span></span><span style="display:flex;"><span>0x03897c: syscall: read(73, 0x7ffc400af4, 1)
</span></span><span style="display:flex;"><span>0x03897c: closedir()
</span></span><span style="display:flex;"><span># Crash!
</span></span></code></pre></div><p>To bypass this check, one can statically patch the syscall or we can dynamically
change the behavior of <code>snprintf(..., '/proc/self/task/%s/status')</code> in order to <strong>always</strong> returns the same status (e.g. <code>/proc/self/task/123/status</code>).
Concretely, it could be done by hooking <code>snprintf</code> and by forcing the <em>output</em> string to <code>/proc/self/task/123/status</code>.</p>
<h2 id="anti-frida-2">Anti-Frida #2</h2>
<p>Still in the <span class="red">sub_1a690</span> function, the anti-frida checks continue by inspecting the file descriptors
of the process. It iterates over <code>/proc/self/fd/%s</code> and looks at the underlying symlink.</p>
<p>Frida <span class="blue">server</span> &mdash; which is running globally on the device &mdash; and Frida agent &mdash; which is injected in the
process &mdash; communicate with named pipes that are associated with a file descriptor.</p>
<p>If Frida server is running, we can observe the following values:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x04308c: lstat(&#39;/proc/self/fd/32&#39;)
</span></span><span style="display:flex;"><span>0x043448: syscall: readlinkat(0xffffffffffffff9c, &#39;/proc/self/fd/32&#39;, 0x7ffbffdc10, 256): &#39;anon_inode:[eventfd]&#39;
</span></span><span style="display:flex;"><span>0x041844: readdir(&#39;33&#39;)
</span></span><span style="display:flex;"><span>0x043078: snprintf(&#39;/proc/self/fd/33&#39;, &#39;/proc/self/fd/%s&#39;): &#39;/proc/self/fd/33&#39;
</span></span><span style="display:flex;"><span>0x04308c: lstat(&#39;/proc/self/fd/33&#39;)
</span></span><span style="display:flex;"><span>0x043448: syscall: readlinkat(0xffffffffffffff9c, &#39;/proc/self/fd/33&#39;, 0x7ffbffdc10, 256): &#39;anon_inode:[eventfd]&#39;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>0x041844: readdir(&#39;34&#39;)
</span></span><span style="display:flex;"><span>0x043078: snprintf(&#39;/proc/self/fd/34&#39;, &#39;/proc/self/fd/%s&#39;): &#39;/proc/self/fd/34&#39;
</span></span><span style="display:flex;"><span>0x04308c: lstat(&#39;/proc/self/fd/34&#39;)
</span></span><span style="display:flex;"><span>0x043448: syscall: readlinkat(0xffffffffffffff9c, &#39;/proc/self/fd/34&#39;, 0x7ffbffdc10, 256): &#39;/data/local/tmp/re.frida.server/linjector-500&#39;
</span></span><span style="display:flex;"><span># Crash!
</span></span></code></pre></div><p>In this case, the file descriptor <code>34</code> is associated with <code>/data/local/tmp/re.frida.server/linjector-500</code>
which triggers the detection and the application crashes.</p>
<p>As for <code>/proc/self/task/&lt;tid&gt;/status</code>, one can disable this check by <strong>statically patching</strong> the syscalls or
by <strong>dynamically changing</strong> the result of <code>readlinkat()</code>. For instance, we can use <a href="https://qbdi.quarkslab.com/">QBDI</a> to
instrument syscall instructions and process the result of <code>readlinkat()</code> in an user callback:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>vm.addMnemonicCB(<span style="color:#ba2121">&#34;SVC&#34;</span>, POST_INST,
</span></span><span style="display:flex;"><span>  [] (VMInstanceRef vm, GPRState<span style="color:#666">*</span> gprState, FPRState<span style="color:#666">*</span>, <span style="color:#b00040">void</span><span style="color:#666">*</span> data) {
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (gprState<span style="color:#666">-&gt;</span>x8 <span style="color:#666">!=</span> __NR_readlinkat) {
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>string buf <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">char</span><span style="color:#666">*&gt;</span>(gprState<span style="color:#666">-&gt;</span>x2);
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (buf.find(<span style="color:#ba2121">&#34;re.frida.server&#34;</span>) <span style="color:#666">!=</span> std<span style="color:#666">::</span>string<span style="color:#666">::</span>npos) {
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">const</span> std<span style="color:#666">::</span>string FAKE_VALUE <span style="color:#666">=</span> <span style="color:#ba2121">&#34;anon_inode:[eventfd]&#34;</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#408080;font-style:italic">// Bypass Frida detection!
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>      memcpy(
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(gprState<span style="color:#666">-&gt;</span>x2),
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">*&gt;</span>(FAKE_VALUE.c_str()),
</span></span><span style="display:flex;"><span>        FAKE_VALUE.size() <span style="color:#666">+</span> <span style="color:#666">1</span>
</span></span><span style="display:flex;"><span>      );
</span></span><span style="display:flex;"><span>      gprState<span style="color:#666">-&gt;</span>x0 <span style="color:#666">=</span> FAKE_VALUE.size() <span style="color:#666">+</span> <span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  }, ctx);
</span></span></code></pre></div><h2 id="anti-frida-3-">Anti-Frida #3 ?</h2>
<p>I&rsquo;m not sure if the following calls sequence is used to check the libc&rsquo;s integrity against Frida but
at the end of the thread&rsquo;s routine, we can observe these syscalls:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x048ff0: syscall: openat(0xffffffffffffff9c, &#39;/proc/self/maps&#39;): 51
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;1&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;2&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;c&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;0&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;0&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;0&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;0&#39;
</span></span><span style="display:flex;"><span>0x04ae6c: syscall: read(51, 0x7ffc006578, 1): &#39;0&#39;
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>0x0513f8: sscanf(&#39;7fa65c0000-7fa65dc000 r-xp 00000000 08:07 1275/system/lib64/libc.so&#39;, &#39;%lx-%lx %s %s %s %s %s&#39;)
</span></span><span style="display:flex;"><span>0x056034: syscall: close(51)
</span></span></code></pre></div><p>The result of <code>sscanf()</code> could be used to check the page permissions (e.g. <code>r</code><span class="blue">w</span><code>xp</code>)
or to the libc&rsquo;s base address (to check if it is consistent).</p>
<h2 id="anti-root">Anti-Root</h2>
<p>In addition to the root-beer detection, the library embeds another root detection located in the <strong>second</strong> ELF constructor.
This constructor &mdash; <span class="yellow">sub_77D14</span> &mdash; performs the same early checks as the first constructor
on the libc&rsquo;s <code>.plt</code> integrity before spawning another thread routine, <span class="yellow">sub_98c00</span>.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x08861c: pthread_create(0xfa780b70, 0x0, 0x98c00, 0x0)
</span></span></code></pre></div><p><img src="ctor_pthread.png" alt="ELF constructors: anti-frida and anti-root"></p>
<p>By tracing the thread&rsquo;s routine, we notice that it checks if <code>su</code> files are present on the device through
three different calls:</p>
<ol>
<li>One call to <code>open()</code>: <span class="hl-literal">0x099180: open(<span class="hl-strings">&rsquo;/system/xbin/su&rsquo;</span>)</span></li>
<li>One syscall to <code>openat()</code>: <span class="hl-literal">0x0992a4: syscall: openat(&hellip;, <span class="hl-strings">&rsquo;/data/su&rsquo;</span>)</span></li>
<li>One syscall to <code>faccessat()</code>: <span class="hl-literal">0x0993f0: syscall: faccessat(<span class="hl-strings">&rsquo;/sbin/su&rsquo;</span>)</span></li>
</ol>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x099180: open(&#39;/data/local/su&#39;): -1
</span></span><span style="display:flex;"><span>0x0992a4: syscall: openat(0xffffffffffffff9c, &#39;/data/local/su&#39;): -2
</span></span><span style="display:flex;"><span>0x0993f0: syscall: faccessat(&#39;/data/local/su&#39;): -2
</span></span><span style="display:flex;"><span>0x099180: open(&#39;/data/local/bin/su&#39;): -1
</span></span><span style="display:flex;"><span>0x0992a4: syscall: openat(0xffffffffffffff9c, &#39;/data/local/bin/su&#39;): -2
</span></span><span style="display:flex;"><span>0x0993f0: syscall: faccessat(&#39;/data/local/bin/su&#39;): -2
</span></span><span style="display:flex;"><span>0x099180: open(&#39;/data/local/xbin/su&#39;): -1
</span></span><span style="display:flex;"><span>0x0992a4: syscall: openat(0xffffffffffffff9c, &#39;/data/local/xbin/su&#39;): -2
</span></span><span style="display:flex;"><span>0x0993f0: syscall: faccessat(&#39;/data/local/xbin/su&#39;): -2
</span></span><span style="display:flex;"><span>0x099180: open(&#39;/sbin/su&#39;): 51
</span></span><span style="display:flex;"><span>0x0992a4: syscall: openat(0xffffffffffffff9c, &#39;/sbin/su&#39;): 52
</span></span><span style="display:flex;"><span>0x0993f0: syscall: faccessat(&#39;/sbin/su&#39;): 52
</span></span><span style="display:flex;"><span>Crash!
</span></span></code></pre></div><p>By forcing the results of these functions to <code>-1</code> or <code>-2</code>, we can disable the checks.</p>
<p>Here is the list of the su-files that are used in this detection:</p>
<ul>
<li><span class="hl-strings">/data/local/su</span></li>
<li><span class="hl-strings">/data/local/bin/su</span></li>
<li><span class="hl-strings">/data/local/xbin/su</span></li>
<li><span class="hl-strings">/sbin/su</span></li>
<li><span class="hl-strings">/su/bin/su</span></li>
<li><span class="hl-strings">/system/bin/su</span></li>
<li><span class="hl-strings">/system/bin/.ext/su</span></li>
<li><span class="hl-strings">/system/bin/failsafe/su</span></li>
<li><span class="hl-strings">/system/sd/xbin/su</span></li>
<li><span class="hl-strings">/system/usr/we-need-root/su</span></li>
<li><span class="hl-strings">/system/xbin/su</span></li>
<li><span class="hl-strings">/cache/su</span></li>
<li><span class="hl-strings">/data/su</span></li>
<li><span class="hl-strings">/dev/su</span></li>
</ul>
<p>At the end of the thread&rsquo;s routine, we can also observe the following calls that
are probably used to check if the application is running on a real Android system.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/system&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/system/bin&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/system/sbin&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/system/xbin&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/vendor/bin&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/sbin&#39;)
</span></span><span style="display:flex;"><span>0x099e30: syscall: faccessat(&#39;/etc&#39;)
</span></span></code></pre></div><h2 id="static-bypass-with-lief">Static bypass with LIEF</h2>
<p>In the previous sections, we described the anti-root, anti-debug and anti-frida checks
made in the ELF constructors. The <strong>same</strong> dynamic checks are also performed in the <code>gXftm3iswpkVgBNDUp</code> function
at the following locations:</p>
<ul>
<li><span class="hl-keyword">0x09f2f8</span>: <span class="hl-literal">/proc/self/status</span></li>
<li><span class="hl-keyword">0x0d4840</span>: <span class="hl-literal">/proc/self/fd/</span></li>
<li><span class="hl-keyword">0x0dec8c</span>: <span class="hl-literal">/proc/self/task/&lt;tid&gt;/status</span></li>
</ul>
<p>While the checks in <code>gXftm3iswpkVgBNDUp</code> can be dynamically disabled when instrumenting the function,
the checks in the ELF constructors are annoying.</p>
<p>One way to disable the checks in the thread&rsquo;s routines is to disable the <code>pthread_create(...)</code>. It can
be achieved by patching the <code>.plt</code> entry associated with the function:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-armasm" data-lang="armasm"><span style="display:flex;"><span>mov <span style="color:#00f;font-weight:bold">x0</span>, <span style="">xzr</span><span style="color:#408080;font-style:italic">;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>ret<span style="color:#408080;font-style:italic">;
</span></span></span></code></pre></div><p>Thanks to <code>llvm-mc</code>, we can get the raw bytes of these instructions:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> <span style="color:#008000">echo</span> <span style="color:#ba2121">&#34;mov x0, xzr;ret;&#34;</span>|llvm-mc -arch<span style="color:#666">=</span>aarch64 -show-encoding
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">.text
</span></span></span><span style="display:flex;"><span><span style="color:#888">mov     x0, xzr                 // encoding: [0xe0,0x03,0x1f,0xaa]
</span></span></span><span style="display:flex;"><span><span style="color:#888">ret                             // encoding: [0xc0,0x03,0x5f,0xd6]
</span></span></span></code></pre></div><p>Finally, we can patch the <code>.plt</code> with <a href="https://lief.quarkslab.com">LIEF</a>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>lib <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;./libnative-lib.so&#34;</span>)
</span></span><span style="display:flex;"><span>lib<span style="color:#666">.</span>patch_address(<span style="color:#666">0x5870</span>, [<span style="color:#666">0xe0</span>,<span style="color:#666">0x03</span>,<span style="color:#666">0x1f</span>,<span style="color:#666">0xaa</span>])
</span></span><span style="display:flex;"><span>lib<span style="color:#666">.</span>patch_address(<span style="color:#666">0x5874</span>, [<span style="color:#666">0xc0</span>,<span style="color:#666">0x03</span>,<span style="color:#666">0x5f</span>,<span style="color:#666">0xd6</span>])
</span></span><span style="display:flex;"><span>lib<span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;./libnative-lib-patched.so&#34;</span>)
</span></span></code></pre></div><p><img src="patching.png" alt="pthread_create patches"></p>
<p>Using these patches and the Frida script exposed in the first section, we are able to <strong>load</strong> the application but the other
detections are triggered in <code>gXftm3iswpkVgBNDUp</code>. Nevertheless, with
the Frida&rsquo;s stalker or QBDI we can trace the instructions and disable the other checks.</p>
<p>If one wants to completely bypass all the protections statically, here are the patches:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>lib <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;./libnative-lib.so&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Keys are str objects for a better understanding :)</span>
</span></span><span style="display:flex;"><span>INST <span style="color:#666">=</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#ba2121">&#34;mov x0, #0&#34;</span>:  [<span style="color:#666">0xe0</span>, <span style="color:#666">0x03</span>, <span style="color:#666">0x1f</span>, <span style="color:#666">0xaa</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#ba2121">&#34;ret&#34;</span>:         [<span style="color:#666">0xc0</span>, <span style="color:#666">0x03</span>, <span style="color:#666">0x5f</span>, <span style="color:#666">0xd6</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#ba2121">&#34;nop&#34;</span>:         [<span style="color:#666">0x1f</span>, <span style="color:#666">0x20</span>, <span style="color:#666">0x03</span>, <span style="color:#666">0xd5</span>],
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>PATCHES <span style="color:#666">=</span> [
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># Patch the .plt entry of pthread_create</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#666">0x5870</span>, INST[<span style="color:#ba2121">&#34;mov x0, #0&#34;</span>]),
</span></span><span style="display:flex;"><span>    (<span style="color:#666">0x5874</span>, INST[<span style="color:#ba2121">&#34;ret&#34;</span>]),
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># Disable anti-frida checks</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#666">0x0d718c</span>, INST[<span style="color:#ba2121">&#34;mov x0, #0&#34;</span>]), <span style="color:#408080;font-style:italic"># /proc/self/fd : patch the result of readlinkat syscall</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#666">0x0e1940</span>, INST[<span style="color:#ba2121">&#34;mov x0, #0&#34;</span>]), <span style="color:#408080;font-style:italic"># /proc/self/task/&lt;tid&gt;/status: patch the result of read syscall</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># Disable .text integrity checks</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#666">0xB64D0</span>, INST[<span style="color:#ba2121">&#34;nop&#34;</span>]),
</span></span><span style="display:flex;"><span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> patch <span style="color:#a2f;font-weight:bold">in</span> PATCHES:
</span></span><span style="display:flex;"><span>    lib<span style="color:#666">.</span>patch_address(<span style="color:#666">*</span>patch)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>lib<span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>)
</span></span></code></pre></div><p>When writing this write-up, I realized that patching the syscalls involved in the anti-frida (<span class="hl-literal">/proc/self/fd/</span> and <span class="hl-literal">/proc/self/task/&lt;tid&gt;/status</span>)
makes the application crash.</p>
<p>It turns out that the library seems to implement <strong>code integrity on the <code>.text</code> section</strong> that I didn&rsquo;t notice when running
the function through QBDI.
Nevertheless, by tracing the basic block<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>
we can identify the basic block involved in the integrity check and patch it.</p>
<p><img src="code_integrity.png" alt="Code integrity patches"></p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  The scripts and the patched library are available <a href="https://github.com/romainthomas/r2pay">here <i class="fab fa-github"></i></a>.
</div>
<p>Regarding <code>JNI_OnLoad()</code>, a trace generated with <a href="https://github.com/QBDI/examples/blob/d589d28b237f46d16cab3b11aa36bbb51102e307/packer-android-x86/src/libshellx_qbdi.cpp#L18-L85">QBDI&rsquo;s ExecBroker</a>
leads to following result:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>JNI_OnLoad() {
</span></span><span style="display:flex;"><span>    <span style="color:#666">0x09af3c</span><span style="color:#666">:</span> GetEnv(<span style="color:#666">0x7fcb507460</span>, <span style="color:#666">0x10006</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#666">0x09b0ac</span><span style="color:#666">:</span> FindClass(<span style="color:#ba2121">&#34;re/pwnme/MainActivity&#34;</span>)<span style="color:#666">:</span> <span style="color:#666">537</span>
</span></span><span style="display:flex;"><span>    <span style="color:#666">0x09b1b4</span><span style="color:#666">:</span> RegisterNatives()
</span></span><span style="display:flex;"><span>        gXftm3iswpkVgBNDUp ([BB)[B <span style="color:#666">-&gt;</span> <span style="color:#ba2121">&#34;libnative-lib.so@0x9b41c&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Then, we can extract the function&rsquo;s offset: <span class="blue">gXftm3iswpkVgBNDUp</span>: <span class="red">0x9b41c</span>.</p>
<h2 id="summary--conclusion">Summary &amp; Conclusion</h2>
<p>Whilst Frida detections are usually based on sockets and library names in <code>/proc/self/maps</code>,
this challenge introduces two detections based on named pipes:<code>/proc/self/fd</code> and thread status: <code>/proc/self/task/&lt;tid&gt;/status</code>
which are pretty cool :-)</p>
<p>These checks are performed in two locations:</p>
<ol>
<li>The ELF constructors</li>
<li>The function <code>gXftm3iswpkVgBNDUp()</code></li>
</ol>
<p>The implementation in the ELF constructors might be tricky to analyse since the functions are called before <strong>any</strong>
other classical functions (which includes <code>JNI_OnLoad()</code>). Nevertheless, thanks to the interface of the ELF loader,
it exposes the function <code>call_array(...)</code><sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> which is handy to process the ELF constructors.</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  This function is mangled as <code>__dl__ZL10call_arrayIPFviPPcS1_EEvPKcPT_mbS5_</code> in <code>/system/bin/linker64</code>
</div>
<p><img src="protection_overview.png" alt="Overview of the anti-root and anti-frida"></p>
<p>Since QBDI is not detected in this challenge, it&rsquo;s a good opportunity to give it a try:</p>
<center>
<p>
<i class="fab fa-github"></i> <a href="https://github.com/QBDI/QBDI">https://github.com/QBDI/QBDI</a>
</p>
</center>
<h2 id="acknowledgments">Acknowledgments</h2>
<p>Thanks to <u>Eduardo Novella</u> (<a href="https://twitter.com/enovella_">@enovella_</a>)
and <u>Gautam Arvind</u> (<a href="https://twitter.com/darvincisec">@darvincisec</a>) for this interesting and realistic challenge they created!</p>
<p>Also thanks to <u><a href="https://www.quarkslab.com">Quarkslab</a></u> that allowed this publication.
For those who are interested in similar topics, you can take a look at the Quarkslab&rsquo;s <a href="https://blog.quarkslab.com/">blog</a>.</p>
<h3 id="references">References</h3>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://github.com/GoSSIP-SJTU/Armariris">GoSSIP-SJTU/Armariris</a> - <a href="https://github.com/GoSSIP-SJTU/Armariris/blob/0cba41329244a29c7cb94e25458191b68967b6e8/lib/Transforms/Obfuscation/StringObfuscation.cpp#L140"><code>StringObfuscation.cpp#L140</code></a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://developer.android.com/training/articles/perf-jni#native-libraries">https://developer.android.com/training/articles/perf-jni#native-libraries</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://github.com/QBDI/QBDI/blob/a20653f07df3ae78250e7ecf28ed699b2d727027/include/QBDI/VM.h#L296-L305"><code>addVMEventCB(VMEvent::BASIC_BLOCK_ENTRY, ...);</code></a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://android.googlesource.com/platform/bionic/+/refs/tags/android-9.0.0_r60/linker/linker_soinfo.cpp#420"><code>linker/linker_soinfo.cpp:420</code></a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/20-09-r2con-obfuscated-whitebox-part1/featured.png"/></item><item><title>A Glimpse Into Tencent's Legu Packer</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/</guid><description>Analysis of Tencent Legu: a packer for Android applications.</description><content:encoded><![CDATA[<style>
  .packedfile {
    color:green;
    font-family: 'Lucida Console', monospace;
  }
  .keyfile {
    color: blue;
    font-family: 'Lucida Console', monospace;
  }
  .libshell {
    color: #FF6347;
    font-family: 'Lucida Console', monospace;
  }
  .tencentclass {
    color: #df2b04;
    font-family: 'Lucida Console', monospace;
  }
</style>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href=https://blog.quarkslab.com/a-glimpse-into-tencents-legu-packer.html>Quarkslab&rsquo;s Blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<h2 id="introduction">Introduction</h2>
<p>This blog post deals with the Legu packer, an Android protector developed by Tencent that is currently one of the
state-of-the-art solutions to protect APK DEX files. The packer is updated frequently and this blog post focuses on
versions <code>4.1.0.15</code> and <code>4.1.0.18</code>.</p>
<h2 id="overview">Overview</h2>
<p>An application protected with Legu is composed of two native libraries: <span class="libshell">libshell-super.2019.so</span>
and <code>libshella-4.1.0.XY.so</code> as well as raw binary files embedded in the resources of the APK:</p>
<ul>
<li><span class="keyfile">tosversion</span></li>
<li><span class="packedfile">0OO00l111l1l</span></li>
<li><code>0OO00oo01l1l</code></li>
<li><code>o0oooOO0ooOo.dat</code></li>
</ul>
<p>The main logic of the packer is located in the native library <span class="libshell">libshell-super.2019.so</span> which basically
unpacks and loads the protected DEX files from the resources.</p>
<p>Some functions of the library are obfuscated but thanks to Frida/QBDI their analysis is not a big deal.</p>
<h2 id="internals">Internals</h2>
<p>Basically, the original DEX files are located in the <span class="packedfile">assets/0OO00l111l1l</span> file along with the information required to
unpack them.</p>
<p>The following figure lays out the structure of this file.</p>
<p><img src="packed_file.png" alt=""></p>
<p>In the <span class="packedfile">assets/0OO00l111l1l</span> file, the first part contains the original DEX files with the same number of <code>classes&lt;N&gt;.dex</code> according to the multi-DEX feature of the original APK. These
DEX files are not exactly the original ones, as their Dalvik bytecode have been <em>NOP-ed</em> by Legu.
Therefore, a dump of these files only gives information about the classes&rsquo; names, not the code logic:</p>
<p><img src="noped.png" alt=""></p>
<p>Then follows what we called a <em>hashmap</em> that is used to link a class name (e.g. <span class="tencentclass">Lcom/tencent/mmkv/MMKV;</span>) to an offset in
the data block located in the third part of the file.
This data block contains the original Dalvik bytecode of the methods.</p>
<p>Actually, the first part that contains the altered DEX files, is compressed with <strong>NRV</strong> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.
The second part — the hashmap — is also compressed with NRV but the packer adds a layer of
encryption through a slightly modified version of <strong>XTEA</strong> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Finally, the last part is compressed and encrypted with the
same algorithms as the previous one.</p>
<p>Regarding the <em>hashmap</em>, it uses a custom structure that has been reversed and lead to a Kaitai structure available
here: <a href="https://github.com/quarkslab/legu_unpacker_2019/blob/master/legu_packed_file.ksy">legu_packed_file.ksy</a>, <a href="https://github.com/quarkslab/legu_unpacker_2019/blob/master/legu_hashmap.ksy">legu_hashmap.ksy</a></p>
<p>Its overall layout is exposed in the next figure:</p>
<p><img src="hashmap.png" alt=""></p>
<h2 id="unpacking-process">Unpacking process</h2>
<p>Let&rsquo;s say that the application needs to use the packed Java class <span class="tencentclass">Lcom/tencent/mmkv/MMKV;</span>.</p>
<p>First, the packer&rsquo;s runtime transforms the class name into an integer with the <code>dvmComputeUtf8Hash()</code> hash function <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>. This integer is then used
as an index into the <em>hashmap</em> whose value is a structure that contains information about the class in the packed data (blue area in
the figure). The first attribute of this structure — <code>utf8_hash</code> — is a copy of the hash value which is used to check that it is the right key/value association.</p>
<p>The <code>class_info</code> structure (blue block in the figure) next contains the packed method information (yellow area in the figure) whose size is the same as the original number of
methods in the class. This structure makes the relationship between the NOP-ed bytecode offset in the altered DEX
files and the offset in the original bytecode (red block).
Finally, the packer copies the original bytecode into the altered DEX files.</p>
<p>To summarize, the first part contains the original DEX files with the Dalvik bytecode removed (<em>NOP-ed</em>).
The last part contains the missing Dalvik bytecode and the second part makes the
bridge between the altered DEX files and the Dalvik bytecode.</p>
<h1 id="compression--encryption">Compression &amp; Encryption</h1>
<p>To decrypt the hashmap and the Dalvik bytecode, the packer uses the first 16 bytes of <span class="keyfile">assets/tosversion</span>
xored with a hard-coded key: <code>^hHc7Ql]N9Z4:+1m~nTcA&amp;3a7|?GB1z@</code>.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>LIB_KEY <span style="color:#666">=</span> <span style="color:#ba2121">b</span><span style="color:#ba2121">&#34;^hHc7Ql]N9Z4:+1m~nTcA&amp;3a7|?GB1z@&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">key_derivation</span>(key: <span style="color:#008000">bytes</span>) <span style="color:#666">-&gt;</span> <span style="color:#008000">bytes</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000">bytes</span>(x1 <span style="color:#666">^</span> x2 <span style="color:#008000;font-weight:bold">for</span> x1, x2 <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">zip</span>(LIB_KEY, cycle(key)))
</span></span></code></pre></div><p>Then, it uses a slightly modified version of XTEA that is given in the next listing:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">xtea_decrypt</span>(<span style="color:#b00040">uint32_t</span><span style="color:#666">*</span> key, <span style="color:#b00040">uint32_t</span><span style="color:#666">*</span> buf, size_t ilen, size_t nb_round) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> size_t count <span style="color:#666">=</span> ilen <span style="color:#666">/</span> <span style="color:#666">8</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> size_t key_off <span style="color:#666">=</span> (ilen <span style="color:#666">&amp;</span> <span style="color:#666">8</span>) <span style="color:#666">/</span> <span style="color:#666">4</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> <span style="color:#b00040">uint32_t</span> DELTA <span style="color:#666">=</span> <span style="color:#666">0x9e3779b9</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">uint32_t</span> key_0 <span style="color:#666">=</span> key[key_off <span style="color:#666">+</span> <span style="color:#666">0</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">uint32_t</span> key_1 <span style="color:#666">=</span> key[key_off <span style="color:#666">+</span> <span style="color:#666">1</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; i <span style="color:#666">&lt;</span> count <span style="color:#666">*</span> <span style="color:#666">2</span>; i <span style="color:#666">+=</span> <span style="color:#666">2</span>) {
</span></span><span style="display:flex;"><span>    buf[i <span style="color:#666">+</span> <span style="color:#666">0</span>] <span style="color:#666">^=</span> key_0;
</span></span><span style="display:flex;"><span>    buf[i <span style="color:#666">+</span> <span style="color:#666">1</span>] <span style="color:#666">^=</span> key_1;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#b00040">uint32_t</span> sum <span style="color:#666">=</span> DELTA <span style="color:#666">*</span> nb_round;
</span></span><span style="display:flex;"><span>    <span style="color:#b00040">uint32_t</span> temp0 <span style="color:#666">=</span> buf[i <span style="color:#666">+</span> <span style="color:#666">0</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#b00040">uint32_t</span> temp1 <span style="color:#666">=</span> buf[i <span style="color:#666">+</span> <span style="color:#666">1</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> (size_t j <span style="color:#666">=</span> <span style="color:#666">0</span>; j <span style="color:#666">&lt;</span> nb_round; <span style="color:#666">++</span>j) {
</span></span><span style="display:flex;"><span>      temp1 <span style="color:#666">-=</span> (key[<span style="color:#666">2</span>] <span style="color:#666">+</span> (temp0 <span style="color:#666">&lt;&lt;</span> <span style="color:#666">4</span>)) <span style="color:#666">^</span> (key[<span style="color:#666">3</span>] <span style="color:#666">+</span> (temp0 <span style="color:#666">&gt;&gt;</span> <span style="color:#666">5</span>)) <span style="color:#666">^</span> (temp0 <span style="color:#666">+</span> sum);
</span></span><span style="display:flex;"><span>      temp0 <span style="color:#666">-=</span> (key[<span style="color:#666">0</span>] <span style="color:#666">+</span> (temp1 <span style="color:#666">&lt;&lt;</span> <span style="color:#666">4</span>)) <span style="color:#666">^</span> (key[<span style="color:#666">1</span>] <span style="color:#666">+</span> (temp1 <span style="color:#666">&gt;&gt;</span> <span style="color:#666">5</span>)) <span style="color:#666">^</span> (temp1 <span style="color:#666">+</span> sum);
</span></span><span style="display:flex;"><span>      sum <span style="color:#666">-=</span> DELTA;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    buf[i <span style="color:#666">+</span> <span style="color:#666">0</span>] <span style="color:#666">=</span> temp0;
</span></span><span style="display:flex;"><span>    buf[i <span style="color:#666">+</span> <span style="color:#666">1</span>] <span style="color:#666">=</span> temp1;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>After the decryption routine, the packer decompresses the data with <code>NRV</code>, the same algorithm used to compress the altered DEX
files:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>key <span style="color:#666">=</span> key_derivation(<span style="color:#008000">open</span>(<span style="color:#ba2121">&#34;assets/tosversion&#34;</span>, <span style="color:#ba2121">&#34;rb&#34;</span>)<span style="color:#666">.</span>read()[:<span style="color:#666">16</span>])
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(nb_dex_files):
</span></span><span style="display:flex;"><span>  hashmap[i]          <span style="color:#666">=</span> nrv_decompress(xtea_decrypt(blob1, key))
</span></span><span style="display:flex;"><span>  dalvik_bytecodes[i] <span style="color:#666">=</span> nrv_decompress(xtea_decrypt(blob2, key))
</span></span></code></pre></div><h2 id="unpacking">Unpacking</h2>
<p>Putting all the pieces together, we can <strong>statically</strong> unpack protected APKs and recover the original bytecode:</p>
<p><img src="unpacked.png" alt=""></p>
<p>Hence, as we can automatically unpack such APKs, the unpacking process could be integrated into an automatic analysis pipeline.</p>
<p>The script and the Kaitai structures are available on the Quarkslab&rsquo;s repository: <a href="https://github.com/quarkslab/legu_unpacker_2019">legu_unpacker_2019</a>,
along with a suspicious application <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>, <a href="https://github.com/quarkslab/legu_unpacker_2019/blob/master/samples/com.intotherain.voicechange.apk">packed</a> and <a href="https://github.com/quarkslab/legu_unpacker_2019/blob/master/samples/com.intotherain.voicechange_unpacked.apk">unpacked</a>.</p>
<h2 id="acknowledgments">Acknowledgments</h2>
<p>Thanks to my colleagues who proofread this article.</p>
<h3 id="references">References</h3>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="http://www.oberhumer.com/opensource/ucl/">http://www.oberhumer.com/opensource/ucl/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://en.wikipedia.org/wiki/XTEA">https://en.wikipedia.org/wiki/XTEA</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="http://androidxref.com/4.4.4_r1/xref/dalvik/vm/UtfString.cpp#88">http://androidxref.com/4.4.4_r1/xref/dalvik/vm/UtfString.cpp#88</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://www.virustotal.com/gui/file/708e6967920dcf2789b7183d714e73ab79a2f8b3ca71929b12aadeb2c58c2867/detection">https://www.virustotal.com/gui/file/708e6967920dcf2789b7183d714e73ab79a2f8b3ca71929b12aadeb2c58c2867/detection</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/a-glimpse-into-tencents-legu-packer/featured.png"/></item><item><title>Android Native Library Analysis with QBDI</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/</guid><description>This blog post deals with QBDI and how it can be used to reverse an Android JNI library</description><content:encoded><![CDATA[<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href=https://blog.quarkslab.com/android-native-library-analysis-with-qbdi.html>Quarkslab&rsquo;s Blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<h2 id="introduction">Introduction</h2>
<p>During the past few months we improved the ARM support in QBDI. More precisely, we enhanced the QBDI&rsquo;s engine
to support Thumb and Thumb2 instructions as well as Neon registers.</p>
<p>Development is still in progress and we need to clean the code and add non-regression tests
compared to the x86-64 support.</p>
<p>To add Thumb and Thumb2 support, we tested the DBI against well-known obfuscators such as <a href="https://epona.quarkslab.com">Epona</a>,
<a href="https://github.com/obfuscator-llvm/obfuscator">O-LLVM</a>
or <a href="https://www.arxan.com/">Arxan</a>, as we could expect good instruction coverage, corner cases and nice use cases.
The native code came from Android JNI libraries embedded in different APKs.</p>
<p>This blog post introduces some QBDI features that could be useful to assess native code
and speedup reverse engineering.
To expose these features, we analyzed an Android SDK that aims to protect applications against API misuse.</p>
<h2 id="dynamic-instrumentation-on-android">Dynamic Instrumentation on Android</h2>
<p><a href="https://www.frida.re/">Frida</a> is one of the Android day-to-day dynamic instrumentation framework widely
used to instrument applications.
It can address both native code with inline hooking and <em>Java</em> side thanks to ART instrumentation <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p>Frida works at the function level and in some cases we may need to have a finer granularity
at the basic-block level or at the instruction level (i.e. have <em>hooks</em> on instructions)</p>
<p>To address this limitation, one trick commonly used is to combine hooking with emulation.
One can use Frida to hook the function that we are interested in, then we can dump the CPU context
and the memory state of the process and eventually continue the execution through an emulator like <a href="https://miasm.re/blog/">Miasm</a>
or <a href="https://www.unicorn-engine.org/">Unicorn</a></p>
<p>This approach works pretty well but has a few limitations:</p>
<ul>
<li><strong>Speed</strong>: For large sets of functions.</li>
<li><strong>External calls</strong>: One needs to mock external calls behavior (e.g. <code>strlen</code>, <code>malloc</code>, &hellip;).</li>
<li><strong>Some behaviors can be difficult to emulate</strong>: Thread, Android internal frameworks, &hellip;</li>
</ul>
<p>Moreover, while it is quite simple to mock the behavior of <code>strlen</code>, it may be more challenging to mock
JNI functions behavior like <code>FindClass()</code>, <code>GetMethodID()</code>, <code>RegisterNatives()</code>, &hellip;</p>
<p>The design of QBDI provides a good trade-off between full instrumentation and partial emulation thanks to
the <code>ExecBrocker</code> that enables to switch between instrumented code — our function — and non-instrumented
code: <code>strlen()</code>, <code>FindClass()</code>, <code>pthread_call_once()</code>, &hellip;</p>
<p>This diagram represents the instrumentation flow for the different scenarios:</p>
<p><img src="qbdi_flow.png" alt=""></p>
<p>For those who are interested in QBDI internals you can look at the 34C3 talk by Charles and Cédric <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.
There are also examples in the GitHub repository <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>To summarize, we can bootstrap QBDI as follows:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// QBDI main interface
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>QBDI<span style="color:#666">::</span>VM vm;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// QBDI CPU state for GPR registers
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>GPRState<span style="color:#666">*</span> state <span style="color:#666">=</span> vm.getGPRState();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Setup virtual stack
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span><span style="color:#b00040">uint8_t</span> <span style="color:#666">*</span>fakestack <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>QBDI<span style="color:#666">::</span>allocateVirtualStack(state, <span style="color:#408080;font-style:italic">/* size */</span><span style="color:#666">0x100000</span>, <span style="color:#666">&amp;</span>fakestack);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// {
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">//    Setup instrumentation ranges, callbacks etc, ...
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// }
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Start Instrumentation:
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>uintptr_t retval;
</span></span><span style="display:flex;"><span><span style="color:#b00040">bool</span> ok <span style="color:#666">=</span> vm.call(<span style="color:#666">&amp;</span>retval, <span style="color:#408080;font-style:italic">/* Address of the function to instrument */</span>);
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Instrumentation Finished
</span></span></span></code></pre></div><h2 id="sdk-overview">SDK Overview</h2>
<p>Among the QBDI tests, we analyzed an SDK that aims to protect applications against API abuses.
This kind of protection is used to protect API endpoints against illegitimate uses: emulator, bots, &hellip;</p>
<p>To protect the main application, the solution collects information about the device state: rooted, debugged,
custom, then encodes this information with a <em>proprietary</em> algorithm and sends the encoded data to a server.</p>
<p>The <strong>server</strong> decodes the information sent by the device collector, performs analyses to check the device
integrity and sends back a token that handles the information about whether the device is corrupted or not.</p>
<p>The following figure summarizes this process:</p>
<p><img src="overview.png" alt=""></p>
<p>Such architecture is robust and similar to the one in <a href="https://developer.android.com/training/safetynet/attestation">Safetynet</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>. On the other hand,
the SDK has fewer permissions than Safetynet, therefore it cannot collect as much data about
the device as SafetyNet does.</p>
<p>We started the analysis by monitoring the network traffic between the SDK and its server. At some point,
we can observe the following request:</p>
<p><img src="network.png" alt=""></p>
<p>It is JSON encoded and the characters that look like random values are the encoded information sent
by the device collector.</p>
<p>The analysis of the SDK aims to address these questions:</p>
<ul>
<li>How the SDK checks if the device is rooted or not ?</li>
<li>How the SDK detects if the application is being debugged ?</li>
<li>What kind of information is collected from the device and how it is encoded ?</li>
</ul>
<p>After a look at the Java layer, we found that the logic of the solution is implemented
in a JNI library that will be named <code>libApp.so</code> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>. The library exposes the following JNI functions:</p>
<p>! <a href="exports.png"></a></p>
<p>With static analysis, we can identify that the function <code>Java_XXX_JNIWrapper_ca3_14008()</code> is the one
involved in the generation of the sequence <code>&quot;QJRR{JJJGQJ~|MJJJ...&quot;</code>. It returns the encoded data as a
<code>java.lang.String</code> and takes two parameters that are not mandatory: <code>bArr</code>, <code>iArr</code> <sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>.</p>
<p><img src="java.png" alt=""></p>
<p>The library as a whole is not especially obfuscated. Nonetheless, we find strings encoding
and syscall replacement on well-known <code>libc</code> functions:</p>
<ul>
<li><code>read</code></li>
<li><code>openat</code></li>
<li><code>close</code></li>
<li>&hellip;</li>
</ul>
<p>This technique is commonly used to avoid hooking but the fact is that the given syscalls are wrapped
in functions that are not inlined. Hence, one can hook the functions that wrap
the associated syscall.</p>
<h2 id="get-started-with-qbdi">Get Started with QBDI</h2>
<p>In order to fully understand the logic of this function, we instrumented the function through QBDI <sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup> associated
with a set of instrumentation callbacks.</p>
<p>These callbacks aim to provide different kinds of information that will be useful to the analyst to understand the
function logic. For instance, we can setup a first callback that records
all the syscall instructions, we can also add a callback that records memory access.</p>
<p>The purpose of this blog post is to show how few — but well chosen — callbacks enable to understand the
logic of the function.</p>
<p>First of all, the native library embedded in the SDK can be loaded outside of the original APK using
<code>dlopen()</code> / <code>dlsym()</code>.
Moreover, one can instantiate a JVM thanks to the ART runtime (<code>libart.so</code>):</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">int</span> argc, <span style="color:#b00040">char</span><span style="color:#666">**</span> argv) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">static</span> <span style="color:#008000;font-weight:bold">constexpr</span> <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*</span> TARGET_LIB  <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libApp.so&#34;</span>;
</span></span><span style="display:flex;"><span>   <span style="color:#b00040">void</span><span style="color:#666">*</span> hdl <span style="color:#666">=</span> dlopen(TARGET_LIB, RTLD_NOW);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">using</span> jni_func_t <span style="color:#666">=</span> jstring(<span style="color:#666">*</span>)(JNIEnv<span style="color:#666">*</span> <span style="color:#408080;font-style:italic">/* Other parameters are not required */</span>);
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">auto</span> jni_func  <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>jni_func_t<span style="color:#666">&gt;</span>(dlsym(hdl, <span style="color:#ba2121">&#34;Java_XXX_JNIWrapper_ca3_14008&#34;</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   JavaVM<span style="color:#666">*</span> jvm, JNIEnv<span style="color:#666">*</span> env;
</span></span><span style="display:flex;"><span>   ART_Kitchen(jvm, env); <span style="color:#408080;font-style:italic">// Instantiate the JVM and initialize the jvm and env pointers
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>}
</span></span></code></pre></div><p>At this point, the <code>jni_func()</code> function is tied to <code>Java_XXX_JNIWrapper_ca3_14008</code> and ready to be
executed in <code>main()</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>jstring output <span style="color:#666">=</span> jni_func(env);
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*</span> cstring <span style="color:#666">=</span> env<span style="color:#666">-&gt;</span>GetStringUTFChars(output, <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span><span style="display:flex;"><span>console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;Real Output: {}&#34;</span>, cstring);
</span></span></code></pre></div><p><img src="real_output.png" alt=""></p>
<p>The output seems consistent with the network capture and the value <code>&quot;root: 1&quot;</code> too since we are on a rooted device <sup id="fnref:8"><a href="#fn:8" class="footnote-ref" role="doc-noteref">8</a></sup></p>
<p>Now, let&rsquo;s run the function through QBDI:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;Initializing VM ...&#34;</span>);
</span></span><span style="display:flex;"><span>QBDI<span style="color:#666">::</span>VM vm;
</span></span><span style="display:flex;"><span>GPRState<span style="color:#666">*</span> state <span style="color:#666">=</span> vm.getGPRState();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">uint8_t</span> <span style="color:#666">*</span>fakestack <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>QBDI<span style="color:#666">::</span>allocateVirtualStack(state, <span style="color:#666">0x100000</span>, <span style="color:#666">&amp;</span>fakestack);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;Instument module: {}&#34;</span>, TARGET_LIB);
</span></span><span style="display:flex;"><span>vm.addInstrumentedModule(TARGET_LIB);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;Simulate call in QBDI&#34;</span>);
</span></span><span style="display:flex;"><span>jstring dbioutput;
</span></span><span style="display:flex;"><span><span style="color:#b00040">bool</span> ok <span style="color:#666">=</span> vm.call(<span style="color:#666">&amp;</span>dbioutput, <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>rword<span style="color:#666">&gt;</span>(jni_func), {<span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>rword<span style="color:#666">&gt;</span>(env)});
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> (ok and dbioutput <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">nullptr</span>) {
</span></span><span style="display:flex;"><span>  console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;DBI output {:x}&#34;</span>, env<span style="color:#666">-&gt;</span>GetStringUTFChars(dbioutput, <span style="color:#008000;font-weight:bold">nullptr</span>));
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>This code provides the following output:</p>
<p><img src="dbi_output.png" alt=""></p>
<p>Everything looks good, QBDI managed to <strong>fully</strong> instrument the function (which includes ARM / Thumb switch)
and the result is similar to the real execution.</p>
<h1 id="analysis">Analysis</h1>
<p>Now that we are able to run and instrument the function,
we can start to add instrumentation callbacks to analyze its behavior.</p>
<p>One of the first callbacks that is useful to setup is a callback that instruments syscall
instructions (i.e. <code>svc #0</code>). To do so, we can use the <code>vm.addSyscallCB(position, callback, data)</code>.</p>
<ul>
<li><strong>position</strong> - It stands for the position of the callback: Before or after the syscall.</li>
<li><strong>callback</strong> - The callback itself.</li>
<li><strong>data</strong> - Pointer to user data (e.g. user context that register dynamic information)</li>
</ul>
<p>It leads to the following piece of code:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">auto</span> syscall_enter_cbk <span style="color:#666">=</span> [] (VMInstanceRef vm, GPRState <span style="color:#666">*</span>gprState, FPRState <span style="color:#666">*</span>fprState, <span style="color:#b00040">void</span> <span style="color:#666">*</span>data) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">const</span> InstAnalysis<span style="color:#666">*</span> analysis <span style="color:#666">=</span> vm<span style="color:#666">-&gt;</span>getInstAnalysis(ANALYSIS_INSTRUCTION <span style="color:#666">|</span> ANALYSIS_DISASSEMBLY);
</span></span><span style="display:flex;"><span>   rword syscall_number <span style="color:#666">=</span> gprState<span style="color:#666">-&gt;</span>r7;
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">/*
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    * std::string sys_str = lookup[syscall_number]; // Lookup table that convert syscall number to function
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    */</span>
</span></span><span style="display:flex;"><span>   console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;0x{:06x} {} ({})&#34;</span>, addr, analysis<span style="color:#666">-&gt;</span>disassembly, sys_str);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>vm.addSyscallCB(PREINST,  syscall_enter_cbk, <span style="color:#408080;font-style:italic">/* data */</span> <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span></code></pre></div><p>Before any syscall instructions, we perform a basic lookup on the syscall number stored in the <strong>R7</strong> register
to resolve its name.</p>
<p>It results in the following output:</p>
<p><img src="syscall.1.png" alt=""></p>
<p>Since we are able to resolve syscall numbers into function names, we can improve the logic of callback
to dispatch and print function parameters:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">auto</span> syscall_enter_cbk <span style="color:#666">=</span> [] (...) {
</span></span><span style="display:flex;"><span>   ...
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">/*
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    * Lookup table (syscall number, function pointer)
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    * {
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    *   322 -&gt; on_openat
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    * }
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">    */</span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">auto</span> function_wrapper <span style="color:#666">=</span> func_lookup[syscall_number];
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">return</span> <span style="color:#00f">function_wrapper</span>(...)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Wrapper for openat syscall
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>VMAction on_openat(VMInstanceRef vm, GPRState <span style="color:#666">*</span>gprState, ...) {
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">auto</span> path <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">*&gt;</span>(gprState<span style="color:#666">-&gt;</span>r1);
</span></span><span style="display:flex;"><span>   console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;openat({})&#34;</span>, path);
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>By doing so on the common syscalls number, we get this new trace:</p>
<p><img src="syscall.2.png" alt=""></p>
<p>Based on this output, we can figure out how root check (orange area) is done. It is performed by checking
the existence of the following binaries:</p>
<ul>
<li>/system/bin/su</li>
<li>/system/xbin/su</li>
<li>/sbin/su</li>
<li>&hellip;</li>
</ul>
<p>The function also checks if some directories are present on the device (<code>faccessat</code> syscall):</p>
<ul>
<li>/data</li>
<li>/tmp</li>
<li>/system</li>
<li>&hellip;</li>
</ul>
<p>Especially, it would be suspicious if the directory <code>/tmp</code> were present on the <em>device</em> while it is standard to
have <code>/system</code> and <code>/data</code> directories.</p>
<p>Regarding the debug state of the process (blue area), it is done by looking at <code>/proc/self/status</code>.  After
analysis, the function checks the <code>TracerPID</code> attribute
(cf <a href="https://www.vantagepoint.sg/blog/89-more-android-anti-debugging-fun">More Android Anti-Debugging Fun - B. Mueller</a>)</p>
<p>Finally, the function processes the output of <code>/proc/self/maps</code> right before to returning the encoded values.
It suggests that the data collected by the solution are based on this resource.</p>
<h3 id="encoding-routine">Encoding Routine</h3>
<p>In the previous part we got a global overview about how the solution achieves root detection,
debug detection and what kind of data is collected (i.e. process memory map).</p>
<p>However, some questions are pending:</p>
<ul>
<li>What part of the process memory map is used: Base addresses ? Module paths ? Permissions ?</li>
<li>How the data are encoded (i.e. how <code>QJRR{JJJGQJ~|MJJJ...</code> is generated) ?</li>
</ul>
<p>Along with the QBDI ARM support, we also added ARM support to resolve <strong>memory addresses</strong> during the
instrumentation.
It means that QBDI is now able to resolve <strong>the effective memory address</strong> of instructions such as:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-armasm" data-lang="armasm"><span style="display:flex;"><span>LDR <span style="">R0</span>, <span style="">[R1</span>, <span style="">R2]</span><span style="color:#408080;font-style:italic">;         # Resolve R1 + R2
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>STR <span style="">R1</span>, <span style="">[R2</span>, <span style="">R3</span>, <span style="">LSL</span> #<span style="color:#666">2</span><span style="">]</span><span style="color:#408080;font-style:italic">; # Resolve R2 + R3 * 4
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>LDRB    <span style="">[PC</span>, #<span style="color:#666">4</span><span style="">]</span><span style="color:#408080;font-style:italic">;         # Resolve **real** PC + 4
</span></span></span></code></pre></div><p>Moreover, QBDI is also able to get <strong>the effective memory value</strong> that is read or written. This feature
is quite useful in the case of conditional instructions such as:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-armasm" data-lang="armasm"><span style="display:flex;"><span>ITT <span style="">LS</span><span style="color:#408080;font-style:italic">;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>LDRLS <span style="">R0</span>, <span style="">[R4]</span><span style="color:#408080;font-style:italic">;
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>LDRLS <span style="">R1</span>, <span style="">[R0</span>, #<span style="color:#666">4</span><span style="">]</span>
</span></span></code></pre></div><p>The <strong>effective</strong> value of <code>R0</code> and <code>R1</code> is stored in QBDI. It may not be
<code>*(r4)</code> and <code>*(r0 + 4)</code> since the <code>LS</code> condition may not be verified.</p>
<p>To add a callback on memory accesses, we can use the <code>addMemAccessCB(...)</code> function on the VM instance:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>vm.addMemAccessCB(MEMORY_READ_WRITE, memory_callback, <span style="color:#408080;font-style:italic">/* data */</span> <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span></code></pre></div><p>In the given <code>memory_callback(...)</code> function, we perform the following actions:</p>
<ul>
<li>Track memory <strong>byte</strong> accesses.</li>
<li>Check if the value is printable.</li>
<li>Pretty print the R/W value.</li>
</ul>
<p>The idea of this callback is to track memory accesses that are performed on printable characters. It enables
to quickly identify strings encoding/decoding routines.</p>
<p>Here is the implementation of the callback:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>VMAction <span style="color:#00f">memory_callback</span>(VMInstanceRef vm, GPRState <span style="color:#666">*</span>gprState, ...) {
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">auto</span><span style="color:#666">&amp;&amp;</span> acc <span style="color:#666">=</span> vm<span style="color:#666">-&gt;</span>getInstMemoryAccess();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Get last memory access
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  MemoryAccess maccess <span style="color:#666">=</span> acc.back();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Retrieve access information:
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  rword addr  <span style="color:#666">=</span> maccess.accessAddress; <span style="color:#408080;font-style:italic">// Address accessed
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  rword value <span style="color:#666">=</span> maccess.value;         <span style="color:#408080;font-style:italic">// Value read or written
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  rword size  <span style="color:#666">=</span> maccess.size;          <span style="color:#408080;font-style:italic">// Access size
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Only look for byte access
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">if</span> (size <span style="color:#666">!=</span> <span style="color:#008000;font-weight:bold">sizeof</span>(<span style="color:#b00040">char</span>)) {
</span></span><span style="display:flex;"><span>     <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Read / Write operation as a string
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">const</span> std<span style="color:#666">::</span>string kind <span style="color:#666">=</span> maccess.type <span style="color:#666">==</span> MemoryAccessType<span style="color:#666">::</span>MEMORY_READ <span style="color:#666">?</span> <span style="color:#ba2121">&#34;[R]&#34;</span> <span style="color:#666">:</span> <span style="color:#ba2121">&#34;[W]&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Cast the value into a char
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span> cvalue <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">static_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">char</span><span style="color:#666">&gt;</span>(value);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Check if the value read or written is printable
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">if</span> (<span style="color:#666">::</span>isprint(cvalue)) {
</span></span><span style="display:flex;"><span>     logger<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;0x{:x} {}: {}&#34;</span>, addr, kind, cvalue); <span style="color:#408080;font-style:italic">// Pretty print
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic">// Continue this execution
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>  <span style="color:#008000;font-weight:bold">return</span> VMAction<span style="color:#666">::</span>CONTINUE;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>With this new callback, we can observe such output between two <code>openat()</code> syscalls involved in the
<code>root</code> check routine:</p>
<p><img src="su_decode.png" alt=""></p>
<p>It is basically the string decoding routine in action. Note that some read operations are missing
since we only track <strong>printable</strong> characters. However all write operations are present.</p>
<p>The routine <strong>loads</strong> characters with the instruction at address <strong>0x295e</strong> and <strong>stores</strong> the decoded
value at address <strong>0x2972</strong>. If we look at the function that handles these two addresses, we find
the decoding routine:</p>
<p><img src="decoding_routine.png" alt=""></p>
<p>In the above figure, the <strong>green</strong> section highlights the memory <strong>load access</strong> while the <strong>red</strong> one highlights
the <strong>write operation</strong>. The <strong>blue</strong> area is the <strong>decoding logic</strong>.</p>
<p>The output of <strong>all</strong> read / write accesses turns out to be quite verbose on the whole execution of the function.
We can improve the instrumentation by adding two callbacks before and after function <strong>calls</strong>
with this purpose:</p>
<ol>
<li>Before calls, we print the target address (e.g. <code>0x123: blx r3 -&gt; .text!0xABC</code>).</li>
<li>After calls we print <strong>all</strong> printable characters being read or written <strong>within the called function</strong>.</li>
</ol>
<p>The <code>addCallCB(...)</code> is still in experimentation but it aims to put callbacks before or after call instructions:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Callback before ``call`` instructions
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>vm.addCallCB(PRECALL,  on_call_enter, <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">// Callback when a ``call`` returns
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>vm.addCallCB(POSTCALL, on_call_exit, <span style="color:#008000;font-weight:bold">nullptr</span>);
</span></span></code></pre></div><p>With these two callbacks we get the following output:</p>
<p><img src="memtrace.0.png" alt=""></p>
<p>By going further in the memory trace, we can observe this output:</p>
<p><img src="memtrace.png" alt=""></p>
<p>From this output we can infer the behavior of the collector (pseudo-code):</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>f <span style="color:#666">=</span> <span style="color:#008000">open</span>(<span style="color:#ba2121">&#34;/proc/self/maps&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> line <span style="color:#a2f;font-weight:bold">in</span> f<span style="color:#666">.</span>readlines():
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">if</span> <span style="color:#a2f;font-weight:bold">not</span> <span style="color:#ba2121">&#34;/&#34;</span> <span style="color:#a2f;font-weight:bold">in</span> line: <span style="color:#408080;font-style:italic"># Avoid entries such as XXX-YYY ... [anon:linker_alloc]</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">continue</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">if</span> <span style="color:#a2f;font-weight:bold">not</span> <span style="color:#ba2121">&#34;-xp&#34;</span> <span style="color:#a2f;font-weight:bold">in</span> line <span style="color:#408080;font-style:italic"># Process executable segments only</span>
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">continue</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    buffer <span style="color:#666">+=</span> encode(line)
</span></span></code></pre></div><p>We can also observe a sequence of</p>
<ol>
<li><strong>READ</strong> <code>line[i]</code></li>
<li><strong>CALL</strong> <code>.text!0xd2ba</code></li>
<li><strong>WRITE</strong> <code>encoded(line[i])</code></li>
</ol>
<p>It suggests that the logic of the <code>encode()</code> function is implemented at address <strong>0xd2ba</strong>.</p>
<p>The CFG of this function is compounded by instructions that compare the input against <em>magic</em> printable
values and we manually checked that it is the encoding function. Moreover this function is — by design — reversible since
the server side algorithm needs to process the <em>encoded</em> data.</p>
<p><img src="encoding_routine.png" alt=""></p>
<h1 id="library-lifting">Library lifting</h1>
<p>In the previous parts, we targeted the ARM version of the library. It turns out that SDKs which use
native libraries usually provide the libraries for all architectures (<code>arm</code>, <code>arm64</code>, <code>x86</code>, <code>x86-64</code>).</p>
<p>Indeed, they do not want to limit developers to some architectures. The solution previously analyzed also
comes with a <code>x86-64</code> version of <code>libApp.so</code> with the exact same interface.</p>
<p>Moreover, the analysis done in the previous sections shows that there are no real dependencies to the Android system:</p>
<ul>
<li>Syscall are standards and available on Linux.</li>
<li><code>/proc/self/maps</code> and <code>/proc/self/status</code> are available on Linux.</li>
</ul>
<p>Thus, we can <em>lift</em> the library and run it on Linux. This technique has already been described in this
blog post: <a href="https://blog.quarkslab.com/when-sidechannelmarvels-meet-lief.html">When SideChannelMarvels meet LIEF</a>.</p>
<p>In a first step, we have to patch the library with LIEF:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>libApp <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;libApp.so&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Patch library names</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># ===================</span>
</span></span><span style="display:flex;"><span>libApp<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;libc.so&#34;</span>)<span style="color:#666">.</span>name   <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libc.so.6&#34;</span>
</span></span><span style="display:flex;"><span>libApp<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;liblog.so&#34;</span>)<span style="color:#666">.</span>name <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libc.so.6&#34;</span>
</span></span><span style="display:flex;"><span>libApp<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;libm.so&#34;</span>)<span style="color:#666">.</span>name   <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libm.so.6&#34;</span>
</span></span><span style="display:flex;"><span>libApp<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;libdl.so&#34;</span>)<span style="color:#666">.</span>name  <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libdl.so.2&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Patch dynamic entries</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># =====================</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># 1. Remove ELF constructors</span>
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>INIT_ARRAY]<span style="color:#666">.</span>array   <span style="color:#666">=</span> []
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>INIT_ARRAY]<span style="color:#666">.</span>tag     <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>INIT_ARRAYSZ]<span style="color:#666">.</span>value <span style="color:#666">=</span> <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>FINI_ARRAY]<span style="color:#666">.</span>array   <span style="color:#666">=</span> []
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>FINI_ARRAY]<span style="color:#666">.</span>tag     <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>FINI_ARRAYSZ]<span style="color:#666">.</span>value <span style="color:#666">=</span> <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># 2. Remove symbol versioning</span>
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>VERNEEDNUM]<span style="color:#666">.</span>tag <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>VERNEED]<span style="color:#666">.</span>tag    <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>VERDEFNUM]<span style="color:#666">.</span>tag  <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>VERDEF]<span style="color:#666">.</span>tag     <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>libApp[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>VERSYM]<span style="color:#666">.</span>tag     <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>DEBUG
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>libApp<span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;libApp-x86-64.so&#34;</span>)
</span></span></code></pre></div><p>Then, we can instantiate a Linux JVM and run the native function:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">main</span>() {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   JavaVM <span style="color:#666">*</span>jvm <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>   JNIEnv<span style="color:#666">*</span> env <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">nullptr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">// JVM options
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>   JavaVMOption opt[<span style="color:#666">1</span>];
</span></span><span style="display:flex;"><span>   JavaVMInitArgs args;
</span></span><span style="display:flex;"><span>   ...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">// JVM instantiation
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>   JNI_CreateJavaVM(<span style="color:#666">&amp;</span>jvm, <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span><span style="color:#b00040">void</span><span style="color:#666">**&gt;</span>(<span style="color:#666">&amp;</span>env), <span style="color:#666">&amp;</span>args);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">// Load the library
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>   <span style="color:#b00040">void</span><span style="color:#666">*</span> hdl <span style="color:#666">=</span> dlopen(<span style="color:#ba2121">&#34;libApp-x86-64.so&#34;</span>, RTLD_LAZY <span style="color:#666">|</span> RTLD_LOCAL);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">// Resolve the functions
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>   <span style="color:#008000;font-weight:bold">using</span> abi_t      <span style="color:#666">=</span> jint(<span style="color:#666">*</span>)(JNIEnv<span style="color:#666">*</span>);
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">using</span> jni_func_t <span style="color:#666">=</span> jstring(<span style="color:#666">*</span>)(JNIEnv<span style="color:#666">*</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">auto</span><span style="color:#666">&amp;&amp;</span> jni_get_abi <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>abi_t<span style="color:#666">&gt;</span>(dlsym(hdl, <span style="color:#ba2121">&#34;Java_XXX_JNIWrapper_ca3_14007&#34;</span>));
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">auto</span><span style="color:#666">&amp;&amp;</span> jni_func    <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>jni_func_t<span style="color:#666">&gt;</span>(dlsym(hdl, <span style="color:#ba2121">&#34;Java_XXX_JNIWrapper_ca3_14008&#34;</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#408080;font-style:italic">// Execute
</span></span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"></span>   jint abi <span style="color:#666">=</span> jni_get_abi(env);
</span></span><span style="display:flex;"><span>   console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;ABI: {:d}&#34;</span>, abi);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   jstring encoded <span style="color:#666">=</span> jni_func(env);
</span></span><span style="display:flex;"><span>   console<span style="color:#666">-&gt;</span>info(<span style="color:#ba2121">&#34;ca3_14008(): {}&#34;</span>, env<span style="color:#666">-&gt;</span>GetStringUTFChars(encoded, <span style="color:#008000;font-weight:bold">nullptr</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>   <span style="color:#008000;font-weight:bold">return</span> EXIT_SUCCESS;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>By executing this code, we get a similar output as seen in the previous parts:</p>
<p><img src="rip.png" alt=""></p>
<p>We can also run the <code>strace</code> utility to inspect the syscalls:</p>
<p><img src="strace.png" alt=""></p>
<p>Since we are able to run the function on Linux, we could also use <code>gdb</code>, <code>Intel PIN</code> or <code>QBDI(x86-64)</code>
to analyze the library.</p>
<h2 id="conclusion">Conclusion</h2>
<p>While it has been quite challenging to add the whole ARM support in QBDI, it starts to work pretty well on real
use cases. Such support should also lead to interesting applications among which:</p>
<ul>
<li>HongFuzz / QBDI for Android.</li>
<li><a href="https://github.com/SideChannelMarvels">SideChannelMarvels</a> integration for CPA attacks.</li>
<li>Trustlets instrumentation.</li>
</ul>
<p>The raw traces used in this blog post are available here: <a href="traces.zip">traces.zip</a></p>
<h2 id="acknowledgments">Acknowledgments</h2>
<p>Many thanks to Charles Hubain and Cédric Tessier who developed and designed QBDI. It is really pleasant
to work on the concepts involved in this DBI.</p>
<p>Thanks to the LLVM community to provide such framework without which this project would not be possible.</p>
<p>Thanks to my Quarkslab colleagues who proofread this article.</p>
<h2 id="references">References</h2>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Frida modifies fields of the <code>art::ArtMethod</code> object associated with the Java method.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://qbdi.quarkslab.com/QBDI_34c3.pdf">Slides</a> - <a href="https://media.ccc.de/v/34c3-9006-implementing_an_llvm_based_dynamic_binary_instrumentation_framework">Talk</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://github.com/QBDI/QBDI/blob/master/examples">https://github.com/QBDI/QBDI/blob/master/examples</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>DroidGuard being the SafetyNet module that collects information about the device.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>The name has been intentionally changed.&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p>Plus the <code>this</code> parameter which is a <code>jclass</code> object for a static method.&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p>Even though static analysis would be enough in this case.&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:8">
<p>Nexus 5X - Android 8.1.0 - Rooted with Magisk.&#160;<a href="#fnref:8" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/android-native-library-analysis-with-qbdi/featured.png"/></item><item><title>Android crackme challenge</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/android-crackme/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/android-crackme/</guid><description>Android crackme that uses system&amp;rsquo;s internals</description><content:encoded><![CDATA[<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href=https://blog.quarkslab.com/android-challenge.html>Quarkslab&rsquo;s Blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<p>Here is an Android crackme developed for the Android training given at Quarkslab.</p>
<p>The objective is to find the correct phone number that leads to the following message:</p>
<p><img src="screen.png" alt="success"></p>
<p>The application can be run on an emulator or a real device (whatever the architecture) but the Android version must be at <strong>least Marshmallow</strong> (&gt; 6.0).</p>
<p><a href="crackme-telegram.apk">crackme-telegram.apk</a> - <code>SHA256: d66b82ebc14708b214a581760e99894af17e10598bcef95e75441a12b948bbf0</code></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/android-crackme/featured.png"/></item><item><title>Android OAT formats</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/android-oat/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/android-oat/</guid><description>Internal structures of OAT format</description><content:encoded><![CDATA[<p>Here are internal structures of Android OAT:</p>
<h1 id="oat-124">OAT 124</h1>
<p><img src="oat_124.png" alt="OAT 124"></p>
<p><a href="oat_124.pdf">PDF Version</a></p>
<h1 id="oat-79">OAT 79</h1>
<p><img src="oat_79.png" alt="OAT 79"></p>
<p><a href="oat_79.pdf">PDF Version</a></p>
<h1 id="oat-64">OAT 64</h1>
<p><img src="oat_64.png" alt="OAT 64"></p>
<p><a href="oat_64.pdf">PDF Version</a></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/android-oat/featured.png"/></item><item><title>Android VDEX formats</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/android-vdex/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/android-vdex/</guid><description>Internal structures of VDEX format</description><content:encoded><![CDATA[<p>Here are internal structures of Android VDEX:</p>
<h1 id="vdex-10">VDEX 10</h1>
<p><img src="vdex_10.png" alt="VDEX 10"></p>
<p><a href="vdex_10.pdf">PDF Version</a></p>
<h1 id="vdex-06">VDEX 06</h1>
<p><img src="vdex_06.png" alt="VDEX 06"></p>
<p><a href="vdex_06.pdf">PDF Version</a></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/android-vdex/featured.png"/></item><item><title>When SideChannelMarvels meets LIEF</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/18-05-when-sidechannelmarvels-meets-lief/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/18-05-when-sidechannelmarvels-meets-lief/</guid><description>On how we used LIEF to lift an Android x86_64 library to Linux to perform our usual white-box attacks on it.</description><content:encoded><![CDATA[<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href="https://blog.quarkslab.com/when-sidechannelmarvels-meet-lief.html">Quarkslab&rsquo;s Blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<h2 id="introduction">Introduction</h2>
<p>For those of you following our SideChannelMarvels<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, you know that whenever we stumble on a non-commercial
white-box implementation, we like to add it to the Deadpool project, a repository of various public white-box
cryptographic implementations and their practical attacks.</p>
<p>This time, we wanted to have a look at the white-box created by Sanghwan (h2spice) Ahn and proposed during
SECCON2016 CTF<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Apparently only PPP solved it during the competition and Sanghwan wrote himself a write-up<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>The challenge consists in an Android APK. When you launch it, it displays a flag encrypted a random number of
times (between 1 and 3601). When encrypted only once, the flag is <code>g1UlZafiuGdCgpTkWYjaZg3kE6qCd7kF3kV+nMKcGHc=</code>.</p>
<p>To be able to ‘plug’ the challenge into our tools, we need to get an easy access to the input and output of
the AES encryption function. A quick look reveals that the actual cryptographic operations are done in a
native library called libnative-lib.so, conveniently available for several architectures. The function
<code>TfcqPqf1lNhu0DC2qGsAAeML0SEmOBYX4jpYUnyT8qYWIlEq(unsigned char*, unsigned char*)</code> is the AES encryption
function we want to attack. Note that the library is obfuscated with Obfuscator-LLVM 3.6.1, as we can see
from its <code>.comment</code> section.</p>
<p>But we&rsquo;re lazy, so we&rsquo;d like to reuse the x86-64 version of <code>libnative-lib.so</code> under a Linux environment, where
all the SideChannelMarvels toolchain is ready to crunch white-boxes. That&rsquo;s not that simple because, even if
they look alike, dynamic libraries compiled for Android or for Linux have a number of differences and a naive
attempt to load an Android dynamic library under Linux will simply fail.</p>
<p>Fortunately, we have a nifty tool for parsing and modifying binaries. We&rsquo;re talking about LIEF<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> of course!</p>
<h2 id="converting-an-android-library-to-linux-with-lief">Converting an Android library to Linux with LIEF</h2>
<p>The white-box is implemented in the <code>libnative-lib.so</code> which is available for ARM, AMR64, x86 and x86-64
architectures. It&rsquo;s a tiny library exporting one <strong>JNI</strong> function: <code>Java_kr_repo_h2spice_crypto500_MainActivity_a</code>
and importing three functions from external libraries.</p>
<p>Lifting this library to Linux is possible because the three imported functions
(<code>__cxa_finalize</code>, <code>__cxa_atexit</code>, <code>__stack_chk_fail</code>) are not specific to Android.</p>
<p>The linked libraries of <code>libnative-lib.so</code> are standard: <code>libc</code>, <code>libstdc++</code> &hellip; except for <code>liblog</code>. But
<code>libnative-lib.so</code> doesn&rsquo;t use any of liblog functions, as we can see in readelf output:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -s -d -W ./libnative-lib.so
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">Dynamic section at offset 0x2ad00 contains 31 entries:
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Tag  Type    Name/Value
</span></span></span><span style="display:flex;"><span><span style="color:#888">...
</span></span></span><span style="display:flex;"><span><span style="color:#888"> 0x01 (NEEDED) Shared library: [liblog.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888"> 0x01 (NEEDED) Shared library: [libm.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888"> 0x01 (NEEDED) Shared library: [libstdc++.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888"> 0x01 (NEEDED) Shared library: [libdl.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888"> 0x01 (NEEDED) Shared library: [libc.so]
</span></span></span><span style="display:flex;"><span><span style="color:#888">...
</span></span></span><span style="display:flex;"><span><span style="color:#888">Symbol table &#39;.dynsym&#39; contains 32 entries:
</span></span></span><span style="display:flex;"><span><span style="color:#888"> Num: Value  Size Type    Bind   Vis      Ndx Name
</span></span></span><span style="display:flex;"><span><span style="color:#888">   0: 00000     0 NOTYPE  LOCAL  DEFAULT  UND
</span></span></span><span style="display:flex;"><span><span style="color:#888">   1: 00000     0 FUNC    GLOBAL DEFAULT  UND __cxa_finalize@LIBC (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   2: 00000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit@LIBC (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   3: 04fe0   865 FUNC    GLOBAL DEFAULT   11 Java_kr_repo_h2spice_crypto500_MainActivity_a
</span></span></span><span style="display:flex;"><span><span style="color:#888">   4: 02070  2281 FUNC    GLOBAL DEFAULT   11 _Z48APtMDGO79Go3cbIkFca2rN0KszanZXOZ7dIPsxDBletW5gdoPcPKci
</span></span></span><span style="display:flex;"><span><span style="color:#888">   5: 01100  3916 FUNC    GLOBAL DEFAULT   11 _Z48DENCPKY6hzMem3SuzgIXu4u6vxbF1sajPOJ75aN2VTdc7SCLPcPKc
</span></span></span><span style="display:flex;"><span><span style="color:#888">   6: 00bb0  1345 FUNC    GLOBAL DEFAULT   11 _Z48KwUmSQBCaOVJKeqvABGpVnuErM7j8YCSOagNYBmr2ah0NZBePKc
</span></span></span><span style="display:flex;"><span><span style="color:#888">   7: 03860  6011 FUNC    GLOBAL DEFAULT   11 _Z48TfcqPqf1lNhu0DC2qGsAAeML0SEmOBYX4jpYUnyT8qYWIlEqPhS_
</span></span></span><span style="display:flex;"><span><span style="color:#888">   8: 02050    30 FUNC    GLOBAL DEFAULT   11 _Z48h8AU0jPcyu9vXF9Kvg0bGDSl6H3TtcJIoOoU1ZOObCvegZ84i
</span></span></span><span style="display:flex;"><span><span style="color:#888">   9: 00000     0 FUNC    GLOBAL DEFAULT  UND __stack_chk_fail@LIBC (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">  10: 02960  3836 FUNC    GLOBAL DEFAULT   11 _Z48lrsFdMdlAT0vSMVedxmqOkCBF7sCTbhCjYEp1rLP8vatWEGDPh
</span></span></span><span style="display:flex;"><span><span style="color:#888">  29: 2c008     0 NOTYPE  GLOBAL DEFAULT  ABS _edata
</span></span></span><span style="display:flex;"><span><span style="color:#888">  30: 2c008     0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
</span></span></span><span style="display:flex;"><span><span style="color:#888">  31: 2c050     0 NOTYPE  GLOBAL DEFAULT  ABS _end
</span></span></span></code></pre></div>
<p>Thus we can simply remove the <code>liblog</code> library by setting its dynamic tag to <code>DT_NULL</code>:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>libnative <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;libnative-lib.so&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>liblog     <span style="color:#666">=</span> libnative<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;liblog.so&#34;</span>)
</span></span><span style="display:flex;"><span>liblog<span style="color:#666">.</span>tag <span style="color:#666">=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DYNAMIC_TAGS<span style="color:#666">.</span>NULL</span></span></code></pre></td></tr></table>
</div>
</div>
<p>We also notice that the <code>libc</code> is named <code>libc.so</code> while the one on the current Linux version is named libc.so.6.
To address this issue, one solution would be to create a symbol link of <code>libc.so.6</code> to <code>libc.so</code> and set the
environment variable <code>LD_LIBRARY_PATH</code> to the directory that contains the symlink.</p>
<p>A more elegant solution is to rename the library with LIEF:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>libnative<span style="color:#666">.</span>get_library(<span style="color:#ba2121">&#34;libc.so&#34;</span>)<span style="color:#666">.</span>name <span style="color:#666">=</span> <span style="color:#ba2121">&#34;libc.so.6&#34;</span></span></span></code></pre></div>
<p>Lastly, <code>libnative-lib.so</code> imports <code>__cxa_finalize</code>, <code>__cxa_atexit</code> and <code>__stack_chk_fail</code> with a specific version.
The version can be seen in the imported names, next to the <code>@</code> character. For these symbols, the associated
version is &ldquo;<code>LIBC</code>&rdquo; and, during the loading step, the loader will look for the <code>__cxa_finalize</code> in <code>libc.so.6</code>
with this exact version.</p>
<p>But the Linux <code>libc.so.6</code> defines these symbols with a &ldquo;<code>GLIBC_2.2.5</code>&rdquo; version:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -s -W /usr/lib64/libc.so.6|grep __cxa_finalize
</span></span><span style="display:flex;"><span><span style="color:#888">1944: 00037cf0 535 FUNC GLOBAL DEFAULT 12 __cxa_finalize@@GLIBC_2.2.5
</span></span></span></code></pre></div>
<p>To fix the version issue, we can simply change the version to unspecified by setting its value to <code>1</code>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> s <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">filter</span>(<span style="color:#008000;font-weight:bold">lambda</span> e: e<span style="color:#666">.</span>has_version, libnative<span style="color:#666">.</span>dynamic_symbols):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> s<span style="color:#666">.</span>symbol_version<span style="color:#666">.</span>value <span style="color:#666">&gt;</span> <span style="color:#666">1</span>: <span style="color:#408080;font-style:italic"># Library-defined version</span>
</span></span><span style="display:flex;"><span>      s<span style="color:#666">.</span>symbol_version<span style="color:#666">.</span>value <span style="color:#666">=</span> <span style="color:#666">1</span> <span style="color:#408080;font-style:italic"># Set to unspecified</span></span></span></code></pre></div>
<p>And then build the modified library:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>libnative<span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;libnative-fixed.so&#34;</span>)</span></span></code></pre></div>
<p>Finally, we can load and execute the lifted library with <code>dlopen</code> / <code>dlsym</code>: (error handling being stripped for readability)</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">using</span> fnc_t <span style="color:#666">=</span> <span style="color:#b00040">uint64_t</span>(<span style="color:#666">*</span>)(<span style="color:#b00040">unsigned</span> <span style="color:#b00040">char</span><span style="color:#666">*</span>, <span style="color:#b00040">unsigned</span> <span style="color:#b00040">char</span><span style="color:#666">*</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">void</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">void</span><span style="color:#666">*</span> h <span style="color:#666">=</span> dlopen(<span style="color:#ba2121">&#34;./libnative-fixed.so&#34;</span>, RTLD_NOW);
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">void</span><span style="color:#666">*</span> sh <span style="color:#666">=</span> dlsym(h, <span style="color:#ba2121">&#34;_Z48TfcqPqf1lNhu0DC2qGsAAeML0SEmOBYX4jpYUnyT8qYWIlEqPhS_&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  fnc_t AES_128_encrypt <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">reinterpret_cast</span><span style="color:#666">&lt;</span>fnc_t<span style="color:#666">&gt;</span>(sh);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">unsigned</span> <span style="color:#b00040">char</span> plaintext[<span style="color:#666">16</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">unsigned</span> <span style="color:#b00040">char</span> ciphertext[<span style="color:#666">16</span>];
</span></span><span style="display:flex;"><span>  fread(plaintext, <span style="color:#666">1</span>, <span style="color:#666">16</span>, stdin);
</span></span><span style="display:flex;"><span>  AES_128_encrypt(plaintext, ciphertext);
</span></span><span style="display:flex;"><span>  fwrite(ciphertext, <span style="color:#666">1</span>, <span style="color:#666">16</span>, stdout);
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>}</span></span></code></pre></td></tr></table>
</div>
</div>
<p>This native library has a special structure that enables the transformation:</p>
<ol>
<li>It doesn&rsquo;t use functions specific to Android.</li>
<li>It doesn&rsquo;t use packed relocations.</li>
<li>It doesn&rsquo;t use exceptions.</li>
<li>It doesn&rsquo;t use Thread Local Storage (TLS).</li>
</ol>
<p>The first point is very uncommon for JNI libraries and this transformation won&rsquo;t be possible for usual libraries.</p>
<h2 id="eventually-breaking-the-white-box">Eventually breaking the white-box</h2>
<p>Now that we got a Linux binary of the AES white-box with standardized input/output, we&rsquo;re back into usual
white-box attacks business. The Differential Fault Analysis attack on white-box using our tools is largely
explained in a <a href="https://blog.quarkslab.com/differential-fault-analysis-on-white-box-aes-implementations.html">previous blogpost</a>.
In short, we inject statically some faults in the white-box tables (here,
we&rsquo;ll shoot on the entire <code>.rodata</code> section of the dynamic library), execute the AES on a constant input, and
observe the output for faults. These steps are automated in the <code>deadpool_dfa.Acquisition</code> function, part of
our <a href="https://github.com/SideChannelMarvels/Deadpool">SideChannelMarvels/Deadpool</a> repository.
Once we collected enough faulty outputs, we can apply a well-known
DFA attack to recover the AES key, which is implemented in the <code>phoenixAES.crack</code> function from the
<a href="https://github.com/SideChannelMarvels/JeanGrey">SideChannelMarvels/JeanGrey</a> repository.</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">deadpool_dfa</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">phoenixAES</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">processinput</span>(iblock, blocksize):
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> (<span style="color:#008000">bytes</span><span style="color:#666">.</span>fromhex(<span style="color:#ba2121">&#39;</span><span style="color:#b68;font-weight:bold">%0*x</span><span style="color:#ba2121">&#39;</span> <span style="color:#666">%</span> (<span style="color:#666">2</span><span style="color:#666">*</span>blocksize, iblock)), <span style="color:#008000;font-weight:bold">None</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">processoutput</span>(output, blocksize):
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000">int</span><span style="color:#666">.</span>from_bytes(output, byteorder<span style="color:#666">=</span><span style="color:#ba2121">&#39;big&#39;</span>, signed<span style="color:#666">=</span><span style="color:#008000;font-weight:bold">False</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>engine <span style="color:#666">=</span> deadpool_dfa<span style="color:#666">.</span>Acquisition(
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># main white-box executable</span>
</span></span><span style="display:flex;"><span>    targetbin<span style="color:#666">=</span><span style="color:#ba2121">&#39;./main64&#39;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># file where to inject faults, and a reference copy</span>
</span></span><span style="display:flex;"><span>    targetdata<span style="color:#666">=</span><span style="color:#ba2121">&#39;./libnative-fixed.so&#39;</span>, goldendata<span style="color:#666">=</span><span style="color:#ba2121">&#39;./libnative-fixed.so.gold&#39;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># hook to the DFA library, to validate faulty outputs</span>
</span></span><span style="display:flex;"><span>    dfa<span style="color:#666">=</span>phoenixAES,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># hooks to process I/O as expected by the white-box executable</span>
</span></span><span style="display:flex;"><span>    processinput<span style="color:#666">=</span>processinput, processoutput<span style="color:#666">=</span>processoutput,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># some tuning, telling we want to try up to single byte faults</span>
</span></span><span style="display:flex;"><span>    verbose<span style="color:#666">=</span><span style="color:#666">2</span>, minleaf<span style="color:#666">=</span><span style="color:#666">1</span>, minleafnail<span style="color:#666">=</span><span style="color:#666">1</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#408080;font-style:italic"># the libnative-fixed.so .rodata section address range</span>
</span></span><span style="display:flex;"><span>    addresses<span style="color:#666">=</span>[<span style="color:#666">0x6350</span>,<span style="color:#666">0x2b490</span>]
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>outputs <span style="color:#666">=</span> engine<span style="color:#666">.</span>run()[<span style="color:#666">0</span>][<span style="color:#666">0</span>]
</span></span><span style="display:flex;"><span>phoenixAES<span style="color:#666">.</span>crack(outputs)</span></span></code></pre></td></tr></table>
</div>
</div>
<p>Execution:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>Lvl 016 [0x000226DF-0x000226E0[ xor 0x86 -&gt; B25BE351AD6986FF15D1E152E7802EC7 GoodEncFault Column:1 Logged
</span></span><span style="display:flex;"><span>Lvl 016 [0x000226DF-0x000226E0[ xor 0x69 -&gt; B235E351806986FF15D1E1A4E780A6C7 GoodEncFault Column:1 Logged
</span></span><span style="display:flex;"><span>Saving 17 traces in dfa_enc_20180427_112029-112038_17.txt
</span></span><span style="display:flex;"><span>Last round key #N found:
</span></span><span style="display:flex;"><span>040D08DA68001026F3DC0D68897148B4</span></span></code></pre></div>
<p>The DFA recovers the last (tenth) round key but the AES key schedule is invertible so we can go back to the
original AES key:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> aes_keyschedule 040D08DA68001026F3DC0D68897148B4 <span style="color:#666">10</span>
</span></span><span style="display:flex;"><span><span style="color:#888">K00: 6C2893F21B6185E8567238CB78184945
</span></span></span></code></pre></div>
<p>The key falls in 10.2s and 3300 executions. This is indeed the correct AES key:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> <span style="color:#008000">echo</span> g1UlZafiuGdCgpTkWYjaZg3kE6qCd7kF3kV+nMKcGHc<span style="color:#666">=</span>|base64 -d|<span style="color:#b62;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#b62;font-weight:bold"></span><span style="color:#888">    openssl enc -d -aes-128-ecb -nopad -K 6C2893F21B6185E8567238CB78184945
</span></span></span><span style="display:flex;"><span><span style="color:#888">SECCON{owSkwPeH1CHQdPV9KWrSmz9n}
</span></span></span></code></pre></div>
<h2 id="final-words">Final Words</h2>
<p>We hope this little exercise will make you feel like using our tools!</p>
<p>The whitebox and all the scripts to convert the library and apply the attack are available online <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>
and LIEF has its own website<sup id="fnref1:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.</p>
<p>Thanks to all Quarkslab colleagues who proofread this article and provided valuable feedback.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Side-Channel Marvels repository, on <a href="https://github.com/SideChannelMarvels">GitHub</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>SECCON2016 Online CTF-Binary / Crypto500 Obfuscated AES, archived <a href="https://github.com/SECCON/SECCON2016_online_CTF/tree/master/Binary/500_Obfuscated%20AES">here</a>.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Sanghwan&rsquo;s Obfuscated AES Write-Up, in <a href="http://www.repo.kr/2016/12/seccon-2016-online-ctf-binarycrypto500_13.html">english</a>, <a href="http://www.repo.kr/2016/12/seccon-2016-online-ctf-binarycrypto500.html">korean</a> and <a href="http://www.repo.kr/2016/12/seccon-2016-online-ctf-binarycrypto500_30.html">japanese</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://lief-project.github.io">Library to Instrument Executable Formats</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref1:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>SECCON 2016 Obfuscated AES artifacts <a href="https://github.com/SideChannelMarvels/Deadpool/tree/master/wbs_aes_seccon2016">in Deadpool</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/18-05-when-sidechannelmarvels-meets-lief/featured.png"/></item><item><title>How to use frida on a non-rooted device</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/how-to-use-frida-on-a-non-rooted-device/</link><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/how-to-use-frida-on-a-non-rooted-device/</guid><description>This post explains how to use Frida gadget on a non-rooted device.</description><content:encoded><![CDATA[<p>This post is a part of the LIEF tutorials. It explains how to combine <a href="https://www.frida.re/">Frida</a> and <a href="https://lief-project.github.io/">LIEF</a> to
run <code>frida-gadget</code> on a non rooted device.</p>
<p><a href="https://lief-project.github.io/doc/latest/tutorials/09_frida_lief.html">See more</a></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/how-to-use-frida-on-a-non-rooted-device/featured.png"/></item><item><title>Have fun with LIEF and Executable Formats</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/17-11-have-fun-with-lief-and-executable-formats/</link><pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/17-11-have-fun-with-lief-and-executable-formats/</guid><description>This blog post introduces new features of LIEF as well as some uses cases.</description><content:encoded><![CDATA[<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href="https://blog.quarkslab.com/have-fun-with-lief-and-executable-formats.html">Quarkslab&rsquo;s blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<p>This blog post introduces new features of LIEF as well as some uses cases.</p>
<div class="alert alert-info" role="alert"  style="border: none !important; background-color: #FAFCFF">
  <strong>Tl;DR</strong>: LIEF v0.8.3 is out. The main changelog is available <a href="https://lief.quarkslab.com/doc/changelog.html#october-16-2017">here</a>
and packages can be downloaded on the <a href="https://lief.quarkslab.com/#download">official website</a>.
</div>
<p>To install the Python package:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> pip install lief
</span></span></code></pre></div>
<h2 id="development-process">Development process</h2>
<p>We attach a great importance to the automation of some development tasks like testing, distributing, packaging, etc. Here is a summary of these processes:</p>
<p>Each commits is tested on</p>
<ul>
<li>Linux - x86-64 - Python{2.7, 3.5, 3.6}</li>
<li>Windows - x86 / x86-64 - Python{2.7, 3.5, 3.6}</li>
<li>OSX - x86-64 - Python{2.7, 3.5, 3.6}</li>
</ul>
<p>The test suite includes:</p>
<ul>
<li>Tests on the Python API</li>
<li>Tests on the C API</li>
<li>Tests on the parsers</li>
<li>Tests on the builders</li>
</ul>
<p>If tests succeeds packages are automatically uploaded on the <a href="https://github.com/lief-project/packages">https://github.com/lief-project/packages</a> repository.</p>
<p>For tagged version, packages are uploaded on the Github release page: <a href="https://github.com/lief-project/LIEF/releases">https://github.com/lief-project/LIEF/releases</a>.
Dockerlief</p>
<h3 id="dockerlief">Dockerlief</h3>
<p>To facilitate the compilation and the use of LIEF, we created the <a href="https://github.com/lief-project/Dockerlief">Dockerlief</a>
repo which includes various
<a href="https://github.com/lief-project/Dockerlief/tree/v0.1.0/dockerlief/dockerfiles">Dockerfiles</a> as well as the
<code>dockerlief</code> utility. <code>dockerlief</code> is basically a wrapper on docker build .</p>
<p>Among Dockerfiles, we provide a <a href="https://github.com/lief-project/Dockerlief/blob/v0.1.0/dockerlief/dockerfiles/android.docker">Dockerfile</a>
to cross compile LIEF for Android (<code>ARM</code>, <code>AARCH64</code>, <code>x86</code>, <code>x86-64</code>)</p>
<p>To cross compile LIEF for Android ARM, one can run:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> dockerlief build --api-level <span style="color:#666">21</span> --arm lief-android
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">[INFO] - Location of the Dockerfiles: ~/dockerfiles
</span></span></span><span style="display:flex;"><span><span style="color:#888">[INFO] - Building Dockerfile: &#39;lief-android&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#888">[INFO] - Target architecture: armeabi-v7a
</span></span></span><span style="display:flex;"><span><span style="color:#888">[INFO] - Target API Level: 21
</span></span></span></code></pre></div>
<p>The SDK package <code>LIEF-0.8.3-Android_API21_armeabi-v7a.tar.gz</code> is automatically pulled from the Docker to
the current directory.</p>
<h3 id="integration-of-libfuzzer">Integration of LibFuzzer</h3>
<p>Fuzzing our own library is a good way to detect bugs, memory leak, unsanitized inputs &hellip;</p>
<p>Thus, we integrated <a href="https://llvm.org/docs/LibFuzzer.html">LibFuzzer</a> in the project.
Fuzzing the LIEF ELF, PE, Mach-O parser is as simple as:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&lt;LIEF/LIEF.hpp&gt;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&lt;vector&gt;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&lt;memory&gt;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00"></span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">extern</span> <span style="color:#ba2121">&#34;C&#34;</span> <span style="color:#b00040">int</span> LLVMFuzzerTestOneInput(<span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">uint8_t</span> <span style="color:#666">*</span>data, size_t size) {
</span></span><span style="display:flex;"><span>  std<span style="color:#666">::</span>vector<span style="color:#666">&lt;</span><span style="color:#b00040">uint8_t</span><span style="color:#666">&gt;</span> raw <span style="color:#666">=</span> {data, data <span style="color:#666">+</span> size};
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">try</span> {
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>unique_ptr<span style="color:#666">&lt;</span>LIEF<span style="color:#666">::</span>Binary<span style="color:#666">&gt;</span> b{LIEF<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse(raw)};
</span></span><span style="display:flex;"><span>  } <span style="color:#008000;font-weight:bold">catch</span> (<span style="color:#008000;font-weight:bold">const</span> LIEF<span style="color:#666">::</span>exception<span style="color:#666">&amp;</span> e) {
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>cout <span style="color:#666">&lt;&lt;</span> e.what() <span style="color:#666">&lt;&lt;</span> std<span style="color:#666">::</span>endl;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>}</span></span></code></pre></td></tr></table>
</div>
</div>
<p>To launch the fuzzer, one can run the following commands:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> make fuzz-elf   <span style="color:#408080;font-style:italic"># Launch ELF Fuzzer</span>
</span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> make fuzz-pe    <span style="color:#408080;font-style:italic"># Launch PE Fuzzer</span>
</span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> make fuzz-macho <span style="color:#408080;font-style:italic"># Launch MachO Fuzzer</span>
</span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> make fuzz       <span style="color:#408080;font-style:italic"># Launch ELF, PE and MachO Fuzzer</span>
</span></span></code></pre></div>
<h2 id="elf">ELF</h2>
<h3 id="play-with-elf-symbols---part-2">Play with ELF symbols - Part 2</h3>
<p>In the <a href="https://lief.quarkslab.com/doc/tutorials/03_elf_change_symbols.html">tutorial #03</a> we demonstrated
how to swap dynamic symbols between a binary and a library.
In this part, we will see how we can rename these symbols.</p>
<p>Changing symbol names is not a trivial modification, since modifying the string table of the <code>PT_DYNAMIC</code>
segment has side effects:</p>
<ul>
<li>It requires to update the hash table (GNU Hash / SYSV).</li>
<li>It usually requires to extend the <code>DYNAMIC</code> part of the ELF format.</li>
</ul>
<p>The previous version of LIEF already implements the rebuilding of the hash table but not the extending of
the <code>DYNAMIC</code> part.</p>
<p>With the <code>v0.8.3</code> we can extend the <code>DYNAMIC</code> part. Therefore:</p>
<ul>
<li>We can add new entries in the <code>.dynamic</code> section</li>
<li>We can change dynamic symbols names</li>
<li>We can change <code>DT_RUNPATH</code> and <code>DT_RPATH</code> without length restriction</li>
</ul>
<p>We will rename all <strong>imported</strong> functions of <code>gpg</code> that are imported from <code>libgcrypt.so.20</code> into
<code>a_very_long_name_of_function_XX</code> and all exported functions of <code>libgcrypt.so.20</code> into the same name
(<em>XX</em> is the symbol index). <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Load targets</span>
</span></span><span style="display:flex;"><span>gpg <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/gpg&#34;</span>)
</span></span><span style="display:flex;"><span>libgcrypt <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/lib/libgcrypt.so.20&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Change names</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> idx, lsym <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">enumerate</span>(<span style="color:#008000">filter</span>(<span style="color:#008000;font-weight:bold">lambda</span> e : e<span style="color:#666">.</span>exported, libgcrypt<span style="color:#666">.</span>dynamic_symbols)):
</span></span><span style="display:flex;"><span>  new_name <span style="color:#666">=</span> <span style="color:#ba2121">&#39;a_very_long_name_of_function_</span><span style="color:#b68;font-weight:bold">{:d}</span><span style="color:#ba2121">&#39;</span><span style="color:#666">.</span>format(idx)
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span>(<span style="color:#ba2121">&#34;New name for &#39;</span><span style="color:#b68;font-weight:bold">{}</span><span style="color:#ba2121">&#39;: </span><span style="color:#b68;font-weight:bold">{}</span><span style="color:#ba2121">&#34;</span><span style="color:#666">.</span>format(lsym<span style="color:#666">.</span>name, new_name))
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> bsym <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">filter</span>(<span style="color:#008000;font-weight:bold">lambda</span> e : e<span style="color:#666">.</span>name <span style="color:#666">==</span> lsym<span style="color:#666">.</span>name, gpg<span style="color:#666">.</span>dynamic_symbols):
</span></span><span style="display:flex;"><span>    bsym<span style="color:#666">.</span>name <span style="color:#666">=</span> new_name
</span></span><span style="display:flex;"><span>  lsym<span style="color:#666">.</span>name <span style="color:#666">=</span> new_name
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Write back</span>
</span></span><span style="display:flex;"><span>binary<span style="color:#666">.</span>write(gpg<span style="color:#666">.</span>name)
</span></span><span style="display:flex;"><span>libgcrypt<span style="color:#666">.</span>write(libgcrypt<span style="color:#666">.</span>name)</span></span></code></pre></td></tr></table>
</div>
</div>
<p>By using <code>readelf</code> we can check that function names have been modified:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -s ./gpg|grep <span style="color:#ba2121">&#34;a_very_long_name&#34;</span>
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">   2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND a_very_long_name_of_funct@GCRYPT_1.6 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND a_very_long_name_of_funct@GCRYPT_1.6 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">  11: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND a_very_long_name_of_funct@GCRYPT_1.6 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">  13: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND a_very_long_name_of_funct@GCRYPT_1.6 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">  ...
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#000080;font-weight:bold">$</span> readelf -s ./libgcrypt.so.20|grep <span style="color:#ba2121">&#34;a_very_long_name&#34;</span>
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">  88: 000000000000d050     6 FUNC    GLOBAL DEFAULT   10 a_very_long_name_of_funct@@GCRYPT_1.6
</span></span></span><span style="display:flex;"><span><span style="color:#888">  89: 000000000000dcd0    69 FUNC    GLOBAL DEFAULT   10 a_very_long_name_of_funct@@GCRYPT_1.6
</span></span></span><span style="display:flex;"><span><span style="color:#888">  90: 000000000000d310    34 FUNC    GLOBAL DEFAULT   10 a_very_long_name_of_funct@@GCRYPT_1.6
</span></span></span><span style="display:flex;"><span><span style="color:#888">  91: 000000000000de70    81 FUNC    GLOBAL DEFAULT   10 a_very_long_name_of_funct@@GCRYPT_1.6
</span></span></span><span style="display:flex;"><span><span style="color:#888">  ...
</span></span></span></code></pre></div>
<p><img src="./ida_gpg.png" alt=""></p>
<p>Now if we run the new <code>gpg</code> binary, we get the following error:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> ./gpg --output bar.txt --symmetric ./foo.txt
</span></span><span style="display:flex;"><span><span style="color:#888">relocation error: ./gpg: symbol a_very_long_name_of_function_8, version GCRYPT_1.6 not defined in file libgcrypt.so.20 with link time reference
</span></span></span></code></pre></div>
<p>Because the Linux loader tries to resolve the function <code>a_very_long_name_of_function_8</code> against
<code>/usr/lib/libgcrypt.so.20</code> and that library doesn&rsquo;t include the updated names we get the error.</p>
<p>One way to fix this error is to set the environment variable <code>LD_LIBRARY_PATH</code> to the current directory:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> <span style="color:#19177c">LD_LIBRARY_PATH</span><span style="color:#666">=</span>. ./gpg --output bar.txt --symmetric ./foo.txt
</span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> xxd ./bar.txt|head -n1
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">00000000: 8c0d 0407 0302 c5af 9fba cab1 9545 ebd2  .............E..
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#000080;font-weight:bold">$</span> <span style="color:#19177c">LD_LIBRARY_PATH</span><span style="color:#666">=</span>. ./gpg --output foo_decrypted.txt --decrypt ./bar.txt
</span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> xxd ./foo_decrypted.txt|head -n1
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">00000000: 4865 6c6c 6f20 576f 726c 640a            Hello World.
</span></span></span></code></pre></div>
<p>Another way to fix it is to add a new entry in <code>.dynamic</code> section.</p>
<p>As mentioned at the beginning, we can now add new entries in the <code>.dynamic</code> so let&rsquo;s add a <code>DT_RUNPATH</code> entry
with the <code>$ORIGIN</code> value so that the Linux loader resolves the modified <code>libgcrypt.so.20</code> instead of the system one:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">...</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Add a DT_RUNPATH entry</span>
</span></span><span style="display:flex;"><span>gpg <span style="color:#666">+=</span> lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>DynamicEntryRunPath(<span style="color:#ba2121">&#34;$ORIGIN&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Write back</span>
</span></span><span style="display:flex;"><span>binary<span style="color:#666">.</span>write(gpg<span style="color:#666">.</span>name)
</span></span><span style="display:flex;"><span>libgcrypt<span style="color:#666">.</span>write(libgcrypt<span style="color:#666">.</span>name)</span></span></code></pre></td></tr></table>
</div>
</div>
<p>And we don&rsquo;t need the <code>LD_LIBRARY_PATH</code> anymore:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -d ./gpg|grep RUNPATH
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">0x000000000000001d (RUNPATH)            Library runpath: [$ORIGIN]
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#000080;font-weight:bold">$</span> ./gpg --decrypt ./bar.txt
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">gpg: AES encrypted data
</span></span></span><span style="display:flex;"><span><span style="color:#888">gpg: encrypted with 1 passphrase
</span></span></span><span style="display:flex;"><span><span style="color:#888">Hello World
</span></span></span></code></pre></div>
<h3 id="hiding-its-symbols">Hiding its symbols</h3>
<p>While IDA v7.0 has been released recently, among the <a href="https://www.hex-rays.com/products/ida/7.0/index.shtml">changelog</a>
one can notice two changes:</p>
<blockquote>
<ul>
<li>ELF: describe symbols using symtab from DYNAMIC section</li>
<li>ELF: IDA now uses the PHT by default instead of the SHT to load segments from ELF files</li>
</ul>
</blockquote>
<p>These changes are partially true. Let&rsquo;s see what go wrong in IDA with the following snippet:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000">id</span> <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/id&#34;</span>)
</span></span><span style="display:flex;"><span>dynsym <span style="color:#666">=</span> <span style="color:#008000">id</span><span style="color:#666">.</span>get_section(<span style="color:#ba2121">&#34;.dynsym&#34;</span>)
</span></span><span style="display:flex;"><span>dynsym<span style="color:#666">.</span>entry_size <span style="color:#666">=</span> dynsym<span style="color:#666">.</span>size <span style="color:#666">//</span> <span style="color:#666">2</span>
</span></span><span style="display:flex;"><span><span style="color:#008000">id</span><span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;id_test&#34;</span>)</span></span></code></pre></td></tr></table>
</div>
</div>
<p>This snippet defines the size of <strong>one</strong> symbol as the entire size of <code>.dynsym</code> section divided by 2.
The <em>normal</em> size of ELF symbols would be:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(<span style="color:#008000">int</span>(lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>ELF32<span style="color:#666">.</span>SIZES<span style="color:#666">.</span>SYM)) <span style="color:#408080;font-style:italic"># For 32-bits</span>
</span></span><span style="display:flex;"><span><span style="color:#666">16</span>
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(<span style="color:#008000">int</span>(lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>ELF64<span style="color:#666">.</span>SIZES<span style="color:#666">.</span>SYM)) <span style="color:#408080;font-style:italic"># For 64-bits</span>
</span></span><span style="display:flex;"><span><span style="color:#666">24</span></span></span></code></pre></div>
<p>In the case of the 64-bits <code>id</code> binary, we set this size to <strong>924</strong>.</p>
<p>When opening <code>id_test</code> in IDA and forcing to use <strong>Segment</strong> for parsing and not <strong>Sections</strong> we get the
following imports:</p>
<div class="row">
  <div class="d-flex col-12 col-lg-4 align-middle mb-4 mb-sm-0">
  <img src="ida_loading.png" alt="IDA Loading Dialog" />
  </div>
  <div class="d-flex col-12 col-lg-8 align-middle">
  <img src="ida_imports.png" alt="IDA Loading Dialog" />
  </div>
</div>
<p>Only one import is resolved and the others are <strong>hidden</strong>.</p>
<p>Note that <code>id_test</code> is still executable:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> id_test
</span></span><span style="display:flex;"><span><span style="color:#888">uid=1000(romain) gid=1000(romain) ...
</span></span></span></code></pre></div>
<p>By using <code>readelf</code> we can still retrieve the symbols and we have an error indicating that symbol size is corrupted.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -s id_test
</span></span><span style="display:flex;"><span><span style="color:#888">readelf: Error: Section 5 has invalid sh_entsize of 000000000000039c
</span></span></span><span style="display:flex;"><span><span style="color:#888">readelf: Error: (Using the expected size of 24 for the rest of this dump)
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">Symbol table &#39;.dynsym&#39; contains 77 entries:
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Num:    Value          Size Type    Bind   Vis      Ndx Name
</span></span></span><span style="display:flex;"><span><span style="color:#888">   0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
</span></span></span><span style="display:flex;"><span><span style="color:#888">   1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND endgrent@GLIBC_2.2.5 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __uflow@GLIBC_2.2.5 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND getenv@GLIBC_2.2.5 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.2.5 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND abort@GLIBC_2.2.5 (2)
</span></span></span><span style="display:flex;"><span><span style="color:#888">   ...
</span></span></span></code></pre></div>
<p>In LIEF the (dynamic) symbol table address is computed through the <code>DT_SYMTAB</code> from the <code>PT_DYNAMIC</code> segment.</p>
<p>To compute the number of dynamic symbols LIEF uses three heuristics:</p>
<ol>
<li>Based on hash tables (<a href="https://github.com/lief-project/LIEF/blob/0.8.3/src/ELF/Parser.tcc#L711-L796">GNU Hash</a> / <a href="https://github.com/lief-project/LIEF/blob/0.8.3/src/ELF/Parser.tcc#L690-L708">Sysv Hash</a>)</li>
<li>Based on <a href="https://github.com/lief-project/LIEF/blob/0.8.3/src/ELF/Parser.tcc#L513-L648">relocations</a></li>
<li>Based on <a href="https://github.com/lief-project/LIEF/blob/0.8.3/src/ELF/Parser.tcc#L653-L672">sections</a></li>
</ol>
<p>Malwares start to use this kind of corruption as we will see in the next part.</p>
<h3 id="rootnik-malware">Rootnik Malware</h3>
<p>Rootnik is a malware targeting Android devices. It has been analyzed by Fortinet security researcher.</p>
<p>A full analysis of the malware is available on the <a href="https://blog.fortinet.com/2017/07/09/unmasking-android-malware-a-deep-dive-into-a-new-rootnik-variant-part-i">Fortinet blog</a>.</p>
<p>This part is focused on the ELF format analysis of one component: libshell.</p>
<p>Actually there are two libraries <code>libshella_2.10.3.1.so</code> and <code>libshellx_2.10.3.1.so</code>. As they have the same
purpose, we will use the x86 version.</p>
<p>First if we look at the ELF sections of <code>libshellx_2.10.3.1.so</code> we can notice that the <strong>address</strong>, <strong>offset</strong>
and <strong>size</strong> of some sections like <code>.text</code>, <code>.init_array</code>, <code>.dynstr</code>, <code>.dynsym</code> are set to 0.</p>
<p>This kind of modification is used to disturb tools that rely on <strong>sections</strong> to parse some ELF structures
(like objdump, readelf, IDA &hellip;)</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> readelf -S ./libshellx-2.10.3.1.so
</span></span><span style="display:flex;"><span><span style="color:#888">There are 21 section headers, starting at offset 0x2431c:
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">Section Headers:
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 1] .dynsym           DYNSYM          00000114 000114 000300 10   A  2   1  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 2] .dynstr           STRTAB          00000414 000414 0001e2 00   A  0   0  1
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 3] .hash             HASH            00000000 000000 000000 04   A  1   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 4] .rel.dyn          REL             00000000 000000 000000 08   A  1   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 5] .rel.plt          REL             00000000 000000 000000 08  AI  1   6  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 6] .plt              PROGBITS        00000000 000000 000000 04  AX  0   0 16
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 7] .text             PROGBITS        00000000 000000 000000 00  AX  0   0 16
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 8] .code             PROGBITS        00000000 000000 000000 00  AX  0   0 16
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [ 9] .eh_frame         PROGBITS        00000000 000000 000000 00   A  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [10] .eh_frame_hdr     PROGBITS        00000000 000000 000000 00   A  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [11] .fini_array       FINI_ARRAY      00000000 000000 000000 00  WA  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [12] .init_array       INIT_ARRAY      00000000 000000 000000 00  WA  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [13] .dynamic          DYNAMIC         0000ce50 00be50 0000f8 08  WA  2   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [14] .got              PROGBITS        00000000 000000 000000 00  WA  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [15] .got.plt          PROGBITS        00000000 000000 000000 00  WA  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [16] .data             PROGBITS        00000000 000000 000000 00  WA  0   0 16
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [17] .bss              NOBITS          0000d398 00c395 000000 00  WA  0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [18] .comment          PROGBITS        00000000 00c395 000045 01  MS  0   0  1
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [19] .note.gnu.gold-ve NOTE            00000000 00c3dc 00001c 00      0   0  4
</span></span></span><span style="display:flex;"><span><span style="color:#888">  [20] .shstrtab         STRTAB          00000000 024268 0000b1 00      0   0  1
</span></span></span><span style="display:flex;"><span><span style="color:#888">Key to Flags:
</span></span></span><span style="display:flex;"><span><span style="color:#888">  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
</span></span></span><span style="display:flex;"><span><span style="color:#888">  L (link order), O (extra OS processing required), G (group), T (TLS),
</span></span></span><span style="display:flex;"><span><span style="color:#888">  C (compressed), x (unknown), o (OS specific), E (exclude),
</span></span></span><span style="display:flex;"><span><span style="color:#888">  p (processor specific)
</span></span></span></code></pre></div>
<p>If we open the given library in IDA we have no exports, no imports and no sections:</p>
<p><img src="libshell_ida.png" alt="IDA Shella"></p>
<p>Based on the segments and dynamic entries we can recover most of these information:</p>
<ul>
<li><code>.init_array</code> address and size are available through the <code>DT_INIT_ARRAY</code> and <code>DT_INIT_ARRAYSZ</code> entries</li>
<li><code>.dynstr</code> address and size are available through the <code>DT_STRTAB</code> and <code>DT_STRSZ</code></li>
<li><code>.dynsym</code> address is available through the <code>DT_SYMTAB</code></li>
</ul>
<p>The script <a href="https://gist.github.com/romainthomas/c262be2c29ab374451663b9f6dcdfc0d">recover_shellx.py</a>
recovers the missing values, patch sections and rebuild a <em>fixed</em> library.</p>
<p><img src="libshell_FIXED_ida.png" alt="IDA Shella recovered"></p>
<p>Now if we open the new <code>libshellx-2.10.3.1_FIXED.so</code> we have access to imports / exports and some sections.
The <code>.init_array</code> section contains 2 functions:</p>
<ol>
<li><code>tencent652524168491435794009</code></li>
<li><code>sub_60C0</code></li>
</ol>
<p>The <code>tencent652524168491435794009</code> function basically do a stack alignment and the <code>sub_60C0</code> is one of the
decryption routines<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. This function is obfuscated with graph flattening and looks like to O-LLVM graph
flattening passe<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>:</p>
<p><img src="shellx_cfg.png" alt="CFG Flattening"></p>
<p>Fortunately there are few &ldquo;<em>relevant blocks</em>&rdquo; and there are not obfuscated.</p>
<p>The function <code>sub_60C0</code> basically iterates over the program headers to find the encrypted one and decrypt
it using a custom algorithm (based on shift, xor, etc).</p>
<p><img src="shellx_cfg_1.2.png" alt="CFG Flattening Handlers"></p>
<p><img src="shellx_cfg_2.2.png" alt="CFG Flattening Decryption Routine"></p>
<h3 id="triggering-cve-2017-1000249">Triggering CVE-2017-1000249</h3>
<p>The CVE-2017-1000249 is a stack based buffer overflow in the <code>file</code> utility.
It affects the versions <code>5.29</code>, <code>5.30</code> and <code>5.31</code>.</p>
<p>Basically the overflow occurs in the size of the note description.</p>
<p>Using LIEF we can trigger the overflow as follow:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>target <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/id&#34;</span>)
</span></span><span style="display:flex;"><span>note_build_id <span style="color:#666">=</span> target[lief<span style="color:#666">.</span>ELF<span style="color:#666">.</span>NOTE_TYPES<span style="color:#666">.</span>BUILD_ID]
</span></span><span style="display:flex;"><span>note_build_id<span style="color:#666">.</span>description <span style="color:#666">=</span> [<span style="color:#666">0x41</span>] <span style="color:#666">*</span> <span style="color:#666">30</span>
</span></span><span style="display:flex;"><span>target<span style="color:#666">.</span>write(<span style="color:#ba2121">&#34;id_overflow&#34;</span>)</span></span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> file --version
</span></span><span style="display:flex;"><span><span style="color:#888">file-5.29
</span></span></span><span style="display:flex;"><span><span style="color:#888">magic file from /usr/share/file/misc/magic
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#000080;font-weight:bold">$</span> id_overflow
</span></span><span style="display:flex;"><span><span style="color:#888">uid=1000(romain) gid=1000(romain) ...
</span></span></span><span style="display:flex;"><span><span style="color:#888"></span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#000080;font-weight:bold">$</span> file id_overflow
</span></span><span style="display:flex;"><span><span style="color:#888">*** buffer overflow detected ***: file terminated
</span></span></span><span style="display:flex;"><span><span style="color:#888">./id_overflow: [1] 3418 abort (core dumped)  file ./id_overflow
</span></span></span></code></pre></div>
<p>Here is the commit that introduced the bug: <a href="https://github.com/file/file/commit/9611f31313a93aa036389c5f3b15eea53510d4d1#diff-bc5c24ef9f39a5f4963ca28ecbc645b3L512">9611f3</a>.</p>
<h2 id="pe">PE</h2>
<p>The <em>Load Config</em> directory is now parsed into the <a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/PE/LoadConfigurations/LoadConfiguration.hpp">LoadConfiguration</a> object.
This structure evolves with the Windows versions and LIEF has been designed to support this evolution.
You can take a look at <a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/PE/LoadConfigurations/LoadConfigurationV0.hpp#L47-L52">LoadConfigurationV0</a>,
<a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/PE/LoadConfigurations/LoadConfigurationV6.hpp#L47-L54">LoadConfigurationV6</a>.</p>
<p>One can find the different versions of this structure in the following directories:</p>
<ul>
<li><code>include/LIEF/PE/LoadConfigurations</code></li>
<li><code>src/PE/LoadConfigurations</code></li>
</ul>
<p>The current version of LIEF is able to parse the structure up to Windows 10 build 15002 with the <em>hotpatch
table offset</em>.</p>
<p>Here are some examples of the <code>LoadConfiguration</code> API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> target <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;PE64_x86-64_binary_WinApp.exe&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> target<span style="color:#666">.</span>has_configuration
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> config <span style="color:#666">=</span> target<span style="color:#666">.</span>load_configuration
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> config<span style="color:#666">.</span>version
</span></span><span style="display:flex;"><span>WIN_VERSION<span style="color:#666">.</span>WIN10_0_15002
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">hex</span>(config<span style="color:#666">.</span>guard_rf_failure_routine)
</span></span><span style="display:flex;"><span><span style="color:#ba2121">&#39;0x140001040&#39;</span></span></span></code></pre></div>
<p>LIEF also provides an API to serialize any ELF or PE objects into JSON<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<p>For examples to transform <code>LoadConfiguration</code> object into JSON:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000;font-weight:bold">from</span> <span style="color:#00f;font-weight:bold">lief</span> <span style="color:#008000;font-weight:bold">import</span> to_json
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> to_json(config)
</span></span><span style="display:flex;"><span><span style="color:#ba2121">&#39;{&#34;characteristics&#34;:248,&#34;code_integrity&#34;:{&#34;catalog&#34;:0,&#34;catalog_offset&#34;:0 ... }}&#39;</span> <span style="color:#408080;font-style:italic"># Not fully printed</span></span></span></code></pre></div>
<p>One can also serialize the whole Binary object:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> to_json(target)
</span></span><span style="display:flex;"><span><span style="color:#ba2121">&#39;{&#34;data_directories&#34;:[{&#34;RVA&#34;:0,&#34;size&#34;:0,&#34;type&#34;:&#34;EXPORT_TABLE&#34;},{&#34;RVA&#34;:62584,&#34;section&#34; ...}}&#39;</span> <span style="color:#408080;font-style:italic"># # Not fully printed</span></span></span></code></pre></div>
<h2 id="mach-o">Mach-O</h2>
<p>For Mach-O binary, dynamic executables embed the <code>LC_DYLD_INFO</code> command which is associated with the
<code>dyld_info_command</code> structure.</p>
<p>The structure is basically a list of offsets and sizes pointing to other data structures.</p>
<p>From <code>/usr/lib/mach-o/loader.h</code> the structure looks like this:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">struct</span> <span style="color:#00f;font-weight:bold">dyld_info_command</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   cmd;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   cmdsize;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   rebase_off;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   rebase_size;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   bind_off;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   bind_size;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   weak_bind_off;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   weak_bind_size;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   lazy_bind_off;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   lazy_bind_size;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   export_off;
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">uint32_t</span>   export_size;
</span></span><span style="display:flex;"><span>};</span></span></code></pre></div>
<p>The <code>dyld</code> loader uses this structure to:</p>
<ul>
<li>Rebase the executable</li>
<li>Bind symbols to addresses</li>
<li>Retrieve exported functions (or symbols)</li>
</ul>
<p>Whereas in the ELF and PE format relocations are basically a <strong>table</strong>, Mach-O format uses <strong>byte streams</strong> to
rebase the image and to bind symbols with addresses. For exports it uses a <strong>trie</strong> as subjacent structure.</p>
<p>In the new version of LIEF, the Mach-O parser is able to handle these underlying structures to provide an user-friendly API:</p>
<p>The export trie is represented by the <a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/MachO/ExportInfo.hpp">ExportInfo</a>
object which is usually tied to a <a href="https://github.com/lief-project/LIEF/blob/master/include/LIEF/MachO/Symbol.hpp">Symbol</a>.
The binding byte stream is represented trough the <a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/MachO/BindingInfo.hpp">BindingInfo</a> object.</p>
<p>For the rebase byte stream, the parser create virtual relocations to model the rebasing process.
These virtual relocations are represented by the <a href="https://github.com/lief-project/LIEF/blob/0.8.3/include/LIEF/MachO/RelocationDyld.hpp">RelocationDyld</a>
object and among other attributes it contains <code>address</code>, <code>size</code> and <code>type</code><sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>.</p>
<p>Here is an example using the Python API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">id</span> <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/id&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(<span style="color:#008000">id</span><span style="color:#666">.</span>relocations[<span style="color:#666">0</span>])
</span></span><span style="display:flex;"><span><span style="color:#666">100002000</span> POINTER <span style="color:#666">64</span> DYLDINFO __DATA<span style="color:#666">.</span>__eh_frame dyld_stub_binder
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(<span style="color:#008000">id</span><span style="color:#666">.</span>has_dyld_info)
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> dyldinfo <span style="color:#666">=</span> <span style="color:#008000">id</span><span style="color:#666">.</span>dyld_info
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(dyldinfo<span style="color:#666">.</span>bindings[<span style="color:#666">0</span>])
</span></span><span style="display:flex;"><span>Class:       STANDARD
</span></span><span style="display:flex;"><span>Type:        POINTER
</span></span><span style="display:flex;"><span>Address:     <span style="color:#666">0x100002010</span>
</span></span><span style="display:flex;"><span>Symbol:      ___stderrp
</span></span><span style="display:flex;"><span>Segment:     __DATA
</span></span><span style="display:flex;"><span>Library:     <span style="color:#666">/</span>usr<span style="color:#666">/</span>lib<span style="color:#666">/</span>libSystem<span style="color:#666">.</span>B<span style="color:#666">.</span>dylib
</span></span><span style="display:flex;"><span><span style="color:#666">&gt;&gt;&gt;</span> <span style="color:#008000">print</span>(dyldinfo<span style="color:#666">.</span>exports[<span style="color:#666">0</span>])
</span></span><span style="display:flex;"><span>Node Offset: <span style="color:#666">18</span>
</span></span><span style="display:flex;"><span>Flags:       <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>Address:     <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>Symbol:      __mh_execute_header</span></span></code></pre></div>
<h2 id="conclusion">Conclusion</h2>
<p>In this release we did a large improvement of the ELF builder. Mach-O and PE parts gain new objects and new
functions. LIEF is now available on <a href="https://pypi.python.org/pypi/lief">pypi</a>
and can be added in the requirements of Python projects whatever the Python version and the target platform.</p>
<p>Since the <code>v0.7.0</code> LIEF has been presented at <a href="https://prog2017.rmll.info/programme/securite-entre-transparence-et-opacite/lief-bibliotheque-d-instrumentation-de-formats-executables-mais-ca-fait-bife-c?lang=en">RMLL</a>
and the <a href="http://www.misp-project.org/">MISP</a> project uses it for its <em>PyMISP objects</em>.</p>
<p>Some may complain about the C API. They are right! Until the <code>v1.0.0</code> we will provide a minimal C API.
Once C++ API is stable we plan to provide full APIs for Python, C, Java, OCaml<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>, etc.</p>
<p>Next version should be focused on the Mach-O builder especially for adding sections and segments.
We also plan to support PE <code>.NET</code> headers and fix some performances issues.</p>
<p>For questions you can join the <a href="https://gitter.im/lief-project">Gitter channel</a>.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>All Python examples are done with the 3.5 version&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>As mentioned in the Fortinet blog post, the library is packed.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>See the blog post about O-LLVM analysis: <a href="https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html">https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>This feature is not yet available for MachO objects&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>Due to the inheritance relationship and abstraction these attributes are located in the MachO::Relocation and LIEF::Relocation objects.&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p><a href="https://github.com/aziem/LIEF-ocaml">https://github.com/aziem/LIEF-ocaml</a>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/17-11-have-fun-with-lief-and-executable-formats/featured.png"/></item><item><title>Open-sourcing LIEF</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/lief-release/</link><pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/lief-release/</guid><description>We are open-sourcing LIEF, a library to parse and manipulate ELF, PE and Mach-O binary formats. This blog post explains the purpose of this project and some parts of its architecture.</description><content:encoded><![CDATA[<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="background-color: #FAFCFF">
    <div class="d-flex px-3"><div>
        <div class="icon icon-sm icon-secondary">
          <span class="fa-duotone fa-link-horizontal" style="color: #084298" ></span>
        </div>
      </div>
      <div class="ps-4">
        <span class="h6 m-0 mb-1"  style="color: #084298">
        This post has been originally posted on the <a href=https://blog.quarkslab.com/lief-library-to-instrument-executable-formats.html>Quarkslab&rsquo;s blog</a>
        </span>
      </div>
    </div>
  </div>
</div>
<h1 id="executable-file-formats-in-a-nutshell">Executable File Formats in a Nutshell</h1>
<p>When dealing with executable files, the first layer of information is the format in which the code is wrapped. We can see an executable file format
as an envelope. It contains information so that the postman (i.e. Operating System) can handle and deliver (i.e. execute) it.
The message wrapped by this envelope would be the machine code.</p>
<p>There are mainly three mainstream formats, one per OS:</p>
<ul>
<li><strong>P</strong>ortable <strong>E</strong>xecutable (<strong>PE</strong>) for Windows systems</li>
<li><strong>E</strong>xecutable and <strong>L</strong>inkable <strong>F</strong>ormat (<strong>ELF</strong>) for UN*X systems (Linux, Android&hellip;).</li>
<li>Mach-O for OS-X, iOS&hellip;</li>
</ul>
<p>Other executable file formats, such as <code>COFF</code>, exist  but they are less relevant.</p>
<p>Usually each format has a header which describes at least the target architecture, the program&rsquo;s entry point and the type of the wrapped object (executable, library&hellip;)
Then we have blocks of data that will be mapped by the OS&rsquo;s loader. These blocks of data could hold machine code (<code>.text</code>), read-only data (<code>.rodata</code>) or other OS specific information.</p>
<p>For PE there is only one kind of such block: <strong>Section</strong>. For ELF and Mach-O formats, a section has a different meaning. In these formats,
sections are used by the <strong>linker</strong> at the <strong>compilation</strong> step, whereas <strong>segments</strong> (second type of block) are used by the OS&rsquo;s loader at <strong>execution</strong> step. Thus
sections are not mandatory for ELF and Mach-O formats and can be removed without affecting the execution.</p>
<h1 id="purpose-of-lief">Purpose of LIEF</h1>
<p>It turns out that many projects need to parse executable file formats but don&rsquo;t use a <em>standard</em> library and re-implement their own parser (and the wheel).
Moreover, these parsers are usually bound to one language.</p>
<p>On Unix system one can find the <code>objdump</code> and <code>objcopy</code> utilities but they are limited to Unix and the API is not user-friendly.</p>
<p>The purpose of LIEF is to fill this void:</p>
<ul>
<li>Providing a cross platform library which can parse and modify (in a certain extent) ELF, PE and Mach-O formats using a common abstraction</li>
<li>Providing an API for different languages (Python, C++, C&hellip;)</li>
<li>Abstract common features from the different formats (Section, header, entry point, symbols&hellip;)</li>
</ul>
<p>The following snippets show how to obtain information about an executable using different API of LIEF:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># ELF</span>
</span></span><span style="display:flex;"><span>  binary <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span>(binary)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># PE</span>
</span></span><span style="display:flex;"><span>  binary <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;C:</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">Windows</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">explorer.exe&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span>(binary)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># Mach-O</span>
</span></span><span style="display:flex;"><span>  binary <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span>(binary)
</span></span></code></pre></div><p>With the <code>C++</code> API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&lt;LIEF/LIEF.hpp&gt;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00"></span>  <span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">int</span> argc, <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">**</span> argv) {
</span></span><span style="display:flex;"><span>    LIEF<span style="color:#666">::</span>ELF<span style="color:#666">::</span>Binary<span style="color:#666">*</span>   elf   <span style="color:#666">=</span> LIEF<span style="color:#666">::</span>ELF<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>);
</span></span><span style="display:flex;"><span>    LIEF<span style="color:#666">::</span>PE<span style="color:#666">::</span>Binary<span style="color:#666">*</span>    pe    <span style="color:#666">=</span> LIEF<span style="color:#666">::</span>PE<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse(<span style="color:#ba2121">&#34;C:</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">Windows</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">explorer.exe&#34;</span>);
</span></span><span style="display:flex;"><span>    LIEF<span style="color:#666">::</span>MachO<span style="color:#666">::</span>Binary<span style="color:#666">*</span> macho <span style="color:#666">=</span> LIEF<span style="color:#666">::</span>MachO<span style="color:#666">::</span>Parser<span style="color:#666">::</span>parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>cout <span style="color:#666">&lt;&lt;</span> <span style="color:#666">*</span>elf   <span style="color:#666">&lt;&lt;</span> std<span style="color:#666">::</span>endl;
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>cout <span style="color:#666">&lt;&lt;</span> <span style="color:#666">*</span>pe    <span style="color:#666">&lt;&lt;</span> std<span style="color:#666">::</span>endl;
</span></span><span style="display:flex;"><span>    std<span style="color:#666">::</span>cout <span style="color:#666">&lt;&lt;</span> <span style="color:#666">*</span>macho <span style="color:#666">&lt;&lt;</span> std<span style="color:#666">::</span>endl;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">delete</span> elf;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">delete</span> pe;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">delete</span> macho;
</span></span><span style="display:flex;"><span>  }
</span></span></code></pre></div><p>And finally with the <code>C</code> API:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#bc7a00">#include</span> <span style="color:#bc7a00">&lt;LIEF/LIEF.h&gt;</span><span style="color:#bc7a00">
</span></span></span><span style="display:flex;"><span><span style="color:#bc7a00"></span>  <span style="color:#b00040">int</span> <span style="color:#00f">main</span>(<span style="color:#b00040">int</span> argc, <span style="color:#008000;font-weight:bold">const</span> <span style="color:#b00040">char</span><span style="color:#666">**</span> argv) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    Elf_Binary_t<span style="color:#666">*</span>    elf_binary     <span style="color:#666">=</span> elf_parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>);
</span></span><span style="display:flex;"><span>    Pe_Binary_t<span style="color:#666">*</span>     pe_binary      <span style="color:#666">=</span> pe_parse(<span style="color:#ba2121">&#34;C:</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">Windows</span><span style="color:#b62;font-weight:bold">\\</span><span style="color:#ba2121">explorer.exe&#34;</span>);
</span></span><span style="display:flex;"><span>    Macho_Binary_t<span style="color:#666">**</span> macho_binaries <span style="color:#666">=</span> macho_parse(<span style="color:#ba2121">&#34;/usr/bin/ls&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    Pe_Section_t<span style="color:#666">**</span>    pe_sections    <span style="color:#666">=</span> pe_binary<span style="color:#666">-&gt;</span>sections;
</span></span><span style="display:flex;"><span>    Elf_Section_t<span style="color:#666">**</span>   elf_sections   <span style="color:#666">=</span> elf_binary<span style="color:#666">-&gt;</span>sections;
</span></span><span style="display:flex;"><span>    Macho_Section_t<span style="color:#666">**</span> macho_sections <span style="color:#666">=</span> macho_binaries[<span style="color:#666">0</span>]<span style="color:#666">-&gt;</span>sections;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; pe_sections[i] <span style="color:#666">!=</span> <span style="color:#008000">NULL</span>; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>      printf(<span style="color:#ba2121">&#34;%s</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span>, pe_sections[i]<span style="color:#666">-&gt;</span>name)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; elf_sections[i] <span style="color:#666">!=</span> <span style="color:#008000">NULL</span>; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>      printf(<span style="color:#ba2121">&#34;%s</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span>, elf_sections[i]<span style="color:#666">-&gt;</span>name)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> (size_t i <span style="color:#666">=</span> <span style="color:#666">0</span>; macho_sections[i] <span style="color:#666">!=</span> <span style="color:#008000">NULL</span>; <span style="color:#666">++</span>i) {
</span></span><span style="display:flex;"><span>      printf(<span style="color:#ba2121">&#34;%s</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span>, macho_sections[i]<span style="color:#666">-&gt;</span>name)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    elf_binary_destroy(elf_binary);
</span></span><span style="display:flex;"><span>    pe_binary_destroy(pe_binary);
</span></span><span style="display:flex;"><span>    macho_binaries_destroy(macho_binaries);
</span></span><span style="display:flex;"><span>  }
</span></span></code></pre></div><p>LIEF supports FAT-MachO and one can iterate over binaries as follows:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>  binaries <span style="color:#666">=</span> lief<span style="color:#666">.</span>MachO<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;/usr/lib/libc++abi.dylib&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> binary <span style="color:#a2f;font-weight:bold">in</span> binaries:
</span></span><span style="display:flex;"><span>    <span style="color:#008000">print</span>(binary)
</span></span></code></pre></div><div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    The above script uses the <code>lief.MachO.parse</code> function instead of the <code>lief.parse</code> function because <code>lief.parse</code> returns a <strong>single</strong> <code>lief.MachO.binary</code> object
whereas <code>lief.MachO.parse</code> returns a <strong>list</strong> of <code>lief.MachO.binary</code> (according to the FAT-MachO format).
  </div>
  </div>
  </div>
</div>
<p>Along with standard format components like headers, sections, import table, load commands, symbols, etc. LIEF is also able to parse PE Authenticode:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>  driver <span style="color:#666">=</span> lief<span style="color:#666">.</span>parse(<span style="color:#ba2121">&#34;driver.sys&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> crt <span style="color:#a2f;font-weight:bold">in</span> driver<span style="color:#666">.</span>signature<span style="color:#666">.</span>certificates:
</span></span><span style="display:flex;"><span>    <span style="color:#008000">print</span>(crt)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">  Version:             3
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Serial Number:       61:07:02:dc:00:00:00:00:00:0b
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Signature Algorithm: SHA1_WITH_RSA_ENCRYPTION
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Valid from:          2005-9-15 21:55:41
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Valid to:            2016-3-15 22:5:41
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Issuer:              DC=com, DC=microsoft, CN=Microsoft Root Certificate Authority
</span></span></span><span style="display:flex;"><span><span style="color:#888">  Subject:             C=US, ST=Washington, L=Redmond, O=Microsoft Corporation, CN=Microsoft Windows Verification PCA
</span></span></span><span style="display:flex;"><span><span style="color:#888">  ...
</span></span></span></code></pre></div><p>Full API documentation is available here</p>
<ul>
<li><a href="https://lief-project.github.io/doc/latest/api/python/index.html">Python API</a></li>
<li><a href="https://lief-project.github.io/doc/latest/api/cpp/index.html">C++ API</a></li>
<li><a href="https://lief-project.github.io/doc/latest/api/c/index.html">C API</a></li>
</ul>
<h1 id="architecture">Architecture</h1>
<p>In the <code>LIEF</code> architecture, each format implements at least the following classes:</p>
<ul>
<li>Parser: Parse the format and decompose it into a <code>Binary</code> class</li>
<li>Binary: Modelize the format and provide an API to modify and explore it.</li>
<li>Builder: Transform the binary object into a valid file.</li>
</ul>
<figure><img src="archi.png"/>
</figure>

<p>To factor common characteristics in formats we have an inheritance relationship between these characteristics.</p>
<p>For symbols it gives the following diagram:</p>
<figure><img src="symbol_inheritance.png"/>
</figure>

<p>It enables to write cross-format utility like <code>nm</code>. <code>nm</code> is a Unix utility to list symbols in an executable. The source code is available here: <a href="https://github.com/gittup/binutils/blob/0af702d47a443acea853b84157c2e81f6c131e77/binutils/nm.c">binutils</a></p>
<p>With the given inheritance relationship one can write this utility for the three formats in a single script:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">lief</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">sys</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">nm</span>(binary):
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> symbol <span style="color:#a2f;font-weight:bold">in</span> binary<span style="color:#666">.</span>symbols:
</span></span><span style="display:flex;"><span>      <span style="color:#008000">print</span>(symbol)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> __name__ <span style="color:#666">==</span> <span style="color:#ba2121">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    r <span style="color:#666">=</span> nm(sys<span style="color:#666">.</span>argv[<span style="color:#666">1</span>])
</span></span><span style="display:flex;"><span>    sys<span style="color:#666">.</span>exit(r)
</span></span></code></pre></div><h1 id="conclusion">Conclusion</h1>
<p>As LIEF is still a young project we hope to have feedback, ideas, suggestions and pull requests.</p>
<p>The source code is available here: <a href="https://github.com/lief-project">https://github.com/lief-project</a> (under Apache 2.0 license) and the associated website: <a href="http://lief.quarkslab.com">http://lief.quarkslab.com</a></p>
<p>If you are interested in use cases, you can take a look at these tutorials:</p>
<ul>
<li><a href="https://lief-project.github.io/doc/latest/tutorials/01_play_with_formats.html">Parse and manipulate formats</a></li>
<li><a href="https://lief-project.github.io/doc/latest/tutorials/02_pe_from_scratch.html">Create a PE from scratch</a></li>
<li><a href="https://lief-project.github.io/doc/latest/tutorials/03_elf_change_symbols.html">Play with ELF symbols</a></li>
<li><a href="https://lief-project.github.io/doc/latest/tutorials/04_elf_hooking.html">Hooking</a></li>
<li><a href="https://lief-project.github.io/doc/latest/tutorials/05_elf_infect_plt_got.html">Infecting the PLT/GOT</a></li>
</ul>
<p>The project will be presented at the <a href="http://cyber.science-japon.org/">Third French Japanese Meeting on Cybersecurity</a></p>
<h1 id="contact">Contact</h1>
<ul>
<li>lief [at] quarkslab [dot] com</li>
<li>Gitter: <a href="https://gitter.im/lief-project">lief-project</a></li>
</ul>
<h1 id="thanks">Thanks</h1>
<p>Thanks to Serge Guelton and Adrien Guinet for their advice about the design and their code review. Thanks to Quarkslab for making this project open-source.</p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/lief-release/featured.png"/></item><item><title>HITB 2015 Write-up - Crypto 300</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/15-11-hitb2015-crypto300/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/15-11-hitb2015-crypto300/</guid><description>Write-up for the Crypto 300 challenge</description><content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>The crypto 300 challenge was about RSA with a special generation of the prime numbers $p$ and $q$.
We were given a mail <a href="mail.msg">mail.msg</a> which has been encrypted with RSA and whose the public key is in the <a href="hitbctf.crt">hitbctf.crt</a> certificate.</p>
<h2 id="rsas-parameters-construction">RSA&rsquo;s Parameters Construction</h2>
<p>The modulus $N$ is built by choosing randomly a first prime number $p$, the second prime number $q$ is constructed in the following way:</p>
<p>$$\alpha \cdot (p - 1) \equiv 1 \pmod{e}$$</p>
<p>$$q = (p\alpha \bmod e) + k\cdot e$$</p>
<p>$k$ is a positive integer such as $q$ is a prime number and $e$ is the public exponent which is also a random prime number.</p>
<p>The following code is the implementation in Python:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">gen_rsa_parameters</span>():
</span></span><span style="display:flex;"><span>    r <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">63</span>)
</span></span><span style="display:flex;"><span>    e <span style="color:#666">=</span> <span style="color:#008000">int</span>(r<span style="color:#666">.</span>encode(<span style="color:#ba2121">&#39;hex&#39;</span>), <span style="color:#666">16</span>)
</span></span><span style="display:flex;"><span>    e <span style="color:#666">=</span> next_prime(e)
</span></span><span style="display:flex;"><span>    r <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">64</span>)
</span></span><span style="display:flex;"><span>    p <span style="color:#666">=</span> <span style="color:#008000">int</span>(r<span style="color:#666">.</span>encode(<span style="color:#ba2121">&#39;hex&#39;</span>), <span style="color:#666">16</span>)
</span></span><span style="display:flex;"><span>    p <span style="color:#666">=</span> next_prime(p)
</span></span><span style="display:flex;"><span>    q <span style="color:#666">=</span> (p<span style="color:#666">*</span>modinv(p<span style="color:#666">-</span><span style="color:#666">1</span>, e)<span style="color:#666">%</span>e)
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">while</span> <span style="color:#a2f;font-weight:bold">not</span> is_prime(q):
</span></span><span style="display:flex;"><span>        q <span style="color:#666">+=</span> e
</span></span><span style="display:flex;"><span>    N <span style="color:#666">=</span> p<span style="color:#666">*</span>q
</span></span><span style="display:flex;"><span>    phi <span style="color:#666">=</span> (p<span style="color:#666">-</span><span style="color:#666">1</span>)<span style="color:#666">*</span>(q<span style="color:#666">-</span><span style="color:#666">1</span>)
</span></span><span style="display:flex;"><span>    d <span style="color:#666">=</span> modinv(e,phi)
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> N,e,d,p,q
</span></span></code></pre></div><h2 id="theoretical-attack">Theoretical attack</h2>
<p>Let&rsquo;s $N^{\prime} = N \bmod{e}$. So we have</p>
<p>\begin{align}
N^{\prime} &amp; \equiv &amp; p \cdot q \pmod{e} \\\
&amp; \equiv &amp; p \cdot ((p\alpha \bmod e) + k\cdot e) \pmod{e} \\\
&amp; \equiv &amp; p^2\alpha \pmod{e} \\\
\end{align}</p>
<p>We have $\alpha$ in the equation so we can introduce $p - 1$ to remove $\alpha$</p>
<p>\begin{align}
N^{\prime} &amp; \equiv &amp; (p - 1 + 1)^2\alpha \pmod{e} \\\
&amp; \equiv &amp; (p - 1)^2\alpha + 2(p - 1)\alpha + \alpha \pmod{e} \\\
&amp; \equiv &amp; (p - 1) + 2 + \alpha \pmod{e} \\\
(p - 1)N^{\prime} &amp; \equiv &amp; (p - 1)^2 + 2(p - 1) + 1 \pmod{e}
\end{align}</p>
<p>$$\boxed{(p - 1)^2 - (N^{\prime} - 2)(p - 1) + 1 \equiv 0 \pmod{e}}$$</p>
<p>Now we have a quadratic equation which only depends on $p$.</p>
<p>Let&rsquo;s $X = p - 1$ and suppose that $N^{\prime} - 2$ is even and $N^{\prime} - 2 = 2b$.</p>
<p>\begin{align}
X^2 - 2bX + 1 &amp; \equiv &amp; 0 &amp; \pmod{e} \\\
(X - b)^2 - b^2 + 1 &amp; \equiv &amp; 0 &amp; \pmod{e}\\\
(X - b)^2 &amp; \equiv &amp; b^2 - 1 &amp; \pmod{e}
\end{align}</p>
<p>by using <a href="https://en.wikipedia.org/wiki/Quadratic_residue">quadratic residue</a> we can find a solution. We can also use <em>SAGE</em> and the <code>sqrt()</code> function:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>Np <span style="color:#666">=</span> N <span style="color:#666">%</span> e
</span></span><span style="display:flex;"><span>b <span style="color:#666">=</span> (Np <span style="color:#666">-</span> <span style="color:#666">2</span>) <span style="color:#666">/</span> <span style="color:#666">2</span>
</span></span><span style="display:flex;"><span>p <span style="color:#666">=</span> Mod(<span style="color:#008000">pow</span>(b, <span style="color:#666">2</span>) <span style="color:#666">-</span> <span style="color:#666">1</span>, e)<span style="color:#666">.</span>sqrt() <span style="color:#666">+</span> b <span style="color:#666">+</span> <span style="color:#666">1</span>
</span></span></code></pre></div><p>At this point, we find $p \bmod{e}$ but not $p$ !</p>
<p>I tried to find $p$ by adding some $e$ but the <em>distance</em> between $p$ and $p \bmod{e}$ is huge. So I had to find another way.</p>
<p>By knowing $p \bmod{e}$ we can compute $\alpha$. Remember $$\alpha \cdot (p - 1) \equiv 1 \pmod{e}$$ and by having $\alpha$ and $p \bmod{e}$ we can brute force $q$ by adding $e$ until $(p\alpha \bmod e) + k\cdot e$ is prime and it divide $N$.</p>
<p>We did the assumption that $N^{\prime} - 2$ has to be even (so $N^{\prime}$ must be even) and in the certificate $N^{\prime}$ is even so everything is right.</p>
<h2 id="pratical-attack">Pratical Attack</h2>
<p>First we have to extract the modulus $N$ and the public key $e$ from the certificate:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-console" data-lang="console"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">$</span> openssl x509 -in hitbctf.crt -text -noout
</span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""></span><span style="color:#888">Certificate:
</span></span></span><span style="display:flex;"><span><span style="color:#888">    Data:
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Version: 1 (0x0)
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Serial Number: 18379438180976429416 (0xff10e1a5ac5a0968)
</span></span></span><span style="display:flex;"><span><span style="color:#888">    Signature Algorithm: sha1WithRSAEncryption
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Issuer: C=NL, ST=Noord-Holland, L=Amsterdam, O=HITB, OU=CTF
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Validity
</span></span></span><span style="display:flex;"><span><span style="color:#888">            Not Before: May 24 09:58:26 2015 GMT
</span></span></span><span style="display:flex;"><span><span style="color:#888">            Not After : May 23 09:58:26 2016 GMT
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Subject: C=NL, ST=Noord-Holland, L=Amsterdam, O=HITB, OU=CTF
</span></span></span><span style="display:flex;"><span><span style="color:#888">        Subject Public Key Info:
</span></span></span><span style="display:flex;"><span><span style="color:#888">            Public Key Algorithm: rsaEncryption
</span></span></span><span style="display:flex;"><span><span style="color:#888">                Public-Key: (1024 bit)
</span></span></span><span style="display:flex;"><span><span style="color:#888">                Modulus:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    00:e6:eb:89:c1:8d:49:c9:a2:02:2b:e0:b4:65:14:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    6e:0f:90:45:1e:a3:4c:6b:60:56:00:4e:bd:15:59:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    55:b1:35:96:c2:d6:83:ad:2f:23:6b:0b:2c:0e:0b:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    88:83:b5:d6:cb:8a:0b:4f:f9:b7:eb:64:8c:95:2b:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    6b:ef:5a:6f:04:f5:64:17:f5:1c:a9:14:d9:ea:73:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    e7:dd:c5:f2:0d:ce:c3:9c:e8:4b:72:2a:0c:f3:d8:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    5e:80:ce:78:64:63:e1:44:f6:1d:b5:9c:cf:45:ff:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    0e:d3:7f:d0:ce:bd:37:a5:8d:8a:4b:08:33:9e:a3:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    2c:bc:ab:61:64:03:fd:2c:c5
</span></span></span><span style="display:flex;"><span><span style="color:#888">                Exponent:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    69:60:2d:93:8a:81:5f:14:cf:9f:b8:36:c2:e0:4d:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    4d:De:82:ba:fc:8d:56:c2:6d:8c:89:ef:3c:40:69:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    5d:d5:d4:ef:a7:36:36:43:15:14:95:f3:8c:bf:24:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    ae:94:30:92:40:79:12:00:1b:17:f5:53:33:9e:92:
</span></span></span><span style="display:flex;"><span><span style="color:#888">                    70:70:49
</span></span></span><span style="display:flex;"><span><span style="color:#888">    Signature Algorithm: sha1WithRSAEncryption
</span></span></span><span style="display:flex;"><span><span style="color:#888">         17:2b:ea:be:90:ad:98:f2:2b:ff:f5:61:d3:ea:af:fb:35:3a:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         67:10:91:13:db:60:55:d9:09:8b:c2:1a:cf:6b:c6:1f:f2:10:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         7a:d1:7b:9d:ff:10:f2:f2:c0:a9:f5:aa:2e:09:93:40:88:92:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         7d:98:ff:e1:cb:dc:db:35:8d:e0:4b:21:99:76:bf:db:04:a2:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         62:a4:18:4e:fc:bb:a7:53:be:6a:a1:ef:ec:15:86:c1:f1:1e:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         87:6a:e9:af:fe:d1:08:eb:de:22:28:c4:5e:be:f1:41:0a:ca:
</span></span></span><span style="display:flex;"><span><span style="color:#888">         cf:cf:da:63:b1:c1:56:e8:0c:8e:56:7f:08:94:0d:2b:2a:08:
</span></span></span></code></pre></div><p><code>N = 1621575882314321757502664197090844942567381491984167028188381926885851</code>
<code>995558397927547394115469298694885747314992315746872071523931715177680193273</code>
<code>386465775883129725436206653605910592810579794603402792446164893148622893121</code>
<code>957048204358672599654432857497196823273138934901636721473789115585263150131</code>
<code>66594183212229</code></p>
<p><code>e = 21558488234539889837938770635971330903489839146766895224490179041465516</code>
<code>1931455822669631548838317075220811407344210520390992334648372016602816069805</code>
<code>30249</code></p>
<p>With SAGE:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sage: Np <span style="color:#666">=</span> N <span style="color:#666">%</span> e
</span></span><span style="display:flex;"><span>sage: b <span style="color:#666">=</span> (Np <span style="color:#666">-</span> <span style="color:#666">2</span>) <span style="color:#666">/</span> <span style="color:#666">2</span>
</span></span><span style="display:flex;"><span>sage: pp <span style="color:#666">=</span> <span style="color:#008000">int</span>(Mod(<span style="color:#008000">pow</span>(b, <span style="color:#666">2</span>) <span style="color:#666">-</span> <span style="color:#666">1</span>, e)<span style="color:#666">.</span>sqrt()) <span style="color:#666">+</span> b <span style="color:#666">+</span> <span style="color:#666">1</span>
</span></span><span style="display:flex;"><span>sage: alpha <span style="color:#666">=</span> inverse_mod(<span style="color:#008000">int</span>(X), <span style="color:#008000">int</span>(e))
</span></span><span style="display:flex;"><span>sage: q <span style="color:#666">=</span> (pp <span style="color:#666">*</span> alpha) <span style="color:#666">%</span> e
</span></span><span style="display:flex;"><span>sage: <span style="color:#008000;font-weight:bold">while</span> <span style="color:#a2f;font-weight:bold">not</span> is_prime(q) <span style="color:#a2f;font-weight:bold">and</span> N <span style="color:#666">%</span> q <span style="color:#666">!=</span> <span style="color:#666">0</span>:
</span></span><span style="display:flex;"><span><span style="color:#666">....</span>:         q <span style="color:#666">+=</span> e
</span></span><span style="display:flex;"><span>sage: p <span style="color:#666">=</span> N <span style="color:#666">/</span> q
</span></span><span style="display:flex;"><span>sage: p
</span></span><span style="display:flex;"><span><span style="color:#666">13317713478157317654574552532079837937895228108820477140030796245493222349714497856652987583926206280627498615972491072112647669795345566943409669535038641</span>
</span></span><span style="display:flex;"><span>sage: q
</span></span><span style="display:flex;"><span><span style="color:#666">12176083266650126897170100375931110708350668494730113414987801764299563774952801449439933220072280766145748279998832962142839152786620322097065894585706069</span>
</span></span></code></pre></div><p>We can now generate the private key by using <a href="rsatool.py">rsatool</a>:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./rsatools.py -o private.pem <span style="color:#b62;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#b62;font-weight:bold"></span>-e <span style="color:#666">21558488234539889837938770635971330903489839146766895224490179041465516193145582266963154883831707522081140734421052039099233464837201660281606980530249</span> <span style="color:#b62;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#b62;font-weight:bold"></span>-p <span style="color:#666">13317713478157317654574552532079837937895228108820477140030796245493222349714497856652987583926206280627498615972491072112647669795345566943409669535038641</span> <span style="color:#b62;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#b62;font-weight:bold"></span>-q <span style="color:#666">12176083266650126897170100375931110708350668494730113414987801764299563774952801449439933220072280766145748279998832962142839152786620322097065894585706069</span>
</span></span></code></pre></div><p>Finally, we can decrypt the message:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>openssl smime -decrypt -in mail.msg -inkey private.pem
</span></span><span style="display:flex;"><span>hitb<span style="color:#666">{</span>0b21cc2025534dbd2965390d2bcef45d<span style="color:#666">}</span>
</span></span></code></pre></div><p>The sources are available <a href="hitb2015-crypto300.tar.gz">here</a></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/15-11-hitb2015-crypto300/featured.png"/></item><item><title>HITB 2015 Write-up - Crypto 400</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/15-11-hitb2015-crypto400/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/15-11-hitb2015-crypto400/</guid><description>Write up</description><content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>The crypto 400 challenge deals with the Even Mansour cryptosystem. To validate this challenge we have to send the flag to a server.
The server checks if the answer matches the flag by encrypting the flag and the given message with a <strong>random</strong> key.
If both are equal the flag is correct otherwise it fails and the encrypted message is printed.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>key <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">32</span>)
</span></span><span style="display:flex;"><span>enc_flag <span style="color:#666">=</span> encrypt(flag, key)
</span></span><span style="display:flex;"><span>enc <span style="color:#666">=</span> encrypt(answer, key)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> enc <span style="color:#666">==</span> enc_flag:
</span></span><span style="display:flex;"><span>  response <span style="color:#666">=</span> <span style="color:#ba2121">&#34;You lucky bastard, </span><span style="color:#b68;font-weight:bold">%s</span><span style="color:#ba2121"> is indeed the correct flag!</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> flag
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">else</span>:
</span></span><span style="display:flex;"><span>  response <span style="color:#666">=</span> <span style="color:#ba2121">&#34;Unfortunately that is not our flag :(</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#ba2121">&#34;</span>
</span></span><span style="display:flex;"><span>  response <span style="color:#666">+=</span> <span style="color:#ba2121">&#34;Your guess encrypts as</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#b68;font-weight:bold">%s</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> enc
</span></span><span style="display:flex;"><span>  response <span style="color:#666">+=</span> <span style="color:#ba2121">&#34;whereas our flag encrypts as</span><span style="color:#b62;font-weight:bold">\n</span><span style="color:#b68;font-weight:bold">%s</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> enc_flag
</span></span></code></pre></div><h2 id="even-mansour-scheme">Even Mansour scheme</h2>
<p>In this Even-Masour scheme the size of a block is 16-bytes and the key &mdash; on 32-bytes &mdash; is split in two: $k_1$ and $k_2$ each one on 16-bytes.
At first, the message $M$ is xor-ed with $k_1$ then $M \oplus k_1$ is going through a $F$ function which
will be discussed later. Finally the output is xor-ed with $k_2$.</p>
<p><img src="evenmansour.png" alt=""></p>
<p>So we have:</p>
<p>$$C = F(M \oplus k_1) \oplus k_2$$</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">EvenMansour</span>(block, key):
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> xor(block, key[:<span style="color:#666">16</span>])
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> F(block)
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> xor(block, key[<span style="color:#666">16</span>:])
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> block
</span></span></code></pre></div><p>In this challenge, the weakness comes from the $F$ function.</p>
<h2 id="f-function">$F$ function</h2>
<p>The $F$ function is composed of 64-rounds that perform the <code>step(...)</code> transformation:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">F</span>(block):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#666">64</span>):
</span></span><span style="display:flex;"><span>    block <span style="color:#666">=</span> step(block)
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> block
</span></span></code></pre></div><p><code>step</code> uses a S-Box to transform the block in this way:</p>
<p><img src="/img/step.png" alt=""></p>
<p>$\begin{cases}
\text{block}^{n+1}_0 = \text{SBox}(\text{block}^{n}_{10} \oplus \text{block}^{n}_{12} \oplus \text{block}^{n}_{13} \oplus \text{block}^{n+1}_{15}) &amp; k = 0 \\\
\text{block}^{n+1}_k = \text{block}^{n}_{k - 1} &amp; k &gt; 0
\end{cases}$</p>
<p>$\text{block}^{n}_k$ is the byte $k$ of the <em>block</em> at round $n$ ($0 \leq k &lt; 16$ and $0 \leq n &lt; 64$)</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">step</span>(block):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000">chr</span>( S[ <span style="color:#008000">ord</span>(block[<span style="color:#666">10</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">12</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">13</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">15</span>]) ] ) <span style="color:#666">+</span> block[:<span style="color:#666">15</span>]
</span></span></code></pre></div><p>By ploting $y = \text{S-Box}(x)$ we can notice that the S-Box has a special construction:</p>
<p><img src="/img/figure_1-1.png" alt=""></p>
<p>I thought about computing the differential characteristics which is the probability that given the input difference
$\Delta = x \oplus y$ we get the output delta: $\delta = S(x) \oplus S(y)$.
We will call this probability $P(\Delta | \delta)$ and with
following function, we can compute this probability:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">P</span>(dx ,dy):
</span></span><span style="display:flex;"><span>    count <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> x <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#008000">len</span>(SBox)):
</span></span><span style="display:flex;"><span>        dY <span style="color:#666">=</span> SBox[x] <span style="color:#666">^</span> SBox[x <span style="color:#666">^</span> dx]
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">if</span> dY <span style="color:#666">==</span> dy:
</span></span><span style="display:flex;"><span>            count <span style="color:#666">+=</span> <span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000">float</span>(count) <span style="color:#666">/</span> <span style="color:#008000">float</span>(<span style="color:#666">256</span>)
</span></span></code></pre></div><p>For all $\Delta$ and $\delta$, we notice that this probability is either 0 or 1. Consequently if we know $\delta$ we are sure to find $\Delta$. This will be useful for the differential attack.</p>
<h2 id="differential-attack">Differential Attack</h2>
<p>To find the flag, we will perform a differential attack. We have a message $M_1$ that we know and we have an unknown second message $M_2$
that is the flag. We also know $C_1$ and $C_2$ such as:</p>
<p>$$\begin{align}
C_1 &amp; = &amp; F(M_1 \oplus k_1) \oplus k_2 \\\
C_2 &amp; = &amp; F(M_2 \oplus k_1) \oplus k_2
\end{align}$$</p>
<p><img src="diff.png" alt=""></p>
<p>By xor-ing $C_1$ and $C_2$ we can get $\Delta W = W_1 \oplus W_2 = C_1 \oplus C_2$. If somehow we can resolve $\Delta V$:</p>
<p>$$\begin{align}
\Delta V &amp; = &amp; V_1 \oplus V_2 \\\
&amp; = &amp; M_1 \oplus k_1 \oplus M_2 \oplus k_1\\\
&amp; = &amp; M_1 \oplus M_2.
\end{align}$$</p>
<p>We can extract $M_2$ with:</p>
<p>$$M_2 = \Delta V \oplus M_1$$</p>
<h2 id="recovering-delta-v">Recovering $\Delta V$</h2>
<p>Now, let&rsquo;s see how to resolve $\Delta V$ from $\Delta W$.</p>
<p>From the <code>step</code> function, we know that $\text{block}^{n+1}_k = \text{block}^{n}_{k - 1}$ therefore:</p>
<p>$$\Delta W^{n-1}_k = \Delta W^{n}_{k + 1} \forall k &lt; 15$$</p>
<p>We know also $\Delta W^{n-1}_{0,1,2 \ldots 14}$ but not $\Delta W^{n-1}_{15}$</p>
<p>To find $\Delta W^{n-1}_{15}$ we will use the fact that $P(\Delta X | \Delta W^{n-1}_{15}) = 1$  for a given $\Delta X$.
Concretely, I built a table <em>diffTable</em> which maps $\delta$ to $\Delta$.</p>
<p>\begin{align}
\text{diffTable}(\Delta W^{n}_{0}) &amp; = &amp; \Delta W^{n-1}_{10} \oplus \Delta W^{n-1}_{12} \oplus \Delta W^{n-1}_{13} \oplus \Delta W^{n-1}_{15} \\\
&amp; = &amp; \Delta W^{n}_{11} \oplus \Delta W^{n}_{13} \oplus \Delta W^{n}_{14} \oplus \Delta W^{n-1}_{15}\\\
\Delta W^{n-1}_{15}                &amp; = &amp; \text{diffTable}(\Delta W^{n}_{0}) \oplus \Delta W^{n}_{11} \oplus \Delta W^{n}_{13} \oplus \Delta W^{n}_{14}
\end{align}</p>
<p>Which enables to recover $\Delta W^{n - 1}$ from $\Delta W^{n}$.
Then, with recursion we can compute $\Delta W^{0} = \Delta V$</p>
<h2 id="implementation">Implementation</h2>
<p>The following script is the implementation of the attack:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#408080;font-style:italic">#!/usr/bin/python2.7</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># -*- coding: utf-8 -*-</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">import</span> <span style="color:#00f;font-weight:bold">os</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>S <span style="color:#666">=</span> [
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xa5</span>,<span style="color:#666">0xc6</span>,<span style="color:#666">0x62</span>,<span style="color:#666">0x01</span>,<span style="color:#666">0x49</span>,<span style="color:#666">0x2a</span>,<span style="color:#666">0x8e</span>,<span style="color:#666">0xed</span>,<span style="color:#666">0x1f</span>,<span style="color:#666">0x7c</span>,<span style="color:#666">0xd8</span>,<span style="color:#666">0xbb</span>,<span style="color:#666">0xf3</span>,<span style="color:#666">0x90</span>,<span style="color:#666">0x34</span>,<span style="color:#666">0x57</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xb3</span>,<span style="color:#666">0xd0</span>,<span style="color:#666">0x74</span>,<span style="color:#666">0x17</span>,<span style="color:#666">0x5f</span>,<span style="color:#666">0x3c</span>,<span style="color:#666">0x98</span>,<span style="color:#666">0xfb</span>,<span style="color:#666">0x09</span>,<span style="color:#666">0x6a</span>,<span style="color:#666">0xce</span>,<span style="color:#666">0xad</span>,<span style="color:#666">0xe5</span>,<span style="color:#666">0x86</span>,<span style="color:#666">0x22</span>,<span style="color:#666">0x41</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x89</span>,<span style="color:#666">0xea</span>,<span style="color:#666">0x4e</span>,<span style="color:#666">0x2d</span>,<span style="color:#666">0x65</span>,<span style="color:#666">0x06</span>,<span style="color:#666">0xa2</span>,<span style="color:#666">0xc1</span>,<span style="color:#666">0x33</span>,<span style="color:#666">0x50</span>,<span style="color:#666">0xf4</span>,<span style="color:#666">0x97</span>,<span style="color:#666">0xdf</span>,<span style="color:#666">0xbc</span>,<span style="color:#666">0x18</span>,<span style="color:#666">0x7b</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x9f</span>,<span style="color:#666">0xfc</span>,<span style="color:#666">0x58</span>,<span style="color:#666">0x3b</span>,<span style="color:#666">0x73</span>,<span style="color:#666">0x10</span>,<span style="color:#666">0xb4</span>,<span style="color:#666">0xd7</span>,<span style="color:#666">0x25</span>,<span style="color:#666">0x46</span>,<span style="color:#666">0xe2</span>,<span style="color:#666">0x81</span>,<span style="color:#666">0xc9</span>,<span style="color:#666">0xaa</span>,<span style="color:#666">0x0e</span>,<span style="color:#666">0x6d</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xfd</span>,<span style="color:#666">0x9e</span>,<span style="color:#666">0x3a</span>,<span style="color:#666">0x59</span>,<span style="color:#666">0x11</span>,<span style="color:#666">0x72</span>,<span style="color:#666">0xd6</span>,<span style="color:#666">0xb5</span>,<span style="color:#666">0x47</span>,<span style="color:#666">0x24</span>,<span style="color:#666">0x80</span>,<span style="color:#666">0xe3</span>,<span style="color:#666">0xab</span>,<span style="color:#666">0xc8</span>,<span style="color:#666">0x6c</span>,<span style="color:#666">0x0f</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xeb</span>,<span style="color:#666">0x88</span>,<span style="color:#666">0x2c</span>,<span style="color:#666">0x4f</span>,<span style="color:#666">0x07</span>,<span style="color:#666">0x64</span>,<span style="color:#666">0xc0</span>,<span style="color:#666">0xa3</span>,<span style="color:#666">0x51</span>,<span style="color:#666">0x32</span>,<span style="color:#666">0x96</span>,<span style="color:#666">0xf5</span>,<span style="color:#666">0xbd</span>,<span style="color:#666">0xde</span>,<span style="color:#666">0x7a</span>,<span style="color:#666">0x19</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xd1</span>,<span style="color:#666">0xb2</span>,<span style="color:#666">0x16</span>,<span style="color:#666">0x75</span>,<span style="color:#666">0x3d</span>,<span style="color:#666">0x5e</span>,<span style="color:#666">0xfa</span>,<span style="color:#666">0x99</span>,<span style="color:#666">0x6b</span>,<span style="color:#666">0x08</span>,<span style="color:#666">0xac</span>,<span style="color:#666">0xcf</span>,<span style="color:#666">0x87</span>,<span style="color:#666">0xe4</span>,<span style="color:#666">0x40</span>,<span style="color:#666">0x23</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0xc7</span>,<span style="color:#666">0xa4</span>,<span style="color:#666">0x00</span>,<span style="color:#666">0x63</span>,<span style="color:#666">0x2b</span>,<span style="color:#666">0x48</span>,<span style="color:#666">0xec</span>,<span style="color:#666">0x8f</span>,<span style="color:#666">0x7d</span>,<span style="color:#666">0x1e</span>,<span style="color:#666">0xba</span>,<span style="color:#666">0xd9</span>,<span style="color:#666">0x91</span>,<span style="color:#666">0xf2</span>,<span style="color:#666">0x56</span>,<span style="color:#666">0x35</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x14</span>,<span style="color:#666">0x77</span>,<span style="color:#666">0xd3</span>,<span style="color:#666">0xb0</span>,<span style="color:#666">0xf8</span>,<span style="color:#666">0x9b</span>,<span style="color:#666">0x3f</span>,<span style="color:#666">0x5c</span>,<span style="color:#666">0xae</span>,<span style="color:#666">0xcd</span>,<span style="color:#666">0x69</span>,<span style="color:#666">0x0a</span>,<span style="color:#666">0x42</span>,<span style="color:#666">0x21</span>,<span style="color:#666">0x85</span>,<span style="color:#666">0xe6</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x02</span>,<span style="color:#666">0x61</span>,<span style="color:#666">0xc5</span>,<span style="color:#666">0xa6</span>,<span style="color:#666">0xee</span>,<span style="color:#666">0x8d</span>,<span style="color:#666">0x29</span>,<span style="color:#666">0x4a</span>,<span style="color:#666">0xb8</span>,<span style="color:#666">0xdb</span>,<span style="color:#666">0x7f</span>,<span style="color:#666">0x1c</span>,<span style="color:#666">0x54</span>,<span style="color:#666">0x37</span>,<span style="color:#666">0x93</span>,<span style="color:#666">0xf0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x38</span>,<span style="color:#666">0x5b</span>,<span style="color:#666">0xff</span>,<span style="color:#666">0x9c</span>,<span style="color:#666">0xd4</span>,<span style="color:#666">0xb7</span>,<span style="color:#666">0x13</span>,<span style="color:#666">0x70</span>,<span style="color:#666">0x82</span>,<span style="color:#666">0xe1</span>,<span style="color:#666">0x45</span>,<span style="color:#666">0x26</span>,<span style="color:#666">0x6e</span>,<span style="color:#666">0x0d</span>,<span style="color:#666">0xa9</span>,<span style="color:#666">0xca</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x2e</span>,<span style="color:#666">0x4d</span>,<span style="color:#666">0xe9</span>,<span style="color:#666">0x8a</span>,<span style="color:#666">0xc2</span>,<span style="color:#666">0xa1</span>,<span style="color:#666">0x05</span>,<span style="color:#666">0x66</span>,<span style="color:#666">0x94</span>,<span style="color:#666">0xf7</span>,<span style="color:#666">0x53</span>,<span style="color:#666">0x30</span>,<span style="color:#666">0x78</span>,<span style="color:#666">0x1b</span>,<span style="color:#666">0xbf</span>,<span style="color:#666">0xdc</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x4c</span>,<span style="color:#666">0x2f</span>,<span style="color:#666">0x8b</span>,<span style="color:#666">0xe8</span>,<span style="color:#666">0xa0</span>,<span style="color:#666">0xc3</span>,<span style="color:#666">0x67</span>,<span style="color:#666">0x04</span>,<span style="color:#666">0xf6</span>,<span style="color:#666">0x95</span>,<span style="color:#666">0x31</span>,<span style="color:#666">0x52</span>,<span style="color:#666">0x1a</span>,<span style="color:#666">0x79</span>,<span style="color:#666">0xdd</span>,<span style="color:#666">0xbe</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x5a</span>,<span style="color:#666">0x39</span>,<span style="color:#666">0x9d</span>,<span style="color:#666">0xfe</span>,<span style="color:#666">0xb6</span>,<span style="color:#666">0xd5</span>,<span style="color:#666">0x71</span>,<span style="color:#666">0x12</span>,<span style="color:#666">0xe0</span>,<span style="color:#666">0x83</span>,<span style="color:#666">0x27</span>,<span style="color:#666">0x44</span>,<span style="color:#666">0x0c</span>,<span style="color:#666">0x6f</span>,<span style="color:#666">0xcb</span>,<span style="color:#666">0xa8</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x60</span>,<span style="color:#666">0x03</span>,<span style="color:#666">0xa7</span>,<span style="color:#666">0xc4</span>,<span style="color:#666">0x8c</span>,<span style="color:#666">0xef</span>,<span style="color:#666">0x4b</span>,<span style="color:#666">0x28</span>,<span style="color:#666">0xda</span>,<span style="color:#666">0xb9</span>,<span style="color:#666">0x1d</span>,<span style="color:#666">0x7e</span>,<span style="color:#666">0x36</span>,<span style="color:#666">0x55</span>,<span style="color:#666">0xf1</span>,<span style="color:#666">0x92</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#666">0x76</span>,<span style="color:#666">0x15</span>,<span style="color:#666">0xb1</span>,<span style="color:#666">0xd2</span>,<span style="color:#666">0x9a</span>,<span style="color:#666">0xf9</span>,<span style="color:#666">0x5d</span>,<span style="color:#666">0x3e</span>,<span style="color:#666">0xcc</span>,<span style="color:#666">0xaf</span>,<span style="color:#666">0x0b</span>,<span style="color:#666">0x68</span>,<span style="color:#666">0x20</span>,<span style="color:#666">0x43</span>,<span style="color:#666">0xe7</span>,<span style="color:#666">0x84</span>
</span></span><span style="display:flex;"><span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">xor</span>(block1, block2):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#ba2121">&#34;&#34;</span><span style="color:#666">.</span>join( <span style="color:#008000">chr</span>(<span style="color:#008000">ord</span>(a) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(b)) <span style="color:#008000;font-weight:bold">for</span> (a,b) <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">zip</span>(block1, block2))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">step</span>(block):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#008000">chr</span>(S[<span style="color:#008000">ord</span>(block[<span style="color:#666">10</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">12</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">13</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(block[<span style="color:#666">15</span>])]) <span style="color:#666">+</span> block[:<span style="color:#666">15</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">F</span>(block):
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> xrange(<span style="color:#666">64</span>):
</span></span><span style="display:flex;"><span>    block <span style="color:#666">=</span> step(block)
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> block
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">EvenMansour</span>(block, key):
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> xor(block, key[:<span style="color:#666">16</span>])
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> F(block)
</span></span><span style="display:flex;"><span>  block <span style="color:#666">=</span> xor(block, key[<span style="color:#666">16</span>:])
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> block
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">encrypt</span>(data, key):
</span></span><span style="display:flex;"><span>  data, num_blocks <span style="color:#666">=</span> pad(data)
</span></span><span style="display:flex;"><span>  res <span style="color:#666">=</span> <span style="color:#ba2121">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> xrange(num_blocks):
</span></span><span style="display:flex;"><span>            block <span style="color:#666">=</span> EvenMansour(data[<span style="color:#666">16</span><span style="color:#666">*</span>i:<span style="color:#666">16</span><span style="color:#666">*</span>i<span style="color:#666">+</span><span style="color:#666">16</span>], key)
</span></span><span style="display:flex;"><span>      res <span style="color:#666">+=</span> block
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">return</span> res
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">pad</span>(data):
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">while</span> <span style="color:#008000;font-weight:bold">True</span>:
</span></span><span style="display:flex;"><span>        data <span style="color:#666">+=</span> <span style="color:#ba2121">&#39;</span><span style="color:#b62;font-weight:bold">\x00</span><span style="color:#ba2121">&#39;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> <span style="color:#008000">len</span>(data) <span style="color:#666">%</span> <span style="color:#666">16</span> <span style="color:#666">==</span> <span style="color:#666">0</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> data, <span style="color:#008000">len</span>(data) <span style="color:#666">/</span> <span style="color:#666">16</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">#</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># Table T[a] = b such as</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic"># S[x] ^ S[y] = a and b = x ^ y</span>
</span></span><span style="display:flex;"><span><span style="color:#408080;font-style:italic">#</span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">DiffTable</span>(S):
</span></span><span style="display:flex;"><span>    table <span style="color:#666">=</span> [<span style="color:#666">0</span> <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#008000">len</span>(S))]
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> delta <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#008000">len</span>(S)):
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">for</span> x <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#008000">len</span>(S)):
</span></span><span style="display:flex;"><span>            dY <span style="color:#666">=</span> S[x] <span style="color:#666">^</span> S[x <span style="color:#666">^</span> delta]
</span></span><span style="display:flex;"><span>            table[dY] <span style="color:#666">=</span> delta
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">return</span> table
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">main</span>():
</span></span><span style="display:flex;"><span>    key <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">32</span>)
</span></span><span style="display:flex;"><span>    M1 <span style="color:#666">=</span> <span style="color:#ba2121">&#34;hitb</span><span style="color:#b68;font-weight:bold">{0123456789abcdef}</span><span style="color:#ba2121">&#34;</span>
</span></span><span style="display:flex;"><span>    M2 <span style="color:#666">=</span> <span style="color:#ba2121">&#34;aaaaaaaaaaaaaaaaaaaaaa&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    C1 <span style="color:#666">=</span> encrypt(M1, key)
</span></span><span style="display:flex;"><span>    C2 <span style="color:#666">=</span> encrypt(M2, key)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    numberOfBlocks <span style="color:#666">=</span> <span style="color:#008000">len</span>(C2) <span style="color:#666">/</span> <span style="color:#666">16</span>
</span></span><span style="display:flex;"><span>    diffTable <span style="color:#666">=</span> DiffTable(S)
</span></span><span style="display:flex;"><span>    clearText <span style="color:#666">=</span> <span style="color:#ba2121">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> block <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(numberOfBlocks):
</span></span><span style="display:flex;"><span>        dW <span style="color:#666">=</span> xor(C1,C2)[<span style="color:#666">16</span> <span style="color:#666">*</span> block : <span style="color:#666">16</span> <span style="color:#666">*</span> (block <span style="color:#666">+</span> <span style="color:#666">1</span>)]
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#666">64</span>):
</span></span><span style="display:flex;"><span>            dWtemp <span style="color:#666">=</span> [dW[i <span style="color:#666">+</span> <span style="color:#666">1</span>] <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#666">15</span>)]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            delta <span style="color:#666">=</span> diffTable[<span style="color:#008000">ord</span>(dW[<span style="color:#666">0</span>])]
</span></span><span style="display:flex;"><span>            dW15 <span style="color:#666">=</span> <span style="color:#008000">chr</span>(<span style="color:#008000">ord</span>(dW[<span style="color:#666">11</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(dW[<span style="color:#666">13</span>]) <span style="color:#666">^</span> <span style="color:#008000">ord</span>(dW[<span style="color:#666">14</span>]) <span style="color:#666">^</span> delta)
</span></span><span style="display:flex;"><span>            dWtemp<span style="color:#666">.</span>append(dW15)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            dW <span style="color:#666">=</span> <span style="color:#ba2121">&#34;&#34;</span><span style="color:#666">.</span>join(dWtemp)
</span></span><span style="display:flex;"><span>        M <span style="color:#666">=</span> xor(dW, M2[<span style="color:#666">16</span> <span style="color:#666">*</span> block : <span style="color:#666">16</span> <span style="color:#666">*</span> (block <span style="color:#666">+</span> <span style="color:#666">1</span>)])
</span></span><span style="display:flex;"><span>        clearText <span style="color:#666">+=</span> M
</span></span><span style="display:flex;"><span>    <span style="color:#008000">print</span> clearText
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> __name__ <span style="color:#666">==</span> <span style="color:#ba2121">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>    main()
</span></span></code></pre></div><h2 id="conclusion">Conclusion</h2>
<p>In fact by noticing that</p>
<p>$$F(x \oplus y) = F(x) \oplus F(y) \oplus C^{te}$$</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">for</span> b <span style="color:#a2f;font-weight:bold">in</span> xrange(<span style="color:#666">10</span>):
</span></span><span style="display:flex;"><span>        u <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">16</span>);
</span></span><span style="display:flex;"><span>        v <span style="color:#666">=</span> os<span style="color:#666">.</span>urandom(<span style="color:#666">16</span>);
</span></span><span style="display:flex;"><span>        d <span style="color:#666">=</span> xor(F(xor(u,v)), xor(F(u), F(v)))
</span></span><span style="display:flex;"><span>        <span style="color:#008000">print</span> d<span style="color:#666">.</span>encode(<span style="color:#ba2121">&#34;hex&#34;</span>)
</span></span></code></pre></div><p>We have:</p>
<p>\begin{align}
F(M_1 \oplus k_1) \oplus F(M_2 \oplus k_1) &amp; = &amp; F(M_1) \oplus F(M_2)\
M_2 &amp; = &amp; F^{-1}(F(M_1) \oplus C_1 \oplus C_2)
\end{align}</p>
<p>Which is far more easier to resolve.</p>
<p>Thanks to <strong>jb^</strong> who help me and who find the previous technique.</p>
<p>Sources are available <a href="hitb2015-crypto400.tar.gz">here</a></p>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/15-11-hitb2015-crypto400/featured.png"/></item><item><title>Code coverage using a dynamic symbolic execution</title><dc:creator>Romain Thomas</dc:creator><link>https://www.romainthomas.fr/post/15-10-triton-code-coverage/</link><pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate><guid>https://www.romainthomas.fr/post/15-10-triton-code-coverage/</guid><description>This blog post introduces code coverage with Triton</description><content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Code coverage is mainly used in the vulnerability research area.
The goal is to generate inputs which will reach different parts of the program&rsquo;s code.
Then, if an input makes the program crash, we check if the crash can be exploited or not.
A lot of methods exist to perform code coverage - like random testing or mutation generation - but in
this short blog post, we will focus on code coverage using a dynamic symbolic execution (DSE)
and explain why it&rsquo;s not a trivial task. Please, note that covering up the code doesn&rsquo;t
mean finding every possible bugs. Some bugs do not make the program crash and this <a href="https://shell-storm.org/talks/StHack2015_Dynamic_Behavior_Analysis_using_Binary_Instrumentation_Jonathan_Salwan.pdf">talk</a>
from slides 35 to 38 explains why. However, if we perform model checking associated
with code coverage, it starts to get interesting =).</p>
<h2 id="code-coverage-and-dse">Code coverage and DSE</h2>
<p>Note that unlike a SSE (static symbolic execution), a DSE is applied on a trace and
can discover new branches only if these ones are reached during the execution.
To go through another path, we must solve one of the last branch constraints discovered from the last trace.
Then, we repeat this operation until all branches are taken.</p>
<p>For example, let&rsquo;s assume a program $P$ which takes an input called $I$,
where I may be a model $M$ or a random seed $R$. An execution is denoted $P(I)$ and returns a set of
constraints $PC$. All $\varphi_{i}$ represent basic blocks and $\pi_i$ represent the branches constraint.
A model $M_i$ is (at least) one valid solution of a constraint $\pi_i$. For example, $M_1 = Solution(\neg\pi_1 \land \pi_2)$.
To discover all paths, we maintain a worklist denoted $W$ which is a set of $M$.</p>
<p>At the first iteration, $I = R, W = \emptyset$ and $P(I) \rightarrow PC$. Then,
$\forall \pi \in PC, W = W \cup { Solution(\pi) }$
and we execute once again the program such that $\forall M \in W, P(M)$.
When a model $M$ is injected in the program&rsquo;s input, it is deleted from the worklist $W$.
Then, we repeat this operation until $W$ is empty.</p>
<p><img src="dse_coverage.png" alt="DSE Code Coverage"></p>
<p>Symbolic code coverage implies some pros and cons. For us, it is really useful when we work on a obfuscated
binary. Indeed, applying symbolic coverage can detect opaque predicates or unreachable code but also repair
a flattened graph (we will release soon another blog post about Triton and o-llvm). The worst con about the
symbolic execution is when your expressions are too complexes which implies a timeout from the SMT solver or
an impressive memory consumption (in the past, our bigger symbolic expression has consumed ~450 Go of
RAM before timeout). This scenario mainly occurs when we analyse real large binaries or obfuscated binaries
which contain polynomial functions. Some of these cons may partially be fixed by optimizing symbolic
expressions but this subject will be another story to come later :).</p>
<h2 id="performing-code-coverage-using-triton">Performing code coverage using Triton</h2>
<p>Since the version <code>v0.1 build 633</code> (commit <a href="https://github.com/JonathanSalwan/Triton/commit/474fe240e66ff6ab3e3501f8d7fc88ce1fcb3ef6">474fe2</a>),
Triton integrates everything we need to perform code coverage. These new features allow us to deal and compute
the SMT2-Lib representation over an AST. In the rest of the blog post, we will focus on the design and the
algorithm used to perform code coverage.</p>
<h3 id="algorithm">Algorithm</h3>
<p>As an introduction (and to not turn our brain upside down), let assume this following sample of code which
comes from the samples directory.</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#b00040">char</span> <span style="color:#666">*</span>serial <span style="color:#666">=</span> <span style="color:#ba2121">&#34;</span><span style="color:#b62;font-weight:bold">\x31\x3e\x3d\x26\x31</span><span style="color:#ba2121">&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#b00040">int</span> <span style="color:#00f">check</span>(<span style="color:#b00040">char</span> <span style="color:#666">*</span>ptr)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#b00040">int</span> i <span style="color:#666">=</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">while</span> (i <span style="color:#666">&lt;</span> <span style="color:#666">5</span>){
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> (((ptr[i] <span style="color:#666">-</span> <span style="color:#666">1</span>) <span style="color:#666">^</span> <span style="color:#666">0x55</span>) <span style="color:#666">!=</span> serial[i])
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">1</span>;
</span></span><span style="display:flex;"><span>    i<span style="color:#666">++</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span> <span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Basically, this function checks if the input is equal to <code>elite</code>, and returns <code>0</code> if it is true, otherwise
it returns <code>1</code>. The control flow graph of this function is described below. It&rsquo;s an interesting first example,
because to cover all basic blocks we need to find the good input.</p>
<p><img src="check_bbs.png" alt=""></p>
<p>We can see that only one variable can be controlled, the one located at the address <code>rbp+var_18</code> which refers
to the <code>argv[1]</code> &rsquo;s pointer. The goal is to reach all the basic blocks in the function check by computing the
constraints and using the snapshot engine until that every basic blocks are reached. For instance, the
constraint to reach the basic block located at the address <code>0x4005C3</code> is <code>[rbp+var_4] &gt; 4</code> but we do not control
this variable directly. In the other hand, the jump at the address <code>0x4005B0</code> depends on the user input and
this constraint can be solved by performing a symbolic execution.</p>
<p>The algorithm which generalizes the previous idea is based on the Microsoft&rsquo;s fuzzer algorithm (<a href="http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf">SAGE</a>) and the
next diagram represents our check function with its constraints. The start and end nodes represent
respectively the function&rsquo;s prologue (<code>0x40056D</code>) and the function&rsquo;s epilogue (<code>0x4005C8</code>).</p>
<p><img src="cc1.png" alt=""></p>
<p>Before the first execution, we know nothing about branches&rsquo; constraints. So, as explained in the previous
chapter, we inject some random seeds to collect the first $PC$ and build our set $W$. The trace of the first
execution $P(I)$ is represented by the basic blocks in blue.</p>
<p>This execution gives us our first path constraint $P(I) \rightarrow (\pi_0 \land \neg \pi_1)$.</p>
<p><img src="cc2.png" alt=""></p>
<p>Based on our first trace, we know that there are two branches ($\pi_0 \land \neg \pi_1$) discovered and so 2 others
undiscovered. To reach the basic bloc $\varphi_3$, we compute the negation of the first branch constraint. If and
only if the solution $Solution(\neg \pi_0)$ is SAT, we add the model to the worklist W.</p>
<p>Same for $\varphi_4$ such that $W = W \cup {Solution(\pi_0 \land \neg(\neg \pi_1))}$. Once all solutions have been generated and models added
to the worklist, we execute every models from the worklist.</p>
<p><img src="cc3.png" alt=""></p>
<h3 id="implementation">Implementation</h3>
<p>One condition to perform code coverage, is to predict the next instruction address when we are on a jump
instruction. This condition is necessary to build the path constraint.</p>
<p>We can not put a callback after a branch instruction because the <code>RIP</code> register has already changed. As Triton
creates semantics expressions for all registers, the idea is to evaluate <code>RIP</code> when we are on a branch instruction.</p>
<p>In a first time, we have developed a SMT evaluator to compute the <code>RIP</code> but we saw a little bit later that
Pin provides <code>IARG_BRANCH_TARGET_ADDR</code> and <code>IARG_BRANCH_TAKEN</code> which can be used to know the next <code>RIP</code> values.
With Pin, computing the next address is very easy, nevertheless the SMT evaluator was useful to <a href="https://github.com/JonathanSalwan/Triton/blob/c9648bb1b1f7d8a2afef0941ab267dc9387fd91c/tests/test_semantics.py">check
instruction&rsquo;s semantics</a>.</p>
<p>To perform the evaluation, we implemented the <a href="https://en.wikipedia.org/wiki/Visitor_pattern">visitor pattern</a>
to transform the SMT abstract syntax tree (AST) to a Z3 AST. This design can be used to transform our SMT AST
into any others representations.</p>
<p>The Z3 AST is easier to handle and can be evaluated or simplified with Z3 API. The transformation is performed
by <a href="https://github.com/JonathanSalwan/Triton/blob/c9648bb1b1f7d8a2afef0941ab267dc9387fd91c/src/includes/Z3ast.h">src/smt2lib/z3AST.h</a> and
<a href="https://github.com/JonathanSalwan/Triton/blob/c9648bb1b1f7d8a2afef0941ab267dc9387fd91c/src/smt2lib/z3AST.cpp">src/smt2lib/z3AST.cpp</a>.</p>
<hr>
<p>We will now explain how the code coverage&rsquo;s tool works. Let&rsquo;s assume that inputs come from command&rsquo;s line.
Firstly, we have:</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">199
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">200
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">201
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">202
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">203
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">run</span>(inputSeed, entryPoint, exitPoint, whitelist <span style="color:#666">=</span> []):
</span></span><span style="display:flex;"><span>  <span style="color:#666">...</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> __name__<span style="color:#666">==</span><span style="color:#ba2121">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>  TritonExecution<span style="color:#666">.</span>run(<span style="color:#ba2121">&#34;bad !&#34;</span>, <span style="color:#666">0x400480</span>, <span style="color:#666">0x40061B</span>, [<span style="color:#ba2121">&#34;main&#34;</span>, <span style="color:#ba2121">&#34;check&#34;</span>]) <span style="color:#408080;font-style:italic"># crackme_xor</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>At line 176, we define the input seed <code>bad !</code> which is the first program&rsquo;s argument (<code>argv[1]</code>). Then, we give
the address from the beginning of the code coverage (<strong>start block</strong>) - it&rsquo;s at this address that we will take
a snapshot. The third argument matches with the <strong>end block</strong> - it&rsquo;s at this address that we will restore the
snapshot. Finally, we can set a whitelist to avoid specific functions like library&rsquo;s functions,
cryptographic&rsquo;s function and so on.</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">148
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">149
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">150
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">151
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">152
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">153
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">154
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">155
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">def</span> <span style="color:#00f">mainAnalysis</span>(threadId):
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;[+] In main&#34;</span>
</span></span><span style="display:flex;"><span>  rdi <span style="color:#666">=</span> getRegValue(IDREF<span style="color:#666">.</span>REG<span style="color:#666">.</span>RDI) <span style="color:#408080;font-style:italic"># argc</span>
</span></span><span style="display:flex;"><span>  rsi <span style="color:#666">=</span> getRegValue(IDREF<span style="color:#666">.</span>REG<span style="color:#666">.</span>RSI) <span style="color:#408080;font-style:italic"># argv</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  argv0_addr <span style="color:#666">=</span> getMemValue(rsi, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>QWORD)      <span style="color:#408080;font-style:italic"># argv[0] pointer</span>
</span></span><span style="display:flex;"><span>  argv1_addr <span style="color:#666">=</span> getMemValue(rsi <span style="color:#666">+</span> <span style="color:#666">8</span>, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>QWORD)  <span style="color:#408080;font-style:italic"># argv[1] pointer</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;[+] In main() we set :&#34;</span>
</span></span><span style="display:flex;"><span>  od <span style="color:#666">=</span> OrderedDict(<span style="color:#008000">sorted</span>(TritonExecution<span style="color:#666">.</span>input<span style="color:#666">.</span>dataAddr<span style="color:#666">.</span>items()))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> k,v <span style="color:#a2f;font-weight:bold">in</span> od<span style="color:#666">.</span>iteritems():
</span></span><span style="display:flex;"><span>      <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;</span><span style="color:#b62;font-weight:bold">\t</span><span style="color:#ba2121">[0x</span><span style="color:#b68;font-weight:bold">%x</span><span style="color:#ba2121">] = </span><span style="color:#b68;font-weight:bold">%x</span><span style="color:#ba2121"> </span><span style="color:#b68;font-weight:bold">%c</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> (k, v, v)
</span></span><span style="display:flex;"><span>      setMemValue(k, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>BYTE, v)
</span></span><span style="display:flex;"><span>      convertMemToSymVar(k, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>BYTE, <span style="color:#ba2121">&#34;addr_</span><span style="color:#b68;font-weight:bold">%d</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> k)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> idx, byte <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">enumerate</span>(TritonExecution<span style="color:#666">.</span>input<span style="color:#666">.</span>data):
</span></span><span style="display:flex;"><span>      <span style="color:#008000;font-weight:bold">if</span> argv1_addr <span style="color:#666">+</span> idx <span style="color:#a2f;font-weight:bold">not</span> <span style="color:#a2f;font-weight:bold">in</span> TritonExecution<span style="color:#666">.</span>input<span style="color:#666">.</span>dataAddr: <span style="color:#408080;font-style:italic"># Not overwrite the previous setting</span>
</span></span><span style="display:flex;"><span>          <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;</span><span style="color:#b62;font-weight:bold">\t</span><span style="color:#ba2121">[0x</span><span style="color:#b68;font-weight:bold">%x</span><span style="color:#ba2121">] = </span><span style="color:#b68;font-weight:bold">%x</span><span style="color:#ba2121"> </span><span style="color:#b68;font-weight:bold">%c</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> (argv1_addr <span style="color:#666">+</span> idx, <span style="color:#008000">ord</span>(byte), <span style="color:#008000">ord</span>(byte))
</span></span><span style="display:flex;"><span>          setMemValue(argv1_addr <span style="color:#666">+</span> idx, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>BYTE, <span style="color:#008000">ord</span>(byte))
</span></span><span style="display:flex;"><span>          convertMemToSymVar(argv1_addr <span style="color:#666">+</span> idx, IDREF<span style="color:#666">.</span>CPUSIZE<span style="color:#666">.</span>BYTE, <span style="color:#ba2121">&#34;addr_</span><span style="color:#b68;font-weight:bold">%d</span><span style="color:#ba2121">&#34;</span> <span style="color:#666">%</span> idx)</span></span></code></pre></td></tr></table>
</div>
</div>
<p>The next code being executed is the mainAnalysis callback, we inject values to the inputs selected
(line 148, 154) and we convert these inputs as symbolic variables (line 149, 155).</p>
<p>All inputs selected are stored in a global variable called <code>TritonExecution.input</code>. Then, we can begin the code
exploration.</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> instruction<span style="color:#666">.</span>getAddress() <span style="color:#666">==</span> TritonExecution<span style="color:#666">.</span>entryPoint <span style="color:#a2f;font-weight:bold">and</span> <span style="color:#a2f;font-weight:bold">not</span> isSnapshotEnabled():
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;[+] Take Snapshot&#34;</span>
</span></span><span style="display:flex;"><span>  takeSnapshot()
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>When we are at the entry point, we take a snapshot in order to replay code exploration with a new input.</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> instruction<span style="color:#666">.</span>isBranch() <span style="color:#a2f;font-weight:bold">and</span> instruction<span style="color:#666">.</span>getRoutineName() <span style="color:#a2f;font-weight:bold">in</span> TritonExecution<span style="color:#666">.</span>whitelist:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  addr1 <span style="color:#666">=</span> instruction<span style="color:#666">.</span>getAddress() <span style="color:#666">+</span> <span style="color:#666">2</span>                <span style="color:#408080;font-style:italic"># Address next to this one</span>
</span></span><span style="display:flex;"><span>  addr2 <span style="color:#666">=</span> instruction<span style="color:#666">.</span>getOperands()[<span style="color:#666">0</span>]<span style="color:#666">.</span>getValue()     <span style="color:#408080;font-style:italic"># Address in the instruction condition</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># [PC id, address taken, address not taken]</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> instruction<span style="color:#666">.</span>isBranchTaken():
</span></span><span style="display:flex;"><span>    TritonExecution<span style="color:#666">.</span>myPC<span style="color:#666">.</span>append([ripId, addr2, addr1])
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">else</span>:
</span></span><span style="display:flex;"><span>    TritonExecution<span style="color:#666">.</span>myPC<span style="color:#666">.</span>append([ripId, addr1, addr2])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>This test above checks if we are on a branch instruction like (<code>jnz, jle</code> &hellip;) and if we are in a function which
is into the <em>white list</em>. If so, we get the two possible addresses (<code>addr1</code> and <code>addr2</code>) and the effective address
is computed by <code>isBranchTaken()</code> (line 69).</p>
<p>Then, we store into the path constraint the <code>RIP</code> expression, the address taken and the address not taken
(line 73-76).</p>
<div class="highlight"><div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">if</span> instruction<span style="color:#666">.</span>getAddress() <span style="color:#666">==</span> TritonExecution<span style="color:#666">.</span>exitPoint:
</span></span><span style="display:flex;"><span>  <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;[+] Exit point&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># SAGE algorithm</span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">for</span> j <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(TritonExecution<span style="color:#666">.</span>input<span style="color:#666">.</span>bound, <span style="color:#008000">len</span>(TritonExecution<span style="color:#666">.</span>myPC)):
</span></span><span style="display:flex;"><span>    expr <span style="color:#666">=</span> []
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">for</span> i <span style="color:#a2f;font-weight:bold">in</span> <span style="color:#008000">range</span>(<span style="color:#666">0</span>,j):
</span></span><span style="display:flex;"><span>        ripId <span style="color:#666">=</span> TritonExecution<span style="color:#666">.</span>myPC[i][<span style="color:#666">0</span>]
</span></span><span style="display:flex;"><span>        symExp <span style="color:#666">=</span> getFullExpression(getSymExpr(ripId)<span style="color:#666">.</span>getAst())
</span></span><span style="display:flex;"><span>        addr <span style="color:#666">=</span> TritonExecution<span style="color:#666">.</span>myPC[i][<span style="color:#666">1</span>]
</span></span><span style="display:flex;"><span>        expr<span style="color:#666">.</span>append(smt2lib<span style="color:#666">.</span>smtAssert(smt2lib<span style="color:#666">.</span>equal(symExp, smt2lib<span style="color:#666">.</span>bv(addr,  <span style="color:#666">64</span>))))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ripId <span style="color:#666">=</span> TritonExecution<span style="color:#666">.</span>myPC[j][<span style="color:#666">0</span>]
</span></span><span style="display:flex;"><span>    symExp <span style="color:#666">=</span> getFullExpression(getSymExpr(ripId)<span style="color:#666">.</span>getAst())
</span></span><span style="display:flex;"><span>    addr <span style="color:#666">=</span> TritonExecution<span style="color:#666">.</span>myPC[j][<span style="color:#666">2</span>]
</span></span><span style="display:flex;"><span>    expr<span style="color:#666">.</span>append(smt2lib<span style="color:#666">.</span>smtAssert(smt2lib<span style="color:#666">.</span>equal(symExp, smt2lib<span style="color:#666">.</span>bv(addr,  <span style="color:#666">64</span>))))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    expr <span style="color:#666">=</span> smt2lib<span style="color:#666">.</span>compound(expr)
</span></span><span style="display:flex;"><span>    model <span style="color:#666">=</span> getModel(expr)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#008000;font-weight:bold">if</span> <span style="color:#008000">len</span>(model) <span style="color:#666">&gt;</span> <span style="color:#666">0</span>:
</span></span><span style="display:flex;"><span>        newInput <span style="color:#666">=</span> TritonExecution<span style="color:#666">.</span>input
</span></span><span style="display:flex;"><span>        newInput<span style="color:#666">.</span>setBound(j <span style="color:#666">+</span> <span style="color:#666">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">for</span> k,v <span style="color:#a2f;font-weight:bold">in</span> model<span style="color:#666">.</span>items():
</span></span><span style="display:flex;"><span>            symVar <span style="color:#666">=</span> getSymVar(k)
</span></span><span style="display:flex;"><span>            newInput<span style="color:#666">.</span>addDataAddress(symVar<span style="color:#666">.</span>getKindValue(), v)
</span></span><span style="display:flex;"><span>        <span style="color:#008000">print</span> newInput<span style="color:#666">.</span>dataAddr
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        isPresent <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">False</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">for</span> inp <span style="color:#a2f;font-weight:bold">in</span> TritonExecution<span style="color:#666">.</span>worklist:
</span></span><span style="display:flex;"><span>            <span style="color:#008000;font-weight:bold">if</span> inp<span style="color:#666">.</span>dataAddr <span style="color:#666">==</span> newInput<span style="color:#666">.</span>dataAddr:
</span></span><span style="display:flex;"><span>                isPresent <span style="color:#666">=</span> <span style="color:#008000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span>                <span style="color:#008000;font-weight:bold">break</span>
</span></span><span style="display:flex;"><span>        <span style="color:#008000;font-weight:bold">if</span> <span style="color:#a2f;font-weight:bold">not</span> isPresent:
</span></span><span style="display:flex;"><span>            TritonExecution<span style="color:#666">.</span>worklist<span style="color:#666">.</span>append(newInput)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#408080;font-style:italic"># If there is input to test in the worklist, we restore the snapshot</span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">if</span> <span style="color:#008000">len</span>(TritonExecution<span style="color:#666">.</span>worklist) <span style="color:#666">&gt;</span> <span style="color:#666">0</span> <span style="color:#a2f;font-weight:bold">and</span> isSnapshotEnabled():
</span></span><span style="display:flex;"><span>      <span style="color:#008000">print</span> <span style="color:#ba2121">&#34;[+] Restore snapshot&#34;</span>
</span></span><span style="display:flex;"><span>      restoreSnapshot()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#008000;font-weight:bold">return</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>The last step happens when we are on the <strong>exit point</strong>. Lines 84 to 120 are the SAGE implementation.
In few words, we browse the path constraints&rsquo; list and for each <strong>PC</strong>, we try to get the model which satisfies
the negation. If there is a valid model to reach the new target basic block, we add the model into the worklist.</p>
<p>Once all models are inserted into the worklist, we restore the snapshot and we re-inject each model as input seed.</p>
<p>The full code can be found <a href="https://github.com/JonathanSalwan/Triton/blob/c9648bb1b1f7d8a2afef0941ab267dc9387fd91c/tools/code_coverage.py">here</a> and its execution on our example looks like this:</p>
<div class="highlight"><pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./triton ./tools/code_coverage.py ./samples/crackmes/crackme_xor abc
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Take Snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">62</span> b
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">61</span> a
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">64</span> d
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">20</span>
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">21</span> !
</span></span><span style="display:flex;"><span>loose
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">{</span>140726196774221: 101<span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Restore snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">61</span> a
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">64</span> d
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">20</span>
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">21</span> !
</span></span><span style="display:flex;"><span>loose
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">{</span>140726196774221: 101, 140726196774222: 108<span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Restore snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> 6c l
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">64</span> d
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">20</span>
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">21</span> !
</span></span><span style="display:flex;"><span>loose
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">{</span>140726196774221: 101, 140726196774222: 108, 140726196774223: 105<span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Restore snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> 6c l
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">69</span> i
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">20</span>
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">21</span> !
</span></span><span style="display:flex;"><span>loose
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">{</span>140726196774224: 116, 140726196774221: 101, 140726196774222: 108, 140726196774223: 105<span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Restore snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> 6c l
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">69</span> i
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">74</span> t
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">21</span> !
</span></span><span style="display:flex;"><span>loose
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">{</span>140726196774224: 116, 140726196774225: 101, 140726196774221: 101, 140726196774222: 108, 140726196774223: 105<span style="color:#666">}</span>
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Restore snapshot
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> In main<span style="color:#666">()</span> we <span style="color:#008000">set</span> :
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254d<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254e<span style="color:#666">]</span> <span style="color:#666">=</span> 6c l
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef8254f<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">69</span> i
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82550<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">74</span> t
</span></span><span style="display:flex;"><span>        <span style="color:#666">[</span>0x7ffd5ef82551<span style="color:#666">]</span> <span style="color:#666">=</span> <span style="color:#666">65</span> e
</span></span><span style="display:flex;"><span>Win
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Exit point
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>+<span style="color:#666">]</span> Done !</span></span></code></pre></div>
<h3 id="further-improvement">Further improvement</h3>
<p>Currently, the evaluator is quite slow and we loose a lot of time to evaluate expressions. One feature that
should improve the evaluator speed is a SMT simplifier. We plan to develop a passes system (like LLVM) to
simplify the SMT tree.</p>
<p>The goal is to register some expressions transformation rules before sending expressions to the evaluator or
the solver. For example, that&rsquo;s what <a href="https://github.com/cea-sec/miasm/tree/7ee593d00488e75dadb6edad7ffe5a7dcf6b155d/miasm/expression">miasm2 already does</a>.</p>
<p><img src="./chain.svg" alt=""></p>
<p>There are a lot of mini tricks to lighten symbolic expressions which are easy to implement and really beneficial.
For example, the transformation of the expression
<code>rax1 = (bvxor rax0 rax0) -&gt; rax1 = (_ bv64 0)</code>
will break the <code>rax</code>&rsquo;s symbolic expression chain.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Although the code coverage using a symbolic resolution is a nice way to cover a code without guessing the
inputs, it&rsquo;s clearly not a trivial task. The paths explosion implies the memory consumption and in several
cases the expressions are too complex to be computed but this method remains truly effective on short parts
of code.</p>
<div class="col-12 col-md-12 mb-4 mb-lg-4 mt-4">
  <div class="p-4 rounded col-12 alert alert-info" style="border: none !important; background-color: #FAFCFF">
  <div class="d-flex px-3"><div>
    <div class="icon icon-sm icon-secondary">
      <span class="fas fa-circle-info" style="color: #084298" ></span>
    </div>
  </div>
  <div class="ps-4" style="color: #084298">
    <h3 class="h5 m-0 mb-1" style="color: #084298">Note</h3>
    To improve the symbolic coverage, it could be interesting to deal with bits-flip/random seeds when
expressions are too complex or to deal with symbolic execution and abstract domains.
  </div>
  </div>
  </div>
</div>
]]></content:encoded><media:content medium="image" width="918" height="517" url="https://www.romainthomas.fr/post/15-10-triton-code-coverage/featured.png"/></item></channel></rss>